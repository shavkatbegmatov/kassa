[33mcommit 8fc040529938ad4ec52cb6266de2be041bef3359[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Shavkat <fstudioadm@gmail.com>
Date:   Sat Dec 18 13:44:10 2021 +0500

    test1

[1mdiff --git a/.htaccess b/.htaccess[m
[1mnew file mode 100644[m
[1mindex 0000000..38ee34b[m
[1m--- /dev/null[m
[1m+++ b/.htaccess[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mAddDefaultCharset utf8[m
[32m+[m[32mRewriteEngine On[m
[32m+[m[32mRewriteRule ^(.*)$ /public/$1[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/AppController.php b/app/controllers/AppController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cc710ed[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/AppController.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse framework\core\App;[m
[32m+[m[32muse framework\widgets\language\Language;[m
[32m+[m
[32m+[m[32mclass AppController extends \framework\core\base\Controller {[m
[32m+[m[32m    public $menu;[m
[32m+[m
[32m+[m[32m    public function __construct($route) {[m
[32m+[m[32m        parent::__construct($route);[m
[32m+[m[32m        new \app\models\Main;[m
[32m+[m[32m        App::$app->setProperty('langs', Language::getLanguages());[m
[32m+[m[32m        App::$app->setProperty('lang', Language::getLanguage(App::$app->getProperty('langs')));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/BlogController.php b/app/controllers/BlogController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ac027e8[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/BlogController.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse app\models\Main;[m
[32m+[m[32muse framework\core\App;[m
[32m+[m[32muse framework\core\base\View;[m
[32m+[m
[32m+[m[32mclass BlogController extends AppController {[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        if ($this->isAjax()) {[m
[32m+[m[32m            $model = new Main;[m
[32m+[m[32m            // $this->loadView('test', compact('post'));[m
[32m+[m[32m            $post = \R::findOne('blog', 'id = ?', [$_POST['id']]);[m
[32m+[m[32m            echo json_encode($post);[m
[32m+[m[32m            die;[m
[32m+[m[32m        }[m
[32m+[m[32m        echo 222;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function showAction() {[m
[32m+[m[32m        $id = $this->route['alias'];[m
[32m+[m[32m        $blog = \R::findOne('blog', 'id = ?', [$id]);[m
[32m+[m
[32m+[m[32m        if (!$blog) {[m
[32m+[m[32m            throw new \Exception('Пост не найден');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $blogId = $blog['id'];[m
[32m+[m
[32m+[m[32m        if (!isset($_COOKIE[$blogId])) {[m
[32m+[m[32m            $blog['views'] = $blog['views'] + 1;[m
[32m+[m[32m            \R::store($blog);[m
[32m+[m[32m            setcookie($blogId, 3600);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $this->set(compact('blog'));[m
[32m+[m[32m        View::setMeta($blog['title']);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/JavaController.php b/app/controllers/JavaController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bc2173d[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/JavaController.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass JavaController extends AppController {[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        echo 'Hello';[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/KassaController.php b/app/controllers/KassaController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..526b65c[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/KassaController.php[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass KassaController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        if (isset($_SESSION['user'])) {[m
[32m+[m[32m            if ($_SESSION['user']['role'] == 'kassa') {[m
[32m+[m[32m                if ($_POST) {[m
[32m+[m[32m                    $treatmentId = $_POST['treatment'];[m
[32m+[m[32m                    $patientId = $_POST['patient'];[m
[32m+[m[32m                    $treatment = \R::findOne('treatment', 'id = ? AND patient_id = ?', [$treatmentId, $patientId]);[m
[32m+[m[32m                    $treatment['status'] = 'paid';[m
[32m+[m[32m                    \R::store($treatment);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                redirect('/');[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            redirect('/');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function checkAction() {[m
[32m+[m[32m        if ($this->isAjax()) {[m
[32m+[m[32m            echo $_POST['id'];[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/LanguageController.php b/app/controllers/LanguageController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c51eae5[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/LanguageController.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse framework\core\App;[m
[32m+[m
[32m+[m[32mclass LanguageController extends AppController {[m
[32m+[m[32m    public function changeAction() {[m
[32m+[m[32m        $lang = !empty($_GET['lang']) ? $_GET['lang'] : null;[m
[32m+[m[32m        if ($lang) {[m
[32m+[m[32m            if (array_key_exists($lang, App::$app->getProperty('langs'))) {[m
[32m+[m[32m                setcookie('lang', $lang, time() + 3600, '/');[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        redirect();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/MainController.php b/app/controllers/MainController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..494c530[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/MainController.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse app\models\Main;[m
[32m+[m[32muse framework\core\App;[m
[32m+[m[32muse framework\core\base\View;[m
[32m+[m[32muse framework\libs\Pagination;[m
[32m+[m
[32m+[m[32mclass MainController extends AppController {[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m
[32m+[m[32m        $model = new Main;[m
[32m+[m
[32m+[m[32m        // \R::fancyDebug(true);[m
[32m+[m
[32m+[m[32m        // $blog = App::$app->cache->get('blog');[m
[32m+[m
[32m+[m[32m        // if (!$blog) {[m
[32m+[m
[32m+[m[32m        $lang = App::$app->getProperty('lang')['code'];[m
[32m+[m
[32m+[m[32m        $total = \R::count('blog', 'lang = ?', [$lang]);[m
[32m+[m[32m        $page = isset($_GET['page']) ? (int) $_GET['page'] : 1;[m
[32m+[m[32m        $perpage = 10;[m
[32m+[m
[32m+[m[32m        $pag = new Pagination($page, $perpage, $total);[m
[32m+[m[32m        $start = $pag->getStart();[m
[32m+[m
[32m+[m[32m        $blog = \R::findAll('blog', "lang = ? LIMIT $start, $perpage", [$lang]);[m
[32m+[m
[32m+[m[32m        // App::$app->cache->set('blog', $blog, 20);[m
[32m+[m[41m            [m
[32m+[m[32m        // }[m
[32m+[m
[32m+[m[32m        $menu = $this->menu;[m
[32m+[m[32m        // $this->setMeta('Главная страница', 'Описания', 'Keywords');[m
[32m+[m[32m        // $meta = $this->meta;[m
[32m+[m[32m        View::setMeta('Главная страница', 'Описания', 'Keywords');[m
[32m+[m[32m        $this->set(compact('blog', 'menu', 'pag', 'total'));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/ManagerController.php b/app/controllers/ManagerController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a7e6020[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/ManagerController.php[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass ManagerController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        if (isset($_SESSION['user'])) {[m
[32m+[m[32m            if ($_SESSION['user']['role'] == 'manager') {[m
[32m+[m
[32m+[m[32m            } else {[m
[32m+[m[32m                redirect('/');[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            redirect('/');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/PageController.php b/app/controllers/PageController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6742ad6[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/PageController.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass PageController extends AppController {[m
[32m+[m
[32m+[m[32m    public function showAction() {[m
[32m+[m[32m        debug($this->route);[m
[32m+[m[32m        echo 'Page:Code';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/PostsController.php b/app/controllers/PostsController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ce7eaad[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/PostsController.php[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse app\models\Main;[m
[32m+[m
[32m+[m[32mclass PostsController extends AppController {[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        $model = new Main;[m
[32m+[m[32m        $blog = \R::findAll('blog');[m
[32m+[m[32m        $menu = $this->menu;[m
[32m+[m[32m        $this->setMeta('Блог', 'Описания', 'Keywords');[m
[32m+[m[32m        $meta = $this->meta;[m
[32m+[m[32m        $this->set(compact('var1', 'blog', 'menu', 'meta'));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/PostsNewController.php b/app/controllers/PostsNewController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1079e74[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/PostsNewController.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass PostsNewController extends AppController {[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/ProductController.php b/app/controllers/ProductController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3e1df0f[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/ProductController.php[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse app\models\Main;[m
[32m+[m[32muse framework\core\App;[m
[32m+[m[32muse framework\core\base\View;[m
[32m+[m[32muse framework\libs\Pagination;[m
[32m+[m
[32m+[m[32mclass ProductController extends AppController {[m
[32m+[m[32m    public function showAction() {[m
[32m+[m
[32m+[m[32m        $model = new Main();[m
[32m+[m
[32m+[m[32m        $lang = App::$app->getProperty('lang')['code'];[m
[32m+[m
[32m+[m[32m        if (isset($this->route['alias'])) {[m
[32m+[m[32m            $cat = $this->route['alias'];[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $cat = null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $page = isset($_GET['page']) ? (int) $_GET['page'] : 1;[m
[32m+[m[32m        $perpage = 10;[m
[32m+[m
[32m+[m[32m        if ($cat != null) {[m
[32m+[m[32m            $total = \R::count('blog', "lang = ? AND cat = ?", [$lang, $cat]);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $total = \R::count('blog', "lang = ?", [$lang]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $pag = new Pagination($page, $perpage, $total);[m
[32m+[m[32m        $start = $pag->getStart();[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m        if ($cat != null) {[m
[32m+[m[32m            $blog = \R::findAll('blog', "lang = ? AND cat = ? LIMIT $start, $perpage", [$lang, $cat]);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $blog = \R::findAll('blog', "lang = ? LIMIT $start, $perpage", [$lang]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        View::setMeta('Товары');[m
[32m+[m[32m        $this->set(compact('blog',  'pag', 'total'));[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/RecorderController.php b/app/controllers/RecorderController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1e7dec8[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/RecorderController.php[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32mclass RecorderController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        if (isset($_SESSION['user'])) {[m
[32m+[m[32m            if ($_SESSION['user']['role'] == 'recorder') {[m
[32m+[m[32m                if (!empty($_POST)) {[m
[32m+[m[32m                    $patient = \R::dispense('patients');[m
[32m+[m[32m                    $patient['first_name'] = $_POST['first_name'];[m
[32m+[m[32m                    $patient['last_name'] = $_POST['last_name'];[m
[32m+[m[32m                    $patient['middle_name'] = $_POST['middle_name'];[m
[32m+[m[32m                    $patient['birth_date'] = $_POST['birth_date'];[m
[32m+[m[32m                    $patient['reg_date'] = date("m/d/Y");[m
[32m+[m[32m                    $patient['address'] = $_POST['address'];[m
[32m+[m[32m                    $patient['infl'] = $_POST['infl'];[m
[32m+[m[32m                    $patient['passport'] = $_POST['passport'];[m
[32m+[m[32m                    \R::store($patient);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                redirect('/');[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            redirect('/');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/UserController.php b/app/controllers/UserController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..710756e[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/UserController.php[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers;[m
[32m+[m
[32m+[m[32muse app\models\User;[m
[32m+[m[32muse framework\core\base\View;[m
[32m+[m
[32m+[m[32mclass UserController extends AppController {[m
[32m+[m[32m    public $layout = 'login';[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        $this->layout = 'def';[m
[32m+[m
[32m+[m[32m        if (!isset($_SESSION['user'])) {[m
[32m+[m[32m            redirect('/user/log');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        View::setMeta('Профиль');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function regAction() {[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            $user = new User;[m
[32m+[m[32m            $data = $_POST;[m
[32m+[m[32m            $user->load($data);[m
[32m+[m[32m            if (!$user->validate($data) || !$user->checkUnique()) {[m
[32m+[m[32m                $user->getErrors();[m
[32m+[m[32m                $_SESSION['fdata'] = $data;[m
[32m+[m[32m                redirect();[m
[32m+[m[32m            }[m
[32m+[m[32m            $user->attributes['password'] = password_hash($user->attributes['password'], PASSWORD_DEFAULT);[m
[32m+[m
[32m+[m[32m            if ($user->save('user')) {[m
[32m+[m[32m                $_SESSION['success'] = 'Успешно зарегистрирован';[m
[32m+[m[32m                redirect('/user/log');[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $_SESSION['error'] = 'Ошибка! попробуйте позже';[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        View::setMeta('Регистрация');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function logAction() {[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            $user = new User();[m
[32m+[m[32m            if ($user->login()) {[m
[32m+[m[32m                $_SESSION['success'] = 'Успешно авторизован';[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $_SESSION['error'] = 'Ник/пароль введены неверно!';[m
[32m+[m[32m                redirect();[m
[32m+[m[32m            }[m
[32m+[m[32m            redirect('/');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        View::setMeta('Авторизация');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function logoutAction() {[m
[32m+[m[32m        if (isset($_SESSION['user'])) unset($_SESSION['user']);[m
[32m+[m[32m        redirect('/user/log');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/controllers/admin/AppController.php b/app/controllers/admin/AppController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bdbd2bb[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/admin/AppController.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers\admin;[m
[32m+[m
[32m+[m[32muse app\models\Main;[m
[32m+[m[32muse app\models\User;[m
[32m+[m[32muse framework\core\base\Controller;[m
[32m+[m
[32m+[m[32mclass AppController extends Controller {[m
[32m+[m[32m    public $layout = 'dashboard';[m
[32m+[m
[32m+[m[32m    public function __construct($route) {[m
[32m+[m[32m        parent::__construct($route);[m
[32m+[m
[32m+[m[32m        if (!User::isAdmin() && $route['action'] != 'login') {[m
[32m+[m[32m            redirect(ADMIN . '/user/login');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        new Main();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/admin/BlogController.php b/app/controllers/admin/BlogController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ecc6281[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/admin/BlogController.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers\admin;[m
[32m+[m
[32m+[m[32muse Valitron\Validator;[m
[32m+[m
[32m+[m[32mclass BlogController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function createAction() {[m
[32m+[m[32m        $rules = [[m
[32m+[m[32m            'required' => [[m
[32m+[m[32m                ['title'],[m
[32m+[m[32m                ['lang'],[m
[32m+[m[32m                ['cat'],[m
[32m+[m[32m                ['content'],[m
[32m+[m[32m            ],[m
[32m+[m[32m        ];[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            $v = new Validator($_POST);[m
[32m+[m[32m            $v->rules($rules);[m
[32m+[m[32m            if ($v->validate()) {[m
[32m+[m[32m                $blog = \R::dispense('blog');[m
[32m+[m[32m                $blog['title'] = $_POST['title'];[m
[32m+[m[32m                $blog['lang'] = $_POST['lang'];[m
[32m+[m[32m                $blog['content'] = $_POST['content'];[m
[32m+[m[32m                $blog['cat'] = $_POST['cat'];[m
[32m+[m[32m                \R::store($blog);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $_SESSION['error'] = 'Все поля обязательны для заполнения';[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/admin/CatalogController.php b/app/controllers/admin/CatalogController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cc0df04[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/admin/CatalogController.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers\admin;[m
[32m+[m
[32m+[m[32muse Valitron\Validator;[m
[32m+[m
[32m+[m[32mclass CatalogController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function createAction() {[m
[32m+[m[32m        $rules = [[m
[32m+[m[32m            'required' => [[m
[32m+[m[32m                ['title'],[m
[32m+[m[32m            ],[m
[32m+[m[32m        ];[m
[32m+[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            $v = new Validator($_POST);[m
[32m+[m[32m            $v->rules($rules);[m
[32m+[m[32m            if ($v->validate()) {[m
[32m+[m[32m                $catalog = \R::dispense('catalog');[m
[32m+[m[32m                $catalog['name'] = $_POST['title'];[m
[32m+[m[32m                if (\R::store($catalog)) {[m
[32m+[m[32m                    $_SESSION['success'] = 'Успешно!';[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $_SESSION['error'] = 'Ошибка!';[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $_SESSION['error'] = 'Все поля обязательны для заполнения';[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/admin/MainController.php b/app/controllers/admin/MainController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2b058b3[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/admin/MainController.php[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers\admin;[m
[32m+[m
[32m+[m[32mclass MainController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/controllers/admin/UserController.php b/app/controllers/admin/UserController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1bac2ed[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/admin/UserController.php[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\controllers\admin;[m
[32m+[m
[32m+[m[32muse app\models\User;[m
[32m+[m[32muse framework\core\base\View;[m
[32m+[m
[32m+[m[32mclass UserController extends AppController {[m
[32m+[m
[32m+[m[32m    public function indexAction() {[m
[32m+[m[32m        $test = 'The Best Lang Is PHP';[m
[32m+[m[32m        View::setMeta('Dash - Главная страница', 'Desc', 'Keys');[m
[32m+[m[32m        $this->set(compact('test'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function loginAction() {[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            $user = new User();[m
[32m+[m[32m            if (!$user->login(true)) {[m
[32m+[m[32m                $_SESSION['error'] = 'Ник/пароль введены неверно!';[m
[32m+[m[32m            }[m
[32m+[m[32m            if (User::isAdmin()) {[m
[32m+[m[32m                redirect(ADMIN);[m
[32m+[m[32m            } else {[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (User::isAdmin()) {[m
[32m+[m[32m            redirect(ADMIN);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $this->layout = 'login';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/langs/en.php b/app/langs/en.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f624b1a[m
[1m--- /dev/null[m
[1m+++ b/app/langs/en.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'send' => 'Send',[m
[32m+[m[32m    'catalog' => 'Catalog',[m
[32m+[m[32m    'recent-posts' => 'Recent Posts',[m
[32m+[m[32m    'cats' => 'Categories',[m
[32m+[m[32m    'home' => 'Home',[m
[32m+[m[32m    'contact' => 'Contact',[m
[32m+[m[32m    'about' => 'About',[m
[32m+[m[32m    'login' => 'Login',[m
[32m+[m[32m    'password' => 'Password',[m
[32m+[m[32m    'name' => 'Name',[m
[32m+[m[32m    'mail' => 'Mail',[m
[32m+[m[32m    'log' => 'Log In',[m
[32m+[m[32m    'reg' => 'Sign Up',[m
[32m+[m[32m    'error' => 'Error',[m
[32m+[m[32m    'acc' => 'Account',[m
[32m+[m[32m    'logout' => 'Log Out',[m
[32m+[m[32m    'cabinet' => 'Profile',[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/app/langs/en/Main/index.php b/app/langs/en/Main/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7a4efbe[m
[1m--- /dev/null[m
[1m+++ b/app/langs/en/Main/index.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'test' => 'Test Value',[m
[32m+[m[32m    'main' => 'Main Value',[m
[32m+[m[32m    'read' => 'Read',[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/app/langs/ru.php b/app/langs/ru.php[m
[1mnew file mode 100644[m
[1mindex 0000000..79b8027[m
[1m--- /dev/null[m
[1m+++ b/app/langs/ru.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'send' => 'Отправить',[m
[32m+[m[32m    'catalog' => 'Каталог',[m
[32m+[m[32m    'recent-posts' => 'Новинки',[m
[32m+[m[32m    'cats' => 'Категории',[m
[32m+[m[32m    'home' => 'Главная',[m
[32m+[m[32m    'contact' => 'Контакт',[m
[32m+[m[32m    'about' => 'О нас',[m
[32m+[m[32m    'login' => 'Ник',[m
[32m+[m[32m    'password' => 'Пароль',[m
[32m+[m[32m    'name' => 'Имя',[m
[32m+[m[32m    'mail' => 'Почта',[m
[32m+[m[32m    'log' => 'Авторизоваться',[m
[32m+[m[32m    'reg' => 'Зарегистрироваться',[m
[32m+[m[32m    'error' => 'Ошибка',[m
[32m+[m[32m    'acc' => 'Аккаунт',[m
[32m+[m[32m    'logout' => 'Покинуть Аккаунт',[m
[32m+[m[32m    'cabinet' => 'Профиль',[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/app/langs/ru/Main/index.php b/app/langs/ru/Main/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3c06790[m
[1m--- /dev/null[m
[1m+++ b/app/langs/ru/Main/index.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'test' => 'Тест Значения',[m
[32m+[m[32m    'main' => 'Главная Значения',[m
[32m+[m[32m    'read' => 'Читать',[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/app/models/Main.php b/app/models/Main.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2f25470[m
[1m--- /dev/null[m
[1m+++ b/app/models/Main.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\models;[m
[32m+[m
[32m+[m[32muse \framework\core\base\Model;[m
[32m+[m
[32m+[m[32mclass Main extends Model {[m
[32m+[m[32m    public $table = 'blog';[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/models/User.php b/app/models/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fbe893c[m
[1m--- /dev/null[m
[1m+++ b/app/models/User.php[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace app\models;[m
[32m+[m
[32m+[m[32muse framework\core\base\Model;[m
[32m+[m
[32m+[m[32mclass User extends Model[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    public $attributes = [[m
[32m+[m[32m        'login' => '',[m
[32m+[m[32m        'password' => '',[m
[32m+[m[32m        'email' => '',[m
[32m+[m[32m        'name' => '',[m
[32m+[m[32m        'role' => '',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    public $rules = [[m
[32m+[m[32m        'required' => [[m
[32m+[m[32m            ['login'],[m
[32m+[m[32m            ['password'],[m
[32m+[m[32m            ['email'],[m
[32m+[m[32m            ['name'],[m
[32m+[m[32m            ['role'],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'email' => [[m
[32m+[m[32m            ['email'],[m
[32m+[m[32m        ],[m
[32m+[m[32m        'lengthMin' => [[m
[32m+[m[32m            ['password', 6],[m
[32m+[m[32m        ],[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    public function checkUnique() {[m
[32m+[m[32m        $user = \R::findOne('user', 'login = ? OR email = ? LIMIT 1', [$this->attributes['login'], $this->attributes['email']]);[m
[32m+[m[32m        if ($user) {[m
[32m+[m[32m            if ($user->login == $this->attributes['login']) {[m
[32m+[m[32m                $this->errors['unique'][] = 'Этот ник уже занят';[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($user->email == $this->attributes['email']) {[m
[32m+[m[32m                $this->errors['unique'][] = 'Эта почта уже занята';[m
[32m+[m[32m            }[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function login($isAdmin = false) {[m
[32m+[m[32m        $login = !empty(trim($_POST['login'])) ? trim($_POST['login']) : null;[m
[32m+[m[32m        $password = !empty(trim($_POST['password'])) ? trim($_POST['password']) : null;[m
[32m+[m
[32m+[m[32m        if ($login && $password) {[m
[32m+[m[32m            if ($isAdmin) {[m
[32m+[m[32m                $user = \R::findOne('user', "login = ? AND role = 'admin' LIMIT 1", [$login]);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $user = \R::findOne('user', 'login = ? LIMIT 1', [$login]);[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($user) {[m
[32m+[m[32m                if (password_verify($password, $user->password)) {[m
[32m+[m[32m                    foreach ($user as $k => $v) {[m
[32m+[m[32m                        if ($k != 'password') $_SESSION['user'][$k] = $v;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function isAdmin() {[m
[32m+[m[32m        return (isset($_SESSION['user']) && $_SESSION['user']['role'] == 'admin');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/views/Blog/index.php b/app/views/Blog/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..66f2256[m
[1m--- /dev/null[m
[1m+++ b/app/views/Blog/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mThe Blog[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Blog/show.php b/app/views/Blog/show.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3680410[m
[1m--- /dev/null[m
[1m+++ b/app/views/Blog/show.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading"><?php echo $blog['title']; ?></div>[m
[32m+[m[32m    <div class="panel-body">[m
[32m+[m[32m        <?php[m
[32m+[m[32m            $catId = $blog['cat'];[m
[32m+[m[32m            $cat = \R::findOne('catalog', 'id = ?', [$catId]);[m
[32m+[m[32m        ?>[m
[32m+[m[32m        <?php echo $blog['content']; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <div class="panel-footer">[m
[32m+[m[32m        <?php[m
[32m+[m
[32m+[m[32m            $number = $blog['views'];[m
[32m+[m
[32m+[m[32m            if ($number < 1000) {[m
[32m+[m[32m                $format = number_format($number);[m
[32m+[m[32m            } else if ($number < 1000000) {[m
[32m+[m[32m                $format = number_format($number / 1000, 0) . ' тысяча';[m
[32m+[m[32m            } else if ($number < 1000000000) {[m
[32m+[m[32m                $format = number_format($number / 1000000, 0) . ' миллион';[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $format = number_format($number / 1000000000, 0) . ' миллиард';[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m        ?>[m
[32m+[m[32m        <?php if ($format > 1): ?>[m
[32m+[m[32m            <?php echo $format; ?> просмотров[m
[32m+[m[32m        <?php else: ?>[m
[32m+[m[32m            <?php echo $format; ?> просмотр[m
[32m+[m[32m        <?php endif; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[1mdiff --git a/app/views/Blog/test.php b/app/views/Blog/test.php[m
[1mnew file mode 100644[m
[1mindex 0000000..604f82b[m
[1m--- /dev/null[m
[1m+++ b/app/views/Blog/test.php[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m<h1><?php echo $post['title']; ?></h1>[m
[32m+[m[32m<p><?php echo $post['content']; ?></p>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Kassa/index.php b/app/views/Kassa/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bb93ac0[m
[1m--- /dev/null[m
[1m+++ b/app/views/Kassa/index.php[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Касса</div>[m
[32m+[m[32m    <?php[m
[32m+[m[32m        $treatments = \R::findAll('treatment', 'status = ?', ['unpaid']);[m
[32m+[m[32m    ?>[m
[32m+[m[32m    <div class="panel-body">[m
[32m+[m[32m        <form action="/kassa/" method="post">[m
[32m+[m[32m            <div class="card-body">[m
[32m+[m[32m                <div class="row">[m
[32m+[m[32m                    <div class="col-md-8">[m
[32m+[m[32m                        <div class="form-group">[m
[32m+[m[32m                            <label for="inputCheck">ID Пациента</label>[m
[32m+[m[32m                            <input type="text" name="patient" class="form-control" id="inputCheck">[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                        <div class="ajax"></div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <div class="col-md-4">[m
[32m+[m[32m                        <div class="form-group">[m
[32m+[m[32m                            <label for="">Проверить состояние</label>[m
[32m+[m[32m                            <button type="button" id="check" class="btn btn-default">Проверить</button>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">ID Лечения</label>[m
[32m+[m[32m                    <input type="text" name="treatment" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <!-- /.card-body -->[m
[32m+[m
[32m+[m[32m            <button type="submit" class="btn btn-primary">Уже оплатил</button>[m
[32m+[m[32m        </form>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Неоплаченное лечение</div>[m
[32m+[m[32m    <?php[m
[32m+[m[32m        $treatments = \R::findAll('treatment', 'status = ?', ['unpaid']);[m
[32m+[m[32m    ?>[m
[32m+[m
[32m+[m[32m    <div class="list-group">[m
[32m+[m[32m        <?php foreach ($treatments as $treatment): ?>[m
[32m+[m[32m            <?php[m
[32m+[m[32m            $user = \R::findOne('patients', 'id = ?', [$treatment['patient_id']]);[m
[32m+[m[32m            ?>[m
[32m+[m[32m            <a class="list-group-item list-group-item-action" href=""><?php echo $user['first_name']; ?> <?php echo $user['last_name']; ?> <?php echo $user['middle_name']; ?> - Сумма <span class="text-danger"><?php echo $treatment['sum']; ?></span></a>[m
[32m+[m[32m        <?php endforeach; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<script>[m
[32m+[m[32m    let checkInput = document.getElementById('checkInput');[m
[32m+[m[32m    $(function() {[m
[32m+[m[32m        $('#check').click(function() {[m
[32m+[m[32m            alert(checkInput + 'asdasd');[m
[32m+[m[32m            $.ajax({[m
[32m+[m[32m                url: '/kassa/check',[m
[32m+[m[32m                type: 'post',[m
[32m+[m[32m                data: {'id': checkInput.value},[m
[32m+[m[32m                success: function(res) {[m
[32m+[m[32m                    alert(res);[m
[32m+[m[32m                },[m
[32m+[m[32m                error: function() {[m
[32m+[m[32m                    alert('Error!');[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
[32m+[m[32m        })[m
[32m+[m[32m    });[m
[32m+[m[32m</script>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Main/index.php b/app/views/Main/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..529981b[m
[1m--- /dev/null[m
[1m+++ b/app/views/Main/index.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php if (!empty($blog)): ?>[m
[32m+[m[32m    <?php foreach ($blog as $one): ?>[m
[32m+[m[32m        <div class="panel panel-default">[m
[32m+[m[32m            <div class="panel-heading"><?php echo $one['title']; ?></div>[m
[32m+[m[32m            <div class="panel-body">[m
[32m+[m[32m                <?php echo $one['content']; ?>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="panel-footer">[m
[32m+[m[32m                <a href="/blog/<?php echo $one['id']; ?>" class="btn btn-default"><?php __('read'); ?></a>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    <?php endforeach; ?>[m
[32m+[m[32m    <div class="text-center">[m
[32m+[m[32m        <p>Постов: <?php echo count($blog); ?> из <?php echo $total; ?></p>[m
[32m+[m[32m        <?php if ($pag->countPages > 1): ?>[m
[32m+[m[32m            <?php echo $pag; ?>[m
[32m+[m[32m        <?php endif; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m<?php endif; ?>[m
[32m+[m
[32m+[m[32m<script>[m
[32m+[m[32m    $(function() {[m
[32m+[m[32m        $('#send').click(function() {[m
[32m+[m[32m            $.ajax({[m
[32m+[m[32m                url: '/blog',[m
[32m+[m[32m                type: 'post',[m
[32m+[m[32m                data: {'id': 2},[m
[32m+[m[32m                success: function(res) {[m
[32m+[m[32m                    let data = JSON.parse(res);[m
[32m+[m[32m                    $('.ajax').html(data['title']);[m
[32m+[m[32m                },[m
[32m+[m[32m                error: function() {[m
[32m+[m[32m                    alert('Error!');[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
[32m+[m[32m        })[m
[32m+[m[32m    });[m
[32m+[m[32m</script>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Manager/index.php b/app/views/Manager/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e22fd3e[m
[1m--- /dev/null[m
[1m+++ b/app/views/Manager/index.php[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Менеджер</div>[m
[32m+[m[32m    <div class="panel-body">[m
[32m+[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Page/show.php b/app/views/Page/show.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5ab2f8a[m
[1m--- /dev/null[m
[1m+++ b/app/views/Page/show.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mHello[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Posts/index.php b/app/views/Posts/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0eb84b0[m
[1m--- /dev/null[m
[1m+++ b/app/views/Posts/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>POSTS - INDEX</h1>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Product/show.php b/app/views/Product/show.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2267939[m
[1m--- /dev/null[m
[1m+++ b/app/views/Product/show.php[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m    $cat = \R::findOne('catalog', 'id = ?', [$this->route['alias']]);[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m[32m<h1><?php __('catalog'); ?>, <?php echo $cat['name'] ?></h1>[m
[32m+[m
[32m+[m[32m<?php if (!empty($blog)): ?>[m
[32m+[m[32m    <?php foreach ($blog as $one): ?>[m
[32m+[m[32m        <div class="panel panel-default">[m
[32m+[m[32m            <div class="panel-heading"><?php echo $one['title']; ?></div>[m
[32m+[m[32m            <div class="panel-body">[m
[32m+[m[32m                <?php echo $one['content']; ?>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="panel-footer">[m
[32m+[m[32m                <a href="/blog/<?php echo $one['id']; ?>" class="btn btn-default"><?php __('read'); ?></a>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    <?php endforeach; ?>[m
[32m+[m[32m    <div class="text-center">[m
[32m+[m[32m        <p>Постов: <?php echo count($blog); ?> из <?php echo $total; ?></p>[m
[32m+[m[32m        <?php if ($pag->countPages > 1): ?>[m
[32m+[m[32m            <?php echo $pag; ?>[m
[32m+[m[32m        <?php endif; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m<?php endif; ?>[m
[32m+[m
[32m+[m[32m<script>[m
[32m+[m[32m    $(function() {[m
[32m+[m[32m        $('#send').click(function() {[m
[32m+[m[32m            $.ajax({[m
[32m+[m[32m                url: '/blog',[m
[32m+[m[32m                type: 'post',[m
[32m+[m[32m                data: {'id': 2},[m
[32m+[m[32m                success: function(res) {[m
[32m+[m[32m                    let data = JSON.parse(res);[m
[32m+[m[32m                    $('.ajax').html(data['title']);[m
[32m+[m[32m                },[m
[32m+[m[32m                error: function() {[m
[32m+[m[32m                    alert('Error!');[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
[32m+[m[32m        })[m
[32m+[m[32m    });[m
[32m+[m[32m</script>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/Recorder/index.php b/app/views/Recorder/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cb87432[m
[1m--- /dev/null[m
[1m+++ b/app/views/Recorder/index.php[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Регистратор</div>[m
[32m+[m[32m    <div class="panel-body">[m
[32m+[m[32m        <form action="/recorder/" method="post">[m
[32m+[m[32m            <div class="card-body">[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">Имя</label>[m
[32m+[m[32m                    <input type="text" name="first_name" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">Фамилия</label>[m
[32m+[m[32m                    <input type="text" name="last_name" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">Имя Отца</label>[m
[32m+[m[32m                    <input type="text" name="middle_name" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="datepicker">Дата Рождения</label>[m
[32m+[m[32m                    <input type="text" name="birth_date" class="form-control" id="datepicker">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">Манзил</label>[m
[32m+[m[32m                    <input type="text" name="address" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">ИНФЛ</label>[m
[32m+[m[32m                    <input type="number" name="infl" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group">[m
[32m+[m[32m                    <label for="">Паспорт Серия</label>[m
[32m+[m[32m                    <input type="text" name="passport" class="form-control" id="">[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <!-- /.card-body -->[m
[32m+[m
[32m+[m[32m            <button type="submit" class="btn btn-primary">Сохранить</button>[m
[32m+[m[32m        </form>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Пациенты</div>[m
[32m+[m[32m    <?php[m
[32m+[m[32m        $patients = \R::findAll('patients');[m
[32m+[m[32m        $patients = array_reverse($patients);[m
[32m+[m[32m    ?>[m
[32m+[m
[32m+[m[32m    <div class="list-group">[m
[32m+[m[32m        <?php foreach ($patients as $patient): ?>[m
[32m+[m[32m            <a class="list-group-item list-group-item-action" href=""><?php echo $patient['first_name']; ?> <?php echo $patient['last_name']; ?> <?php echo $patient['middle_name']; ?></span></a>[m
[32m+[m[32m        <?php endforeach; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/User/index.php b/app/views/User/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..50985e2[m
[1m--- /dev/null[m
[1m+++ b/app/views/User/index.php[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<div class="row">[m
[32m+[m[32m    <div class="col-md-5">[m
[32m+[m[32m        <div class="panel panel-default">[m
[32m+[m[32m            <div class="panel-heading">Аккаунт</div>[m
[32m+[m[32m            <div class="panel-body">[m
[32m+[m[32m                <div style="font-size: 3rem; font-weight: bold"><?php echo $_SESSION['user']['name']; ?></div>[m
[32m+[m[32m                <div><?php echo $_SESSION['user']['email']; ?></div>[m
[32m+[m[32m                <br>[m
[32m+[m[32m                <a href="/<?php echo $_SESSION['user']['role']; ?>" class="btn btn-primary">В кабинет</a>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <div class="col-md-7">[m
[32m+[m[32m        Salom[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/User/log.php b/app/views/User/log.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7cf7554[m
[1m--- /dev/null[m
[1m+++ b/app/views/User/log.php[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32m<div class="login-box">[m
[32m+[m[32m    <!-- /.login-logo -->[m
[32m+[m[32m    <div class="card card-outline card-primary">[m
[32m+[m[32m        <div class="card-header text-center">[m
[32m+[m[32m            <a href="../../index2.html" class="h1"><b>Good</b>ly</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="card-body">[m
[32m+[m[32m            <?php if (isset($_SESSION['error'])): ?>[m
[32m+[m[32m                <div class="alert alert-danger alert-dismissible">[m
[32m+[m[32m                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>[m
[32m+[m[32m                    <h5><i class="icon fas fa-ban"></i> <?php __('error'); ?></h5>[m
[32m+[m[32m                    <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <form action="/user/log" method="post">[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="text" name="login" class="form-control" placeholder="<?php __('login'); ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-user"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="password" name="password" class="form-control" placeholder="<?php __('password'); ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-lock"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="row">[m
[32m+[m[32m                    <div class="col-12">[m
[32m+[m[32m                        <button type="submit" class="btn btn-primary btn-block"><?php __('log'); ?></button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <!-- /.col -->[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </form>[m
[32m+[m[32m            <!-- /.social-auth-links -->[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.card-body -->[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /.card -->[m
[32m+[m[32m</div>[m
[32m+[m[32m<!-- /.login-box -->[m
\ No newline at end of file[m
[1mdiff --git a/app/views/User/reg.php b/app/views/User/reg.php[m
[1mnew file mode 100644[m
[1mindex 0000000..37e1e05[m
[1m--- /dev/null[m
[1m+++ b/app/views/User/reg.php[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m<div class="login-box">[m
[32m+[m[32m    <!-- /.login-logo -->[m
[32m+[m[32m    <div class="card card-outline card-primary">[m
[32m+[m[32m        <div class="card-header text-center">[m
[32m+[m[32m            <a href="../../index2.html" class="h1"><b>Good</b>ly</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="card-body">[m
[32m+[m[32m            <?php if (isset($_SESSION['error'])): ?>[m
[32m+[m[32m                <div class="alert alert-danger alert-dismissible">[m
[32m+[m[32m                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>[m
[32m+[m[32m                    <h5><i class="icon fas fa-ban"></i> <?php __('error'); ?></h5>[m
[32m+[m[32m                    <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <form action="/user/reg" method="post">[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="text" name="login" class="form-control" placeholder="<?php __('login'); ?>" value="<?php echo isset($_SESSION['fdata']['login']) ? h($_SESSION['fdata']['login']) : '' ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-user"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="password" name="password" class="form-control" placeholder="<?php __('password'); ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-lock"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="text" name="name" class="form-control" placeholder="<?php __('name'); ?>" value="<?php echo isset($_SESSION['fdata']['name']) ? h($_SESSION['fdata']['name']) : '' ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="far fa-user"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="text" name="email" class="form-control" placeholder="<?php __('mail'); ?>" value="<?php echo isset($_SESSION['fdata']['email']) ? h($_SESSION['fdata']['email']) : '' ?>">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-envelope"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-check">[m
[32m+[m[32m                        <div>[m
[32m+[m[32m                            <input class="form-check-input" type="radio" name="role" value="user" id="" checked>[m
[32m+[m[32m                            <label class="form-check-label" for="">[m
[32m+[m[32m                                Пользователь[m
[32m+[m[32m                            </label>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    <?php $roles = \R::findAll('roles'); ?>[m
[32m+[m[32m                    <?php foreach ($roles as $role): ?>[m
[32m+[m[32m                        <div>[m
[32m+[m[32m                            <input class="form-check-input" type="radio" name="role" value="<?php echo $role['type'] ?>" id="">[m
[32m+[m[32m                            <label class="form-check-label" for="">[m
[32m+[m[32m                                <?php echo $role['name'] ?>[m
[32m+[m[32m                            </label>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    <?php endforeach; ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="row">[m
[32m+[m[32m                    <div class="col-12">[m
[32m+[m[32m                        <button type="submit" class="btn btn-primary btn-block"><?php __('reg'); ?></button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <!-- /.col -->[m
[32m+[m[32m                </div>[m
[32m+[m
[32m+[m[32m            </form>[m
[32m+[m[32m            <?php if (isset($_SESSION['fdata'])) unset($_SESSION['fdata']); ?>[m
[32m+[m[32m            <!-- /.social-auth-links -->[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.card-body -->[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /.card -->[m
[32m+[m[32m</div>[m
[32m+[m[32m<!-- /.login-box -->[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/Blog/create.php b/app/views/admin/Blog/create.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ebdb323[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/Blog/create.php[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m<div class="card card-primary">[m
[32m+[m[32m    <div class="card-header">[m
[32m+[m[32m        <h3 class="card-title">Опубликования нового поста</h3>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /.card-header -->[m
[32m+[m[32m    <!-- form start -->[m
[32m+[m[32m    <form action="/admin/blog/create" method="post">[m
[32m+[m[32m        <div class="card-body">[m
[32m+[m[32m            <div class="form-group">[m
[32m+[m[32m                <label for="title">Название поста</label>[m
[32m+[m[32m                <input type="text" name="title" class="form-control" id="title">[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="form-group">[m
[32m+[m[32m                <label for="content">Контент поста</label>[m
[32m+[m[32m                <textarea style="resize: none" type="text" name="content" class="form-control" id="content"></textarea>[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="row">[m
[32m+[m[32m                <div class="form-group col-md-6">[m
[32m+[m[32m                    <label for="lang">Язык поста</label>[m
[32m+[m[32m                    <select name="lang" class="selectpicker">[m
[32m+[m[32m                        <?php[m
[32m+[m[32m                        $langs = \R::findAll('lang');[m
[32m+[m[32m                        ?>[m
[32m+[m[32m                        <?php foreach ($langs as $lang): ?>[m
[32m+[m[32m                            <?php if (isset($_COOKIE['lang'])): ?>[m
[32m+[m[32m                                <?php if ($lang['code'] == $_COOKIE['lang']): ?>[m
[32m+[m[32m                                    <option value="<?php echo $lang['code'] ?>" selected><?php echo $lang['name'] ?></option>[m
[32m+[m[32m                                <?php else: ?>[m
[32m+[m[32m                                    <option value="<?php echo $lang['code'] ?>"><?php echo $lang['name'] ?></option>[m
[32m+[m[32m                                <?php endif; ?>[m
[32m+[m[32m                            <?php endif; ?>[m
[32m+[m[32m                        <?php endforeach; ?>[m
[32m+[m[32m                    </select>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="form-group col-md-6">[m
[32m+[m[32m                    <label for="lang">Каталог поста</label>[m
[32m+[m[32m                    <select name="cat" class="selectpicker">[m
[32m+[m[32m                        <?php[m
[32m+[m[32m                        $cats = \R::findAll('catalog');[m
[32m+[m[32m                        ?>[m
[32m+[m[32m                        <?php foreach ($cats as $cat): ?>[m
[32m+[m[32m                            <option value="<?php echo $cat['id'] ?>"><?php echo $cat['name'] ?></option>[m
[32m+[m[32m                        <?php endforeach; ?>[m
[32m+[m[32m                    </select>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.card-body -->[m
[32m+[m
[32m+[m[32m        <div class="card-footer">[m
[32m+[m[32m            <button type="submit" class="btn btn-primary">Опубликовать</button>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </form>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/Blog/index.php b/app/views/admin/Blog/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b3d9bbc[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/Blog/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<?php[m
[1mdiff --git a/app/views/admin/Catalog/create.php b/app/views/admin/Catalog/create.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4b4c4fd[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/Catalog/create.php[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<div class="card card-primary">[m
[32m+[m[32m    <div class="card-header">[m
[32m+[m[32m        <h3 class="card-title">Опубликования каталога</h3>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /.card-header -->[m
[32m+[m[32m    <!-- form start -->[m
[32m+[m[32m    <form action="/admin/catalog/create" method="post">[m
[32m+[m[32m        <div class="card-body">[m
[32m+[m[32m            <div class="form-group">[m
[32m+[m[32m                <label for="title">Название каталога</label>[m
[32m+[m[32m                <input type="text" name="title" class="form-control" id="title">[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.card-body -->[m
[32m+[m
[32m+[m[32m        <div class="card-footer">[m
[32m+[m[32m            <button type="submit" class="btn btn-primary">Опубликовать</button>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </form>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/Catalog/index.php b/app/views/admin/Catalog/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b3d9bbc[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/Catalog/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<?php[m
[1mdiff --git a/app/views/admin/Main/index.php b/app/views/admin/Main/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5c98f68[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/Main/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>Index - Dashboard</h1>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/User/index.php b/app/views/admin/User/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c1e6362[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/User/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<code><?php echo $test; ?></code>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/User/login.php b/app/views/admin/User/login.php[m
[1mnew file mode 100644[m
[1mindex 0000000..bc7b3e5[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/User/login.php[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32m<div class="login-box">[m
[32m+[m[32m    <!-- /.login-logo -->[m
[32m+[m[32m    <div class="card card-outline card-primary">[m
[32m+[m[32m        <div class="card-header text-center">[m
[32m+[m[32m            <a href="../../index2.html" class="h1"><b>Good</b>ly</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="card-body">[m
[32m+[m[32m            <?php if (isset($_SESSION['error'])): ?>[m
[32m+[m[32m                <div class="alert alert-danger alert-dismissible">[m
[32m+[m[32m                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>[m
[32m+[m[32m                    <h5><i class="icon fas fa-ban"></i> Ошибка</h5>[m
[32m+[m[32m                    <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <form action="<?php echo ADMIN; ?>/user/login" method="post">[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="text" name="login" class="form-control" placeholder="Ник">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-user"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="input-group mb-3">[m
[32m+[m[32m                    <input type="password" name="password" class="form-control" placeholder="Пароль">[m
[32m+[m[32m                    <div class="input-group-append">[m
[32m+[m[32m                        <div class="input-group-text">[m
[32m+[m[32m                            <span class="fas fa-lock"></span>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="row">[m
[32m+[m[32m                    <div class="col-12">[m
[32m+[m[32m                        <button type="submit" class="btn btn-primary btn-block">Авторизоваться</button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <!-- /.col -->[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </form>[m
[32m+[m[32m            <!-- /.social-auth-links -->[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.card-body -->[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /.card -->[m
[32m+[m[32m</div>[m
[32m+[m[32m<!-- /.login-box -->[m
\ No newline at end of file[m
[1mdiff --git a/app/views/admin/User/test.php b/app/views/admin/User/test.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6e4c765[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/User/test.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>TEST</h1>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/layouts/dashboard.php b/app/views/layouts/dashboard.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9b1ddf9[m
[1m--- /dev/null[m
[1m+++ b/app/views/layouts/dashboard.php[m
[36m@@ -0,0 +1,112 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <?php \framework\core\base\View::getMeta(); ?>[m
[32m+[m[32m    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css">[m
[32m+[m[32m    <link rel="stylesheet" href="/css/style.css">[m
[32m+[m[32m    <style>[m
[32m+[m[32m        * {[m
[32m+[m[32m            outline: none !important;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        body .bootstrap-select .dropdown-toggle:focus {[m
[32m+[m[32m            outline: none !important;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .nav-link, .nav-active a {[m
[32m+[m[32m            display: flex;[m
[32m+[m[32m            width: 45px;[m
[32m+[m[32m            height: 45px;[m
[32m+[m[32m            justify-content: center;[m
[32m+[m[32m            align-items: center;[m
[32m+[m[32m            background: #0c84ff;[m
[32m+[m[32m            color: #fff;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .selectpicker {[m
[32m+[m[32m            outline: none;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .bootstrap-select {[m
[32m+[m[32m            width: 100% !important;[m
[32m+[m[32m            margin-bottom: 20px;[m
[32m+[m[32m        }[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m
[32m+[m[32m<body>[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m    <nav class="navbar navbar-inverse">[m
[32m+[m[32m        <div class="navbar-header">[m
[32m+[m[32m            <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".js-navbar-collapse">   <span class="sr-only">Toggle navigation</span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m            </button>[m
[32m+[m
[32m+[m[32m            <a class="navbar-brand" href="/">Dashboard</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="collapse navbar-collapse js-navbar-collapse">[m
[32m+[m[32m            <ul class="nav navbar-nav">[m
[32m+[m[32m                <li><a href="/admin/blog/create">Блог</a></li>[m
[32m+[m[32m                <li><a href="/admin/catalog/create">Каталог</a></li>[m
[32m+[m[32m            </ul>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.nav-collapse -->[m
[32m+[m[32m    </nav>[m
[32m+[m[32m</div>[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m    <div class="row">[m
[32m+[m[32m        <div class="col-md-3">[m
[32m+[m[32m            <?php $this->getPart('parts/dashboard/aside'); ?>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="col-md-9">[m
[32m+[m
[32m+[m[32m            <?php if (isset($_SESSION['error'])): ?>[m
[32m+[m[32m                <div class="alert alert-danger">[m
[32m+[m[32m                    <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <?php if (isset($_SESSION['success'])): ?>[m
[32m+[m[32m                <div class="alert alert-success">[m
[32m+[m[32m                    <?php echo $_SESSION['success']; unset($_SESSION['success']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <?php[m
[32m+[m[32m            if (isset($_SESSION['user'])) {[m
[32m+[m[32m                if ($_SESSION['user']['role'] == '3') {[m
[32m+[m[32m                    echo 'You are Admin';[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            ?>[m
[32m+[m
[32m+[m[32m            <?php echo $content; ?>[m
[32m+[m
[32m+[m[32m            <!-- <pre>Hello, RedBeanPHP</pre> -->[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<?php[m
[32m+[m[32m//        debug(\framework\core\base\Lang::$langData);[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m
[32m+[m[32m<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>[m
[32m+[m[32m<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js" integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd" crossorigin="anonymous"></script>[m
[32m+[m[32m<script src="/js/main.js"></script>[m
[32m+[m[32m<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/bootstrap-select.min.js"></script>[m
[32m+[m[32m<?php[m
[32m+[m[32mforeach ($scripts as $script) {[m
[32m+[m[32m    echo $script;[m
[32m+[m[32m}[m
[32m+[m[32m?>[m
[32m+[m[32m</body>[m
[32m+[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/layouts/def.php b/app/views/layouts/def.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1543b75[m
[1m--- /dev/null[m
[1m+++ b/app/views/layouts/def.php[m
[36m@@ -0,0 +1,123 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <?php \framework\core\base\View::getMeta(); ?>[m
[32m+[m[32m    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css">[m
[32m+[m[32m    <link rel="stylesheet" href="/css/style.css">[m
[32m+[m[32m    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">[m
[32m+[m[32m    <link rel="stylesheet" href="/resources/demos/style.css">[m
[32m+[m[32m    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>[m
[32m+[m[32m    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>[m
[32m+[m[32m      <script>[m
[32m+[m[32m        $( function() {[m
[32m+[m[32m            $( "#datepicker" ).datepicker();[m
[32m+[m[32m        } );[m
[32m+[m[32m    </script>[m
[32m+[m[32m    <style>[m
[32m+[m[32m        * {[m
[32m+[m[32m            outline: none !important;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        body .bootstrap-select .dropdown-toggle:focus {[m
[32m+[m[32m            outline: none !important;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .nav-link, .nav-active a {[m
[32m+[m[32m            display: flex;[m
[32m+[m[32m            width: 45px;[m
[32m+[m[32m            height: 45px;[m
[32m+[m[32m            justify-content: center;[m
[32m+[m[32m            align-items: center;[m
[32m+[m[32m            background: #0c84ff;[m
[32m+[m[32m            color: #fff;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .selectpicker {[m
[32m+[m[32m            outline: none;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        .bootstrap-select {[m
[32m+[m[32m            width: 100% !important;[m
[32m+[m[32m            margin-bottom: 20px;[m
[32m+[m[32m        }[m
[32m+[m[32m    </style>[m
[32m+[m[32m</head>[m
[32m+[m
[32m+[m[32m<body>[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m    <nav class="navbar navbar-inverse">[m
[32m+[m[32m        <div class="navbar-header">[m
[32m+[m[32m            <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".js-navbar-collapse">   <span class="sr-only">Toggle navigation</span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m                <span class="icon-bar"></span>[m
[32m+[m[32m            </button>[m
[32m+[m
[32m+[m[32m            <a class="navbar-brand" href="/">Med</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="collapse navbar-collapse js-navbar-collapse">[m
[32m+[m[32m            <ul class="nav navbar-nav">[m
[32m+[m[32m                <li><a href="#"><?php __('home'); ?></a></li>[m
[32m+[m[32m                <li><a href="#"><?php __('about'); ?></a></li>[m
[32m+[m[32m                <li><a href="#"><?php __('contact'); ?></a></li>[m
[32m+[m[32m                <li><a href="#"><?php __('catalog'); ?></a></li>[m
[32m+[m[32m            </ul>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <!-- /.nav-collapse -->[m
[32m+[m[32m    </nav>[m
[32m+[m[32m</div>[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m    <div class="row">[m
[32m+[m[32m        <div class="col-md-3">[m
[32m+[m[32m            <?php $this->getPart('parts/aside') ?>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="col-md-9">[m
[32m+[m
[32m+[m[32m            <?php if (isset($_SESSION['error'])): ?>[m
[32m+[m[32m                <div class="alert alert-danger">[m
[32m+[m[32m                    <?php echo $_SESSION['error']; unset($_SESSION['error']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <?php if (isset($_SESSION['success'])): ?>[m
[32m+[m[32m                <div class="alert alert-success">[m
[32m+[m[32m                    <?php echo $_SESSION['success']; unset($_SESSION['success']); ?>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            <?php endif; ?>[m
[32m+[m
[32m+[m[32m            <?php[m
[32m+[m[32m            if (isset($_SESSION['user'])) {[m
[32m+[m[32m                if ($_SESSION['user']['role'] == '3') {[m
[32m+[m[32m                    echo 'You are Admin';[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            ?>[m
[32m+[m
[32m+[m[32m            <?php echo $content; ?>[m
[32m+[m
[32m+[m[32m            <!-- <pre>Hello, RedBeanPHP</pre> -->[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<?php[m
[32m+[m[32m//        debug(\framework\core\base\Lang::$langData);[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js" integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd" crossorigin="anonymous"></script>[m
[32m+[m[32m<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/bootstrap-select.min.js"></script>[m
[32m+[m[32m<script src="/js/main.js"></script>[m
[32m+[m[32m<?php[m
[32m+[m[32mforeach ($scripts as $script) {[m
[32m+[m[32m    echo $script;[m
[32m+[m[32m}[m
[32m+[m[32m?>[m
[32m+[m[32m</body>[m
[32m+[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/layouts/login.php b/app/views/layouts/login.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e330c1c[m
[1m--- /dev/null[m
[1m+++ b/app/views/layouts/login.php[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="utf-8">[m
[32m+[m[32m    <meta name="viewport" content="width=device-width, initial-scale=1">[m
[32m+[m[32m    <title>Добро пожаловать</title>[m
[32m+[m
[32m+[m[32m    <!-- Google Font: Source Sans Pro -->[m
[32m+[m[32m    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">[m
[32m+[m[32m    <!-- Font Awesome -->[m
[32m+[m[32m    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==" crossorigin="anonymous" referrerpolicy="no-referrer" />[m
[32m+[m
[32m+[m[32m    <link rel="stylesheet" href="/assets/lte.css">[m
[32m+[m[32m</head>[m
[32m+[m[32m<body class="hold-transition login-page">[m
[32m+[m
[32m+[m[32m    <?php echo $content; ?>[m
[32m+[m
[32m+[m[32m<!-- jQuery -->[m
[32m+[m[32m<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>[m
[32m+[m[32m<!-- Bootstrap 4 -->[m
[32m+[m[32m<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>[m
[32m+[m[32m<!-- AdminLTE App -->[m
[32m+[m[32m<script src="/assets/lte.js"></script>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/app/views/parts/aside.php b/app/views/parts/aside.php[m
[1mnew file mode 100644[m
[1mindex 0000000..99c7346[m
[1m--- /dev/null[m
[1m+++ b/app/views/parts/aside.php[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32muse framework\core\App;[m
[32m+[m
[32m+[m[32m$user = new \app\models\User();[m
[32m+[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m[32m<?php if ($user::isAdmin()): ?>[m
[32m+[m[32m    <div class="panel panel-default">[m
[32m+[m[32m        <div class="panel-heading">Dashboard</div>[m
[32m+[m[32m        <div class="list-group">[m
[32m+[m[32m            <a href="/admin/" class="list-group-item list-group-item-action">Dashboard</a>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m<?php endif; ?>[m
[32m+[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading"><?php __('acc'); ?></div>[m
[32m+[m[32m    <div class="list-group">[m
[32m+[m[32m        <?php if (!isset($_SESSION['user'])): ?>[m
[32m+[m[32m            <a href="/user/reg" class="list-group-item list-group-item-action"><?php __('reg'); ?></a>[m
[32m+[m[32m            <a href="/user/log" class="list-group-item list-group-item-action"><?php __('log'); ?></a>[m
[32m+[m[32m        <?php else: ?>[m
[32m+[m[32m            <a href="/user/" class="list-group-item list-group-item-action"><?php __('cabinet'); ?></a>[m
[32m+[m[32m            <a href="/user/logout" class="list-group-item list-group-item-action"><?php __('logout'); ?></a>[m
[32m+[m[32m        <?php endif; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m<?php new \framework\widgets\language\Language(); ?>[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading"><?php __('catalog'); ?></div>[m
[32m+[m[32m    <div class="list-group">[m
[32m+[m[32m        <?php[m
[32m+[m[32m            $catalog = \R::findAll('catalog');[m
[32m+[m[32m        ?>[m
[32m+[m[32m        <?php foreach ($catalog as $catalogItem): ?>[m
[32m+[m[32m            <a href="/product/<?php echo $catalogItem['id']; ?>" class="list-group-item list-group-item-action"><?php echo $catalogItem['name']; ?></a>[m
[32m+[m[32m        <?php endforeach; ?>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m<?php[m
[32m+[m[32m    $lang = App::$app->getProperty('lang')['code'];[m
[32m+[m[32m    $recentBlog = \R::findAll('blog', 'lang = ?', [$lang]);[m
[32m+[m[32m    $recentArray = array_reverse($recentBlog);[m
[32m+[m[32m    $recent = array_slice($recentArray,0,4);[m
[32m+[m[32m?>[m
[32m+[m
[32m+[m[32m<?php if (!empty($recentBlog)): ?>[m
[32m+[m[32m    <div class="panel panel-default">[m
[32m+[m[32m        <div class="panel-heading"><?php __('recent-posts'); ?></div>[m
[32m+[m[32m        <div class="list-group">[m
[32m+[m[32m            <?php foreach ($recent as $recentItem): ?>[m
[32m+[m[32m                <a href="#" class="list-group-item list-group-item-action"><?php echo $recentItem['title']; ?></a>[m
[32m+[m[32m            <?php endforeach; ?>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m<?php endif; ?>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/parts/dashboard/aside.php b/app/views/parts/dashboard/aside.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4740cef[m
[1m--- /dev/null[m
[1m+++ b/app/views/parts/dashboard/aside.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<div class="panel panel-default">[m
[32m+[m[32m    <div class="panel-heading">Навигация</div>[m
[32m+[m[32m    <div class="list-group">[m
[32m+[m[32m        <a href="/admin/blog/create" class="list-group-item list-group-item-action">Добавить пост</a>[m
[32m+[m[32m        <a href="/admin/catalog/create" class="list-group-item list-group-item-action">Добавить каталог</a>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
\ No newline at end of file[m
[1mdiff --git a/app/views/parts/part.php b/app/views/parts/part.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/composer.json b/composer.json[m
[1mnew file mode 100644[m
[1mindex 0000000..b0ec0c4[m
[1m--- /dev/null[m
[1m+++ b/composer.json[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "name": "framework/framework",[m
[32m+[m[32m    "require": {[m
[32m+[m[32m        "vlucas/valitron": "^1.4"[m
[32m+[m[32m    },[m
[32m+[m[32m    "autoload": {[m
[32m+[m[32m        "psr-4": {[m
[32m+[m[32m            "framework\\": "vendor/framework",[m
[32m+[m[32m            "app\\": "app"[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/composer.lock b/composer.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..54f46de[m
[1m--- /dev/null[m
[1m+++ b/composer.lock[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "_readme": [[m
[32m+[m[32m        "This file locks the dependencies of your project to a known state",[m
[32m+[m[32m        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",[m
[32m+[m[32m        "This file is @generated automatically"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "content-hash": "a85775c648c290bffabbbd345a1af1f1",[m
[32m+[m[32m    "packages": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "vlucas/valitron",[m
[32m+[m[32m            "version": "v1.4.10",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/vlucas/valitron.git",[m
[32m+[m[32m                "reference": "5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/vlucas/valitron/zipball/5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb",[m
[32m+[m[32m                "reference": "5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "php": ">=5.3.2"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "phpunit/phpunit": ">=4.8.35"[m
[32m+[m[32m            },[m
[32m+[m[32m            "suggest": {[m
[32m+[m[32m                "ext-mbstring": "It can support the multiple bytes string length."[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Valitron\\": "src/Valitron"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "BSD-3-Clause"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Vance Lucas",[m
[32m+[m[32m                    "email": "vance@vancelucas.com",[m
[32m+[m[32m                    "homepage": "https://www.vancelucas.com"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "Simple, elegant, stand-alone validation library with NO dependencies",[m
[32m+[m[32m            "homepage": "https://github.com/vlucas/valitron",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "valid",[m
[32m+[m[32m                "validation",[m
[32m+[m[32m                "validator"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "funding": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "url": "https://tidelift.com/funding/github/packagist/vlucas/valitron",[m
[32m+[m[32m                    "type": "tidelift"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2021-07-08T16:18:03+00:00"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "packages-dev": [],[m
[32m+[m[32m    "aliases": [],[m
[32m+[m[32m    "minimum-stability": "stable",[m
[32m+[m[32m    "stability-flags": [],[m
[32m+[m[32m    "prefer-stable": false,[m
[32m+[m[32m    "prefer-lowest": false,[m
[32m+[m[32m    "platform": [],[m
[32m+[m[32m    "platform-dev": [],[m
[32m+[m[32m    "plugin-api-version": "1.1.0"[m
[32m+[m[32m}[m
[1mdiff --git a/config/config.php b/config/config.php[m
[1mnew file mode 100644[m
[1mindex 0000000..616e13b[m
[1m--- /dev/null[m
[1m+++ b/config/config.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'components' => [[m
[32m+[m[32m        'cache' => 'framework\libs\Cache',[m
[32m+[m[32m    ],[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/config/config_db.php b/config/config_db.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1f45b6d[m
[1m--- /dev/null[m
[1m+++ b/config/config_db.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'dsn' => 'mysql:host=localhost;dbname=kassa;charset=utf8',[m
[32m+[m[32m    'user' => 'root',[m
[32m+[m[32m    'pass' => '',[m
[32m+[m[32m];[m[41m  [m
\ No newline at end of file[m
[1mdiff --git a/kassa (1).sql b/kassa (1).sql[m
[1mnew file mode 100644[m
[1mindex 0000000..76bb818[m
[1m--- /dev/null[m
[1m+++ b/kassa (1).sql[m	
[36m@@ -0,0 +1,246 @@[m
[32m+[m[32m-- phpMyAdmin SQL Dump[m
[32m+[m[32m-- version 5.0.2[m
[32m+[m[32m-- https://www.phpmyadmin.net/[m
[32m+[m[32m--[m
[32m+[m[32m-- Хост: 127.0.0.1:3306[m
[32m+[m[32m-- Время создания: Дек 15 2021 г., 03:10[m
[32m+[m[32m-- Версия сервера: 10.3.22-MariaDB[m
[32m+[m[32m-- Версия PHP: 7.1.33[m
[32m+[m
[32m+[m[32mSET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";[m
[32m+[m[32mSTART TRANSACTION;[m
[32m+[m[32mSET time_zone = "+00:00";[m
[32m+[m
[32m+[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;[m
[32m+[m[32m/*!40101 SET NAMES utf8mb4 */;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- База данных: `kassa`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `blog` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `lang` varchar(256) NOT NULL,[m
[32m+[m[32m  `title` varchar(256) NOT NULL,[m
[32m+[m[32m  `content` text NOT NULL,[m
[32m+[m[32m  `cat` varchar(256) NOT NULL,[m
[32m+[m[32m  `views` varchar(256) NOT NULL DEFAULT '0',[m
[32m+[m[32m  `likes` varchar(256) NOT NULL DEFAULT '0'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `blog` (`id`, `lang`, `title`, `content`, `cat`, `views`, `likes`) VALUES[m
[32m+[m[32m(1, 'ru', 'Функция number_format() в PHP', 'number_format() возвращает отформатированное число number . Функция принимает один, два или четыре аргумента. Если переданы два аргумента, number будет отформатирован с decimals знаками после точки (\".\") и с запятой (\",\") между группами цифр по 3.', '1', '1', '0');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `catalog` ([m
[32m+[m[32m  `id` int(16) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `catalog` (`id`, `name`) VALUES[m
[32m+[m[32m(1, 'PHP');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `lang` ([m
[32m+[m[32m  `id` int(16) NOT NULL,[m
[32m+[m[32m  `code` varchar(256) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL,[m
[32m+[m[32m  `base` varchar(256) NOT NULL[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `lang` (`id`, `code`, `name`, `base`) VALUES[m
[32m+[m[32m(1, 'ru', 'Русский', '1'),[m
[32m+[m[32m(2, 'en', 'English', '0');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `patients` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `first_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `last_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `middle_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `birth_date` date NOT NULL,[m
[32m+[m[32m  `address` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `infl` int(11) NOT NULL,[m
[32m+[m[32m  `passport` varchar(15) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `reg_date` date NOT NULL[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `patients` (`id`, `first_name`, `last_name`, `middle_name`, `birth_date`, `address`, `infl`, `passport`, `reg_date`) VALUES[m
[32m+[m[32m(1, 'Javohir', 'Abduhalilov', 'Shavkatovich', '2021-06-05', 'Uzbekistan, Tashkent', 123456789, 'ABC123456789', '2021-12-14'),[m
[32m+[m[32m(2, 'Shaxruz', 'Abduhalilov', 'Shavkatovich', '2021-07-13', 'Uzbekistan, Tashkent', 123456789, 'CBD123456789', '2021-12-15'),[m
[32m+[m[32m(3, 'Shaxruz', 'Abduhalilov', 'Shavkatovich', '2021-07-13', 'Uzbekistan, Tashkent', 123456789, 'CBD123456789', '2021-12-15');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `treatment` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `patient_id` int(11) NOT NULL,[m
[32m+[m[32m  `sum` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `date` date NOT NULL,[m
[32m+[m[32m  `status` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'unpaid'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `treatment` (`id`, `patient_id`, `sum`, `date`, `status`) VALUES[m
[32m+[m[32m(1, 1, '5000.00', '2021-12-15', 'paid');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `user`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `user` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `login` varchar(256) NOT NULL,[m
[32m+[m[32m  `password` varchar(256) NOT NULL,[m
[32m+[m[32m  `email` varchar(256) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL,[m
[32m+[m[32m  `role` varchar(256) NOT NULL DEFAULT 'user'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `user`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `user` (`id`, `login`, `password`, `email`, `name`, `role`) VALUES[m
[32m+[m[32m(1, 'Java', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'javastudio2020@gmail.com', 'Жавохир', 'admin'),[m
[32m+[m[32m(2, 'Kassa', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'kassa@gmail.com', 'Кассир', 'kassa'),[m
[32m+[m[32m(3, 'Manager', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'manager@gmail.com', 'Менеджер', 'manager'),[m
[32m+[m[32m(4, 'Recorder', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'recorder@gmail.com', 'Регистратор', 'recorder'),[m
[32m+[m[32m(5, 'Good', '$2y$10$t4U/HlV3rZNyb9p0oqBwHOzhCnqb5EsTVO/tQrVGYCFcX4etPHQp.', 'good@gmail.com', 'Хорошо', 'user');[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы сохранённых таблиц[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `blog`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `catalog`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`),[m
[32m+[m[32m  ADD UNIQUE KEY `name` (`name`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `lang`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `patients`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `treatment`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `user`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `user`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`),[m
[32m+[m[32m  ADD UNIQUE KEY `login` (`login`),[m
[32m+[m[32m  ADD UNIQUE KEY `email` (`email`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для сохранённых таблиц[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `blog`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `catalog`[m
[32m+[m[32m  MODIFY `id` int(16) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `lang`[m
[32m+[m[32m  MODIFY `id` int(16) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `patients`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `treatment`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `user`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `user`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;[m
[32m+[m[32mCOMMIT;[m
[32m+[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;[m
[1mdiff --git a/kassa.sql b/kassa.sql[m
[1mnew file mode 100644[m
[1mindex 0000000..1be84f3[m
[1m--- /dev/null[m
[1m+++ b/kassa.sql[m
[36m@@ -0,0 +1,246 @@[m
[32m+[m[32m-- phpMyAdmin SQL Dump[m
[32m+[m[32m-- version 5.0.2[m
[32m+[m[32m-- https://www.phpmyadmin.net/[m
[32m+[m[32m--[m
[32m+[m[32m-- Хост: 127.0.0.1:3306[m
[32m+[m[32m-- Время создания: Дек 15 2021 г., 03:01[m
[32m+[m[32m-- Версия сервера: 10.3.22-MariaDB[m
[32m+[m[32m-- Версия PHP: 7.1.33[m
[32m+[m
[32m+[m[32mSET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";[m
[32m+[m[32mSTART TRANSACTION;[m
[32m+[m[32mSET time_zone = "+00:00";[m
[32m+[m
[32m+[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;[m
[32m+[m[32m/*!40101 SET NAMES utf8mb4 */;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- База данных: `kassa`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `blog` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `lang` varchar(256) NOT NULL,[m
[32m+[m[32m  `title` varchar(256) NOT NULL,[m
[32m+[m[32m  `content` text NOT NULL,[m
[32m+[m[32m  `cat` varchar(256) NOT NULL,[m
[32m+[m[32m  `views` varchar(256) NOT NULL DEFAULT '0',[m
[32m+[m[32m  `likes` varchar(256) NOT NULL DEFAULT '0'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `blog` (`id`, `lang`, `title`, `content`, `cat`, `views`, `likes`) VALUES[m
[32m+[m[32m(1, 'ru', 'Функция number_format() в PHP', 'number_format() возвращает отформатированное число number . Функция принимает один, два или четыре аргумента. Если переданы два аргумента, number будет отформатирован с decimals знаками после точки (\".\") и с запятой (\",\") между группами цифр по 3.', '1', '1', '0');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `catalog` ([m
[32m+[m[32m  `id` int(16) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `catalog` (`id`, `name`) VALUES[m
[32m+[m[32m(1, 'PHP');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `lang` ([m
[32m+[m[32m  `id` int(16) NOT NULL,[m
[32m+[m[32m  `code` varchar(256) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL,[m
[32m+[m[32m  `base` varchar(256) NOT NULL[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `lang` (`id`, `code`, `name`, `base`) VALUES[m
[32m+[m[32m(1, 'ru', 'Русский', '1'),[m
[32m+[m[32m(2, 'en', 'English', '0');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `patients` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `first_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `last_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `middle_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `birth_date` date NOT NULL,[m
[32m+[m[32m  `address` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `infl` int(11) NOT NULL,[m
[32m+[m[32m  `passport` varchar(15) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `reg_date` date NOT NULL DEFAULT current_timestamp()[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `patients` (`id`, `first_name`, `last_name`, `middle_name`, `birth_date`, `address`, `infl`, `passport`, `reg_date`) VALUES[m
[32m+[m[32m(1, 'Javohir', 'Abduhalilov', 'Shavkatovich', '2021-06-05', 'Uzbekistan, Tashkent', 123456789, 'ABC123456789', '2021-12-14'),[m
[32m+[m[32m(2, 'Shaxruz', 'Abduhalilov', 'Shavkatovich', '2021-07-13', 'Uzbekistan, Tashkent', 123456789, 'CBD123456789', '2021-12-15'),[m
[32m+[m[32m(3, 'Shaxruz', 'Abduhalilov', 'Shavkatovich', '2021-07-13', 'Uzbekistan, Tashkent', 123456789, 'CBD123456789', '2021-12-15');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `treatment` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `patient_id` int(11) NOT NULL,[m
[32m+[m[32m  `sum` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `date` date NOT NULL,[m
[32m+[m[32m  `status` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'unpaid'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `treatment` (`id`, `patient_id`, `sum`, `date`, `status`) VALUES[m
[32m+[m[32m(1, 1, '5000.00', '2021-12-15', 'paid');[m
[32m+[m
[32m+[m[32m-- --------------------------------------------------------[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Структура таблицы `user`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mCREATE TABLE `user` ([m
[32m+[m[32m  `id` int(11) NOT NULL,[m
[32m+[m[32m  `login` varchar(256) NOT NULL,[m
[32m+[m[32m  `password` varchar(256) NOT NULL,[m
[32m+[m[32m  `email` varchar(256) NOT NULL,[m
[32m+[m[32m  `name` varchar(256) NOT NULL,[m
[32m+[m[32m  `role` varchar(256) NOT NULL DEFAULT 'user'[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Дамп данных таблицы `user`[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32mINSERT INTO `user` (`id`, `login`, `password`, `email`, `name`, `role`) VALUES[m
[32m+[m[32m(1, 'Java', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'javastudio2020@gmail.com', 'Жавохир', 'admin'),[m
[32m+[m[32m(2, 'Kassa', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'kassa@gmail.com', 'Кассир', 'kassa'),[m
[32m+[m[32m(3, 'Manager', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'manager@gmail.com', 'Менеджер', 'manager'),[m
[32m+[m[32m(4, 'Recorder', '$2y$10$P8d1G30xv99FNK06rbdjkelWpEWWl0yVFp9Se0i9IsRr6peiGLPAK', 'recorder@gmail.com', 'Регистратор', 'recorder'),[m
[32m+[m[32m(5, 'Good', '$2y$10$t4U/HlV3rZNyb9p0oqBwHOzhCnqb5EsTVO/tQrVGYCFcX4etPHQp.', 'good@gmail.com', 'Хорошо', 'user');[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы сохранённых таблиц[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `blog`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `catalog`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`),[m
[32m+[m[32m  ADD UNIQUE KEY `name` (`name`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `lang`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `patients`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `treatment`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- Индексы таблицы `user`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `user`[m
[32m+[m[32m  ADD PRIMARY KEY (`id`),[m
[32m+[m[32m  ADD UNIQUE KEY `login` (`login`),[m
[32m+[m[32m  ADD UNIQUE KEY `email` (`email`);[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для сохранённых таблиц[m
[32m+[m[32m--[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `blog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `blog`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `catalog`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `catalog`[m
[32m+[m[32m  MODIFY `id` int(16) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `lang`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `lang`[m
[32m+[m[32m  MODIFY `id` int(16) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `patients`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `patients`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `treatment`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `treatment`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;[m
[32m+[m
[32m+[m[32m--[m
[32m+[m[32m-- AUTO_INCREMENT для таблицы `user`[m
[32m+[m[32m--[m
[32m+[m[32mALTER TABLE `user`[m
[32m+[m[32m  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;[m
[32m+[m[32mCOMMIT;[m
[32m+[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;[m
[1mdiff --git a/public/.htaccess b/public/.htaccess[m
[1mnew file mode 100644[m
[1mindex 0000000..a3e5739[m
[1m--- /dev/null[m
[1m+++ b/public/.htaccess[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mRewriteCond %{REQUEST_FILENAME} !-f[m
[32m+[m[32mRewriteCond %{REQUEST_FILENAME} !-d[m
[32m+[m
[32m+[m[32mRewriteRule (.*) index.php?$1 [L,QSA][m
\ No newline at end of file[m
[1mdiff --git a/public/404.php b/public/404.php[m
[1mnew file mode 100644[m
[1mindex 0000000..36b22fd[m
[1m--- /dev/null[m
[1m+++ b/public/404.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>404 Page Not Found</h1>[m
\ No newline at end of file[m
[1mdiff --git a/public/assets/lte.css b/public/assets/lte.css[m
[1mnew file mode 100644[m
[1mindex 0000000..16cf656[m
[1m--- /dev/null[m
[1m+++ b/public/assets/lte.css[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m/*![m
[32m+[m[32m *   AdminLTE v3.2.0-rc[m
[32m+[m[32m *   Author: Colorlib[m
[32m+[m[32m *   Website: AdminLTE.io <https://adminlte.io>[m
[32m+[m[32m *   License: Open source - MIT <https://opensource.org/licenses/MIT>[m
[32m+[m[32m *//*![m
[32m+[m[32m * Bootstrap v4.6.0 (https://getbootstrap.com/)[m
[32m+[m[32m * Copyright 2011-2021 The Bootstrap Authors[m
[32m+[m[32m * Copyright 2011-2021 Twitter, Inc.[m
[32m+[m[32m * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)[m
[32m+[m[32m */:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:"Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:"Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex="-1"]:focus:not(:focus-visible){outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:none}a:not([href]):not([class]){color:inherit;text-decoration:none}a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit;text-align:-webkit-match-parent}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.2;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:"\2014\00A0"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;box-shadow:0 1px 2px rgba(0,0,0,.075);max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem;box-shadow:inset 0 -.1rem 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;box-shadow:none}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl{width:100%;padding-right:7.5px;padding-left:7.5px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-7.5px;margin-left:-7.5px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;padding-right:7.5px;padding-left:7.5px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-sm-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-sm-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-sm-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-sm-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-sm-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-sm-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-md-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-md-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-md-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-md-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-md-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-md-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-lg-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-lg-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-lg-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-lg-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-lg-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-lg-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-xl-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-xl-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-xl-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-xl-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-xl-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-xl-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;color:#212529;background-color:transparent}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{color:#212529;background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-primary tbody+tbody,.table-primary td,.table-primary th,.table-primary thead th{border-color:#7abaff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-secondary tbody+tbody,.table-secondary td,.table-secondary th,.table-secondary thead th{border-color:#b3b7bb}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-success tbody+tbody,.table-success td,.table-success th,.table-success thead th{border-color:#8fd19e}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-info tbody+tbody,.table-info td,.table-info th,.table-info thead th{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-warning tbody+tbody,.table-warning td,.table-warning th,.table-warning thead th{border-color:#ffdf7e}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-danger tbody+tbody,.table-danger td,.table-danger th,.table-danger thead th{border-color:#ed969e}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-light tbody+tbody,.table-light td,.table-light th,.table-light thead th{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#212529;border-color:#383f45}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#212529}.table-dark td,.table-dark th,.table-dark thead th{border-color:#383f45}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(2.25rem + 2px);padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 0 0 transparent;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:inset 0 0 0 transparent}.form-control::-webkit-input-placeholder{color:#939ba2;opacity:1}.form-control::-moz-placeholder{color:#939ba2;opacity:1}.form-control:-ms-input-placeholder{color:#939ba2;opacity:1}.form-control::-ms-input-placeholder{color:#939ba2;opacity:1}.form-control::placeholder{color:#939ba2;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}input[type=date].form-control,input[type=datetime-local].form-control,input[type=month].form-control,input[type=time].form-control{-webkit-appearance:none;-moz-appearance:none;appearance:none}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.8125rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.form-control-lg{height:calc(2.875rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.form-control[multiple],select.form-control[size]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,.9);border-radius:.25rem}.form-row>.col>.valid-tooltip,.form-row>[class*=col-]>.valid-tooltip{left:5px}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:#28a745;padding-right:2.25rem;background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 0 rgba(40,167,69,.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:2.25rem;background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-valid,.was-validated .custom-select:valid{border-color:#28a745;padding-right:calc(.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right .75rem center/8px 10px no-repeat,#fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem) no-repeat}.custom-select.is-valid:focus,.was-validated .custom-select:valid:focus{border-color:#28a745;box-shadow:0 0 0 0 rgba(40,167,69,.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{border-color:#28a745}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 0 rgba(40,167,69,.25)}.custom-control-input.is-valid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:valid:focus:not(:checked)~.custom-control-label::before{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{border-color:#28a745;box-shadow:0 0 0 0 rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.form-row>.col>.invalid-tooltip,.form-row>[class*=col-]>.invalid-tooltip{left:5px}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:#dc3545;padding-right:2.25rem;background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0 rgba(220,53,69,.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:2.25rem;background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-invalid,.was-validated .custom-select:invalid{border-color:#dc3545;padding-right:calc(.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right .75rem center/8px 10px no-repeat,#fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e") center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem) no-repeat}.custom-select.is-invalid:focus,.was-validated .custom-select:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0 rgba(220,53,69,.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{border-color:#dc3545}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 0 rgba(220,53,69,.25)}.custom-control-input.is-invalid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus:not(:checked)~.custom-control-label::before{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{border-color:#dc3545;box-shadow:0 0 0 0 rgba(220,53,69,.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:none}.btn.disabled,.btn:disabled{opacity:.65;box-shadow:none}.btn:not(:disabled):not(.disabled){cursor:pointer}.btn:not(:disabled):not(.disabled).active,.btn:not(:disabled):not(.disabled):active{box-shadow:none}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff;box-shadow:none}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#0069d9;border-color:#0062cc;box-shadow:0 0 0 0 rgba(38,143,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(38,143,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d;box-shadow:none}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{color:#fff;background-color:#5a6268;border-color:#545b62;box-shadow:0 0 0 0 rgba(130,138,145,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(130,138,145,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745;box-shadow:none}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#218838;border-color:#1e7e34;box-shadow:0 0 0 0 rgba(72,180,97,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(72,180,97,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8;box-shadow:none}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#138496;border-color:#117a8b;box-shadow:0 0 0 0 rgba(58,176,195,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(58,176,195,.5)}.btn-warning{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107;box-shadow:none}.btn-warning:hover{color:#1f2d3d;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{color:#1f2d3d;background-color:#e0a800;border-color:#d39e00;box-shadow:0 0 0 0 rgba(221,171,15,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#1f2d3d;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(221,171,15,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545;box-shadow:none}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c82333;border-color:#bd2130;box-shadow:0 0 0 0 rgba(225,83,97,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(225,83,97,.5)}.btn-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa;box-shadow:none}.btn-light:hover{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 0 rgba(215,218,222,.5)}.btn-light.disabled,.btn-light:disabled{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#1f2d3d;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(215,218,222,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40;box-shadow:none}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{color:#fff;background-color:#23272b;border-color:#1d2124;box-shadow:0 0 0 0 rgba(82,88,93,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(82,88,93,.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 0 rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 0 rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 0 rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 0 rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 0 rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 0 rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 0 rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 0 rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:none}.btn-link.focus,.btn-link:focus{text-decoration:none}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.175)}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:""}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn-group:not(:first-child),.btn-group>.btn:not(:first-child){margin-left:-1px}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group.show .dropdown-toggle{box-shadow:none}.btn-group.show .dropdown-toggle.btn-link{box-shadow:none}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control,.input-group>.form-control-plaintext{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;min-width:0;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control,.input-group>.form-control-plaintext+.custom-file,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.form-control{margin-left:-1px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:first-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group:not(.has-validation)>.custom-file:not(:last-child) .custom-file-label::after,.input-group:not(.has-validation)>.custom-select:not(:last-child),.input-group:not(.has-validation)>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group.has-validation>.custom-file:nth-last-child(n+3) .custom-file-label::after,.input-group.has-validation>.custom-select:nth-last-child(n+3),.input-group.has-validation>.form-control:nth-last-child(n+3){border-top-right-radius:0;border-bottom-right-radius:0}.input-group-append,.input-group-prepend{display:-ms-flexbox;display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn:focus,.input-group-prepend .btn:focus{z-index:3}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.custom-select,.input-group-lg>.form-control:not(textarea){height:calc(2.875rem + 2px)}.input-group-lg>.custom-select,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-sm>.custom-select,.input-group-sm>.form-control:not(textarea){height:calc(1.8125rem + 2px)}.input-group-sm>.custom-select,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group.has-validation>.input-group-append:nth-last-child(n+3)>.btn,.input-group.has-validation>.input-group-append:nth-last-child(n+3)>.input-group-text,.input-group:not(.has-validation)>.input-group-append:not(:last-child)>.btn,.input-group:not(.has-validation)>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;z-index:1;display:block;min-height:1.5rem;padding-left:1.5rem;-webkit-print-color-adjust:exact;color-adjust:exact}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff;box-shadow:none}.custom-control-input:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff;box-shadow:none}.custom-control-input:disabled~.custom-control-label,.custom-control-input[disabled]~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before,.custom-control-input[disabled]~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:"";background-color:#dee2e6;border:#adb5bd solid 1px;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-control-label::after{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:"";background:50%/50% 50% no-repeat}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{border-color:#007bff;background-color:#007bff;box-shadow:none}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:.5rem}.custom-switch .custom-control-label::after{top:calc(.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:.5rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked~.custom-control-label::after{background-color:#dee2e6;-webkit-transform:translateX(.75rem);transform:translateX(.75rem)}.custom-switch .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right .75rem center/8px 10px no-repeat;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 1px 2px rgba(0,0,0,.075);-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:inset 0 1px 2px rgba(0,0,0,.075)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size="1"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select-sm{height:calc(1.8125rem + 2px);padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:75%}.custom-select-lg{height:calc(2.875rem + 2px);padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:125%}.custom-file{position:relative;display:inline-block;width:100%;height:calc(2.25rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(2.25rem + 2px);margin:0;overflow:hidden;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:none}.custom-file-input:disabled~.custom-file-label,.custom-file-input[disabled]~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:"Browse"}.custom-file-input~.custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(2.25rem + 2px);padding:.375rem .75rem;overflow:hidden;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem;box-shadow:none}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:2.25rem;padding:.375rem .75rem;line-height:1.5;color:#495057;content:"Browse";background-color:#e9ecef;border-left:inherit;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;height:1rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:0}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0;margin-left:0;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);-ms-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-link{margin-bottom:-1px;border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item,.nav-fill>.nav-link{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item,.nav-justified>.nav-link{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:.5rem .5rem}.navbar .container,.navbar .container-fluid,.navbar .container-lg,.navbar .container-md,.navbar .container-sm,.navbar .container-xl{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:.5rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:"";background:50%/100% 100% no-repeat}.navbar-nav-scroll{max-height:75vh;overflow-y:auto}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-xl{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-nav-scroll{overflow:visible}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-xl{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-nav-scroll{overflow:visible}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-xl{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-nav-scroll{overflow:visible}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-xl{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-nav-scroll{overflow:visible}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container-xl{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-nav-scroll{overflow:visible}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba%280, 0, 0, 0.5%29' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:#fff}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.75);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba%28255, 255, 255, 0.75%29' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E")}.navbar-dark .navbar-text{color:rgba(255,255,255,.75)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:0 solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(.25rem - 0);border-top-right-radius:calc(.25rem - 0)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(.25rem - 0);border-bottom-left-radius:calc(.25rem - 0)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:0 solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 0) calc(.25rem - 0) 0 0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:0 solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 0) calc(.25rem - 0)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem;border-radius:calc(.25rem - 0)}.card-img,.card-img-bottom,.card-img-top{-ms-flex-negative:0;flex-shrink:0;width:100%}.card-img,.card-img-top{border-top-left-radius:calc(.25rem - 0);border-top-right-radius:calc(.25rem - 0)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(.25rem - 0);border-bottom-left-radius:calc(.25rem - 0)}.card-deck .card{margin-bottom:7.5px}@media (min-width:576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-7.5px;margin-left:-7.5px}.card-deck .card{-ms-flex:1 0 0%;flex:1 0 0%;margin-right:7.5px;margin-bottom:0;margin-left:7.5px}}.card-group>.card{margin-bottom:7.5px}@media (min-width:576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion{overflow-anchor:none}.accordion>.card{overflow:hidden}.accordion>.card:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.accordion>.card>.card-header{border-radius:0;margin-bottom:0}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{float:left;padding-right:.5rem;color:#6c757d;content:"/"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:3;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.badge{transition:none}}a.badge:focus,a.badge:hover{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:focus,a.badge-primary:hover{color:#fff;background-color:#0062cc}a.badge-primary.focus,a.badge-primary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:focus,a.badge-secondary:hover{color:#fff;background-color:#545b62}a.badge-secondary.focus,a.badge-secondary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:focus,a.badge-success:hover{color:#fff;background-color:#1e7e34}a.badge-success.focus,a.badge-success:focus{outline:0;box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:focus,a.badge-info:hover{color:#fff;background-color:#117a8b}a.badge-info.focus,a.badge-info:focus{outline:0;box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.badge-warning{color:#1f2d3d;background-color:#ffc107}a.badge-warning:focus,a.badge-warning:hover{color:#1f2d3d;background-color:#d39e00}a.badge-warning.focus,a.badge-warning:focus{outline:0;box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:focus,a.badge-danger:hover{color:#fff;background-color:#bd2130}a.badge-danger.focus,a.badge-danger:focus{outline:0;box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.badge-light{color:#1f2d3d;background-color:#f8f9fa}a.badge-light:focus,a.badge-light:hover{color:#1f2d3d;background-color:#dae0e5}a.badge-light.focus,a.badge-light:focus{outline:0;box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:focus,a.badge-dark:hover{color:#fff;background-color:#1d2124}a.badge-dark.focus,a.badge-dark:focus{outline:0;box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close,.alert-dismissible .mailbox-attachment-close{position:absolute;top:0;right:0;z-index:2;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;line-height:0;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem;box-shadow:inset 0 .1rem .1rem rgba(0,0,0,.1)}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:1s linear infinite progress-bar-stripes;animation:1s linear infinite progress-bar-stripes}@media (prefers-reduced-motion:reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:.25rem}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width:576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 1px}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close,.mailbox-attachment-close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover,.mailbox-attachment-close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover,.mailbox-attachment-close:not(:disabled):not(.disabled):focus,.mailbox-attachment-close:not(:disabled):not(.disabled):hover{opacity:.75}button.close,button.mailbox-attachment-close{padding:0;background-color:transparent;border:0}a.close.disabled,a.disabled.mailbox-attachment-close{pointer-events:none}.toast{-ms-flex-preferred-size:350px;flex-basis:350px;max-width:350px;font-size:.875rem;background-color:rgba(255,255,255,.85);background-clip:padding-box;border:1px solid rgba(0,0,0,.1);box-shadow:0 .25rem .75rem rgba(0,0,0,.1);opacity:0;border-radius:.25rem}.toast:not(:last-child){margin-bottom:.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.25rem .75rem;color:#6c757d;background-color:rgba(255,255,255,.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,.05);border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.toast-body{padding:.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translate(0,-50px);transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal.modal-static .modal-dialog{-webkit-transform:scale(1.02);transform:scale(1.02)}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-footer,.modal-dialog-scrollable .modal-header{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);height:-webkit-min-content;height:-moz-min-content;height:min-content;content:""}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.5);outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem;border-bottom:1px solid #e9ecef;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.modal-header .close,.modal-header .mailbox-attachment-close{padding:1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:.75rem;border-top:1px solid #e9ecef;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.modal-footer>*{margin:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem);height:-webkit-min-content;height:-moz-min-content;height:min-content}.modal-content{box-shadow:0 .5rem 1rem rgba(0,0,0,.5)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width:1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:"Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:"";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:"Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.2)}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:"";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top]>.arrow,.bs-popover-top>.arrow{bottom:calc(-.5rem - 1px)}.bs-popover-auto[x-placement^=top]>.arrow::before,.bs-popover-top>.arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top]>.arrow::after,.bs-popover-top>.arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right]>.arrow,.bs-popover-right>.arrow{left:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right]>.arrow::before,.bs-popover-right>.arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right]>.arrow::after,.bs-popover-right>.arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom]>.arrow,.bs-popover-bottom>.arrow{top:calc(-.5rem - 1px)}.bs-popover-auto[x-placement^=bottom]>.arrow::before,.bs-popover-bottom>.arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom]>.arrow::after,.bs-popover-bottom>.arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:"";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left]>.arrow,.bs-popover-left>.arrow{right:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left]>.arrow::before,.bs-popover-left>.arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left]>.arrow::after,.bs-popover-left>.arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;color:inherit;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:""}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:-webkit-transform .6s ease;transition:transform .6s ease;transition:transform .6s ease,-webkit-transform .6s ease}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-right,.carousel-item-next:not(.carousel-item-left){-webkit-transform:translateX(100%);transform:translateX(100%)}.active.carousel-item-left,.carousel-item-prev:not(.carousel-item-right){-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:50%/100% 100% no-repeat}.carousel-control-prev-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E")}.carousel-control-next-icon{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators li{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:.75s linear infinite spinner-border;animation:.75s linear infinite spinner-border}.spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1;-webkit-transform:none;transform:none}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1;-webkit-transform:none;transform:none}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:.75s linear infinite spinner-grow;animation:.75s linear infinite spinner-grow}.spinner-grow-sm{width:1rem;height:1rem}@media (prefers-reduced-motion:reduce){.spinner-border,.spinner-grow{-webkit-animation-duration:1.5s;animation-duration:1.5s}}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,button.bg-primary:focus,button.bg-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.bg-success{background-color:#28a745!important}a.bg-success:focus,a.bg-success:hover,button.bg-success:focus,button.bg-success:hover{background-color:#1e7e34!important}.bg-info{background-color:#17a2b8!important}a.bg-info:focus,a.bg-info:hover,button.bg-info:focus,button.bg-info:hover{background-color:#117a8b!important}.bg-warning{background-color:#ffc107!important}a.bg-warning:focus,a.bg-warning:hover,button.bg-warning:focus,button.bg-warning:hover{background-color:#d39e00!important}.bg-danger{background-color:#dc3545!important}a.bg-danger:focus,a.bg-danger:hover,button.bg-danger:focus,button.bg-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded-sm{border-radius:.2rem!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-lg{border-radius:.3rem!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:50rem!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:""}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:-ms-flexbox!important;display:flex!important}.d-print-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:""}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-sm-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-sm-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-sm-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-sm-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-sm-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-md-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-md-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-md-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-md-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-md-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-lg-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-lg-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-lg-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-lg-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-lg-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.user-select-all{-webkit-user-select:all!important;-moz-user-select:all!important;user-select:all!important}.user-select-auto{-webkit-user-select:auto!important;-moz-user-select:auto!important;-ms-user-select:auto!important;user-select:auto!important}.user-select-none{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.min-vw-100{min-width:100vw!important}.min-vh-100{min-height:100vh!important}.vw-100{width:100vw!important}.vh-100{height:100vh!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.mb-3,.my-3{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-n1{margin:-.25rem!important}.mt-n1,.my-n1{margin-top:-.25rem!important}.mr-n1,.mx-n1{margin-right:-.25rem!important}.mb-n1,.my-n1{margin-bottom:-.25rem!important}.ml-n1,.mx-n1{margin-left:-.25rem!important}.m-n2{margin:-.5rem!important}.mt-n2,.my-n2{margin-top:-.5rem!important}.mr-n2,.mx-n2{margin-right:-.5rem!important}.mb-n2,.my-n2{margin-bottom:-.5rem!important}.ml-n2,.mx-n2{margin-left:-.5rem!important}.m-n3{margin:-1rem!important}.mt-n3,.my-n3{margin-top:-1rem!important}.mr-n3,.mx-n3{margin-right:-1rem!important}.mb-n3,.my-n3{margin-bottom:-1rem!important}.ml-n3,.mx-n3{margin-left:-1rem!important}.m-n4{margin:-1.5rem!important}.mt-n4,.my-n4{margin-top:-1.5rem!important}.mr-n4,.mx-n4{margin-right:-1.5rem!important}.mb-n4,.my-n4{margin-bottom:-1.5rem!important}.ml-n4,.mx-n4{margin-left:-1.5rem!important}.m-n5{margin:-3rem!important}.mt-n5,.my-n5{margin-top:-3rem!important}.mr-n5,.mx-n5{margin-right:-3rem!important}.mb-n5,.my-n5{margin-bottom:-3rem!important}.ml-n5,.mx-n5{margin-left:-3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-n1{margin:-.25rem!important}.mt-sm-n1,.my-sm-n1{margin-top:-.25rem!important}.mr-sm-n1,.mx-sm-n1{margin-right:-.25rem!important}.mb-sm-n1,.my-sm-n1{margin-bottom:-.25rem!important}.ml-sm-n1,.mx-sm-n1{margin-left:-.25rem!important}.m-sm-n2{margin:-.5rem!important}.mt-sm-n2,.my-sm-n2{margin-top:-.5rem!important}.mr-sm-n2,.mx-sm-n2{margin-right:-.5rem!important}.mb-sm-n2,.my-sm-n2{margin-bottom:-.5rem!important}.ml-sm-n2,.mx-sm-n2{margin-left:-.5rem!important}.m-sm-n3{margin:-1rem!important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem!important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem!important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem!important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem!important}.m-sm-n4{margin:-1.5rem!important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem!important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem!important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem!important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem!important}.m-sm-n5{margin:-3rem!important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem!important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem!important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem!important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-n1{margin:-.25rem!important}.mt-md-n1,.my-md-n1{margin-top:-.25rem!important}.mr-md-n1,.mx-md-n1{margin-right:-.25rem!important}.mb-md-n1,.my-md-n1{margin-bottom:-.25rem!important}.ml-md-n1,.mx-md-n1{margin-left:-.25rem!important}.m-md-n2{margin:-.5rem!important}.mt-md-n2,.my-md-n2{margin-top:-.5rem!important}.mr-md-n2,.mx-md-n2{margin-right:-.5rem!important}.mb-md-n2,.my-md-n2{margin-bottom:-.5rem!important}.ml-md-n2,.mx-md-n2{margin-left:-.5rem!important}.m-md-n3{margin:-1rem!important}.mt-md-n3,.my-md-n3{margin-top:-1rem!important}.mr-md-n3,.mx-md-n3{margin-right:-1rem!important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem!important}.ml-md-n3,.mx-md-n3{margin-left:-1rem!important}.m-md-n4{margin:-1.5rem!important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem!important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem!important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem!important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem!important}.m-md-n5{margin:-3rem!important}.mt-md-n5,.my-md-n5{margin-top:-3rem!important}.mr-md-n5,.mx-md-n5{margin-right:-3rem!important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem!important}.ml-md-n5,.mx-md-n5{margin-left:-3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-n1{margin:-.25rem!important}.mt-lg-n1,.my-lg-n1{margin-top:-.25rem!important}.mr-lg-n1,.mx-lg-n1{margin-right:-.25rem!important}.mb-lg-n1,.my-lg-n1{margin-bottom:-.25rem!important}.ml-lg-n1,.mx-lg-n1{margin-left:-.25rem!important}.m-lg-n2{margin:-.5rem!important}.mt-lg-n2,.my-lg-n2{margin-top:-.5rem!important}.mr-lg-n2,.mx-lg-n2{margin-right:-.5rem!important}.mb-lg-n2,.my-lg-n2{margin-bottom:-.5rem!important}.ml-lg-n2,.mx-lg-n2{margin-left:-.5rem!important}.m-lg-n3{margin:-1rem!important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem!important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem!important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem!important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem!important}.m-lg-n4{margin:-1.5rem!important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem!important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem!important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem!important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem!important}.m-lg-n5{margin:-3rem!important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem!important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem!important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem!important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-n1{margin:-.25rem!important}.mt-xl-n1,.my-xl-n1{margin-top:-.25rem!important}.mr-xl-n1,.mx-xl-n1{margin-right:-.25rem!important}.mb-xl-n1,.my-xl-n1{margin-bottom:-.25rem!important}.ml-xl-n1,.mx-xl-n1{margin-left:-.25rem!important}.m-xl-n2{margin:-.5rem!important}.mt-xl-n2,.my-xl-n2{margin-top:-.5rem!important}.mr-xl-n2,.mx-xl-n2{margin-right:-.5rem!important}.mb-xl-n2,.my-xl-n2{margin-bottom:-.5rem!important}.ml-xl-n2,.mx-xl-n2{margin-left:-.5rem!important}.m-xl-n3{margin:-1rem!important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem!important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem!important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem!important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem!important}.m-xl-n4{margin:-1.5rem!important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem!important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem!important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem!important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem!important}.m-xl-n5{margin:-3rem!important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem!important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem!important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem!important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:"";background-color:rgba(0,0,0,0)}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace!important}.text-justify{text-align:justify!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-lighter{font-weight:lighter!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-weight-bolder{font-weight:bolder!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0056b3!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#494f54!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#19692c!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#0f6674!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#ba8b00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#a71d2a!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#cbd3da!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#121416!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none!important}.text-break{word-break:break-word!important;word-wrap:break-word!important}.text-reset{color:inherit!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:" (" attr(title) ")"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}.table-dark{color:inherit}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);transform:perspective(400px) rotate3d(1,0,0,90deg);transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);transform:perspective(400px) rotate3d(1,0,0,-20deg);transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg);transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px);transform:perspective(400px)}}@-webkit-keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@-webkit-keyframes fadeOut{from{opacity:1}to{opacity:0}}@keyframes fadeOut{from{opacity:1}to{opacity:0}}@-webkit-keyframes shake{0%{-webkit-transform:translate(2px,1px) rotate(0);transform:translate(2px,1px) rotate(0)}10%{-webkit-transform:translate(-1px,-2px) rotate(-2deg);transform:translate(-1px,-2px) rotate(-2deg)}20%{-webkit-transform:translate(-3px,0) rotate(3deg);transform:translate(-3px,0) rotate(3deg)}30%{-webkit-transform:translate(0,2px) rotate(0);transform:translate(0,2px) rotate(0)}40%{-webkit-transform:translate(1px,-1px) rotate(1deg);transform:translate(1px,-1px) rotate(1deg)}50%{-webkit-transform:translate(-1px,2px) rotate(-1deg);transform:translate(-1px,2px) rotate(-1deg)}60%{-webkit-transform:translate(-3px,1px) rotate(0);transform:translate(-3px,1px) rotate(0)}70%{-webkit-transform:translate(2px,1px) rotate(-2deg);transform:translate(2px,1px) rotate(-2deg)}80%{-webkit-transform:translate(-1px,-1px) rotate(4deg);transform:translate(-1px,-1px) rotate(4deg)}90%{-webkit-transform:translate(2px,2px) rotate(0);transform:translate(2px,2px) rotate(0)}100%{-webkit-transform:translate(1px,-2px) rotate(-1deg);transform:translate(1px,-2px) rotate(-1deg)}}@keyframes shake{0%{-webkit-transform:translate(2px,1px) rotate(0);transform:translate(2px,1px) rotate(0)}10%{-webkit-transform:translate(-1px,-2px) rotate(-2deg);transform:translate(-1px,-2px) rotate(-2deg)}20%{-webkit-transform:translate(-3px,0) rotate(3deg);transform:translate(-3px,0) rotate(3deg)}30%{-webkit-transform:translate(0,2px) rotate(0);transform:translate(0,2px) rotate(0)}40%{-webkit-transform:translate(1px,-1px) rotate(1deg);transform:translate(1px,-1px) rotate(1deg)}50%{-webkit-transform:translate(-1px,2px) rotate(-1deg);transform:translate(-1px,2px) rotate(-1deg)}60%{-webkit-transform:translate(-3px,1px) rotate(0);transform:translate(-3px,1px) rotate(0)}70%{-webkit-transform:translate(2px,1px) rotate(-2deg);transform:translate(2px,1px) rotate(-2deg)}80%{-webkit-transform:translate(-1px,-1px) rotate(4deg);transform:translate(-1px,-1px) rotate(4deg)}90%{-webkit-transform:translate(2px,2px) rotate(0);transform:translate(2px,2px) rotate(0)}100%{-webkit-transform:translate(1px,-2px) rotate(-1deg);transform:translate(1px,-2px) rotate(-1deg)}}@-webkit-keyframes wobble{0%{-webkit-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;transform:none}}@keyframes wobble{0%{-webkit-transform:none;transform:none}15%{-webkit-transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg);transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg);transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg);transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg);transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg);transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}100%{-webkit-transform:none;transform:none}}.dark-mode :root{--lightblue:#86bad8;--navy:#002c59;--olive:#74c8a3;--lime:#67ffa9;--fuchsia:#f672d8;--maroon:#ed6c9b;--blue:#3f6791;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#e74c3c;--orange:#fd7e14;--yellow:#f39c12;--green:#00bc8c;--teal:#20c997;--cyan:#3498db;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#3f6791;--secondary:#6c757d;--success:#00bc8c;--info:#3498db;--warning:#f39c12;--danger:#e74c3c;--light:#f8f9fa;--dark:#343a40}.animation__shake{-webkit-animation:shake 1.5s;animation:shake 1.5s}.animation__wobble{-webkit-animation:wobble 1.5s;animation:wobble 1.5s}.preloader{display:-ms-flexbox;display:flex;background-color:#f4f6f9;height:100vh;width:100%;transition:height .2s linear;position:fixed;left:0;top:0;z-index:9999}.dark-mode .preloader{background-color:#454d55!important;color:#fff}html.scroll-smooth{scroll-behavior:smooth}.wrapper,body,html{min-height:100%}.wrapper{position:relative}.wrapper .content-wrapper{min-height:calc(100vh - calc(3.5rem + 1px) - calc(3.5rem + 1px))}.layout-boxed .wrapper{box-shadow:0 0 10 rgba(0,0,0,.3)}.layout-boxed .wrapper,.layout-boxed .wrapper::before{margin:0 auto;max-width:1250px;overflow:hidden}.layout-boxed .wrapper .main-sidebar{left:inherit}@supports not (-webkit-touch-callout:none){.layout-fixed .wrapper .sidebar{height:calc(100vh - (3.5rem + 1px))}.layout-fixed.text-sm .wrapper .sidebar{height:calc(100vh - (2.93725rem + 1px))}}.layout-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed.sidebar-mini-md.sidebar-collapse .wrapper .brand-link,.layout-navbar-fixed.sidebar-mini-xs.sidebar-collapse .wrapper .brand-link,.layout-navbar-fixed.sidebar-mini.sidebar-collapse .wrapper .brand-link{height:calc(3.5rem + 1px);width:4.6rem}.layout-navbar-fixed.sidebar-mini-md.sidebar-collapse .wrapper .brand-link.text-sm,.layout-navbar-fixed.sidebar-mini-xs.sidebar-collapse .wrapper .brand-link.text-sm,.layout-navbar-fixed.sidebar-mini.sidebar-collapse .wrapper .brand-link.text-sm{height:calc(2.93725rem + 1px)}.layout-navbar-fixed.sidebar-mini-md.sidebar-collapse.text-sm .wrapper .brand-link,.layout-navbar-fixed.sidebar-mini-xs.sidebar-collapse.text-sm .wrapper .brand-link,.layout-navbar-fixed.sidebar-mini.sidebar-collapse.text-sm .wrapper .brand-link{height:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed .wrapper .control-sidebar{top:0}.layout-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-navbar-fixed .wrapper .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-navbar-fixed .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-lightblue .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-lightblue .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-navy .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-navy .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-olive .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-olive .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-lime .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-lime .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-fuchsia .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-fuchsia .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-maroon .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-maroon .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-blue .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-blue .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-indigo .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-indigo .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-purple .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-purple .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-pink .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-pink .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-red .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-red .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-orange .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-orange .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-yellow .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-yellow .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-green .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-green .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-teal .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-teal .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-cyan .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-cyan .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-white .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-white .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-gray .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-gray .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .sidebar-dark-gray-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .wrapper .sidebar-light-gray-dark .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .wrapper .main-header.border-bottom-0~.content-wrapper{margin-top:3.5rem}.layout-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1033}.layout-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-navbar-not-fixed .wrapper .brand-link{position:static}.layout-navbar-not-fixed .wrapper .content-wrapper,.layout-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-navbar-not-fixed .wrapper .main-header{position:static}.layout-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}.layout-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar,.text-sm .layout-navbar-fixed.layout-fixed .wrapper .main-header~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar,.text-sm .layout-navbar-fixed.layout-fixed .wrapper .brand-link~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed .wrapper .control-sidebar{top:0}.layout-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(3.5rem + 1px);transition:width .3s ease-in-out;width:4.6rem}.layout-navbar-fixed .wrapper.sidebar-collapse .brand-link.text-sm,.text-sm .layout-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(2.93725rem + 1px)}.layout-navbar-fixed .wrapper.sidebar-collapse .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper,.text-sm .layout-navbar-fixed .wrapper .main-header~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1037}.layout-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-navbar-not-fixed .wrapper .brand-link{position:static}.layout-navbar-not-fixed .wrapper .content-wrapper,.layout-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-navbar-not-fixed .wrapper .main-header{position:static}.layout-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}@media (min-width:576px){.layout-sm-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-sm-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar,.text-sm .layout-sm-navbar-fixed.layout-fixed .wrapper .main-header~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-sm-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar,.text-sm .layout-sm-navbar-fixed.layout-fixed .wrapper .brand-link~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed .wrapper .control-sidebar{top:0}.layout-sm-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-sm-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(3.5rem + 1px);transition:width .3s ease-in-out;width:4.6rem}.layout-sm-navbar-fixed .wrapper.sidebar-collapse .brand-link.text-sm,.text-sm .layout-sm-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed .wrapper.sidebar-collapse .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-sm-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-sm-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-sm-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper,.text-sm .layout-sm-navbar-fixed .wrapper .main-header~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-sm-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1037}.layout-sm-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-sm-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-sm-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-sm-navbar-not-fixed .wrapper .brand-link{position:static}.layout-sm-navbar-not-fixed .wrapper .content-wrapper,.layout-sm-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-sm-navbar-not-fixed .wrapper .main-header{position:static}.layout-sm-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}}@media (min-width:768px){.layout-md-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-md-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar,.text-sm .layout-md-navbar-fixed.layout-fixed .wrapper .main-header~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-md-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-md-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar,.text-sm .layout-md-navbar-fixed.layout-fixed .wrapper .brand-link~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-md-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-md-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-md-navbar-fixed .wrapper .control-sidebar{top:0}.layout-md-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-md-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(3.5rem + 1px);transition:width .3s ease-in-out;width:4.6rem}.layout-md-navbar-fixed .wrapper.sidebar-collapse .brand-link.text-sm,.text-sm .layout-md-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(2.93725rem + 1px)}.layout-md-navbar-fixed .wrapper.sidebar-collapse .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-md-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-md-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-md-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper,.text-sm .layout-md-navbar-fixed .wrapper .main-header~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-md-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1037}.layout-md-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-md-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-md-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-md-navbar-not-fixed .wrapper .brand-link{position:static}.layout-md-navbar-not-fixed .wrapper .content-wrapper,.layout-md-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-md-navbar-not-fixed .wrapper .main-header{position:static}.layout-md-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}}@media (min-width:992px){.layout-lg-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-lg-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar,.text-sm .layout-lg-navbar-fixed.layout-fixed .wrapper .main-header~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-lg-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar,.text-sm .layout-lg-navbar-fixed.layout-fixed .wrapper .brand-link~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed .wrapper .control-sidebar{top:0}.layout-lg-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-lg-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(3.5rem + 1px);transition:width .3s ease-in-out;width:4.6rem}.layout-lg-navbar-fixed .wrapper.sidebar-collapse .brand-link.text-sm,.text-sm .layout-lg-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed .wrapper.sidebar-collapse .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-lg-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-lg-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-lg-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper,.text-sm .layout-lg-navbar-fixed .wrapper .main-header~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-lg-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1037}.layout-lg-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-lg-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-lg-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-lg-navbar-not-fixed .wrapper .brand-link{position:static}.layout-lg-navbar-not-fixed .wrapper .content-wrapper,.layout-lg-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-lg-navbar-not-fixed .wrapper .main-header{position:static}.layout-lg-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}}@media (min-width:1200px){.layout-xl-navbar-fixed.layout-fixed .wrapper .control-sidebar{top:calc(3.5rem + 1px)}.layout-xl-navbar-fixed.layout-fixed .wrapper .main-header.text-sm~.control-sidebar,.text-sm .layout-xl-navbar-fixed.layout-fixed .wrapper .main-header~.control-sidebar{top:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed.layout-fixed .wrapper .sidebar{margin-top:calc(3.5rem + 1px)}.layout-xl-navbar-fixed.layout-fixed .wrapper .brand-link.text-sm~.sidebar,.text-sm .layout-xl-navbar-fixed.layout-fixed .wrapper .brand-link~.sidebar{margin-top:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed.layout-fixed.text-sm .wrapper .control-sidebar{top:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed.layout-fixed.text-sm .wrapper .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed .wrapper .control-sidebar{top:0}.layout-xl-navbar-fixed .wrapper a.anchor{display:block;position:relative;top:calc((3.5rem + 1px + (.5rem * 2))/ -1)}.layout-xl-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(3.5rem + 1px);transition:width .3s ease-in-out;width:4.6rem}.layout-xl-navbar-fixed .wrapper.sidebar-collapse .brand-link.text-sm,.text-sm .layout-xl-navbar-fixed .wrapper.sidebar-collapse .brand-link{height:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed .wrapper.sidebar-collapse .main-sidebar:hover .brand-link{transition:width .3s ease-in-out;width:250px}.layout-xl-navbar-fixed .wrapper .brand-link{overflow:hidden;position:fixed;top:0;transition:width .3s ease-in-out;width:250px;z-index:1035}.layout-xl-navbar-fixed .wrapper .content-wrapper{margin-top:calc(3.5rem + 1px)}.layout-xl-navbar-fixed .wrapper .main-header.text-sm~.content-wrapper,.text-sm .layout-xl-navbar-fixed .wrapper .main-header~.content-wrapper{margin-top:calc(2.93725rem + 1px)}.layout-xl-navbar-fixed .wrapper .main-header{left:0;position:fixed;right:0;top:0;z-index:1037}.layout-xl-navbar-fixed.text-sm .wrapper .content-wrapper{margin-top:calc(2.93725rem + 1px)}body:not(.layout-fixed).layout-xl-navbar-fixed.text-sm .wrapper .main-sidebar{margin-top:calc(calc(2.93725rem + 1px)/ -1)}body:not(.layout-fixed).layout-xl-navbar-fixed.text-sm .wrapper .main-sidebar .sidebar{margin-top:calc(2.93725rem + 1px)}.layout-xl-navbar-not-fixed .wrapper .brand-link{position:static}.layout-xl-navbar-not-fixed .wrapper .content-wrapper,.layout-xl-navbar-not-fixed .wrapper .sidebar{margin-top:0}.layout-xl-navbar-not-fixed .wrapper .main-header{position:static}.layout-xl-navbar-not-fixed.layout-fixed .wrapper .sidebar{margin-top:0}}.layout-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-footer-not-fixed .wrapper .main-footer{position:static}.layout-footer-not-fixed .wrapper .content-wrapper{margin-bottom:0}.layout-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-footer-fixed .wrapper .content-wrapper{padding-bottom:calc(3.5rem + 1px)}.layout-footer-not-fixed .wrapper .main-footer{position:static}@media (min-width:576px){.layout-sm-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-sm-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-sm-footer-fixed .wrapper .content-wrapper{padding-bottom:calc(3.5rem + 1px)}.layout-sm-footer-not-fixed .wrapper .main-footer{position:static}}@media (min-width:768px){.layout-md-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-md-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-md-footer-fixed .wrapper .content-wrapper{padding-bottom:calc(3.5rem + 1px)}.layout-md-footer-not-fixed .wrapper .main-footer{position:static}}@media (min-width:992px){.layout-lg-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-lg-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-lg-footer-fixed .wrapper .content-wrapper{padding-bottom:calc(3.5rem + 1px)}.layout-lg-footer-not-fixed .wrapper .main-footer{position:static}}@media (min-width:1200px){.layout-xl-footer-fixed .wrapper .control-sidebar{bottom:0}.layout-xl-footer-fixed .wrapper .main-footer{bottom:0;left:0;position:fixed;right:0;z-index:1032}.layout-xl-footer-fixed .wrapper .content-wrapper{padding-bottom:calc(3.5rem + 1px)}.layout-xl-footer-not-fixed .wrapper .main-footer{position:static}}.layout-top-nav .wrapper{margin-left:0}.layout-top-nav .wrapper .main-header .brand-image{margin-top:-.5rem;margin-right:.2rem;height:33px}.layout-top-nav .wrapper .main-sidebar{bottom:inherit;height:inherit}.layout-top-nav .wrapper .content-wrapper,.layout-top-nav .wrapper .main-footer,.layout-top-nav .wrapper .main-header{margin-left:0}body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .content-wrapper,body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .content-wrapper::before,body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .main-footer,body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .main-footer::before,body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .main-header,body.sidebar-collapse:not(.sidebar-mini-xs):not(.sidebar-mini-md):not(.sidebar-mini) .main-header::before{margin-left:0}@media (min-width:768px){body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .content-wrapper,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-footer,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-header{transition:margin-left .3s ease-in-out;margin-left:250px}}@media (min-width:768px) and (prefers-reduced-motion:reduce){body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .content-wrapper,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-footer,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-header{transition:none}}@media (min-width:768px){.sidebar-collapse body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .content-wrapper,.sidebar-collapse body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-footer,.sidebar-collapse body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-header{margin-left:0}}@media (max-width:991.98px){body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .content-wrapper,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-footer,body:not(.sidebar-mini-md):not(.sidebar-mini-xs):not(.layout-top-nav) .main-header{margin-left:0}}@media (min-width:768px){.sidebar-mini-md .content-wrapper,.sidebar-mini-md .main-footer,.sidebar-mini-md .main-header{transition:margin-left .3s ease-in-out;margin-left:250px}}@media (min-width:768px) and (prefers-reduced-motion:reduce){.sidebar-mini-md .content-wrapper,.sidebar-mini-md .main-footer,.sidebar-mini-md .main-header{transition:none}}@media (min-width:768px){.sidebar-collapse .sidebar-mini-md .content-wrapper,.sidebar-collapse .sidebar-mini-md .main-footer,.sidebar-collapse .sidebar-mini-md .main-header{margin-left:4.6rem}}@media (max-width:991.98px){.sidebar-mini-md .content-wrapper,.sidebar-mini-md .main-footer,.sidebar-mini-md .main-header{margin-left:4.6rem}}@media (max-width:767.98px){.sidebar-mini-md .content-wrapper,.sidebar-mini-md .main-footer,.sidebar-mini-md .main-header{margin-left:0}}@media (min-width:768px){.sidebar-mini-xs .content-wrapper,.sidebar-mini-xs .main-footer,.sidebar-mini-xs .main-header{transition:margin-left .3s ease-in-out;margin-left:250px}}@media (min-width:768px) and (prefers-reduced-motion:reduce){.sidebar-mini-xs .content-wrapper,.sidebar-mini-xs .main-footer,.sidebar-mini-xs .main-header{transition:none}}@media (min-width:768px){.sidebar-collapse .sidebar-mini-xs .content-wrapper,.sidebar-collapse .sidebar-mini-xs .main-footer,.sidebar-collapse .sidebar-mini-xs .main-header{margin-left:4.6rem}}@media (max-width:991.98px){.sidebar-mini-xs .content-wrapper,.sidebar-mini-xs .main-footer,.sidebar-mini-xs .main-header{margin-left:4.6rem}}.content-wrapper{background-color:#f4f6f9}.content-wrapper>.content{padding:0 .5rem}.main-sidebar,.main-sidebar::before{transition:margin-left .3s ease-in-out,width .3s ease-in-out;width:250px}@media (prefers-reduced-motion:reduce){.main-sidebar,.main-sidebar::before{transition:none}}.sidebar-collapse:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .main-sidebar,.sidebar-collapse:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .main-sidebar::before{box-shadow:none!important}.sidebar-collapse .main-sidebar,.sidebar-collapse .main-sidebar::before{margin-left:-250px}.sidebar-collapse .main-sidebar .nav-sidebar.nav-child-indent .nav-treeview{padding:0}@media (max-width:767.98px){.main-sidebar,.main-sidebar::before{box-shadow:none!important;margin-left:-250px}.sidebar-open .main-sidebar,.sidebar-open .main-sidebar::before{margin-left:0}}body:not(.layout-fixed) .main-sidebar{height:inherit;min-height:100%;position:absolute;top:0}body:not(.layout-fixed) .main-sidebar .sidebar{overflow-y:auto}.layout-fixed .brand-link{width:250px}.layout-fixed .main-sidebar{bottom:0;float:none;left:0;position:fixed;top:0}.layout-fixed .control-sidebar{bottom:0;float:none;position:fixed;top:0}.layout-fixed .control-sidebar .control-sidebar-content{height:calc(100vh - calc(3.5rem + 1px));overflow-y:auto;scrollbar-width:thin;scrollbar-color:#a9a9a9 transparent}.layout-fixed .control-sidebar .control-sidebar-content::-webkit-scrollbar{width:.5rem;height:.5rem}.layout-fixed .control-sidebar .control-sidebar-content::-webkit-scrollbar-thumb{background-color:#a9a9a9}.layout-fixed .control-sidebar .control-sidebar-content::-webkit-scrollbar-track{background-color:transparent}.layout-fixed .control-sidebar .control-sidebar-content::-webkit-scrollbar-corner{background-color:transparent}@supports (-webkit-touch-callout:none){.layout-fixed .main-sidebar{height:inherit}}.main-footer{background-color:#fff;border-top:1px solid #dee2e6;color:#869099;padding:1rem}.main-footer.text-sm,.text-sm .main-footer{padding:.812rem}.content-header{padding:15px .5rem}.text-sm .content-header{padding:10px .5rem}.content-header h1{font-size:1.8rem;margin:0}.text-sm .content-header h1{font-size:1.5rem}.content-header .breadcrumb{background-color:transparent;line-height:1.8rem;margin-bottom:0;padding:0}.text-sm .content-header .breadcrumb{line-height:1.5rem}.hold-transition .content-wrapper,.hold-transition .control-sidebar,.hold-transition .control-sidebar *,.hold-transition .main-footer,.hold-transition .main-header,.hold-transition .main-sidebar,.hold-transition .main-sidebar *{transition:none!important;-webkit-animation-duration:0s!important;animation-duration:0s!important}.dark-mode{background-color:#454d55!important;color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}@media (min-width:576px){.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-sm-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}}@media (min-width:768px){.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-md-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}}@media (min-width:992px){.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-lg-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}}@media (min-width:1200px){.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-primary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-primary .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-secondary .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-secondary .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-success .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-success .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-info .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-info .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-warning .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-warning .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-danger .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-danger .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-light .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-light .brand-link:not([class*=navbar]){background-color:#fff}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-dark-dark .brand-link:not([class*=navbar]){background-color:#343a40}.layout-xl-navbar-fixed .dark-mode .wrapper .sidebar-light-dark .brand-link:not([class*=navbar]){background-color:#fff}}.dark-mode .breadcrumb-item+.breadcrumb-item::before,.dark-mode .breadcrumb-item.active{color:#adb5bd}.dark-mode .main-footer{background-color:#343a40;border-color:#4b545c}.dark-mode .content-wrapper{background-color:#454d55;color:#fff}.dark-mode .content-wrapper .content-header{color:#fff}.main-header{border-bottom:1px solid #dee2e6;z-index:1034}.main-header .nav-link{height:2.5rem;position:relative}.main-header.text-sm .nav-link,.text-sm .main-header .nav-link{height:1.93725rem;padding:.35rem 1rem}.main-header.text-sm .nav-link>.fa,.main-header.text-sm .nav-link>.fab,.main-header.text-sm .nav-link>.fad,.main-header.text-sm .nav-link>.fal,.main-header.text-sm .nav-link>.far,.main-header.text-sm .nav-link>.fas,.main-header.text-sm .nav-link>.ion,.main-header.text-sm .nav-link>.svg-inline--fa,.text-sm .main-header .nav-link>.fa,.text-sm .main-header .nav-link>.fab,.text-sm .main-header .nav-link>.fad,.text-sm .main-header .nav-link>.fal,.text-sm .main-header .nav-link>.far,.text-sm .main-header .nav-link>.fas,.text-sm .main-header .nav-link>.ion,.text-sm .main-header .nav-link>.svg-inline--fa{font-size:.875rem}.main-header .navbar-nav .nav-item{margin:0}.main-header .navbar-nav[class*="-right"] .dropdown-menu{left:auto;margin-top:-3px;right:0}@media (max-width:575.98px){.main-header .navbar-nav[class*="-right"] .dropdown-menu{left:0;right:auto}}.main-header.dropdown-legacy .dropdown-menu{top:3rem;margin-top:0}.navbar-img{height:calc(3.5rem + 1px)/2;width:auto}.navbar-badge{font-size:.6rem;font-weight:300;padding:2px 4px;position:absolute;right:5px;top:9px}.btn-navbar{background-color:transparent;border-left-width:0}.form-control-navbar{border-right-width:0}.form-control-navbar+.input-group-append{margin-left:0}.btn-navbar,.form-control-navbar{transition:none}.navbar-dark .btn-navbar,.navbar-dark .form-control-navbar{background-color:#343a40;border-color:#6c757d}.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar:focus,.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#495057;border-color:#6c757d!important;color:#ced4da}.navbar-light .btn-navbar,.navbar-light .form-control-navbar{background-color:#dadfe4;border-color:#ced4da}.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar::placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar:focus,.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#d3d9df;border-color:#c7ced5!important;color:#ced4da}.navbar-light .navbar-search-block .form-control-navbar:focus,.navbar-light .navbar-search-block .form-control-navbar:focus+.input-group-append .btn-navbar{color:rgba(0,0,0,.6)}.navbar-search-block{position:absolute;padding:0 1rem;left:0;top:0;right:0;bottom:0;z-index:10;display:none;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;background-color:initial}.navbar-search-block.navbar-search-open{display:-ms-flexbox;display:flex}.navbar-search-block .input-group{width:100%}.brand-link{display:block;font-size:1.25rem;line-height:1.5;padding:.8125rem .5rem;transition:width .3s ease-in-out;white-space:nowrap}.brand-link:hover{color:#fff;text-decoration:none}.text-sm .brand-link{font-size:inherit}[class*=sidebar-dark] .brand-link{border-bottom:1px solid #4b545c}[class*=sidebar-dark] .brand-link,[class*=sidebar-dark] .brand-link .pushmenu{color:rgba(255,255,255,.8)}[class*=sidebar-dark] .brand-link .pushmenu:hover,[class*=sidebar-dark] .brand-link:hover{color:#fff}[class*=sidebar-light] .brand-link{border-bottom:1px solid #dee2e6}[class*=sidebar-light] .brand-link,[class*=sidebar-light] .brand-link .pushmenu{color:rgba(0,0,0,.8)}[class*=sidebar-light] .brand-link .pushmenu:hover,[class*=sidebar-light] .brand-link:hover{color:#000}.brand-link .pushmenu{margin-right:.5rem;font-size:1rem}.brand-link .brand-link{padding:0;border-bottom:none}.brand-link .brand-image{float:left;line-height:.8;margin-left:.8rem;margin-right:.5rem;margin-top:-3px;max-height:33px;width:auto}.brand-link .brand-image-xs{float:left;line-height:.8;margin-top:-.1rem;max-height:33px;width:auto}.brand-link .brand-image-xl{line-height:.8;max-height:40px;width:auto}.brand-link .brand-image-xl.single{margin-top:-.3rem}.brand-link.text-sm .brand-image,.text-sm .brand-link .brand-image{height:29px;margin-bottom:-.25rem;margin-left:.95rem;margin-top:-.25rem}.brand-link.text-sm .brand-image-xs,.text-sm .brand-link .brand-image-xs{margin-top:-.2rem;max-height:29px}.brand-link.text-sm .brand-image-xl,.text-sm .brand-link .brand-image-xl{margin-top:-.225rem;max-height:38px}.main-sidebar{height:100vh;overflow-y:hidden;z-index:1038}.main-sidebar a:-moz-focusring{border:0;outline:0}.sidebar{height:calc(100% - (3.5rem + 1px));overflow-x:hidden;overflow-y:initial;padding-bottom:0;padding-left:.5rem;padding-right:.5rem;padding-top:0;scrollbar-color:#a9a9a9 transparent;scrollbar-width:none}.sidebar::-webkit-scrollbar-thumb{background-color:#a9a9a9}.sidebar::-webkit-scrollbar-track{background-color:transparent}.sidebar::-webkit-scrollbar-corner{background-color:transparent}.sidebar::-webkit-scrollbar{width:0}.sidebar:hover{scrollbar-width:thin}.sidebar:hover::-webkit-scrollbar{width:.5rem;height:.5rem}.brand-link.border-bottom-0~.sidebar{height:calc(100% - 3.5rem)}.user-panel{position:relative}[class*=sidebar-dark] .user-panel{border-bottom:1px solid #4f5962}[class*=sidebar-light] .user-panel{border-bottom:1px solid #dee2e6}.user-panel,.user-panel .info{overflow:hidden;white-space:nowrap}.user-panel .image{display:inline-block;padding-left:.8rem}.user-panel img{height:auto;width:2.1rem}.user-panel .info{display:inline-block;padding:5px 5px 5px 10px}.user-panel .dropdown-menu,.user-panel .status{font-size:.875rem}.nav-sidebar .nav-item>.nav-link{margin-bottom:.2rem}.nav-sidebar .nav-item>.nav-link .right{transition:-webkit-transform ease-in-out .3s;transition:transform ease-in-out .3s;transition:transform ease-in-out .3s,-webkit-transform ease-in-out .3s}@media (prefers-reduced-motion:reduce){.nav-sidebar .nav-item>.nav-link .right{transition:none}}.nav-sidebar .nav-link>.right,.nav-sidebar .nav-link>p>.right{position:absolute;right:1rem;top:.7rem}.nav-sidebar .nav-link>.right i,.nav-sidebar .nav-link>.right span,.nav-sidebar .nav-link>p>.right i,.nav-sidebar .nav-link>p>.right span{margin-left:.5rem}.nav-sidebar .nav-link>.right:nth-child(2),.nav-sidebar .nav-link>p>.right:nth-child(2){right:2.2rem}.nav-sidebar .menu-open>.nav-treeview{display:block}.nav-sidebar .menu-is-opening>.nav-link i.right,.nav-sidebar .menu-is-opening>.nav-link svg.right,.nav-sidebar .menu-open>.nav-link i.right,.nav-sidebar .menu-open>.nav-link svg.right{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.nav-sidebar>.nav-item{margin-bottom:0}.nav-sidebar>.nav-item .nav-icon{margin-left:.05rem;font-size:1.2rem;margin-right:.2rem;text-align:center;width:1.6rem}.nav-sidebar>.nav-item .nav-icon.fa,.nav-sidebar>.nav-item .nav-icon.fab,.nav-sidebar>.nav-item .nav-icon.fad,.nav-sidebar>.nav-item .nav-icon.fal,.nav-sidebar>.nav-item .nav-icon.far,.nav-sidebar>.nav-item .nav-icon.fas,.nav-sidebar>.nav-item .nav-icon.ion,.nav-sidebar>.nav-item .nav-icon.svg-inline--fa{font-size:1.1rem}.nav-sidebar>.nav-item .float-right{margin-top:3px}.nav-sidebar .nav-treeview{display:none;list-style:none;padding:0}.nav-sidebar .nav-treeview>.nav-item>.nav-link>.nav-icon{width:1.6rem}.nav-sidebar.nav-child-indent .nav-treeview{transition:padding .3s ease-in-out;padding-left:1rem}.text-sm .nav-sidebar.nav-child-indent .nav-treeview{padding-left:.5rem}.nav-sidebar.nav-child-indent.nav-legacy .nav-treeview .nav-treeview{padding-left:2rem;margin-left:-1rem}.text-sm .nav-sidebar.nav-child-indent.nav-legacy .nav-treeview .nav-treeview{padding-left:1rem;margin-left:-.5rem}.nav-sidebar .nav-header{font-size:.9rem;padding:.5rem .75rem}.nav-sidebar .nav-link p{display:inline;margin:0;white-space:normal}.sidebar-is-opening .sidebar .nav-sidebar .nav-link p{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both}#sidebar-overlay{background-color:rgba(0,0,0,.1);bottom:0;display:none;left:0;position:fixed;right:0;top:0;z-index:1037}@media (max-width:991.98px){.sidebar-open #sidebar-overlay{display:block}}[class*=sidebar-light-]{background-color:#fff}[class*=sidebar-light-] .user-panel a:hover{color:#212529}[class*=sidebar-light-] .user-panel .status{background-color:rgba(0,0,0,.1);color:#343a40}[class*=sidebar-light-] .user-panel .status:active,[class*=sidebar-light-] .user-panel .status:focus,[class*=sidebar-light-] .user-panel .status:hover{background-color:rgba(0,0,0,.1);color:#212529}[class*=sidebar-light-] .user-panel .dropdown-menu{box-shadow:0 2px 4px rgba(0,0,0,.4);border-color:rgba(0,0,0,.1)}[class*=sidebar-light-] .user-panel .dropdown-item{color:#212529}[class*=sidebar-light-] .nav-sidebar>.nav-item>.nav-link:active,[class*=sidebar-light-] .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}[class*=sidebar-light-] .nav-sidebar>.nav-item.menu-open>.nav-link,[class*=sidebar-light-] .nav-sidebar>.nav-item:hover>.nav-link{background-color:rgba(0,0,0,.1);color:#212529}[class*=sidebar-light-] .nav-sidebar>.nav-item>.nav-link.active{color:#000;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}[class*=sidebar-light-] .nav-sidebar>.nav-item>.nav-treeview{background-color:transparent}[class*=sidebar-light-] .nav-header{background-color:inherit;color:#292d32}[class*=sidebar-light-] .sidebar a{color:#343a40}[class*=sidebar-light-] .sidebar a:hover{text-decoration:none}[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link{color:#777}[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link:focus,[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link:hover{background-color:rgba(0,0,0,.1);color:#000}[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link.active,[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link.active:hover{background-color:rgba(0,0,0,.1);color:#212529}[class*=sidebar-light-] .nav-treeview>.nav-item>.nav-link:hover{background-color:rgba(0,0,0,.1)}[class*=sidebar-light-] .nav-flat .nav-item .nav-treeview .nav-treeview{border-color:rgba(0,0,0,.1)}[class*=sidebar-light-] .nav-flat .nav-item .nav-treeview>.nav-item>.nav-link,[class*=sidebar-light-] .nav-flat .nav-item .nav-treeview>.nav-item>.nav-link.active{border-color:rgba(0,0,0,.1)}[class*=sidebar-dark-]{background-color:#343a40}[class*=sidebar-dark-] .user-panel a:hover{color:#fff}[class*=sidebar-dark-] .user-panel .status{background-color:rgba(255,255,255,.1);color:#c2c7d0}[class*=sidebar-dark-] .user-panel .status:active,[class*=sidebar-dark-] .user-panel .status:focus,[class*=sidebar-dark-] .user-panel .status:hover{background-color:rgba(247,247,247,.1);color:#fff}[class*=sidebar-dark-] .user-panel .dropdown-menu{box-shadow:0 2px 4px rgba(0,0,0,.4);border-color:rgba(242,242,242,.1)}[class*=sidebar-dark-] .user-panel .dropdown-item{color:#212529}[class*=sidebar-dark-] .nav-sidebar>.nav-item>.nav-link:active{color:#c2c7d0}[class*=sidebar-dark-] .nav-sidebar>.nav-item.menu-open>.nav-link,[class*=sidebar-dark-] .nav-sidebar>.nav-item:hover>.nav-link,[class*=sidebar-dark-] .nav-sidebar>.nav-item>.nav-link:focus{background-color:rgba(255,255,255,.1);color:#fff}[class*=sidebar-dark-] .nav-sidebar>.nav-item>.nav-link.active{color:#fff;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}[class*=sidebar-dark-] .nav-sidebar>.nav-item>.nav-treeview{background-color:transparent}[class*=sidebar-dark-] .nav-header{background-color:inherit;color:#d0d4db}[class*=sidebar-dark-] .sidebar a{color:#c2c7d0}[class*=sidebar-dark-] .sidebar a:focus,[class*=sidebar-dark-] .sidebar a:hover{text-decoration:none}[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link:focus,[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link:hover{background-color:rgba(255,255,255,.1);color:#fff}[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active,[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active:focus,[class*=sidebar-dark-] .nav-treeview>.nav-item>.nav-link.active:hover{background-color:rgba(255,255,255,.9);color:#343a40}[class*=sidebar-dark-] .nav-flat .nav-item .nav-treeview .nav-treeview{border-color:rgba(255,255,255,.9)}[class*=sidebar-dark-] .nav-flat .nav-item .nav-treeview>.nav-item>.nav-link,[class*=sidebar-dark-] .nav-flat .nav-item .nav-treeview>.nav-item>.nav-link.active{border-color:rgba(255,255,255,.9)}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active{background-color:#007bff;color:#fff}.sidebar-dark-primary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-primary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#007bff}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active{background-color:#6c757d;color:#fff}.sidebar-dark-secondary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6c757d}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active{background-color:#28a745;color:#fff}.sidebar-dark-success .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-success .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#28a745}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active{background-color:#17a2b8;color:#fff}.sidebar-dark-info .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-info .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#17a2b8}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{background-color:#ffc107;color:#1f2d3d}.sidebar-dark-warning .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-warning .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#ffc107}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active{background-color:#dc3545;color:#fff}.sidebar-dark-danger .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-danger .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#dc3545}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active{background-color:#f8f9fa;color:#1f2d3d}.sidebar-dark-light .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-light .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f8f9fa}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active{background-color:#343a40;color:#fff}.sidebar-dark-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#343a40}.sidebar-dark-lightblue .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-lightblue .nav-sidebar>.nav-item>.nav-link.active{background-color:#3c8dbc;color:#fff}.sidebar-dark-lightblue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-lightblue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3c8dbc}.sidebar-dark-navy .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-navy .nav-sidebar>.nav-item>.nav-link.active{background-color:#001f3f;color:#fff}.sidebar-dark-navy .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-navy .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#001f3f}.sidebar-dark-olive .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-olive .nav-sidebar>.nav-item>.nav-link.active{background-color:#3d9970;color:#fff}.sidebar-dark-olive .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-olive .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3d9970}.sidebar-dark-lime .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-lime .nav-sidebar>.nav-item>.nav-link.active{background-color:#01ff70;color:#1f2d3d}.sidebar-dark-lime .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-lime .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#01ff70}.sidebar-dark-fuchsia .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-fuchsia .nav-sidebar>.nav-item>.nav-link.active{background-color:#f012be;color:#fff}.sidebar-dark-fuchsia .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-fuchsia .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f012be}.sidebar-dark-maroon .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-maroon .nav-sidebar>.nav-item>.nav-link.active{background-color:#d81b60;color:#fff}.sidebar-dark-maroon .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-maroon .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#d81b60}.sidebar-dark-blue .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-blue .nav-sidebar>.nav-item>.nav-link.active{background-color:#007bff;color:#fff}.sidebar-dark-blue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-blue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#007bff}.sidebar-dark-indigo .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-indigo .nav-sidebar>.nav-item>.nav-link.active{background-color:#6610f2;color:#fff}.sidebar-dark-indigo .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-indigo .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6610f2}.sidebar-dark-purple .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-purple .nav-sidebar>.nav-item>.nav-link.active{background-color:#6f42c1;color:#fff}.sidebar-dark-purple .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-purple .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6f42c1}.sidebar-dark-pink .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-pink .nav-sidebar>.nav-item>.nav-link.active{background-color:#e83e8c;color:#fff}.sidebar-dark-pink .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-pink .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#e83e8c}.sidebar-dark-red .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-red .nav-sidebar>.nav-item>.nav-link.active{background-color:#dc3545;color:#fff}.sidebar-dark-red .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-red .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#dc3545}.sidebar-dark-orange .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-orange .nav-sidebar>.nav-item>.nav-link.active{background-color:#fd7e14;color:#1f2d3d}.sidebar-dark-orange .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-orange .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#fd7e14}.sidebar-dark-yellow .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-yellow .nav-sidebar>.nav-item>.nav-link.active{background-color:#ffc107;color:#1f2d3d}.sidebar-dark-yellow .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-yellow .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#ffc107}.sidebar-dark-green .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-green .nav-sidebar>.nav-item>.nav-link.active{background-color:#28a745;color:#fff}.sidebar-dark-green .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-green .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#28a745}.sidebar-dark-teal .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-teal .nav-sidebar>.nav-item>.nav-link.active{background-color:#20c997;color:#fff}.sidebar-dark-teal .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-teal .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#20c997}.sidebar-dark-cyan .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-cyan .nav-sidebar>.nav-item>.nav-link.active{background-color:#17a2b8;color:#fff}.sidebar-dark-cyan .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-cyan .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#17a2b8}.sidebar-dark-white .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-white .nav-sidebar>.nav-item>.nav-link.active{background-color:#fff;color:#1f2d3d}.sidebar-dark-white .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-white .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#fff}.sidebar-dark-gray .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-gray .nav-sidebar>.nav-item>.nav-link.active{background-color:#6c757d;color:#fff}.sidebar-dark-gray .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-gray .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6c757d}.sidebar-dark-gray-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-gray-dark .nav-sidebar>.nav-item>.nav-link.active{background-color:#343a40;color:#fff}.sidebar-dark-gray-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.sidebar-light-gray-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#343a40}.sidebar-mini .main-sidebar.sidebar-focused .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini .main-sidebar:not(.sidebar-no-expand) .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand) .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand) .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-compact.nav-sidebar.nav-child-indent:not(.nav-flat) .nav-treeview{padding-left:1rem;margin-left:-.5rem}.nav-flat{margin:-.25rem -.5rem 0}.nav-flat .nav-item>.nav-link{border-radius:0;margin-bottom:0}.nav-flat .nav-item>.nav-link>.nav-icon{margin-left:.55rem}.nav-flat:not(.nav-child-indent) .nav-treeview .nav-item>.nav-link>.nav-icon{margin-left:.4rem}.nav-flat.nav-child-indent .nav-treeview{padding-left:0}.nav-flat.nav-child-indent .nav-treeview .nav-icon{margin-left:.85rem}.nav-flat.nav-child-indent .nav-treeview .nav-treeview{border-left:.2rem solid}.nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-icon{margin-left:1.15rem}.nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:1.45rem}.nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:1.75rem}.nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:2.05rem}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-icon{margin-left:.55rem}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-link{padding-left:calc(1rem - .2rem)}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-treeview .nav-icon{margin-left:.35rem}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:.15rem}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:-.15rem}.sidebar-collapse .nav-flat.nav-child-indent .sidebar .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:-.35rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-compact.nav-sidebar .nav-treeview .nav-icon{margin-left:.4rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-icon{margin-left:.85rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-icon{margin-left:1.15rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:1.45rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:1.75rem}.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-md .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon,.sidebar-mini-xs .main-sidebar:not(.sidebar-no-expand):hover .nav-flat.nav-sidebar.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-icon{margin-left:2.05rem}.nav-flat .nav-icon{transition:margin-left ease-in-out .3s}@media (prefers-reduced-motion:reduce){.nav-flat .nav-icon{transition:none}}.nav-flat .nav-treeview .nav-icon{margin-left:-.2rem}.nav-flat.nav-sidebar>.nav-item .nav-treeview,.nav-flat.nav-sidebar>.nav-item>.nav-treeview{background-color:rgba(255,255,255,.05)}.nav-flat.nav-sidebar>.nav-item .nav-treeview .nav-item>.nav-link,.nav-flat.nav-sidebar>.nav-item>.nav-treeview .nav-item>.nav-link{border-left:.2rem solid}.nav-legacy{margin:-.25rem -.5rem 0}.nav-legacy.nav-sidebar .nav-item>.nav-link{border-radius:0;margin-bottom:0}.nav-legacy.nav-sidebar .nav-item>.nav-link>.nav-icon{margin-left:.55rem}.text-sm .nav-legacy.nav-sidebar .nav-item>.nav-link>.nav-icon{margin-left:.75rem}.nav-legacy.nav-sidebar>.nav-item>.nav-link.active{background-color:inherit;border-left:3px solid transparent;box-shadow:none}.nav-legacy.nav-sidebar>.nav-item>.nav-link.active>.nav-icon{margin-left:calc(.55rem - 3px)}.text-sm .nav-legacy.nav-sidebar>.nav-item>.nav-link.active>.nav-icon{margin-left:calc(.75rem - 3px)}.text-sm .nav-legacy.nav-sidebar.nav-flat .nav-treeview .nav-item>.nav-link>.nav-icon{margin-left:calc(.75rem - 3px)}.sidebar-mini .nav-legacy>.nav-item .nav-link .nav-icon,.sidebar-mini-md .nav-legacy>.nav-item .nav-link .nav-icon,.sidebar-mini-xs .nav-legacy>.nav-item .nav-link .nav-icon{transition:margin-left ease-in-out .3s;margin-left:.6rem}@media (prefers-reduced-motion:reduce){.sidebar-mini .nav-legacy>.nav-item .nav-link .nav-icon,.sidebar-mini-md .nav-legacy>.nav-item .nav-link .nav-icon,.sidebar-mini-xs .nav-legacy>.nav-item .nav-link .nav-icon{transition:none}}.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-md.sidebar-collapse.nav-child-indent .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-xs.sidebar-collapse.nav-child-indent .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini.sidebar-collapse.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-md.sidebar-collapse.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-xs.sidebar-collapse.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini.sidebar-collapse.nav-child-indent .nav-treeview{padding-left:1rem}.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-md.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-xs.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-md.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-xs.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini.sidebar-collapse.nav-child-indent .nav-treeview .nav-treeview{padding-left:2rem;margin-left:-1rem}.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-md.sidebar-collapse.text-sm.nav-child-indent .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-xs.sidebar-collapse.text-sm.nav-child-indent .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini.sidebar-collapse.text-sm.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-md.sidebar-collapse.text-sm.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-xs.sidebar-collapse.text-sm.nav-child-indent .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini.sidebar-collapse.text-sm.nav-child-indent .nav-treeview{padding-left:.5rem}.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-md.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini-xs.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar.sidebar-focused .nav-legacy .sidebar-mini.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-md.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini-xs.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview,.main-sidebar:hover .nav-legacy .sidebar-mini.sidebar-collapse.text-sm.nav-child-indent .nav-treeview .nav-treeview{padding-left:1rem;margin-left:-.5rem}.sidebar-mini-md.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon,.sidebar-mini-xs.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon,.sidebar-mini.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon{margin-left:.55rem}.sidebar-mini-md.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon,.sidebar-mini-xs.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon,.sidebar-mini.sidebar-collapse .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon{margin-left:.36rem}.sidebar-mini-md.sidebar-collapse .nav-legacy .sidebar.nav-child-indent .nav-treeview .nav-treeview,.sidebar-mini-xs.sidebar-collapse .nav-legacy .sidebar.nav-child-indent .nav-treeview .nav-treeview,.sidebar-mini.sidebar-collapse .nav-legacy .sidebar.nav-child-indent .nav-treeview .nav-treeview{padding-left:0;margin-left:0}.sidebar-mini-md.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon,.sidebar-mini-xs.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon,.sidebar-mini.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link .nav-icon{margin-left:.75rem}.sidebar-mini-md.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon,.sidebar-mini-xs.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon,.sidebar-mini.sidebar-collapse.text-sm .nav-legacy .sidebar>.nav-item>.nav-link.active>.nav-icon{margin-left:calc(.75rem - 3px)}[class*=sidebar-dark] .nav-legacy.nav-sidebar>.nav-item .nav-treeview,[class*=sidebar-dark] .nav-legacy.nav-sidebar>.nav-item>.nav-treeview{background-color:rgba(255,255,255,.05)}[class*=sidebar-dark] .nav-legacy.nav-sidebar>.nav-item>.nav-link.active{color:#fff}[class*=sidebar-dark] .nav-legacy .nav-treeview>.nav-item>.nav-link.active,[class*=sidebar-dark] .nav-legacy .nav-treeview>.nav-item>.nav-link:focus,[class*=sidebar-dark] .nav-legacy .nav-treeview>.nav-item>.nav-link:hover{background-color:transparent;color:#fff}[class*=sidebar-light] .nav-legacy.nav-sidebar>.nav-item .nav-treeview,[class*=sidebar-light] .nav-legacy.nav-sidebar>.nav-item>.nav-treeview{background-color:rgba(0,0,0,.05)}[class*=sidebar-light] .nav-legacy.nav-sidebar>.nav-item>.nav-link.active{color:#000}[class*=sidebar-light] .nav-legacy .nav-treeview>.nav-item>.nav-link.active,[class*=sidebar-light] .nav-legacy .nav-treeview>.nav-item>.nav-link:focus,[class*=sidebar-light] .nav-legacy .nav-treeview>.nav-item>.nav-link:hover{background-color:transparent;color:#000}.nav-collapse-hide-child .menu-open>.nav-treeview{max-height:-webkit-min-content;max-height:-moz-min-content;max-height:min-content;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.sidebar-collapse .sidebar .nav-collapse-hide-child .menu-open>.nav-treeview{max-height:0;-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.main-sidebar.sidebar-focused .nav-collapse-hide-child .sidebar-mini-md.sidebar-collapse .menu-open>.nav-treeview,.main-sidebar.sidebar-focused .nav-collapse-hide-child .sidebar-mini-xs.sidebar-collapse .menu-open>.nav-treeview,.main-sidebar.sidebar-focused .nav-collapse-hide-child .sidebar-mini.sidebar-collapse .menu-open>.nav-treeview,.main-sidebar:not(.sidebar-no-expand):hover .nav-collapse-hide-child .sidebar-mini-md.sidebar-collapse .menu-open>.nav-treeview,.main-sidebar:not(.sidebar-no-expand):hover .nav-collapse-hide-child .sidebar-mini-xs.sidebar-collapse .menu-open>.nav-treeview,.main-sidebar:not(.sidebar-no-expand):hover .nav-collapse-hide-child .sidebar-mini.sidebar-collapse .menu-open>.nav-treeview{max-height:-webkit-min-content;max-height:-moz-min-content;max-height:min-content;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.nav-compact .nav-header,.nav-compact .nav-link{padding-top:.25rem;padding-bottom:.25rem}.nav-compact .nav-header:not(:first-of-type){padding-top:.75rem;padding-bottom:.25rem}.nav-compact .nav-link>.right,.nav-compact .nav-link>p>.right{top:.465rem}.text-sm .nav-compact .nav-link>.right,.text-sm .nav-compact .nav-link>p>.right{top:.7rem}[class*=sidebar-dark] .btn-sidebar,[class*=sidebar-dark] .form-control-sidebar{background-color:#3f474e;border:1px solid #56606a;color:#fff}[class*=sidebar-dark] .btn-sidebar:focus,[class*=sidebar-dark] .form-control-sidebar:focus{border:1px solid #7a8793}[class*=sidebar-dark] .btn-sidebar:hover{background-color:#454d55}[class*=sidebar-dark] .btn-sidebar:focus{background-color:#4b545c}[class*=sidebar-dark] .list-group-item{background-color:#454d55;border-color:#56606a;color:#c2c7d0}[class*=sidebar-dark] .list-group-item:hover{background-color:#4b545c}[class*=sidebar-dark] .list-group-item:focus{background-color:#515a63}[class*=sidebar-dark] .list-group-item .search-path{color:#adb5bd}[class*=sidebar-light] .btn-sidebar,[class*=sidebar-light] .form-control-sidebar{background-color:#f2f2f2;border:1px solid #d9d9d9;color:#1f2d3d}[class*=sidebar-light] .btn-sidebar:focus,[class*=sidebar-light] .form-control-sidebar:focus{border:1px solid #b3b3b3}[class*=sidebar-light] .btn-sidebar:hover{background-color:#ececec}[class*=sidebar-light] .btn-sidebar:focus{background-color:#e6e6e6}[class*=sidebar-light] .list-group-item{border-color:#d9d9d9}[class*=sidebar-light] .list-group-item:hover{background-color:#ececec}[class*=sidebar-light] .list-group-item:focus{background-color:#e6e6e6}[class*=sidebar-light] .list-group-item .search-path{color:#6c757d}.sidebar .form-inline .input-group{width:100%;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.sidebar nav .form-inline{margin-bottom:.2rem}.layout-boxed:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs).sidebar-collapse .main-sidebar{margin-left:0}.layout-boxed:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .content-wrapper,.layout-boxed:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .main-footer,.layout-boxed:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .main-header{z-index:9999;position:relative}.layout-boxed:not(.sidebar-mini):not(.sidebar-mini-md):not(.sidebar-mini-xs) .control-sidebar{z-index:9999}.sidebar-collapse .form-control-sidebar,.sidebar-collapse .form-control-sidebar~.input-group-append,.sidebar-collapse .sidebar-search-results{display:none}[data-widget=sidebar-search] input[type=search]::-ms-clear,[data-widget=sidebar-search] input[type=search]::-ms-reveal{display:none;width:0;height:0}[data-widget=sidebar-search] input[type=search]::-webkit-search-cancel-button,[data-widget=sidebar-search] input[type=search]::-webkit-search-decoration,[data-widget=sidebar-search] input[type=search]::-webkit-search-results-button,[data-widget=sidebar-search] input[type=search]::-webkit-search-results-decoration{display:none}.sidebar-search-results{position:relative;display:none;width:100%}.sidebar-search-open .sidebar-search-results{display:inline-block}.sidebar-search-results .search-title{margin-bottom:-.1rem}.sidebar-search-results .list-group{position:absolute;width:100%;z-index:1039}.sidebar-search-results .list-group>.list-group-item{padding:.375rem .75rem}.sidebar-search-results .list-group>.list-group-item:-moz-focusring{margin-top:0;border-left:1px solid transparent;border-top:0;border-bottom:1px solid transparent}.sidebar-search-results .list-group>.list-group-item:first-child{margin-top:0;border-top:0;border-top-left-radius:0;border-top-right-radius:0}.sidebar-search-results .search-path{font-size:80%}.sidebar-search-open .btn,.sidebar-search-open .form-control{border-bottom-right-radius:0;border-bottom-left-radius:0}[class*=sidebar-dark] .sidebar-custom{border-top:1px solid #4f5962}[class*=sidebar-light] .sidebar-custom{border-top:1px solid #dee2e6}.layout-fixed.sidebar-collapse .hide-on-collapse{display:none}.layout-fixed.sidebar-collapse:hover .hide-on-collapse{display:block}.layout-fixed.text-sm .main-sidebar-custom .sidebar{height:calc(100% - ((2.93725rem + 3.8rem) + 1px))}.layout-fixed.text-sm .main-sidebar-custom .sidebar-custom{height:3.8rem;padding:.85rem .5rem}.layout-fixed .main-sidebar-custom{height:-webkit-fill-available;height:-moz-available;height:stretch}.layout-fixed .main-sidebar-custom .sidebar{height:calc(100% - ((3.5rem + 4rem) + 1px))}.layout-fixed .main-sidebar-custom .sidebar-custom{height:4rem;padding:.85rem .5rem}.layout-fixed .main-sidebar-custom-lg .sidebar{height:calc(100% - ((3.5rem + 6rem) + 1px))}.layout-fixed .main-sidebar-custom-lg .sidebar-custom{height:6rem}.layout-fixed .main-sidebar-custom-xl .sidebar{height:calc(100% - ((3.5rem + 8rem) + 1px))}.layout-fixed .main-sidebar-custom-xl .sidebar-custom{height:8rem}.layout-fixed .main-sidebar-custom .pos-right,.layout-fixed .main-sidebar-custom-lg .pos-right,.layout-fixed .main-sidebar-custom-xl .pos-right{position:absolute;right:.5rem}.dark-mode .sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active{background-color:#3f6791;color:#fff}.dark-mode .sidebar-dark-primary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-primary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3f6791}.dark-mode .sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active{background-color:#6c757d;color:#fff}.dark-mode .sidebar-dark-secondary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-secondary .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6c757d}.dark-mode .sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active{background-color:#00bc8c;color:#fff}.dark-mode .sidebar-dark-success .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-success .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#00bc8c}.dark-mode .sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active{background-color:#3498db;color:#fff}.dark-mode .sidebar-dark-info .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-info .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3498db}.dark-mode .sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{background-color:#f39c12;color:#1f2d3d}.dark-mode .sidebar-dark-warning .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-warning .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f39c12}.dark-mode .sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active{background-color:#e74c3c;color:#fff}.dark-mode .sidebar-dark-danger .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-danger .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#e74c3c}.dark-mode .sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active{background-color:#f8f9fa;color:#1f2d3d}.dark-mode .sidebar-dark-light .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-light .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f8f9fa}.dark-mode .sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active{background-color:#343a40;color:#fff}.dark-mode .sidebar-dark-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#343a40}.dark-mode .sidebar-dark-lightblue .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-lightblue .nav-sidebar>.nav-item>.nav-link.active{background-color:#86bad8;color:#1f2d3d}.dark-mode .sidebar-dark-lightblue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-lightblue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#86bad8}.dark-mode .sidebar-dark-navy .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-navy .nav-sidebar>.nav-item>.nav-link.active{background-color:#002c59;color:#fff}.dark-mode .sidebar-dark-navy .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-navy .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#002c59}.dark-mode .sidebar-dark-olive .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-olive .nav-sidebar>.nav-item>.nav-link.active{background-color:#74c8a3;color:#1f2d3d}.dark-mode .sidebar-dark-olive .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-olive .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#74c8a3}.dark-mode .sidebar-dark-lime .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-lime .nav-sidebar>.nav-item>.nav-link.active{background-color:#67ffa9;color:#1f2d3d}.dark-mode .sidebar-dark-lime .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-lime .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#67ffa9}.dark-mode .sidebar-dark-fuchsia .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-fuchsia .nav-sidebar>.nav-item>.nav-link.active{background-color:#f672d8;color:#1f2d3d}.dark-mode .sidebar-dark-fuchsia .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-fuchsia .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f672d8}.dark-mode .sidebar-dark-maroon .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-maroon .nav-sidebar>.nav-item>.nav-link.active{background-color:#ed6c9b;color:#1f2d3d}.dark-mode .sidebar-dark-maroon .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-maroon .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#ed6c9b}.dark-mode .sidebar-dark-blue .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-blue .nav-sidebar>.nav-item>.nav-link.active{background-color:#3f6791;color:#fff}.dark-mode .sidebar-dark-blue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-blue .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3f6791}.dark-mode .sidebar-dark-indigo .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-indigo .nav-sidebar>.nav-item>.nav-link.active{background-color:#6610f2;color:#fff}.dark-mode .sidebar-dark-indigo .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-indigo .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6610f2}.dark-mode .sidebar-dark-purple .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-purple .nav-sidebar>.nav-item>.nav-link.active{background-color:#6f42c1;color:#fff}.dark-mode .sidebar-dark-purple .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-purple .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6f42c1}.dark-mode .sidebar-dark-pink .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-pink .nav-sidebar>.nav-item>.nav-link.active{background-color:#e83e8c;color:#fff}.dark-mode .sidebar-dark-pink .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-pink .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#e83e8c}.dark-mode .sidebar-dark-red .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-red .nav-sidebar>.nav-item>.nav-link.active{background-color:#e74c3c;color:#fff}.dark-mode .sidebar-dark-red .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-red .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#e74c3c}.dark-mode .sidebar-dark-orange .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-orange .nav-sidebar>.nav-item>.nav-link.active{background-color:#fd7e14;color:#1f2d3d}.dark-mode .sidebar-dark-orange .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-orange .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#fd7e14}.dark-mode .sidebar-dark-yellow .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-yellow .nav-sidebar>.nav-item>.nav-link.active{background-color:#f39c12;color:#1f2d3d}.dark-mode .sidebar-dark-yellow .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-yellow .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#f39c12}.dark-mode .sidebar-dark-green .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-green .nav-sidebar>.nav-item>.nav-link.active{background-color:#00bc8c;color:#fff}.dark-mode .sidebar-dark-green .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-green .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#00bc8c}.dark-mode .sidebar-dark-teal .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-teal .nav-sidebar>.nav-item>.nav-link.active{background-color:#20c997;color:#fff}.dark-mode .sidebar-dark-teal .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-teal .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#20c997}.dark-mode .sidebar-dark-cyan .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-cyan .nav-sidebar>.nav-item>.nav-link.active{background-color:#3498db;color:#fff}.dark-mode .sidebar-dark-cyan .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-cyan .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#3498db}.dark-mode .sidebar-dark-white .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-white .nav-sidebar>.nav-item>.nav-link.active{background-color:#fff;color:#1f2d3d}.dark-mode .sidebar-dark-white .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-white .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#fff}.dark-mode .sidebar-dark-gray .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-gray .nav-sidebar>.nav-item>.nav-link.active{background-color:#6c757d;color:#fff}.dark-mode .sidebar-dark-gray .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-gray .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#6c757d}.dark-mode .sidebar-dark-gray-dark .nav-sidebar>.nav-item>.nav-link.active,.dark-mode .sidebar-light-gray-dark .nav-sidebar>.nav-item>.nav-link.active{background-color:#343a40;color:#fff}.dark-mode .sidebar-dark-gray-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active,.dark-mode .sidebar-light-gray-dark .nav-sidebar.nav-legacy>.nav-item>.nav-link.active{border-color:#343a40}.dark-mode [class*=sidebar-light-] .sidebar a{color:#343a40}.dark-mode [class*=sidebar-light-] .sidebar a:hover{text-decoration:none}.logo-xl,.logo-xs{opacity:1;position:absolute;visibility:visible}.logo-xl.brand-image-xs,.logo-xs.brand-image-xs{left:18px;top:12px}.logo-xl.brand-image-xl,.logo-xs.brand-image-xl{left:12px;top:6px}.logo-xs{opacity:0;visibility:hidden}.logo-xs.brand-image-xl{left:16px;top:8px}.brand-link.logo-switch::before{content:"\00a0"}@media (min-width:992px){.sidebar-mini .nav-sidebar,.sidebar-mini .nav-sidebar .nav-link,.sidebar-mini .nav-sidebar>.nav-header{white-space:nowrap}.sidebar-mini.sidebar-collapse .d-hidden-mini{display:none}.sidebar-mini.sidebar-collapse .content-wrapper,.sidebar-mini.sidebar-collapse .main-footer,.sidebar-mini.sidebar-collapse .main-header{margin-left:4.6rem!important}.sidebar-mini.sidebar-collapse .nav-sidebar .nav-header{display:none}.sidebar-mini.sidebar-collapse .sidebar .nav-sidebar .nav-link p{width:0;white-space:nowrap}.sidebar-mini.sidebar-collapse .brand-text,.sidebar-mini.sidebar-collapse .sidebar .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .sidebar .user-panel>.info{margin-left:-10px;-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini.sidebar-collapse .logo-xl{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini.sidebar-collapse .logo-xs{display:inline-block;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini.sidebar-collapse .main-sidebar{overflow-x:hidden}.sidebar-mini.sidebar-collapse .main-sidebar,.sidebar-mini.sidebar-collapse .main-sidebar::before{margin-left:0;width:4.6rem}.sidebar-mini.sidebar-collapse .main-sidebar .user-panel .image{float:none}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused,.sidebar-mini.sidebar-collapse .main-sidebar:hover{width:250px}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .brand-link,.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-link{width:250px}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .user-panel,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel{text-align:left}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .user-panel .image,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel .image{float:left}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .brand-text,.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .logo-xl,.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-text,.sidebar-mini.sidebar-collapse .main-sidebar:hover .logo-xl,.sidebar-mini.sidebar-collapse .main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:inline-block;margin-left:0;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .logo-xs,.sidebar-mini.sidebar-collapse .main-sidebar:hover .logo-xs{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .brand-image,.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-image{margin-right:.5rem}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .sidebar-form,.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini.sidebar-collapse .main-sidebar:hover .sidebar-form,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:block!important;-webkit-transform:translateZ(0);transform:translateZ(0)}.sidebar-mini.sidebar-collapse .main-sidebar.sidebar-focused .nav-sidebar>.nav-item>.nav-link>span,.sidebar-mini.sidebar-collapse .main-sidebar:hover .nav-sidebar>.nav-item>.nav-link>span{display:inline-block!important}.sidebar-mini.sidebar-collapse .visible-sidebar-mini{display:block!important}.sidebar-mini.sidebar-collapse.layout-fixed .main-sidebar:hover .brand-link{width:250px}.sidebar-mini.sidebar-collapse.layout-fixed .brand-link{width:4.6rem}}@media (max-width:991.98px){.sidebar-mini.sidebar-collapse .main-sidebar{box-shadow:none!important}}@media (min-width:768px){.sidebar-mini-md .nav-sidebar,.sidebar-mini-md .nav-sidebar .nav-link,.sidebar-mini-md .nav-sidebar>.nav-header{white-space:nowrap}.sidebar-mini-md.sidebar-collapse .d-hidden-mini{display:none}.sidebar-mini-md.sidebar-collapse .content-wrapper,.sidebar-mini-md.sidebar-collapse .main-footer,.sidebar-mini-md.sidebar-collapse .main-header{margin-left:4.6rem!important}.sidebar-mini-md.sidebar-collapse .nav-sidebar .nav-header{display:none}.sidebar-mini-md.sidebar-collapse .sidebar .nav-sidebar .nav-link p{width:0;white-space:nowrap}.sidebar-mini-md.sidebar-collapse .brand-text,.sidebar-mini-md.sidebar-collapse .sidebar .nav-sidebar .nav-link p,.sidebar-mini-md.sidebar-collapse .sidebar .user-panel>.info{margin-left:-10px;-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-md.sidebar-collapse .logo-xl{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-md.sidebar-collapse .logo-xs{display:inline-block;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini-md.sidebar-collapse .main-sidebar{overflow-x:hidden}.sidebar-mini-md.sidebar-collapse .main-sidebar,.sidebar-mini-md.sidebar-collapse .main-sidebar::before{margin-left:0;width:4.6rem}.sidebar-mini-md.sidebar-collapse .main-sidebar .user-panel .image{float:none}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover{width:250px}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .brand-link,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .brand-link{width:250px}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .user-panel,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .user-panel{text-align:left}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .user-panel .image,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .user-panel .image{float:left}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .brand-text,.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .logo-xl,.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .brand-text,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .logo-xl,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:inline-block;margin-left:0;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .logo-xs,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .logo-xs{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .brand-image,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .brand-image{margin-right:.5rem}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .sidebar-form,.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .sidebar-form,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:block!important;-webkit-transform:translateZ(0);transform:translateZ(0)}.sidebar-mini-md.sidebar-collapse .main-sidebar.sidebar-focused .nav-sidebar>.nav-item>.nav-link>span,.sidebar-mini-md.sidebar-collapse .main-sidebar:hover .nav-sidebar>.nav-item>.nav-link>span{display:inline-block!important}.sidebar-mini-md.sidebar-collapse .visible-sidebar-mini{display:block!important}.sidebar-mini-md.sidebar-collapse.layout-fixed .main-sidebar:hover .brand-link{width:250px}.sidebar-mini-md.sidebar-collapse.layout-fixed .brand-link{width:4.6rem}}@media (max-width:767.98px){.sidebar-mini-md.sidebar-collapse .main-sidebar{box-shadow:none!important}}.sidebar-mini-xs .nav-sidebar,.sidebar-mini-xs .nav-sidebar .nav-link,.sidebar-mini-xs .nav-sidebar>.nav-header{white-space:nowrap}.sidebar-mini-xs.sidebar-collapse .d-hidden-mini{display:none}.sidebar-mini-xs.sidebar-collapse .content-wrapper,.sidebar-mini-xs.sidebar-collapse .main-footer,.sidebar-mini-xs.sidebar-collapse .main-header{margin-left:4.6rem!important}.sidebar-mini-xs.sidebar-collapse .nav-sidebar .nav-header{display:none}.sidebar-mini-xs.sidebar-collapse .sidebar .nav-sidebar .nav-link p{width:0;white-space:nowrap}.sidebar-mini-xs.sidebar-collapse .brand-text,.sidebar-mini-xs.sidebar-collapse .sidebar .nav-sidebar .nav-link p,.sidebar-mini-xs.sidebar-collapse .sidebar .user-panel>.info{margin-left:-10px;-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-xs.sidebar-collapse .logo-xl{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-xs.sidebar-collapse .logo-xs{display:inline-block;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini-xs.sidebar-collapse .main-sidebar{overflow-x:hidden}.sidebar-mini-xs.sidebar-collapse .main-sidebar,.sidebar-mini-xs.sidebar-collapse .main-sidebar::before{margin-left:0;width:4.6rem}.sidebar-mini-xs.sidebar-collapse .main-sidebar .user-panel .image{float:none}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover{width:250px}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .brand-link,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .brand-link{width:250px}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .user-panel,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .user-panel{text-align:left}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .user-panel .image,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .user-panel .image{float:left}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .brand-text,.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .logo-xl,.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .brand-text,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .logo-xl,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:inline-block;margin-left:0;-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .logo-xs,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .logo-xs{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .brand-image,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .brand-image{margin-right:.5rem}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .sidebar-form,.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .user-panel>.info,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .sidebar-form,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:block!important;-webkit-transform:translateZ(0);transform:translateZ(0)}.sidebar-mini-xs.sidebar-collapse .main-sidebar.sidebar-focused .nav-sidebar>.nav-item>.nav-link>span,.sidebar-mini-xs.sidebar-collapse .main-sidebar:hover .nav-sidebar>.nav-item>.nav-link>span{display:inline-block!important}.sidebar-mini-xs.sidebar-collapse .visible-sidebar-mini{display:block!important}.sidebar-mini-xs.sidebar-collapse.layout-fixed .main-sidebar:hover .brand-link{width:250px}.sidebar-mini-xs.sidebar-collapse.layout-fixed .brand-link{width:4.6rem}.sidebar-mini .main-sidebar .nav-child-indent .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 1rem)}.sidebar-mini .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 2rem)}.sidebar-mini .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 3rem)}.sidebar-mini .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 4rem)}.sidebar-mini .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 5rem)}.sidebar-mini .main-sidebar .nav-legacy .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy .nav-link{width:250px}.sidebar-mini .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-link{width:calc(250px - 1rem)}.sidebar-mini .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 1rem)}.sidebar-mini .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 2rem)}.sidebar-mini .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 3rem)}.sidebar-mini .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 4rem)}.sidebar-mini .main-sidebar .nav-flat .nav-link,.sidebar-mini-md .main-sidebar .nav-flat .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat .nav-link{width:250px}.sidebar-mini .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-link{width:calc(250px)}.sidebar-mini .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem)}.sidebar-mini .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 2)}.sidebar-mini .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 3)}.sidebar-mini .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 4)}.sidebar-mini .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - .5rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 1rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 1.5rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 2rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2 - 2.5rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-link{width:250px}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link{width:calc(250px - .5rem)}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2)}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 3)}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 4)}.sidebar-mini .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-md .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-mini-xs .main-sidebar .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 5)}.sidebar-mini .main-sidebar .nav-link,.sidebar-mini-md .main-sidebar .nav-link,.sidebar-mini-xs .main-sidebar .nav-link{width:calc(250px - .5rem * 2);transition:width ease-in-out .3s}@media (prefers-reduced-motion:reduce){.sidebar-mini .main-sidebar .nav-link,.sidebar-mini-md .main-sidebar .nav-link,.sidebar-mini-xs .main-sidebar .nav-link{transition:none}}.sidebar-collapse.sidebar-mini .main-sidebar .sidebar-search-results,.sidebar-collapse.sidebar-mini-md .main-sidebar .sidebar-search-results,.sidebar-collapse.sidebar-mini-xs .main-sidebar .sidebar-search-results{display:none}.sidebar-collapse.sidebar-mini .main-sidebar .nav-sidebar .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar .nav-sidebar .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar .nav-sidebar .nav-link{width:3.6rem}.sidebar-collapse.sidebar-mini .main-sidebar .nav-sidebar.nav-flat .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar .nav-sidebar.nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar .nav-sidebar.nav-flat .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar .nav-sidebar.nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar .nav-sidebar.nav-flat .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar .nav-sidebar.nav-legacy .nav-link{width:4.6rem}.sidebar-collapse.sidebar-mini .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-treeview,.sidebar-collapse.sidebar-mini-md .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-treeview,.sidebar-collapse.sidebar-mini-xs .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-treeview{padding-left:0!important;margin-left:0!important}.sidebar-collapse.sidebar-mini .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar .nav-sidebar.nav-child-indent.nav-compact .nav-link{width:calc(4.6rem - .5rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-link{width:calc(250px - .5rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused:not(.hide-nav-header-on-hover) .nav-header,.sidebar-collapse.sidebar-mini .main-sidebar:hover:not(.hide-nav-header-on-hover) .nav-header,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused:not(.hide-nav-header-on-hover) .nav-header,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover:not(.hide-nav-header-on-hover) .nav-header,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused:not(.hide-nav-header-on-hover) .nav-header,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover:not(.hide-nav-header-on-hover) .nav-header{display:inline-block}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar,.sidebar-collapse.sidebar-mini .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar{display:inline-block}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append,.sidebar-collapse.sidebar-mini .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover:not(.sidebar-no-expand) .form-control-sidebar~.input-group-append{display:-ms-flexbox;display:flex}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results,.sidebar-collapse.sidebar-mini .main-sidebar:hover:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover:not(.sidebar-no-expand) .sidebar-search-open .sidebar-search-results{display:inline-block}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent .nav-link{width:calc(250px - .5rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy .nav-link{width:250px}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-link{width:calc(250px - 1rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 1rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 2rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 3rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-legacy.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - 1rem - 4rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat .nav-link{width:250px}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-link{width:calc(250px)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 3)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-flat.nav-child-indent .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .2rem * 4)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-compact .nav-link{width:calc(250px - .5rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-link{width:250px}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-link{width:calc(250px - .5rem)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 2)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 3)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 4)}.sidebar-collapse.sidebar-mini .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-md .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar.sidebar-focused .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link,.sidebar-collapse.sidebar-mini-xs .main-sidebar:hover .nav-child-indent.nav-legacy.nav-compact .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-treeview .nav-link{width:calc(250px - .5rem * 5)}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover{width:4.6rem}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .nav-header,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .nav-header,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .nav-header,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .nav-header,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .nav-header,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .nav-header{display:none}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .brand-link,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .brand-link,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .brand-link,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .brand-link,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .brand-link,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .brand-link{width:4.6rem!important}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .user-panel .image,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .user-panel .image,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .user-panel .image,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .user-panel .image,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .user-panel .image,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .user-panel .image{float:none!important}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xs,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .logo-xs,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xs,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .logo-xs,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xs,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .logo-xs{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xl,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .logo-xl,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xl,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .logo-xl,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .logo-xl,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .logo-xl{-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .nav-sidebar.nav-child-indent .nav-treeview,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .nav-sidebar.nav-child-indent .nav-treeview,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .nav-sidebar.nav-child-indent .nav-treeview,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .nav-sidebar.nav-child-indent .nav-treeview,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .nav-sidebar.nav-child-indent .nav-treeview,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .nav-sidebar.nav-child-indent .nav-treeview{padding-left:0}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .brand-text,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .user-panel>.info,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .sidebar .brand-text,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .sidebar .user-panel>.info,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .brand-text,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .user-panel>.info,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .sidebar .brand-text,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .sidebar .user-panel>.info,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .brand-text,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .user-panel>.info,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .sidebar .brand-text,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar .nav-link p,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .sidebar .user-panel>.info{margin-left:-10px;-webkit-animation-name:fadeOut;animation-name:fadeOut;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:hidden;width:0}.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar>.nav-item .nav-icon,.sidebar-collapse.sidebar-mini .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar>.nav-item .nav-icon,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar>.nav-item .nav-icon,.sidebar-collapse.sidebar-mini-md .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar>.nav-item .nav-icon,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar.sidebar-focused .sidebar .nav-sidebar>.nav-item .nav-icon,.sidebar-collapse.sidebar-mini-xs .sidebar-no-expand.main-sidebar:hover .sidebar .nav-sidebar>.nav-item .nav-icon{margin-right:0}.nav-sidebar{position:relative}.nav-sidebar:hover{overflow:visible}.nav-sidebar>.nav-header,.sidebar-form{overflow:hidden;text-overflow:clip}.nav-sidebar .nav-item>.nav-link{position:relative}.nav-sidebar .nav-item>.nav-link>.float-right{margin-top:-7px;position:absolute;right:10px;top:50%}.main-sidebar .brand-text,.main-sidebar .logo-xl,.main-sidebar .logo-xs,.sidebar .nav-link p,.sidebar .user-panel .info{transition:margin-left .3s linear,opacity .3s ease,visibility .3s ease}@media (prefers-reduced-motion:reduce){.main-sidebar .brand-text,.main-sidebar .logo-xl,.main-sidebar .logo-xs,.sidebar .nav-link p,.sidebar .user-panel .info{transition:none}}html.control-sidebar-animate{overflow-x:hidden}.control-sidebar{bottom:calc(3.5rem + 1px);position:absolute;top:calc(3.5rem + 1px);z-index:1031}.control-sidebar,.control-sidebar::before{bottom:calc(3.5rem + 1px);display:none;right:-250px;width:250px;transition:right .3s ease-in-out,display .3s ease-in-out}@media (prefers-reduced-motion:reduce){.control-sidebar,.control-sidebar::before{transition:none}}.control-sidebar::before{content:"";display:block;position:fixed;top:0;z-index:-1}body.text-sm .control-sidebar{bottom:calc(2.9365rem + 1px);top:calc(2.93725rem + 1px)}.main-header.text-sm~.control-sidebar{top:calc(2.93725rem + 1px)}.main-footer.text-sm~.control-sidebar{bottom:calc(2.9365rem + 1px)}.control-sidebar-push-slide .content-wrapper,.control-sidebar-push-slide .main-footer{transition:margin-right .3s ease-in-out}@media (prefers-reduced-motion:reduce){.control-sidebar-push-slide .content-wrapper,.control-sidebar-push-slide .main-footer{transition:none}}.control-sidebar-open .control-sidebar{display:block!important}.control-sidebar-open .control-sidebar,.control-sidebar-open .control-sidebar::before{right:0}.control-sidebar-open.control-sidebar-push .content-wrapper,.control-sidebar-open.control-sidebar-push .main-footer,.control-sidebar-open.control-sidebar-push-slide .content-wrapper,.control-sidebar-open.control-sidebar-push-slide .main-footer{margin-right:250px}.control-sidebar-slide-open .control-sidebar{display:block}.control-sidebar-slide-open .control-sidebar,.control-sidebar-slide-open .control-sidebar::before{right:0;transition:right .3s ease-in-out,display .3s ease-in-out}@media (prefers-reduced-motion:reduce){.control-sidebar-slide-open .control-sidebar,.control-sidebar-slide-open .control-sidebar::before{transition:none}}.control-sidebar-slide-open.control-sidebar-push .content-wrapper,.control-sidebar-slide-open.control-sidebar-push .main-footer,.control-sidebar-slide-open.control-sidebar-push-slide .content-wrapper,.control-sidebar-slide-open.control-sidebar-push-slide .main-footer{margin-right:250px}.control-sidebar-dark{background-color:#343a40}.control-sidebar-dark,.control-sidebar-dark .nav-link,.control-sidebar-dark a{color:#c2c7d0}.control-sidebar-dark a:hover{color:#fff}.control-sidebar-dark h1,.control-sidebar-dark h2,.control-sidebar-dark h3,.control-sidebar-dark h4,.control-sidebar-dark h5,.control-sidebar-dark h6,.control-sidebar-dark label{color:#fff}.control-sidebar-dark .nav-tabs{background-color:rgba(255,255,255,.1);border-bottom:0;margin-bottom:5px}.control-sidebar-dark .nav-tabs .nav-item{margin:0}.control-sidebar-dark .nav-tabs .nav-link{border-radius:0;padding:10px 20px;position:relative;text-align:center}.control-sidebar-dark .nav-tabs .nav-link,.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border:0}.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border-bottom-color:transparent;border-left-color:transparent;border-top-color:transparent;color:#fff}.control-sidebar-dark .nav-tabs .nav-link.active{background-color:#343a40}.control-sidebar-dark .tab-pane{padding:10px 15px}.control-sidebar-light{color:#4b545c;background-color:#fff;border-left:1px solid #dee2e6}.text-sm .dropdown-menu{font-size:.875rem!important}.text-sm .dropdown-toggle::after{vertical-align:.2rem}.dropdown-item-title{font-size:1rem;margin:0}.dropdown-icon::after{margin-left:0}.dropdown-menu-lg{max-width:300px;min-width:280px;padding:0}.dropdown-menu-lg .dropdown-divider{margin:0}.dropdown-menu-lg .dropdown-item{padding:.5rem 1rem}.dropdown-menu-lg p{margin:0;white-space:normal}.dropdown-submenu{position:relative}.dropdown-submenu>a::after{border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid;float:right;margin-left:.5rem;margin-top:.5rem}.dropdown-submenu>.dropdown-menu{left:100%;margin-left:0;margin-top:0;top:0}.dropdown-hover .dropdown-submenu:hover>.dropdown-menu,.dropdown-hover.dropdown-submenu:hover>.dropdown-menu,.dropdown-hover.nav-item.dropdown:hover>.dropdown-menu,.dropdown-hover:hover>.dropdown-menu{display:block}.dropdown-menu-xl{max-width:420px;min-width:360px;padding:0}.dropdown-menu-xl .dropdown-divider{margin:0}.dropdown-menu-xl .dropdown-item{padding:.5rem 1rem}.dropdown-menu-xl p{margin:0;white-space:normal}.dropdown-footer,.dropdown-header{display:block;font-size:.875rem;padding:.5rem 1rem;text-align:center}.open:not(.dropup)>.animated-dropdown-menu{-webkit-animation:flipInX .7s both;animation:flipInX .7s both;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}.navbar-custom-menu>.navbar-nav>li{position:relative}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:0;left:auto}@media (max-width:767.98px){.navbar-custom-menu>.navbar-nav{float:right}.navbar-custom-menu>.navbar-nav>li{position:static}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:5%;left:auto;border:1px solid #ddd;background-color:#fff}}.navbar-nav>.user-menu>.nav-link::after{content:none}.navbar-nav>.user-menu>.dropdown-menu{border-top-left-radius:0;border-top-right-radius:0;padding:0;width:280px}.navbar-nav>.user-menu>.dropdown-menu,.navbar-nav>.user-menu>.dropdown-menu>.user-body{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.navbar-nav>.user-menu>.dropdown-menu>li.user-header{height:175px;padding:10px;text-align:center}.navbar-nav>.user-menu>.dropdown-menu>li.user-header>img{z-index:5;height:90px;width:90px;border:3px solid;border-color:transparent;border-color:rgba(255,255,255,.2)}.navbar-nav>.user-menu>.dropdown-menu>li.user-header>p{z-index:5;font-size:17px;margin-top:10px}.navbar-nav>.user-menu>.dropdown-menu>li.user-header>p>small{display:block;font-size:12px}.navbar-nav>.user-menu>.dropdown-menu>.user-body{border-bottom:1px solid #495057;border-top:1px solid #dee2e6;padding:15px}.navbar-nav>.user-menu>.dropdown-menu>.user-body::after{display:block;clear:both;content:""}@media (min-width:576px){.navbar-nav>.user-menu>.dropdown-menu>.user-body a{background-color:#fff!important;color:#495057!important}}.navbar-nav>.user-menu>.dropdown-menu>.user-footer{background-color:#f8f9fa;padding:10px}.navbar-nav>.user-menu>.dropdown-menu>.user-footer::after{display:block;clear:both;content:""}.navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default{color:#6c757d}@media (min-width:576px){.navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:hover{background-color:#f8f9fa}}.navbar-nav>.user-menu .user-image{border-radius:50%;float:left;height:2.1rem;margin-right:10px;margin-top:-2px;width:2.1rem}@media (min-width:576px){.navbar-nav>.user-menu .user-image{float:none;line-height:10px;margin-right:.4rem;margin-top:-8px}}.dark-mode .dropdown-menu{background-color:#343a40;color:#fff}.dark-mode .dropdown-item{color:#fff}.dark-mode .dropdown-item:focus,.dark-mode .dropdown-item:hover{background-color:#3f474e}.dark-mode .dropdown-divider{border-color:#6c757d}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-footer{background-color:#3a4047;color:#fff}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default{color:#fff}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:focus,.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:hover{background-color:#3f474e;color:#dee2e6}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-footer .btn-default:focus{background-color:#454d55}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-body{border-color:#6c757d}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-body a{background-color:transparent!important;color:#fff!important}.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-body a:focus,.dark-mode .navbar-nav>.user-menu>.dropdown-menu>.user-body a:hover{color:#ced4da!important}.nav-pills .nav-link{color:#6c757d}.nav-pills .nav-link:not(.active):hover{color:#007bff}.nav-pills .nav-item.dropdown.show .nav-link:hover{color:#fff}.nav-tabs.flex-column{border-bottom:0;border-right:1px solid #dee2e6}.nav-tabs.flex-column .nav-link{border-bottom-left-radius:.25rem;border-top-right-radius:0;margin-right:-1px}.nav-tabs.flex-column .nav-link:focus,.nav-tabs.flex-column .nav-link:hover{border-color:#e9ecef transparent #e9ecef #e9ecef}.nav-tabs.flex-column .nav-item.show .nav-link,.nav-tabs.flex-column .nav-link.active{border-color:#dee2e6 transparent #dee2e6 #dee2e6}.nav-tabs.flex-column.nav-tabs-right{border-left:1px solid #dee2e6;border-right:0}.nav-tabs.flex-column.nav-tabs-right .nav-link{border-bottom-left-radius:0;border-bottom-right-radius:.25rem;border-top-left-radius:0;border-top-right-radius:.25rem;margin-left:-1px}.nav-tabs.flex-column.nav-tabs-right .nav-link:focus,.nav-tabs.flex-column.nav-tabs-right .nav-link:hover{border-color:#e9ecef #e9ecef #e9ecef transparent}.nav-tabs.flex-column.nav-tabs-right .nav-item.show .nav-link,.nav-tabs.flex-column.nav-tabs-right .nav-link.active{border-color:#dee2e6 #dee2e6 #dee2e6 transparent}.navbar-no-expand{-ms-flex-direction:row;flex-direction:row}.navbar-no-expand .nav-link{padding-left:1rem;padding-right:1rem}.navbar-no-expand .dropdown-menu{position:absolute}.navbar-light{background-color:#f8f9fa}.navbar-dark{background-color:#343a40;border-color:#4b545c}.navbar-primary{background-color:#007bff;color:#fff}.navbar-primary.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar,.navbar-primary.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#0071eb;border-color:#0065d1;color:rgba(52,58,64,.8)}.navbar-primary.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-primary.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-primary.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-primary.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-primary.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-primary.navbar-light .form-control-navbar:focus,.navbar-primary.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#006fe6;border-color:#0065d1!important;color:#343a40}.navbar-primary.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar,.navbar-primary.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1486ff;border-color:#2e93ff;color:rgba(255,255,255,.8)}.navbar-primary.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-primary.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-primary.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-primary.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-primary.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-primary.navbar-dark .form-control-navbar:focus,.navbar-primary.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1a88ff;border-color:#2e93ff!important;color:#fff}.navbar-secondary{background-color:#6c757d;color:#fff}.navbar-secondary.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar,.navbar-secondary.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#636b72;border-color:#575e64;color:rgba(52,58,64,.8)}.navbar-secondary.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-secondary.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-secondary.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-secondary.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-secondary.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-secondary.navbar-light .form-control-navbar:focus,.navbar-secondary.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#60686f;border-color:#575e64!important;color:#343a40}.navbar-secondary.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar,.navbar-secondary.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#757f88;border-color:#838c94;color:rgba(255,255,255,.8)}.navbar-secondary.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-secondary.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-secondary.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-secondary.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-secondary.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-secondary.navbar-dark .form-control-navbar:focus,.navbar-secondary.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#78828a;border-color:#838c94!important;color:#fff}.navbar-success{background-color:#28a745;color:#fff}.navbar-success.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar,.navbar-success.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#24973e;border-color:#1f8236;color:rgba(52,58,64,.8)}.navbar-success.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-success.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-success.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-success.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-success.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-success.navbar-light .form-control-navbar:focus,.navbar-success.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#23923d;border-color:#1f8236!important;color:#343a40}.navbar-success.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar,.navbar-success.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#2cb74c;border-color:#31cc54;color:rgba(255,255,255,.8)}.navbar-success.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-success.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-success.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-success.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-success.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-success.navbar-dark .form-control-navbar:focus,.navbar-success.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#2dbc4e;border-color:#31cc54!important;color:#fff}.navbar-info{background-color:#17a2b8;color:#fff}.navbar-info.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar,.navbar-info.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1592a6;border-color:#127e8f;color:rgba(52,58,64,.8)}.navbar-info.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-info.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-info.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-info.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-info.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-info.navbar-light .form-control-navbar:focus,.navbar-info.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#148ea1;border-color:#127e8f!important;color:#343a40}.navbar-info.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar,.navbar-info.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#19b2ca;border-color:#1cc6e1;color:rgba(255,255,255,.8)}.navbar-info.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-info.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-info.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-info.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-info.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-info.navbar-dark .form-control-navbar:focus,.navbar-info.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1ab6cf;border-color:#1cc6e1!important;color:#fff}.navbar-warning{background-color:#ffc107;color:#1f2d3d}.navbar-warning.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar,.navbar-warning.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f2b500;border-color:#d8a200;color:rgba(52,58,64,.8)}.navbar-warning.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-warning.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-warning.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-warning.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-warning.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-warning.navbar-light .form-control-navbar:focus,.navbar-warning.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#edb100;border-color:#d8a200!important;color:#343a40}.navbar-warning.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar,.navbar-warning.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ffc61b;border-color:#ffcc35;color:rgba(255,255,255,.8)}.navbar-warning.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-warning.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-warning.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-warning.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-warning.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-warning.navbar-dark .form-control-navbar:focus,.navbar-warning.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#ffc721;border-color:#ffcc35!important;color:#fff}.navbar-danger{background-color:#dc3545;color:#fff}.navbar-danger.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar,.navbar-danger.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#d72536;border-color:#c22231;color:rgba(52,58,64,.8)}.navbar-danger.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-danger.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-danger.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-danger.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-danger.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-danger.navbar-light .form-control-navbar:focus,.navbar-danger.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#d32535;border-color:#c22231!important;color:#343a40}.navbar-danger.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar,.navbar-danger.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#df4655;border-color:#e35c69;color:rgba(255,255,255,.8)}.navbar-danger.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-danger.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-danger.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-danger.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-danger.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-danger.navbar-dark .form-control-navbar:focus,.navbar-danger.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e04b59;border-color:#e35c69!important;color:#fff}.navbar-lightblue{background-color:#3c8dbc;color:#fff}.navbar-lightblue.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar,.navbar-lightblue.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#3781ad;border-color:#317399;color:rgba(52,58,64,.8)}.navbar-lightblue.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-lightblue.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-lightblue.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-lightblue.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-lightblue.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-lightblue.navbar-light .form-control-navbar:focus,.navbar-lightblue.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#367fa9;border-color:#317399!important;color:#343a40}.navbar-lightblue.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar,.navbar-lightblue.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#4897c5;border-color:#5ba2cb;color:rgba(255,255,255,.8)}.navbar-lightblue.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-lightblue.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-lightblue.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-lightblue.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-lightblue.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-lightblue.navbar-dark .form-control-navbar:focus,.navbar-lightblue.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4c99c6;border-color:#5ba2cb!important;color:#fff}.navbar-navy{background-color:#001f3f;color:#fff}.navbar-navy.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar,.navbar-navy.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00152b;border-color:#000811;color:rgba(52,58,64,.8)}.navbar-navy.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-navy.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-navy.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-navy.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-navy.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-navy.navbar-light .form-control-navbar:focus,.navbar-navy.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#001226;border-color:#000811!important;color:#343a40}.navbar-navy.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar,.navbar-navy.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#002953;border-color:#00366d;color:rgba(255,255,255,.8)}.navbar-navy.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-navy.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-navy.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-navy.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-navy.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-navy.navbar-dark .form-control-navbar:focus,.navbar-navy.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#002c59;border-color:#00366d!important;color:#fff}.navbar-olive{background-color:#3d9970;color:#fff}.navbar-olive.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar,.navbar-olive.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#378a65;border-color:#307858;color:rgba(52,58,64,.8)}.navbar-olive.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-olive.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-olive.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-olive.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-olive.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-olive.navbar-light .form-control-navbar:focus,.navbar-olive.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#368763;border-color:#307858!important;color:#343a40}.navbar-olive.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar,.navbar-olive.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#43a87b;border-color:#4cb888;color:rgba(255,255,255,.8)}.navbar-olive.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-olive.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-olive.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-olive.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-olive.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-olive.navbar-dark .form-control-navbar:focus,.navbar-olive.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#44ab7d;border-color:#4cb888!important;color:#fff}.navbar-lime{background-color:#01ff70;color:#1f2d3d}.navbar-lime.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar,.navbar-lime.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00ec67;border-color:#00d25c;color:rgba(52,58,64,.8)}.navbar-lime.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-lime.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-lime.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-lime.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-lime.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-lime.navbar-light .form-control-navbar:focus,.navbar-lime.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#00e765;border-color:#00d25c!important;color:#343a40}.navbar-lime.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar,.navbar-lime.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#15ff7b;border-color:#2fff8a;color:rgba(255,255,255,.8)}.navbar-lime.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-lime.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-lime.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-lime.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-lime.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-lime.navbar-dark .form-control-navbar:focus,.navbar-lime.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1bff7e;border-color:#2fff8a!important;color:#fff}.navbar-fuchsia{background-color:#f012be;color:#fff}.navbar-fuchsia.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar,.navbar-fuchsia.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#df0eb0;border-color:#c70d9d;color:rgba(52,58,64,.8)}.navbar-fuchsia.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-fuchsia.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-fuchsia.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-fuchsia.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-fuchsia.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-fuchsia.navbar-light .form-control-navbar:focus,.navbar-fuchsia.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#db0ead;border-color:#c70d9d!important;color:#343a40}.navbar-fuchsia.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar,.navbar-fuchsia.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f125c3;border-color:#f33dca;color:rgba(255,255,255,.8)}.navbar-fuchsia.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-fuchsia.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-fuchsia.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-fuchsia.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-fuchsia.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-fuchsia.navbar-dark .form-control-navbar:focus,.navbar-fuchsia.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f22ac5;border-color:#f33dca!important;color:#fff}.navbar-maroon{background-color:#d81b60;color:#fff}.navbar-maroon.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar,.navbar-maroon.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#c61958;border-color:#af164e;color:rgba(52,58,64,.8)}.navbar-maroon.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-maroon.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-maroon.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-maroon.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-maroon.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-maroon.navbar-light .form-control-navbar:focus,.navbar-maroon.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#c11856;border-color:#af164e!important;color:#343a40}.navbar-maroon.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar,.navbar-maroon.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e4246a;border-color:#e63a79;color:rgba(255,255,255,.8)}.navbar-maroon.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-maroon.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-maroon.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-maroon.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-maroon.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-maroon.navbar-dark .form-control-navbar:focus,.navbar-maroon.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e4286d;border-color:#e63a79!important;color:#fff}.navbar-blue{background-color:#007bff;color:#fff}.navbar-blue.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar,.navbar-blue.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#0071eb;border-color:#0065d1;color:rgba(52,58,64,.8)}.navbar-blue.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-blue.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-blue.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-blue.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-blue.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-blue.navbar-light .form-control-navbar:focus,.navbar-blue.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#006fe6;border-color:#0065d1!important;color:#343a40}.navbar-blue.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar,.navbar-blue.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1486ff;border-color:#2e93ff;color:rgba(255,255,255,.8)}.navbar-blue.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-blue.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-blue.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-blue.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-blue.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-blue.navbar-dark .form-control-navbar:focus,.navbar-blue.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1a88ff;border-color:#2e93ff!important;color:#fff}.navbar-indigo{background-color:#6610f2;color:#fff}.navbar-indigo.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar,.navbar-indigo.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#5d0ce1;border-color:#530bc9;color:rgba(52,58,64,.8)}.navbar-indigo.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-indigo.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-indigo.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-indigo.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-indigo.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-indigo.navbar-light .form-control-navbar:focus,.navbar-indigo.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#5b0cdd;border-color:#530bc9!important;color:#343a40}.navbar-indigo.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar,.navbar-indigo.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#7223f3;border-color:#823cf4;color:rgba(255,255,255,.8)}.navbar-indigo.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-indigo.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-indigo.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-indigo.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-indigo.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-indigo.navbar-dark .form-control-navbar:focus,.navbar-indigo.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#7528f3;border-color:#823cf4!important;color:#fff}.navbar-purple{background-color:#6f42c1;color:#fff}.navbar-purple.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar,.navbar-purple.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#663bb4;border-color:#5b35a0;color:rgba(52,58,64,.8)}.navbar-purple.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-purple.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-purple.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-purple.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-purple.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-purple.navbar-light .form-control-navbar:focus,.navbar-purple.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#643ab0;border-color:#5b35a0!important;color:#343a40}.navbar-purple.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar,.navbar-purple.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#7b51c6;border-color:#8965cc;color:rgba(255,255,255,.8)}.navbar-purple.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-purple.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-purple.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-purple.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-purple.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-purple.navbar-dark .form-control-navbar:focus,.navbar-purple.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#7e55c7;border-color:#8965cc!important;color:#fff}.navbar-pink{background-color:#e83e8c;color:#fff}.navbar-pink.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar,.navbar-pink.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e62c81;border-color:#de1a74;color:rgba(52,58,64,.8)}.navbar-pink.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-pink.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-pink.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-pink.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-pink.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-pink.navbar-light .form-control-navbar:focus,.navbar-pink.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e5277e;border-color:#de1a74!important;color:#343a40}.navbar-pink.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar,.navbar-pink.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ea5097;border-color:#ed67a4;color:rgba(255,255,255,.8)}.navbar-pink.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-pink.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-pink.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-pink.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-pink.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-pink.navbar-dark .form-control-navbar:focus,.navbar-pink.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#eb559a;border-color:#ed67a4!important;color:#fff}.navbar-red{background-color:#dc3545;color:#fff}.navbar-red.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar,.navbar-red.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#d72536;border-color:#c22231;color:rgba(52,58,64,.8)}.navbar-red.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-red.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-red.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-red.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-red.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-red.navbar-light .form-control-navbar:focus,.navbar-red.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#d32535;border-color:#c22231!important;color:#343a40}.navbar-red.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar,.navbar-red.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#df4655;border-color:#e35c69;color:rgba(255,255,255,.8)}.navbar-red.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-red.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-red.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-red.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-red.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-red.navbar-dark .form-control-navbar:focus,.navbar-red.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e04b59;border-color:#e35c69!important;color:#fff}.navbar-orange{background-color:#fd7e14;color:#1f2d3d}.navbar-orange.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar,.navbar-orange.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fa7302;border-color:#e16702;color:rgba(52,58,64,.8)}.navbar-orange.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-orange.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-orange.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-orange.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-orange.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-orange.navbar-light .form-control-navbar:focus,.navbar-orange.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f57102;border-color:#e16702!important;color:#343a40}.navbar-orange.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar,.navbar-orange.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fd8928;border-color:#fd9742;color:rgba(255,255,255,.8)}.navbar-orange.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-orange.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-orange.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-orange.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-orange.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-orange.navbar-dark .form-control-navbar:focus,.navbar-orange.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#fd8c2d;border-color:#fd9742!important;color:#fff}.navbar-yellow{background-color:#ffc107;color:#1f2d3d}.navbar-yellow.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar,.navbar-yellow.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f2b500;border-color:#d8a200;color:rgba(52,58,64,.8)}.navbar-yellow.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-yellow.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-yellow.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-yellow.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-yellow.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-yellow.navbar-light .form-control-navbar:focus,.navbar-yellow.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#edb100;border-color:#d8a200!important;color:#343a40}.navbar-yellow.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar,.navbar-yellow.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ffc61b;border-color:#ffcc35;color:rgba(255,255,255,.8)}.navbar-yellow.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-yellow.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-yellow.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-yellow.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-yellow.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-yellow.navbar-dark .form-control-navbar:focus,.navbar-yellow.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#ffc721;border-color:#ffcc35!important;color:#fff}.navbar-green{background-color:#28a745;color:#fff}.navbar-green.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar,.navbar-green.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#24973e;border-color:#1f8236;color:rgba(52,58,64,.8)}.navbar-green.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-green.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-green.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-green.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-green.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-green.navbar-light .form-control-navbar:focus,.navbar-green.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#23923d;border-color:#1f8236!important;color:#343a40}.navbar-green.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar,.navbar-green.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#2cb74c;border-color:#31cc54;color:rgba(255,255,255,.8)}.navbar-green.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-green.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-green.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-green.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-green.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-green.navbar-dark .form-control-navbar:focus,.navbar-green.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#2dbc4e;border-color:#31cc54!important;color:#fff}.navbar-teal{background-color:#20c997;color:#fff}.navbar-teal.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar,.navbar-teal.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1db78a;border-color:#1aa179;color:rgba(52,58,64,.8)}.navbar-teal.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-teal.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-teal.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-teal.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-teal.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-teal.navbar-light .form-control-navbar:focus,.navbar-teal.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1cb386;border-color:#1aa179!important;color:#343a40}.navbar-teal.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar,.navbar-teal.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#23dba4;border-color:#38dfae;color:rgba(255,255,255,.8)}.navbar-teal.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-teal.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-teal.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-teal.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-teal.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-teal.navbar-dark .form-control-navbar:focus,.navbar-teal.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#26dca6;border-color:#38dfae!important;color:#fff}.navbar-cyan{background-color:#17a2b8;color:#fff}.navbar-cyan.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar,.navbar-cyan.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1592a6;border-color:#127e8f;color:rgba(52,58,64,.8)}.navbar-cyan.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-cyan.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-cyan.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-cyan.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-cyan.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-cyan.navbar-light .form-control-navbar:focus,.navbar-cyan.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#148ea1;border-color:#127e8f!important;color:#343a40}.navbar-cyan.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar,.navbar-cyan.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#19b2ca;border-color:#1cc6e1;color:rgba(255,255,255,.8)}.navbar-cyan.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-cyan.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-cyan.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-cyan.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-cyan.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-cyan.navbar-dark .form-control-navbar:focus,.navbar-cyan.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1ab6cf;border-color:#1cc6e1!important;color:#fff}.navbar-white{background-color:#fff;color:#1f2d3d}.navbar-white.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar,.navbar-white.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f5f5f5;border-color:#e8e8e8;color:rgba(52,58,64,.8)}.navbar-white.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-white.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-white.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-white.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-white.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-white.navbar-light .form-control-navbar:focus,.navbar-white.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f2f2f2;border-color:#e8e8e8!important;color:#343a40}.navbar-white.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar,.navbar-white.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fff;border-color:#fff;color:rgba(255,255,255,.8)}.navbar-white.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-white.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-white.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-white.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-white.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-white.navbar-dark .form-control-navbar:focus,.navbar-white.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#fff;border-color:#fff!important;color:#fff}.navbar-gray{background-color:#6c757d;color:#fff}.navbar-gray.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar,.navbar-gray.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#636b72;border-color:#575e64;color:rgba(52,58,64,.8)}.navbar-gray.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-gray.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-gray.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-gray.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-gray.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-gray.navbar-light .form-control-navbar:focus,.navbar-gray.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#60686f;border-color:#575e64!important;color:#343a40}.navbar-gray.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar,.navbar-gray.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#757f88;border-color:#838c94;color:rgba(255,255,255,.8)}.navbar-gray.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-gray.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-gray.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-gray.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-gray.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-gray.navbar-dark .form-control-navbar:focus,.navbar-gray.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#78828a;border-color:#838c94!important;color:#fff}.navbar-gray-dark{background-color:#343a40;color:#fff}.navbar-gray-dark.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar,.navbar-gray-dark.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#2b3035;border-color:#1f2327;color:rgba(52,58,64,.8)}.navbar-gray-dark.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.navbar-gray-dark.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.navbar-gray-dark.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.navbar-gray-dark.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.navbar-gray-dark.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.navbar-gray-dark.navbar-light .form-control-navbar:focus,.navbar-gray-dark.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#292d32;border-color:#1f2327!important;color:#343a40}.navbar-gray-dark.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar,.navbar-gray-dark.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#3d444b;border-color:#495159;color:rgba(255,255,255,.8)}.navbar-gray-dark.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.navbar-gray-dark.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.navbar-gray-dark.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.navbar-gray-dark.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.navbar-gray-dark.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.navbar-gray-dark.navbar-dark .form-control-navbar:focus,.navbar-gray-dark.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#3f474e;border-color:#495159!important;color:#fff}.navbar-nav-not-expanded{-ms-flex-direction:row;flex-direction:row}.navbar-nav-not-expanded .dropdown-menu{position:absolute}.navbar-nav-not-expanded .nav-link{padding-right:1rem;padding-left:1rem}.dark-mode .nav-pills .nav-link{color:#ced4da}.dark-mode .nav-tabs{border-color:#56606a}.dark-mode .nav-tabs .nav-link:focus,.dark-mode .nav-tabs .nav-link:hover{border-color:#56606a}.dark-mode .nav-tabs .nav-item.show .nav-link,.dark-mode .nav-tabs .nav-link.active{background-color:#343a40;border-color:#56606a #56606a transparent #56606a;color:#fff}.dark-mode .nav-tabs.flex-column .nav-item.show .nav-link.active,.dark-mode .nav-tabs.flex-column .nav-item.show .nav-link:focus,.dark-mode .nav-tabs.flex-column .nav-item.show .nav-link:hover,.dark-mode .nav-tabs.flex-column .nav-link.active,.dark-mode .nav-tabs.flex-column .nav-link:focus,.dark-mode .nav-tabs.flex-column .nav-link:hover{border-color:#56606a transparent #56606a #56606a}.dark-mode .nav-tabs.flex-column .nav-item.show .nav-link:focus,.dark-mode .nav-tabs.flex-column .nav-item.show .nav-link:hover,.dark-mode .nav-tabs.flex-column .nav-link:focus,.dark-mode .nav-tabs.flex-column .nav-link:hover{background-color:#3f474e}.dark-mode .nav-tabs.flex-column.nav-tabs-right{border-color:#56606a}.dark-mode .nav-tabs.flex-column.nav-tabs-right .nav-link.active,.dark-mode .nav-tabs.flex-column.nav-tabs-right .nav-link:focus,.dark-mode .nav-tabs.flex-column.nav-tabs-right .nav-link:hover{border-color:#56606a #56606a #56606a transparent}.dark-mode .navbar-light{background-color:#f8f9fa}.dark-mode .navbar-dark{background-color:#343a40;border-color:#4b545c}.dark-mode .navbar-primary{background-color:#3f6791;color:#fff}.dark-mode .navbar-primary.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar,.dark-mode .navbar-primary.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#395d83;border-color:#315071;color:rgba(52,58,64,.8)}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus,.dark-mode .navbar-primary.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#375a7f;border-color:#315071!important;color:#343a40}.dark-mode .navbar-primary.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar,.dark-mode .navbar-primary.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#45719f;border-color:#4d7eb1;color:rgba(255,255,255,.8)}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-primary.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4774a3;border-color:#4d7eb1!important;color:#fff}.dark-mode .navbar-secondary{background-color:#6c757d;color:#fff}.dark-mode .navbar-secondary.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar,.dark-mode .navbar-secondary.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#636b72;border-color:#575e64;color:rgba(52,58,64,.8)}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus,.dark-mode .navbar-secondary.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#60686f;border-color:#575e64!important;color:#343a40}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar,.dark-mode .navbar-secondary.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#757f88;border-color:#838c94;color:rgba(255,255,255,.8)}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-secondary.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#78828a;border-color:#838c94!important;color:#fff}.dark-mode .navbar-success{background-color:#00bc8c;color:#fff}.dark-mode .navbar-success.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar,.dark-mode .navbar-success.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00a87d;border-color:#008e6a;color:rgba(52,58,64,.8)}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-success.navbar-light .form-control-navbar:focus,.dark-mode .navbar-success.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#00a379;border-color:#008e6a!important;color:#343a40}.dark-mode .navbar-success.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar,.dark-mode .navbar-success.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00d09b;border-color:#00eaae;color:rgba(255,255,255,.8)}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-success.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#00d69f;border-color:#00eaae!important;color:#fff}.dark-mode .navbar-info{background-color:#3498db;color:#fff}.dark-mode .navbar-info.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar,.dark-mode .navbar-info.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#268fd5;border-color:#2280bf;color:rgba(52,58,64,.8)}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-info.navbar-light .form-control-navbar:focus,.dark-mode .navbar-info.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#258cd1;border-color:#2280bf!important;color:#343a40}.dark-mode .navbar-info.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar,.dark-mode .navbar-info.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#45a1de;border-color:#5bace2;color:rgba(255,255,255,.8)}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-info.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4aa3df;border-color:#5bace2!important;color:#fff}.dark-mode .navbar-warning{background-color:#f39c12;color:#1f2d3d}.dark-mode .navbar-warning.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar,.dark-mode .navbar-warning.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e5910c;border-color:#cd820a;color:rgba(52,58,64,.8)}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus,.dark-mode .navbar-warning.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e08e0b;border-color:#cd820a!important;color:#343a40}.dark-mode .navbar-warning.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar,.dark-mode .navbar-warning.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f4a425;border-color:#f5ae3e;color:rgba(255,255,255,.8)}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-warning.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f4a62a;border-color:#f5ae3e!important;color:#fff}.dark-mode .navbar-danger{background-color:#e74c3c;color:#fff}.dark-mode .navbar-danger.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar,.dark-mode .navbar-danger.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e53b2a;border-color:#da2d1b;color:rgba(52,58,64,.8)}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus,.dark-mode .navbar-danger.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e43725;border-color:#da2d1b!important;color:#343a40}.dark-mode .navbar-danger.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar,.dark-mode .navbar-danger.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e95d4e;border-color:#ec7265;color:rgba(255,255,255,.8)}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-danger.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#ea6153;border-color:#ec7265!important;color:#fff}.dark-mode .navbar-lightblue{background-color:#86bad8;color:#1f2d3d}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar,.dark-mode .navbar-lightblue.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#76b1d3;border-color:#63a6cd;color:rgba(52,58,64,.8)}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus,.dark-mode .navbar-lightblue.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#72afd2;border-color:#63a6cd!important;color:#343a40}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar,.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#95c3dd;border-color:#a9cee3;color:rgba(255,255,255,.8)}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-lightblue.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#99c5de;border-color:#a9cee3!important;color:#fff}.dark-mode .navbar-navy{background-color:#002c59;color:#fff}.dark-mode .navbar-navy.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar,.dark-mode .navbar-navy.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#024;border-color:#00152b;color:rgba(52,58,64,.8)}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus,.dark-mode .navbar-navy.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#001f3f;border-color:#00152b!important;color:#343a40}.dark-mode .navbar-navy.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar,.dark-mode .navbar-navy.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00366d;border-color:#004286;color:rgba(255,255,255,.8)}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-navy.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#003872;border-color:#004286!important;color:#fff}.dark-mode .navbar-olive{background-color:#74c8a3;color:#1f2d3d}.dark-mode .navbar-olive.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar,.dark-mode .navbar-olive.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#66c299;border-color:#53bb8d;color:rgba(52,58,64,.8)}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus,.dark-mode .navbar-olive.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#62c096;border-color:#53bb8d!important;color:#343a40}.dark-mode .navbar-olive.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar,.dark-mode .navbar-olive.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#83ceac;border-color:#95d5b8;color:rgba(255,255,255,.8)}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-olive.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#87cfaf;border-color:#95d5b8!important;color:#fff}.dark-mode .navbar-lime{background-color:#67ffa9;color:#1f2d3d}.dark-mode .navbar-lime.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar,.dark-mode .navbar-lime.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#53ff9e;border-color:#39ff90;color:rgba(52,58,64,.8)}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus,.dark-mode .navbar-lime.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4eff9b;border-color:#39ff90!important;color:#343a40}.dark-mode .navbar-lime.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar,.dark-mode .navbar-lime.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#7bffb5;border-color:#95ffc3;color:rgba(255,255,255,.8)}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-lime.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#81ffb8;border-color:#95ffc3!important;color:#fff}.dark-mode .navbar-fuchsia{background-color:#f672d8;color:#1f2d3d}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar,.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f55fd3;border-color:#f347cc;color:rgba(52,58,64,.8)}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus,.dark-mode .navbar-fuchsia.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f55ad2;border-color:#f347cc!important;color:#343a40}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar,.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f785de;border-color:#f99de4;color:rgba(255,255,255,.8)}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-fuchsia.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f88adf;border-color:#f99de4!important;color:#fff}.dark-mode .navbar-maroon{background-color:#ed6c9b;color:#1f2d3d}.dark-mode .navbar-maroon.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar,.dark-mode .navbar-maroon.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ea5a8f;border-color:#e8447f;color:rgba(52,58,64,.8)}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus,.dark-mode .navbar-maroon.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#ea568c;border-color:#e8447f!important;color:#343a40}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar,.dark-mode .navbar-maroon.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ef7ea8;border-color:#f295b7;color:rgba(255,255,255,.8)}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-maroon.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f083ab;border-color:#f295b7!important;color:#fff}.dark-mode .navbar-blue{background-color:#3f6791;color:#fff}.dark-mode .navbar-blue.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar,.dark-mode .navbar-blue.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#395d83;border-color:#315071;color:rgba(52,58,64,.8)}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus,.dark-mode .navbar-blue.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#375a7f;border-color:#315071!important;color:#343a40}.dark-mode .navbar-blue.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar,.dark-mode .navbar-blue.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#45719f;border-color:#4d7eb1;color:rgba(255,255,255,.8)}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-blue.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4774a3;border-color:#4d7eb1!important;color:#fff}.dark-mode .navbar-indigo{background-color:#6610f2;color:#fff}.dark-mode .navbar-indigo.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar,.dark-mode .navbar-indigo.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#5d0ce1;border-color:#530bc9;color:rgba(52,58,64,.8)}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus,.dark-mode .navbar-indigo.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#5b0cdd;border-color:#530bc9!important;color:#343a40}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar,.dark-mode .navbar-indigo.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#7223f3;border-color:#823cf4;color:rgba(255,255,255,.8)}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-indigo.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#7528f3;border-color:#823cf4!important;color:#fff}.dark-mode .navbar-purple{background-color:#6f42c1;color:#fff}.dark-mode .navbar-purple.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar,.dark-mode .navbar-purple.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#663bb4;border-color:#5b35a0;color:rgba(52,58,64,.8)}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus,.dark-mode .navbar-purple.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#643ab0;border-color:#5b35a0!important;color:#343a40}.dark-mode .navbar-purple.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar,.dark-mode .navbar-purple.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#7b51c6;border-color:#8965cc;color:rgba(255,255,255,.8)}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-purple.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#7e55c7;border-color:#8965cc!important;color:#fff}.dark-mode .navbar-pink{background-color:#e83e8c;color:#fff}.dark-mode .navbar-pink.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar,.dark-mode .navbar-pink.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e62c81;border-color:#de1a74;color:rgba(52,58,64,.8)}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus,.dark-mode .navbar-pink.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e5277e;border-color:#de1a74!important;color:#343a40}.dark-mode .navbar-pink.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar,.dark-mode .navbar-pink.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#ea5097;border-color:#ed67a4;color:rgba(255,255,255,.8)}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-pink.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#eb559a;border-color:#ed67a4!important;color:#fff}.dark-mode .navbar-red{background-color:#e74c3c;color:#fff}.dark-mode .navbar-red.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar,.dark-mode .navbar-red.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e53b2a;border-color:#da2d1b;color:rgba(52,58,64,.8)}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-red.navbar-light .form-control-navbar:focus,.dark-mode .navbar-red.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e43725;border-color:#da2d1b!important;color:#343a40}.dark-mode .navbar-red.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar,.dark-mode .navbar-red.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e95d4e;border-color:#ec7265;color:rgba(255,255,255,.8)}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-red.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#ea6153;border-color:#ec7265!important;color:#fff}.dark-mode .navbar-orange{background-color:#fd7e14;color:#1f2d3d}.dark-mode .navbar-orange.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar,.dark-mode .navbar-orange.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fa7302;border-color:#e16702;color:rgba(52,58,64,.8)}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus,.dark-mode .navbar-orange.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f57102;border-color:#e16702!important;color:#343a40}.dark-mode .navbar-orange.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar,.dark-mode .navbar-orange.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fd8928;border-color:#fd9742;color:rgba(255,255,255,.8)}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-orange.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#fd8c2d;border-color:#fd9742!important;color:#fff}.dark-mode .navbar-yellow{background-color:#f39c12;color:#1f2d3d}.dark-mode .navbar-yellow.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar,.dark-mode .navbar-yellow.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#e5910c;border-color:#cd820a;color:rgba(52,58,64,.8)}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus,.dark-mode .navbar-yellow.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#e08e0b;border-color:#cd820a!important;color:#343a40}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar,.dark-mode .navbar-yellow.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f4a425;border-color:#f5ae3e;color:rgba(255,255,255,.8)}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-yellow.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f4a62a;border-color:#f5ae3e!important;color:#fff}.dark-mode .navbar-green{background-color:#00bc8c;color:#fff}.dark-mode .navbar-green.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar,.dark-mode .navbar-green.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00a87d;border-color:#008e6a;color:rgba(52,58,64,.8)}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-green.navbar-light .form-control-navbar:focus,.dark-mode .navbar-green.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#00a379;border-color:#008e6a!important;color:#343a40}.dark-mode .navbar-green.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar,.dark-mode .navbar-green.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#00d09b;border-color:#00eaae;color:rgba(255,255,255,.8)}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-green.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#00d69f;border-color:#00eaae!important;color:#fff}.dark-mode .navbar-teal{background-color:#20c997;color:#fff}.dark-mode .navbar-teal.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar,.dark-mode .navbar-teal.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#1db78a;border-color:#1aa179;color:rgba(52,58,64,.8)}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus,.dark-mode .navbar-teal.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#1cb386;border-color:#1aa179!important;color:#343a40}.dark-mode .navbar-teal.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar,.dark-mode .navbar-teal.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#23dba4;border-color:#38dfae;color:rgba(255,255,255,.8)}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-teal.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#26dca6;border-color:#38dfae!important;color:#fff}.dark-mode .navbar-cyan{background-color:#3498db;color:#fff}.dark-mode .navbar-cyan.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar,.dark-mode .navbar-cyan.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#268fd5;border-color:#2280bf;color:rgba(52,58,64,.8)}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus,.dark-mode .navbar-cyan.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#258cd1;border-color:#2280bf!important;color:#343a40}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar,.dark-mode .navbar-cyan.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#45a1de;border-color:#5bace2;color:rgba(255,255,255,.8)}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-cyan.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#4aa3df;border-color:#5bace2!important;color:#fff}.dark-mode .navbar-white{background-color:#fff;color:#1f2d3d}.dark-mode .navbar-white.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar,.dark-mode .navbar-white.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#f5f5f5;border-color:#e8e8e8;color:rgba(52,58,64,.8)}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-white.navbar-light .form-control-navbar:focus,.dark-mode .navbar-white.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#f2f2f2;border-color:#e8e8e8!important;color:#343a40}.dark-mode .navbar-white.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar,.dark-mode .navbar-white.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#fff;border-color:#fff;color:rgba(255,255,255,.8)}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-white.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#fff;border-color:#fff!important;color:#fff}.dark-mode .navbar-gray{background-color:#6c757d;color:#fff}.dark-mode .navbar-gray.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar,.dark-mode .navbar-gray.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#636b72;border-color:#575e64;color:rgba(52,58,64,.8)}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus,.dark-mode .navbar-gray.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#60686f;border-color:#575e64!important;color:#343a40}.dark-mode .navbar-gray.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar,.dark-mode .navbar-gray.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#757f88;border-color:#838c94;color:rgba(255,255,255,.8)}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-gray.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#78828a;border-color:#838c94!important;color:#fff}.dark-mode .navbar-gray-dark{background-color:#343a40;color:#fff}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar::-webkit-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar::-moz-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar::-ms-input-placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar::placeholder{color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar,.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar+.input-group-append>.btn-navbar{background-color:#2b3035;border-color:#1f2327;color:rgba(52,58,64,.8)}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus::-webkit-input-placeholder{color:#343a40}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus::-moz-placeholder{color:#343a40}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus:-ms-input-placeholder{color:#343a40}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus::-ms-input-placeholder{color:#343a40}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus::placeholder{color:#343a40}.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus,.dark-mode .navbar-gray-dark.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#292d32;border-color:#1f2327!important;color:#343a40}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar::-webkit-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar::-moz-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar::-ms-input-placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar,.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar{background-color:#3d444b;border-color:#495159;color:rgba(255,255,255,.8)}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus::-webkit-input-placeholder{color:#fff}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus::-moz-placeholder{color:#fff}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus:-ms-input-placeholder{color:#fff}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus::-ms-input-placeholder{color:#fff}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus::placeholder{color:#fff}.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus,.dark-mode .navbar-gray-dark.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{background-color:#3f474e;border-color:#495159!important;color:#fff}.pagination-month .page-item{justify-self:stretch}.pagination-month .page-item .page-link{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;box-shadow:none}.pagination-month .page-item:first-child .page-link,.pagination-month .page-item:last-child .page-link{height:100%;font-size:1.25rem}.pagination-month .page-item .page-month{margin-bottom:0;font-size:1.25rem;font-weight:700}.pagination-month .page-item .page-year{margin-bottom:0}.pagination-month.pagination-lg .page-month{font-size:1.5625rem}.pagination-month.pagination-sm .page-month{font-size:1rem}.dark-mode .page-item.disabled .page-link,.dark-mode .page-item.disabled a{background-color:#3a4047!important;border-color:#6c757d!important;color:#6c757d}.dark-mode .page-item .page-link{color:#3f6791}.dark-mode .page-item.active .page-link{background-color:#3f6791;color:#fff}.dark-mode .page-item.active .page-link:focus,.dark-mode .page-item.active .page-link:hover{color:#ced4da!important}.dark-mode .page-item:not(.active) .page-link{background-color:#343a40;border-color:#6c757d}.dark-mode .page-item:not(.active) .page-link:focus,.dark-mode .page-item:not(.active) .page-link:hover{color:#4774a3;background-color:#3f474e}.form-group.has-icon{position:relative}.form-group.has-icon .form-control{padding-right:35px}.form-group.has-icon .form-icon{background-color:transparent;border:0;cursor:pointer;font-size:1rem;padding:.375rem .75rem;position:absolute;right:3px;top:0}.btn-group-vertical .btn.btn-flat:first-of-type,.btn-group-vertical .btn.btn-flat:last-of-type{border-radius:0}.form-control-feedback.fa,.form-control-feedback.fab,.form-control-feedback.fad,.form-control-feedback.fal,.form-control-feedback.far,.form-control-feedback.fas,.form-control-feedback.ion,.form-control-feedback.svg-inline--fa{line-height:calc(2.25rem + 2px)}.input-group-lg+.form-control-feedback.fa,.input-group-lg+.form-control-feedback.fab,.input-group-lg+.form-control-feedback.fad,.input-group-lg+.form-control-feedback.fal,.input-group-lg+.form-control-feedback.far,.input-group-lg+.form-control-feedback.fas,.input-group-lg+.form-control-feedback.ion,.input-group-lg+.form-control-feedback.svg-inline--fa,.input-lg+.form-control-feedback.fa,.input-lg+.form-control-feedback.fab,.input-lg+.form-control-feedback.fad,.input-lg+.form-control-feedback.fal,.input-lg+.form-control-feedback.far,.input-lg+.form-control-feedback.fas,.input-lg+.form-control-feedback.ion,.input-lg+.form-control-feedback.svg-inline--fa{line-height:calc(2.875rem + 2px)}.form-group-lg .form-control+.form-control-feedback.fa,.form-group-lg .form-control+.form-control-feedback.fab,.form-group-lg .form-control+.form-control-feedback.fad,.form-group-lg .form-control+.form-control-feedback.fal,.form-group-lg .form-control+.form-control-feedback.far,.form-group-lg .form-control+.form-control-feedback.fas,.form-group-lg .form-control+.form-control-feedback.ion,.form-group-lg .form-control+.form-control-feedback.svg-inline--fa{line-height:calc(2.875rem + 2px)}.input-group-sm+.form-control-feedback.fa,.input-group-sm+.form-control-feedback.fab,.input-group-sm+.form-control-feedback.fad,.input-group-sm+.form-control-feedback.fal,.input-group-sm+.form-control-feedback.far,.input-group-sm+.form-control-feedback.fas,.input-group-sm+.form-control-feedback.ion,.input-group-sm+.form-control-feedback.svg-inline--fa,.input-sm+.form-control-feedback.fa,.input-sm+.form-control-feedback.fab,.input-sm+.form-control-feedback.fad,.input-sm+.form-control-feedback.fal,.input-sm+.form-control-feedback.far,.input-sm+.form-control-feedback.fas,.input-sm+.form-control-feedback.ion,.input-sm+.form-control-feedback.svg-inline--fa{line-height:calc(1.8125rem + 2px)}.form-group-sm .form-control+.form-control-feedback.fa,.form-group-sm .form-control+.form-control-feedback.fab,.form-group-sm .form-control+.form-control-feedback.fad,.form-group-sm .form-control+.form-control-feedback.fal,.form-group-sm .form-control+.form-control-feedback.far,.form-group-sm .form-control+.form-control-feedback.fas,.form-group-sm .form-control+.form-control-feedback.ion,.form-group-sm .form-control+.form-control-feedback.svg-inline--fa{line-height:calc(1.8125rem + 2px)}label:not(.form-check-label):not(.custom-file-label){font-weight:700}.warning-feedback{font-size:80%;color:#ffc107;display:none;margin-top:.25rem;width:100%}.warning-tooltip{border-radius:.25rem;font-size:.875rem;background-color:rgba(255,193,7,.9);color:#1f2d3d;display:none;line-height:1.5;margin-top:.1rem;max-width:100%;padding:.25rem .5rem;position:absolute;top:100%;z-index:5}.form-control.is-warning{border-color:#ffc107}.form-control.is-warning:focus{border-color:#ffc107;box-shadow:0 0 0 0 rgba(255,193,7,.25)}.form-control.is-warning~.warning-feedback,.form-control.is-warning~.warning-tooltip{display:block}textarea.form-control.is-warning{padding-right:2.25rem;background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-warning{border-color:#ffc107}.custom-select.is-warning:focus{border-color:#ffc107;box-shadow:0 0 0 0 rgba(255,193,7,.25)}.custom-select.is-warning~.warning-feedback,.custom-select.is-warning~.warning-tooltip{display:block}.form-control-file.is-warning~.warning-feedback,.form-control-file.is-warning~.warning-tooltip{display:block}.form-check-input.is-warning~.form-check-label{color:#ffc107}.form-check-input.is-warning~.warning-feedback,.form-check-input.is-warning~.warning-tooltip{display:block}.custom-control-input.is-warning~.custom-control-label{color:#ffc107}.custom-control-input.is-warning~.custom-control-label::before{border-color:#ffc107}.custom-control-input.is-warning~.warning-feedback,.custom-control-input.is-warning~.warning-tooltip{display:block}.custom-control-input.is-warning:checked~.custom-control-label::before{background-color:#ffce3a;border-color:#ffce3a}.custom-control-input.is-warning:focus~.custom-control-label::before{box-shadow:0 0 0 0 rgba(255,193,7,.25)}.custom-control-input.is-warning:focus:not(:checked)~.custom-control-label::before{border-color:#ffc107}.custom-file-input.is-warning~.custom-file-label{border-color:#ffc107}.custom-file-input.is-warning~.warning-feedback,.custom-file-input.is-warning~.warning-tooltip{display:block}.custom-file-input.is-warning:focus~.custom-file-label{border-color:#ffc107;box-shadow:0 0 0 0 rgba(255,193,7,.25)}body.text-sm .input-group-text{font-size:.875rem}.custom-select.form-control-border,.form-control.form-control-border{border-top:0;border-left:0;border-right:0;border-radius:0;box-shadow:inherit}.custom-select.form-control-border.border-width-2,.form-control.form-control-border.border-width-2{border-bottom-width:2px}.custom-select.form-control-border.border-width-3,.form-control.form-control-border.border-width-3{border-bottom-width:3px}.custom-switch.custom-switch-off-primary .custom-control-input~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.custom-switch.custom-switch-off-primary .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-switch.custom-switch-off-primary .custom-control-input~.custom-control-label::after{background-color:#003e80}.custom-switch.custom-switch-on-primary .custom-control-input:checked~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.custom-switch.custom-switch-on-primary .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-switch.custom-switch-on-primary .custom-control-input:checked~.custom-control-label::after{background-color:#99caff}.custom-switch.custom-switch-off-secondary .custom-control-input~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.custom-switch.custom-switch-off-secondary .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-switch.custom-switch-off-secondary .custom-control-input~.custom-control-label::after{background-color:#313539}.custom-switch.custom-switch-on-secondary .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.custom-switch.custom-switch-on-secondary .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-switch.custom-switch-on-secondary .custom-control-input:checked~.custom-control-label::after{background-color:#bcc1c6}.custom-switch.custom-switch-off-success .custom-control-input~.custom-control-label::before{background-color:#28a745;border-color:#145523}.custom-switch.custom-switch-off-success .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-switch.custom-switch-off-success .custom-control-input~.custom-control-label::after{background-color:#0f401b}.custom-switch.custom-switch-on-success .custom-control-input:checked~.custom-control-label::before{background-color:#28a745;border-color:#145523}.custom-switch.custom-switch-on-success .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-switch.custom-switch-on-success .custom-control-input:checked~.custom-control-label::after{background-color:#86e29b}.custom-switch.custom-switch-off-info .custom-control-input~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.custom-switch.custom-switch-off-info .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-switch.custom-switch-off-info .custom-control-input~.custom-control-label::after{background-color:#093e47}.custom-switch.custom-switch-on-info .custom-control-input:checked~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.custom-switch.custom-switch-on-info .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-switch.custom-switch-on-info .custom-control-input:checked~.custom-control-label::after{background-color:#7adeee}.custom-switch.custom-switch-off-warning .custom-control-input~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.custom-switch.custom-switch-off-warning .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-switch.custom-switch-off-warning .custom-control-input~.custom-control-label::after{background-color:#876500}.custom-switch.custom-switch-on-warning .custom-control-input:checked~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.custom-switch.custom-switch-on-warning .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-switch.custom-switch-on-warning .custom-control-input:checked~.custom-control-label::after{background-color:#ffe7a0}.custom-switch.custom-switch-off-danger .custom-control-input~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.custom-switch.custom-switch-off-danger .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-switch.custom-switch-off-danger .custom-control-input~.custom-control-label::after{background-color:#7c151f}.custom-switch.custom-switch-on-danger .custom-control-input:checked~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.custom-switch.custom-switch-on-danger .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-switch.custom-switch-on-danger .custom-control-input:checked~.custom-control-label::after{background-color:#f3b7bd}.custom-switch.custom-switch-off-light .custom-control-input~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.custom-switch.custom-switch-off-light .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.custom-switch.custom-switch-off-light .custom-control-input~.custom-control-label::after{background-color:#aeb9c5}.custom-switch.custom-switch-on-light .custom-control-input:checked~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.custom-switch.custom-switch-on-light .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.custom-switch.custom-switch-on-light .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.custom-switch.custom-switch-off-dark .custom-control-input~.custom-control-label::before{background-color:#343a40;border-color:#060708}.custom-switch.custom-switch-off-dark .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-switch.custom-switch-off-dark .custom-control-input~.custom-control-label::after{background-color:#000}.custom-switch.custom-switch-on-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.custom-switch.custom-switch-on-dark .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-switch.custom-switch-on-dark .custom-control-input:checked~.custom-control-label::after{background-color:#7a8793}.custom-switch.custom-switch-off-lightblue .custom-control-input~.custom-control-label::before{background-color:#3c8dbc;border-color:#23536f}.custom-switch.custom-switch-off-lightblue .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(60,141,188,.25)}.custom-switch.custom-switch-off-lightblue .custom-control-input~.custom-control-label::after{background-color:#1d455b}.custom-switch.custom-switch-on-lightblue .custom-control-input:checked~.custom-control-label::before{background-color:#3c8dbc;border-color:#23536f}.custom-switch.custom-switch-on-lightblue .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(60,141,188,.25)}.custom-switch.custom-switch-on-lightblue .custom-control-input:checked~.custom-control-label::after{background-color:#acd0e5}.custom-switch.custom-switch-off-navy .custom-control-input~.custom-control-label::before{background-color:#001f3f;border-color:#000}.custom-switch.custom-switch-off-navy .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,31,63,.25)}.custom-switch.custom-switch-off-navy .custom-control-input~.custom-control-label::after{background-color:#000}.custom-switch.custom-switch-on-navy .custom-control-input:checked~.custom-control-label::before{background-color:#001f3f;border-color:#000}.custom-switch.custom-switch-on-navy .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,31,63,.25)}.custom-switch.custom-switch-on-navy .custom-control-input:checked~.custom-control-label::after{background-color:#006ad8}.custom-switch.custom-switch-off-olive .custom-control-input~.custom-control-label::before{background-color:#3d9970;border-color:#20503b}.custom-switch.custom-switch-off-olive .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(61,153,112,.25)}.custom-switch.custom-switch-off-olive .custom-control-input~.custom-control-label::after{background-color:#193e2d}.custom-switch.custom-switch-on-olive .custom-control-input:checked~.custom-control-label::before{background-color:#3d9970;border-color:#20503b}.custom-switch.custom-switch-on-olive .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(61,153,112,.25)}.custom-switch.custom-switch-on-olive .custom-control-input:checked~.custom-control-label::after{background-color:#99d6bb}.custom-switch.custom-switch-off-lime .custom-control-input~.custom-control-label::before{background-color:#01ff70;border-color:#009a43}.custom-switch.custom-switch-off-lime .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(1,255,112,.25)}.custom-switch.custom-switch-off-lime .custom-control-input~.custom-control-label::after{background-color:#008138}.custom-switch.custom-switch-on-lime .custom-control-input:checked~.custom-control-label::before{background-color:#01ff70;border-color:#009a43}.custom-switch.custom-switch-on-lime .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(1,255,112,.25)}.custom-switch.custom-switch-on-lime .custom-control-input:checked~.custom-control-label::after{background-color:#9affc6}.custom-switch.custom-switch-off-fuchsia .custom-control-input~.custom-control-label::before{background-color:#f012be;border-color:#930974}.custom-switch.custom-switch-off-fuchsia .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(240,18,190,.25)}.custom-switch.custom-switch-off-fuchsia .custom-control-input~.custom-control-label::after{background-color:#7b0861}.custom-switch.custom-switch-on-fuchsia .custom-control-input:checked~.custom-control-label::before{background-color:#f012be;border-color:#930974}.custom-switch.custom-switch-on-fuchsia .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(240,18,190,.25)}.custom-switch.custom-switch-on-fuchsia .custom-control-input:checked~.custom-control-label::after{background-color:#f9a2e5}.custom-switch.custom-switch-off-maroon .custom-control-input~.custom-control-label::before{background-color:#d81b60;border-color:#7d1038}.custom-switch.custom-switch-off-maroon .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(216,27,96,.25)}.custom-switch.custom-switch-off-maroon .custom-control-input~.custom-control-label::after{background-color:#670d2e}.custom-switch.custom-switch-on-maroon .custom-control-input:checked~.custom-control-label::before{background-color:#d81b60;border-color:#7d1038}.custom-switch.custom-switch-on-maroon .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(216,27,96,.25)}.custom-switch.custom-switch-on-maroon .custom-control-input:checked~.custom-control-label::after{background-color:#f29aba}.custom-switch.custom-switch-off-blue .custom-control-input~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.custom-switch.custom-switch-off-blue .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-switch.custom-switch-off-blue .custom-control-input~.custom-control-label::after{background-color:#003e80}.custom-switch.custom-switch-on-blue .custom-control-input:checked~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.custom-switch.custom-switch-on-blue .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-switch.custom-switch-on-blue .custom-control-input:checked~.custom-control-label::after{background-color:#99caff}.custom-switch.custom-switch-off-indigo .custom-control-input~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.custom-switch.custom-switch-off-indigo .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.custom-switch.custom-switch-off-indigo .custom-control-input~.custom-control-label::after{background-color:#33077c}.custom-switch.custom-switch-on-indigo .custom-control-input:checked~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.custom-switch.custom-switch-on-indigo .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.custom-switch.custom-switch-on-indigo .custom-control-input:checked~.custom-control-label::after{background-color:#c3a1fa}.custom-switch.custom-switch-off-purple .custom-control-input~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.custom-switch.custom-switch-off-purple .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.custom-switch.custom-switch-off-purple .custom-control-input~.custom-control-label::after{background-color:#382063}.custom-switch.custom-switch-on-purple .custom-control-input:checked~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.custom-switch.custom-switch-on-purple .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.custom-switch.custom-switch-on-purple .custom-control-input:checked~.custom-control-label::after{background-color:#c7b5e7}.custom-switch.custom-switch-off-pink .custom-control-input~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.custom-switch.custom-switch-off-pink .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.custom-switch.custom-switch-off-pink .custom-control-input~.custom-control-label::after{background-color:#95124e}.custom-switch.custom-switch-on-pink .custom-control-input:checked~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.custom-switch.custom-switch-on-pink .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.custom-switch.custom-switch-on-pink .custom-control-input:checked~.custom-control-label::after{background-color:#f8c7dd}.custom-switch.custom-switch-off-red .custom-control-input~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.custom-switch.custom-switch-off-red .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-switch.custom-switch-off-red .custom-control-input~.custom-control-label::after{background-color:#7c151f}.custom-switch.custom-switch-on-red .custom-control-input:checked~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.custom-switch.custom-switch-on-red .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-switch.custom-switch-on-red .custom-control-input:checked~.custom-control-label::after{background-color:#f3b7bd}.custom-switch.custom-switch-off-orange .custom-control-input~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.custom-switch.custom-switch-off-orange .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.custom-switch.custom-switch-off-orange .custom-control-input~.custom-control-label::after{background-color:#904201}.custom-switch.custom-switch-on-orange .custom-control-input:checked~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.custom-switch.custom-switch-on-orange .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.custom-switch.custom-switch-on-orange .custom-control-input:checked~.custom-control-label::after{background-color:#fed1ac}.custom-switch.custom-switch-off-yellow .custom-control-input~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.custom-switch.custom-switch-off-yellow .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-switch.custom-switch-off-yellow .custom-control-input~.custom-control-label::after{background-color:#876500}.custom-switch.custom-switch-on-yellow .custom-control-input:checked~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.custom-switch.custom-switch-on-yellow .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-switch.custom-switch-on-yellow .custom-control-input:checked~.custom-control-label::after{background-color:#ffe7a0}.custom-switch.custom-switch-off-green .custom-control-input~.custom-control-label::before{background-color:#28a745;border-color:#145523}.custom-switch.custom-switch-off-green .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-switch.custom-switch-off-green .custom-control-input~.custom-control-label::after{background-color:#0f401b}.custom-switch.custom-switch-on-green .custom-control-input:checked~.custom-control-label::before{background-color:#28a745;border-color:#145523}.custom-switch.custom-switch-on-green .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-switch.custom-switch-on-green .custom-control-input:checked~.custom-control-label::after{background-color:#86e29b}.custom-switch.custom-switch-off-teal .custom-control-input~.custom-control-label::before{background-color:#20c997;border-color:#127155}.custom-switch.custom-switch-off-teal .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.custom-switch.custom-switch-off-teal .custom-control-input~.custom-control-label::after{background-color:#0e5b44}.custom-switch.custom-switch-on-teal .custom-control-input:checked~.custom-control-label::before{background-color:#20c997;border-color:#127155}.custom-switch.custom-switch-on-teal .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.custom-switch.custom-switch-on-teal .custom-control-input:checked~.custom-control-label::after{background-color:#94eed3}.custom-switch.custom-switch-off-cyan .custom-control-input~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.custom-switch.custom-switch-off-cyan .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-switch.custom-switch-off-cyan .custom-control-input~.custom-control-label::after{background-color:#093e47}.custom-switch.custom-switch-on-cyan .custom-control-input:checked~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.custom-switch.custom-switch-on-cyan .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-switch.custom-switch-on-cyan .custom-control-input:checked~.custom-control-label::after{background-color:#7adeee}.custom-switch.custom-switch-off-white .custom-control-input~.custom-control-label::before{background-color:#fff;border-color:#ccc}.custom-switch.custom-switch-off-white .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.custom-switch.custom-switch-off-white .custom-control-input~.custom-control-label::after{background-color:#bfbfbf}.custom-switch.custom-switch-on-white .custom-control-input:checked~.custom-control-label::before{background-color:#fff;border-color:#ccc}.custom-switch.custom-switch-on-white .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.custom-switch.custom-switch-on-white .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.custom-switch.custom-switch-off-gray .custom-control-input~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.custom-switch.custom-switch-off-gray .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-switch.custom-switch-off-gray .custom-control-input~.custom-control-label::after{background-color:#313539}.custom-switch.custom-switch-on-gray .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.custom-switch.custom-switch-on-gray .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-switch.custom-switch-on-gray .custom-control-input:checked~.custom-control-label::after{background-color:#bcc1c6}.custom-switch.custom-switch-off-gray-dark .custom-control-input~.custom-control-label::before{background-color:#343a40;border-color:#060708}.custom-switch.custom-switch-off-gray-dark .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-switch.custom-switch-off-gray-dark .custom-control-input~.custom-control-label::after{background-color:#000}.custom-switch.custom-switch-on-gray-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.custom-switch.custom-switch-on-gray-dark .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-switch.custom-switch-on-gray-dark .custom-control-input:checked~.custom-control-label::after{background-color:#7a8793}.custom-range.custom-range-primary:focus{outline:0}.custom-range.custom-range-primary:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-primary:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-primary:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-primary::-webkit-slider-thumb{background-color:#007bff}.custom-range.custom-range-primary::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-primary::-moz-range-thumb{background-color:#007bff}.custom-range.custom-range-primary::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-primary::-ms-thumb{background-color:#007bff}.custom-range.custom-range-primary::-ms-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-secondary:focus{outline:0}.custom-range.custom-range-secondary:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-secondary:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-secondary:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-secondary::-webkit-slider-thumb{background-color:#6c757d}.custom-range.custom-range-secondary::-webkit-slider-thumb:active{background-color:#caced1}.custom-range.custom-range-secondary::-moz-range-thumb{background-color:#6c757d}.custom-range.custom-range-secondary::-moz-range-thumb:active{background-color:#caced1}.custom-range.custom-range-secondary::-ms-thumb{background-color:#6c757d}.custom-range.custom-range-secondary::-ms-thumb:active{background-color:#caced1}.custom-range.custom-range-success:focus{outline:0}.custom-range.custom-range-success:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-success:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-success:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-success::-webkit-slider-thumb{background-color:#28a745}.custom-range.custom-range-success::-webkit-slider-thumb:active{background-color:#9be7ac}.custom-range.custom-range-success::-moz-range-thumb{background-color:#28a745}.custom-range.custom-range-success::-moz-range-thumb:active{background-color:#9be7ac}.custom-range.custom-range-success::-ms-thumb{background-color:#28a745}.custom-range.custom-range-success::-ms-thumb:active{background-color:#9be7ac}.custom-range.custom-range-info:focus{outline:0}.custom-range.custom-range-info:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-info:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-info:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-info::-webkit-slider-thumb{background-color:#17a2b8}.custom-range.custom-range-info::-webkit-slider-thumb:active{background-color:#90e4f1}.custom-range.custom-range-info::-moz-range-thumb{background-color:#17a2b8}.custom-range.custom-range-info::-moz-range-thumb:active{background-color:#90e4f1}.custom-range.custom-range-info::-ms-thumb{background-color:#17a2b8}.custom-range.custom-range-info::-ms-thumb:active{background-color:#90e4f1}.custom-range.custom-range-warning:focus{outline:0}.custom-range.custom-range-warning:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-warning:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-warning:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-warning::-webkit-slider-thumb{background-color:#ffc107}.custom-range.custom-range-warning::-webkit-slider-thumb:active{background-color:#ffeeba}.custom-range.custom-range-warning::-moz-range-thumb{background-color:#ffc107}.custom-range.custom-range-warning::-moz-range-thumb:active{background-color:#ffeeba}.custom-range.custom-range-warning::-ms-thumb{background-color:#ffc107}.custom-range.custom-range-warning::-ms-thumb:active{background-color:#ffeeba}.custom-range.custom-range-danger:focus{outline:0}.custom-range.custom-range-danger:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-danger:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-danger:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-danger::-webkit-slider-thumb{background-color:#dc3545}.custom-range.custom-range-danger::-webkit-slider-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-danger::-moz-range-thumb{background-color:#dc3545}.custom-range.custom-range-danger::-moz-range-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-danger::-ms-thumb{background-color:#dc3545}.custom-range.custom-range-danger::-ms-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-light:focus{outline:0}.custom-range.custom-range-light:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.custom-range.custom-range-light:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.custom-range.custom-range-light:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.custom-range.custom-range-light::-webkit-slider-thumb{background-color:#f8f9fa}.custom-range.custom-range-light::-webkit-slider-thumb:active{background-color:#fff}.custom-range.custom-range-light::-moz-range-thumb{background-color:#f8f9fa}.custom-range.custom-range-light::-moz-range-thumb:active{background-color:#fff}.custom-range.custom-range-light::-ms-thumb{background-color:#f8f9fa}.custom-range.custom-range-light::-ms-thumb:active{background-color:#fff}.custom-range.custom-range-dark:focus{outline:0}.custom-range.custom-range-dark:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-dark:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-dark:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-dark::-webkit-slider-thumb{background-color:#343a40}.custom-range.custom-range-dark::-webkit-slider-thumb:active{background-color:#88939e}.custom-range.custom-range-dark::-moz-range-thumb{background-color:#343a40}.custom-range.custom-range-dark::-moz-range-thumb:active{background-color:#88939e}.custom-range.custom-range-dark::-ms-thumb{background-color:#343a40}.custom-range.custom-range-dark::-ms-thumb:active{background-color:#88939e}.custom-range.custom-range-lightblue:focus{outline:0}.custom-range.custom-range-lightblue:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(60,141,188,.25)}.custom-range.custom-range-lightblue:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(60,141,188,.25)}.custom-range.custom-range-lightblue:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(60,141,188,.25)}.custom-range.custom-range-lightblue::-webkit-slider-thumb{background-color:#3c8dbc}.custom-range.custom-range-lightblue::-webkit-slider-thumb:active{background-color:#c0dbeb}.custom-range.custom-range-lightblue::-moz-range-thumb{background-color:#3c8dbc}.custom-range.custom-range-lightblue::-moz-range-thumb:active{background-color:#c0dbeb}.custom-range.custom-range-lightblue::-ms-thumb{background-color:#3c8dbc}.custom-range.custom-range-lightblue::-ms-thumb:active{background-color:#c0dbeb}.custom-range.custom-range-navy:focus{outline:0}.custom-range.custom-range-navy:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,31,63,.25)}.custom-range.custom-range-navy:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,31,63,.25)}.custom-range.custom-range-navy:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,31,63,.25)}.custom-range.custom-range-navy::-webkit-slider-thumb{background-color:#001f3f}.custom-range.custom-range-navy::-webkit-slider-thumb:active{background-color:#0077f2}.custom-range.custom-range-navy::-moz-range-thumb{background-color:#001f3f}.custom-range.custom-range-navy::-moz-range-thumb:active{background-color:#0077f2}.custom-range.custom-range-navy::-ms-thumb{background-color:#001f3f}.custom-range.custom-range-navy::-ms-thumb:active{background-color:#0077f2}.custom-range.custom-range-olive:focus{outline:0}.custom-range.custom-range-olive:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(61,153,112,.25)}.custom-range.custom-range-olive:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(61,153,112,.25)}.custom-range.custom-range-olive:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(61,153,112,.25)}.custom-range.custom-range-olive::-webkit-slider-thumb{background-color:#3d9970}.custom-range.custom-range-olive::-webkit-slider-thumb:active{background-color:#abdec7}.custom-range.custom-range-olive::-moz-range-thumb{background-color:#3d9970}.custom-range.custom-range-olive::-moz-range-thumb:active{background-color:#abdec7}.custom-range.custom-range-olive::-ms-thumb{background-color:#3d9970}.custom-range.custom-range-olive::-ms-thumb:active{background-color:#abdec7}.custom-range.custom-range-lime:focus{outline:0}.custom-range.custom-range-lime:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(1,255,112,.25)}.custom-range.custom-range-lime:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(1,255,112,.25)}.custom-range.custom-range-lime:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(1,255,112,.25)}.custom-range.custom-range-lime::-webkit-slider-thumb{background-color:#01ff70}.custom-range.custom-range-lime::-webkit-slider-thumb:active{background-color:#b4ffd4}.custom-range.custom-range-lime::-moz-range-thumb{background-color:#01ff70}.custom-range.custom-range-lime::-moz-range-thumb:active{background-color:#b4ffd4}.custom-range.custom-range-lime::-ms-thumb{background-color:#01ff70}.custom-range.custom-range-lime::-ms-thumb:active{background-color:#b4ffd4}.custom-range.custom-range-fuchsia:focus{outline:0}.custom-range.custom-range-fuchsia:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(240,18,190,.25)}.custom-range.custom-range-fuchsia:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(240,18,190,.25)}.custom-range.custom-range-fuchsia:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(240,18,190,.25)}.custom-range.custom-range-fuchsia::-webkit-slider-thumb{background-color:#f012be}.custom-range.custom-range-fuchsia::-webkit-slider-thumb:active{background-color:#fbbaec}.custom-range.custom-range-fuchsia::-moz-range-thumb{background-color:#f012be}.custom-range.custom-range-fuchsia::-moz-range-thumb:active{background-color:#fbbaec}.custom-range.custom-range-fuchsia::-ms-thumb{background-color:#f012be}.custom-range.custom-range-fuchsia::-ms-thumb:active{background-color:#fbbaec}.custom-range.custom-range-maroon:focus{outline:0}.custom-range.custom-range-maroon:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(216,27,96,.25)}.custom-range.custom-range-maroon:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(216,27,96,.25)}.custom-range.custom-range-maroon:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(216,27,96,.25)}.custom-range.custom-range-maroon::-webkit-slider-thumb{background-color:#d81b60}.custom-range.custom-range-maroon::-webkit-slider-thumb:active{background-color:#f5b0c9}.custom-range.custom-range-maroon::-moz-range-thumb{background-color:#d81b60}.custom-range.custom-range-maroon::-moz-range-thumb:active{background-color:#f5b0c9}.custom-range.custom-range-maroon::-ms-thumb{background-color:#d81b60}.custom-range.custom-range-maroon::-ms-thumb:active{background-color:#f5b0c9}.custom-range.custom-range-blue:focus{outline:0}.custom-range.custom-range-blue:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-blue:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-blue:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,123,255,.25)}.custom-range.custom-range-blue::-webkit-slider-thumb{background-color:#007bff}.custom-range.custom-range-blue::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-blue::-moz-range-thumb{background-color:#007bff}.custom-range.custom-range-blue::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-blue::-ms-thumb{background-color:#007bff}.custom-range.custom-range-blue::-ms-thumb:active{background-color:#b3d7ff}.custom-range.custom-range-indigo:focus{outline:0}.custom-range.custom-range-indigo:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.custom-range.custom-range-indigo:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.custom-range.custom-range-indigo:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.custom-range.custom-range-indigo::-webkit-slider-thumb{background-color:#6610f2}.custom-range.custom-range-indigo::-webkit-slider-thumb:active{background-color:#d2b9fb}.custom-range.custom-range-indigo::-moz-range-thumb{background-color:#6610f2}.custom-range.custom-range-indigo::-moz-range-thumb:active{background-color:#d2b9fb}.custom-range.custom-range-indigo::-ms-thumb{background-color:#6610f2}.custom-range.custom-range-indigo::-ms-thumb:active{background-color:#d2b9fb}.custom-range.custom-range-purple:focus{outline:0}.custom-range.custom-range-purple:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.custom-range.custom-range-purple:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.custom-range.custom-range-purple:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.custom-range.custom-range-purple::-webkit-slider-thumb{background-color:#6f42c1}.custom-range.custom-range-purple::-webkit-slider-thumb:active{background-color:#d5c8ed}.custom-range.custom-range-purple::-moz-range-thumb{background-color:#6f42c1}.custom-range.custom-range-purple::-moz-range-thumb:active{background-color:#d5c8ed}.custom-range.custom-range-purple::-ms-thumb{background-color:#6f42c1}.custom-range.custom-range-purple::-ms-thumb:active{background-color:#d5c8ed}.custom-range.custom-range-pink:focus{outline:0}.custom-range.custom-range-pink:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.custom-range.custom-range-pink:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.custom-range.custom-range-pink:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.custom-range.custom-range-pink::-webkit-slider-thumb{background-color:#e83e8c}.custom-range.custom-range-pink::-webkit-slider-thumb:active{background-color:#fbddeb}.custom-range.custom-range-pink::-moz-range-thumb{background-color:#e83e8c}.custom-range.custom-range-pink::-moz-range-thumb:active{background-color:#fbddeb}.custom-range.custom-range-pink::-ms-thumb{background-color:#e83e8c}.custom-range.custom-range-pink::-ms-thumb:active{background-color:#fbddeb}.custom-range.custom-range-red:focus{outline:0}.custom-range.custom-range-red:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-red:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-red:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(220,53,69,.25)}.custom-range.custom-range-red::-webkit-slider-thumb{background-color:#dc3545}.custom-range.custom-range-red::-webkit-slider-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-red::-moz-range-thumb{background-color:#dc3545}.custom-range.custom-range-red::-moz-range-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-red::-ms-thumb{background-color:#dc3545}.custom-range.custom-range-red::-ms-thumb:active{background-color:#f6cdd1}.custom-range.custom-range-orange:focus{outline:0}.custom-range.custom-range-orange:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.custom-range.custom-range-orange:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.custom-range.custom-range-orange:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.custom-range.custom-range-orange::-webkit-slider-thumb{background-color:#fd7e14}.custom-range.custom-range-orange::-webkit-slider-thumb:active{background-color:#ffdfc5}.custom-range.custom-range-orange::-moz-range-thumb{background-color:#fd7e14}.custom-range.custom-range-orange::-moz-range-thumb:active{background-color:#ffdfc5}.custom-range.custom-range-orange::-ms-thumb{background-color:#fd7e14}.custom-range.custom-range-orange::-ms-thumb:active{background-color:#ffdfc5}.custom-range.custom-range-yellow:focus{outline:0}.custom-range.custom-range-yellow:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-yellow:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-yellow:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,193,7,.25)}.custom-range.custom-range-yellow::-webkit-slider-thumb{background-color:#ffc107}.custom-range.custom-range-yellow::-webkit-slider-thumb:active{background-color:#ffeeba}.custom-range.custom-range-yellow::-moz-range-thumb{background-color:#ffc107}.custom-range.custom-range-yellow::-moz-range-thumb:active{background-color:#ffeeba}.custom-range.custom-range-yellow::-ms-thumb{background-color:#ffc107}.custom-range.custom-range-yellow::-ms-thumb:active{background-color:#ffeeba}.custom-range.custom-range-green:focus{outline:0}.custom-range.custom-range-green:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-green:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-green:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(40,167,69,.25)}.custom-range.custom-range-green::-webkit-slider-thumb{background-color:#28a745}.custom-range.custom-range-green::-webkit-slider-thumb:active{background-color:#9be7ac}.custom-range.custom-range-green::-moz-range-thumb{background-color:#28a745}.custom-range.custom-range-green::-moz-range-thumb:active{background-color:#9be7ac}.custom-range.custom-range-green::-ms-thumb{background-color:#28a745}.custom-range.custom-range-green::-ms-thumb:active{background-color:#9be7ac}.custom-range.custom-range-teal:focus{outline:0}.custom-range.custom-range-teal:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.custom-range.custom-range-teal:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.custom-range.custom-range-teal:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.custom-range.custom-range-teal::-webkit-slider-thumb{background-color:#20c997}.custom-range.custom-range-teal::-webkit-slider-thumb:active{background-color:#aaf1dc}.custom-range.custom-range-teal::-moz-range-thumb{background-color:#20c997}.custom-range.custom-range-teal::-moz-range-thumb:active{background-color:#aaf1dc}.custom-range.custom-range-teal::-ms-thumb{background-color:#20c997}.custom-range.custom-range-teal::-ms-thumb:active{background-color:#aaf1dc}.custom-range.custom-range-cyan:focus{outline:0}.custom-range.custom-range-cyan:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-cyan:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-cyan:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(23,162,184,.25)}.custom-range.custom-range-cyan::-webkit-slider-thumb{background-color:#17a2b8}.custom-range.custom-range-cyan::-webkit-slider-thumb:active{background-color:#90e4f1}.custom-range.custom-range-cyan::-moz-range-thumb{background-color:#17a2b8}.custom-range.custom-range-cyan::-moz-range-thumb:active{background-color:#90e4f1}.custom-range.custom-range-cyan::-ms-thumb{background-color:#17a2b8}.custom-range.custom-range-cyan::-ms-thumb:active{background-color:#90e4f1}.custom-range.custom-range-white:focus{outline:0}.custom-range.custom-range-white:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.custom-range.custom-range-white:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.custom-range.custom-range-white:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.custom-range.custom-range-white::-webkit-slider-thumb{background-color:#fff}.custom-range.custom-range-white::-webkit-slider-thumb:active{background-color:#fff}.custom-range.custom-range-white::-moz-range-thumb{background-color:#fff}.custom-range.custom-range-white::-moz-range-thumb:active{background-color:#fff}.custom-range.custom-range-white::-ms-thumb{background-color:#fff}.custom-range.custom-range-white::-ms-thumb:active{background-color:#fff}.custom-range.custom-range-gray:focus{outline:0}.custom-range.custom-range-gray:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-gray:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-gray:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.custom-range.custom-range-gray::-webkit-slider-thumb{background-color:#6c757d}.custom-range.custom-range-gray::-webkit-slider-thumb:active{background-color:#caced1}.custom-range.custom-range-gray::-moz-range-thumb{background-color:#6c757d}.custom-range.custom-range-gray::-moz-range-thumb:active{background-color:#caced1}.custom-range.custom-range-gray::-ms-thumb{background-color:#6c757d}.custom-range.custom-range-gray::-ms-thumb:active{background-color:#caced1}.custom-range.custom-range-gray-dark:focus{outline:0}.custom-range.custom-range-gray-dark:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-gray-dark:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-gray-dark:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.custom-range.custom-range-gray-dark::-webkit-slider-thumb{background-color:#343a40}.custom-range.custom-range-gray-dark::-webkit-slider-thumb:active{background-color:#88939e}.custom-range.custom-range-gray-dark::-moz-range-thumb{background-color:#343a40}.custom-range.custom-range-gray-dark::-moz-range-thumb:active{background-color:#88939e}.custom-range.custom-range-gray-dark::-ms-thumb{background-color:#343a40}.custom-range.custom-range-gray-dark::-ms-thumb:active{background-color:#88939e}.custom-control-input-primary:checked~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-control-input-primary.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23007bff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-primary.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23007bff'/%3E%3C/svg%3E")!important}.custom-control-input-primary:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input-primary:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input-primary:not(:disabled):active~.custom-control-label::before{background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input-secondary:checked~.custom-control-label::before{border-color:#6c757d;background-color:#6c757d}.custom-control-input-secondary.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236c757d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-secondary.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236c757d'/%3E%3C/svg%3E")!important}.custom-control-input-secondary:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(108,117,125,.25)}.custom-control-input-secondary:focus:not(:checked)~.custom-control-label::before{border-color:#afb5ba}.custom-control-input-secondary:not(:disabled):active~.custom-control-label::before{background-color:#caced1;border-color:#caced1}.custom-control-input-success:checked~.custom-control-label::before{border-color:#28a745;background-color:#28a745}.custom-control-input-success.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2328a745' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-success.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2328a745'/%3E%3C/svg%3E")!important}.custom-control-input-success:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(40,167,69,.25)}.custom-control-input-success:focus:not(:checked)~.custom-control-label::before{border-color:#71dd8a}.custom-control-input-success:not(:disabled):active~.custom-control-label::before{background-color:#9be7ac;border-color:#9be7ac}.custom-control-input-info:checked~.custom-control-label::before{border-color:#17a2b8;background-color:#17a2b8}.custom-control-input-info.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2317a2b8' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-info.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2317a2b8'/%3E%3C/svg%3E")!important}.custom-control-input-info:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(23,162,184,.25)}.custom-control-input-info:focus:not(:checked)~.custom-control-label::before{border-color:#63d9ec}.custom-control-input-info:not(:disabled):active~.custom-control-label::before{background-color:#90e4f1;border-color:#90e4f1}.custom-control-input-warning:checked~.custom-control-label::before{border-color:#ffc107;background-color:#ffc107}.custom-control-input-warning.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23ffc107' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-warning.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23ffc107'/%3E%3C/svg%3E")!important}.custom-control-input-warning:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(255,193,7,.25)}.custom-control-input-warning:focus:not(:checked)~.custom-control-label::before{border-color:#ffe187}.custom-control-input-warning:not(:disabled):active~.custom-control-label::before{background-color:#ffeeba;border-color:#ffeeba}.custom-control-input-danger:checked~.custom-control-label::before{border-color:#dc3545;background-color:#dc3545}.custom-control-input-danger.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23dc3545' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-danger.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23dc3545'/%3E%3C/svg%3E")!important}.custom-control-input-danger:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(220,53,69,.25)}.custom-control-input-danger:focus:not(:checked)~.custom-control-label::before{border-color:#efa2a9}.custom-control-input-danger:not(:disabled):active~.custom-control-label::before{background-color:#f6cdd1;border-color:#f6cdd1}.custom-control-input-light:checked~.custom-control-label::before{border-color:#f8f9fa;background-color:#f8f9fa}.custom-control-input-light.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f8f9fa' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-light.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f8f9fa'/%3E%3C/svg%3E")!important}.custom-control-input-light:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(248,249,250,.25)}.custom-control-input-light:focus:not(:checked)~.custom-control-label::before{border-color:#fff}.custom-control-input-light:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.custom-control-input-dark:checked~.custom-control-label::before{border-color:#343a40;background-color:#343a40}.custom-control-input-dark.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23343a40' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-dark.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23343a40'/%3E%3C/svg%3E")!important}.custom-control-input-dark:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,58,64,.25)}.custom-control-input-dark:focus:not(:checked)~.custom-control-label::before{border-color:#6d7a86}.custom-control-input-dark:not(:disabled):active~.custom-control-label::before{background-color:#88939e;border-color:#88939e}.custom-control-input-lightblue:checked~.custom-control-label::before{border-color:#3c8dbc;background-color:#3c8dbc}.custom-control-input-lightblue.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233c8dbc' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-lightblue.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233c8dbc'/%3E%3C/svg%3E")!important}.custom-control-input-lightblue:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(60,141,188,.25)}.custom-control-input-lightblue:focus:not(:checked)~.custom-control-label::before{border-color:#99c5de}.custom-control-input-lightblue:not(:disabled):active~.custom-control-label::before{background-color:#c0dbeb;border-color:#c0dbeb}.custom-control-input-navy:checked~.custom-control-label::before{border-color:#001f3f;background-color:#001f3f}.custom-control-input-navy.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23001f3f' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-navy.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23001f3f'/%3E%3C/svg%3E")!important}.custom-control-input-navy:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,31,63,.25)}.custom-control-input-navy:focus:not(:checked)~.custom-control-label::before{border-color:#005ebf}.custom-control-input-navy:not(:disabled):active~.custom-control-label::before{background-color:#0077f2;border-color:#0077f2}.custom-control-input-olive:checked~.custom-control-label::before{border-color:#3d9970;background-color:#3d9970}.custom-control-input-olive.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233d9970' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-olive.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233d9970'/%3E%3C/svg%3E")!important}.custom-control-input-olive:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(61,153,112,.25)}.custom-control-input-olive:focus:not(:checked)~.custom-control-label::before{border-color:#87cfaf}.custom-control-input-olive:not(:disabled):active~.custom-control-label::before{background-color:#abdec7;border-color:#abdec7}.custom-control-input-lime:checked~.custom-control-label::before{border-color:#01ff70;background-color:#01ff70}.custom-control-input-lime.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2301ff70' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-lime.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2301ff70'/%3E%3C/svg%3E")!important}.custom-control-input-lime:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(1,255,112,.25)}.custom-control-input-lime:focus:not(:checked)~.custom-control-label::before{border-color:#81ffb8}.custom-control-input-lime:not(:disabled):active~.custom-control-label::before{background-color:#b4ffd4;border-color:#b4ffd4}.custom-control-input-fuchsia:checked~.custom-control-label::before{border-color:#f012be;background-color:#f012be}.custom-control-input-fuchsia.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f012be' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-fuchsia.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f012be'/%3E%3C/svg%3E")!important}.custom-control-input-fuchsia:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(240,18,190,.25)}.custom-control-input-fuchsia:focus:not(:checked)~.custom-control-label::before{border-color:#f88adf}.custom-control-input-fuchsia:not(:disabled):active~.custom-control-label::before{background-color:#fbbaec;border-color:#fbbaec}.custom-control-input-maroon:checked~.custom-control-label::before{border-color:#d81b60;background-color:#d81b60}.custom-control-input-maroon.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23d81b60' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-maroon.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23d81b60'/%3E%3C/svg%3E")!important}.custom-control-input-maroon:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(216,27,96,.25)}.custom-control-input-maroon:focus:not(:checked)~.custom-control-label::before{border-color:#f083ab}.custom-control-input-maroon:not(:disabled):active~.custom-control-label::before{background-color:#f5b0c9;border-color:#f5b0c9}.custom-control-input-blue:checked~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-control-input-blue.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23007bff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-blue.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23007bff'/%3E%3C/svg%3E")!important}.custom-control-input-blue:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input-blue:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input-blue:not(:disabled):active~.custom-control-label::before{background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input-indigo:checked~.custom-control-label::before{border-color:#6610f2;background-color:#6610f2}.custom-control-input-indigo.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236610f2' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-indigo.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236610f2'/%3E%3C/svg%3E")!important}.custom-control-input-indigo:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(102,16,242,.25)}.custom-control-input-indigo:focus:not(:checked)~.custom-control-label::before{border-color:#b389f9}.custom-control-input-indigo:not(:disabled):active~.custom-control-label::before{background-color:#d2b9fb;border-color:#d2b9fb}.custom-control-input-purple:checked~.custom-control-label::before{border-color:#6f42c1;background-color:#6f42c1}.custom-control-input-purple.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236f42c1' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-purple.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236f42c1'/%3E%3C/svg%3E")!important}.custom-control-input-purple:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(111,66,193,.25)}.custom-control-input-purple:focus:not(:checked)~.custom-control-label::before{border-color:#b8a2e0}.custom-control-input-purple:not(:disabled):active~.custom-control-label::before{background-color:#d5c8ed;border-color:#d5c8ed}.custom-control-input-pink:checked~.custom-control-label::before{border-color:#e83e8c;background-color:#e83e8c}.custom-control-input-pink.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23e83e8c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-pink.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23e83e8c'/%3E%3C/svg%3E")!important}.custom-control-input-pink:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(232,62,140,.25)}.custom-control-input-pink:focus:not(:checked)~.custom-control-label::before{border-color:#f6b0d0}.custom-control-input-pink:not(:disabled):active~.custom-control-label::before{background-color:#fbddeb;border-color:#fbddeb}.custom-control-input-red:checked~.custom-control-label::before{border-color:#dc3545;background-color:#dc3545}.custom-control-input-red.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23dc3545' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-red.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23dc3545'/%3E%3C/svg%3E")!important}.custom-control-input-red:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(220,53,69,.25)}.custom-control-input-red:focus:not(:checked)~.custom-control-label::before{border-color:#efa2a9}.custom-control-input-red:not(:disabled):active~.custom-control-label::before{background-color:#f6cdd1;border-color:#f6cdd1}.custom-control-input-orange:checked~.custom-control-label::before{border-color:#fd7e14;background-color:#fd7e14}.custom-control-input-orange.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fd7e14' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-orange.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fd7e14'/%3E%3C/svg%3E")!important}.custom-control-input-orange:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(253,126,20,.25)}.custom-control-input-orange:focus:not(:checked)~.custom-control-label::before{border-color:#fec392}.custom-control-input-orange:not(:disabled):active~.custom-control-label::before{background-color:#ffdfc5;border-color:#ffdfc5}.custom-control-input-yellow:checked~.custom-control-label::before{border-color:#ffc107;background-color:#ffc107}.custom-control-input-yellow.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23ffc107' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-yellow.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23ffc107'/%3E%3C/svg%3E")!important}.custom-control-input-yellow:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(255,193,7,.25)}.custom-control-input-yellow:focus:not(:checked)~.custom-control-label::before{border-color:#ffe187}.custom-control-input-yellow:not(:disabled):active~.custom-control-label::before{background-color:#ffeeba;border-color:#ffeeba}.custom-control-input-green:checked~.custom-control-label::before{border-color:#28a745;background-color:#28a745}.custom-control-input-green.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2328a745' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-green.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2328a745'/%3E%3C/svg%3E")!important}.custom-control-input-green:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(40,167,69,.25)}.custom-control-input-green:focus:not(:checked)~.custom-control-label::before{border-color:#71dd8a}.custom-control-input-green:not(:disabled):active~.custom-control-label::before{background-color:#9be7ac;border-color:#9be7ac}.custom-control-input-teal:checked~.custom-control-label::before{border-color:#20c997;background-color:#20c997}.custom-control-input-teal.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2320c997' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-teal.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2320c997'/%3E%3C/svg%3E")!important}.custom-control-input-teal:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(32,201,151,.25)}.custom-control-input-teal:focus:not(:checked)~.custom-control-label::before{border-color:#7eeaca}.custom-control-input-teal:not(:disabled):active~.custom-control-label::before{background-color:#aaf1dc;border-color:#aaf1dc}.custom-control-input-cyan:checked~.custom-control-label::before{border-color:#17a2b8;background-color:#17a2b8}.custom-control-input-cyan.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2317a2b8' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-cyan.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2317a2b8'/%3E%3C/svg%3E")!important}.custom-control-input-cyan:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(23,162,184,.25)}.custom-control-input-cyan:focus:not(:checked)~.custom-control-label::before{border-color:#63d9ec}.custom-control-input-cyan:not(:disabled):active~.custom-control-label::before{background-color:#90e4f1;border-color:#90e4f1}.custom-control-input-white:checked~.custom-control-label::before{border-color:#fff;background-color:#fff}.custom-control-input-white.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-white.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E")!important}.custom-control-input-white:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(255,255,255,.25)}.custom-control-input-white:focus:not(:checked)~.custom-control-label::before{border-color:#fff}.custom-control-input-white:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.custom-control-input-gray:checked~.custom-control-label::before{border-color:#6c757d;background-color:#6c757d}.custom-control-input-gray.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236c757d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-gray.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236c757d'/%3E%3C/svg%3E")!important}.custom-control-input-gray:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(108,117,125,.25)}.custom-control-input-gray:focus:not(:checked)~.custom-control-label::before{border-color:#afb5ba}.custom-control-input-gray:not(:disabled):active~.custom-control-label::before{background-color:#caced1;border-color:#caced1}.custom-control-input-gray-dark:checked~.custom-control-label::before{border-color:#343a40;background-color:#343a40}.custom-control-input-gray-dark.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23343a40' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.custom-control-input-gray-dark.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23343a40'/%3E%3C/svg%3E")!important}.custom-control-input-gray-dark:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,58,64,.25)}.custom-control-input-gray-dark:focus:not(:checked)~.custom-control-label::before{border-color:#6d7a86}.custom-control-input-gray-dark:not(:disabled):active~.custom-control-label::before{background-color:#88939e;border-color:#88939e}.custom-control-input-outline~.custom-control-label::before{background-color:transparent!important;box-shadow:none}.custom-control-input-outline:checked~.custom-control-label::before{background-color:transparent}.navbar-dark .btn-navbar,.navbar-dark .form-control-navbar{background-color:#3f474e;border:1px solid #56606a;color:#fff}.navbar-dark .btn-navbar:hover{background-color:#454d55}.navbar-dark .btn-navbar:focus{background-color:#4b545c}.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar,.navbar-dark .form-control-navbar+.input-group-prepend>.btn-navbar{background-color:#3f474e;color:#fff;border:1px solid #56606a;border-left:none}.dark-mode .custom-control-label::before,.dark-mode .custom-file-label,.dark-mode .custom-file-label::after,.dark-mode .custom-select,.dark-mode .form-control:not(.form-control-navbar):not(.form-control-sidebar),.dark-mode .input-group-text{background-color:#343a40;color:#fff}.dark-mode .custom-file-label,.dark-mode .custom-file-label::after,.dark-mode .form-control:not(.form-control-navbar):not(.form-control-sidebar):not(.is-invalid):not(:focus){border-color:#6c757d}.dark-mode select{background-color:#343a40;color:#fff;border-color:#6c757d}.dark-mode .custom-select{background:#343a40 url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23fff' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right .75rem center/8px 10px no-repeat}.dark-mode .custom-select[multiple]{background:#343a40}.dark-mode .input-group-text{border-color:#6c757d}.dark-mode .custom-control-input:disabled~.custom-control-label::before,.dark-mode .custom-control-input[disabled]~.custom-control-label::before{background-color:#3f474e;border-color:#6c757d;color:#fff}.dark-mode input:-webkit-autofill,.dark-mode input:-webkit-autofill:focus,.dark-mode input:-webkit-autofill:hover,.dark-mode select:-webkit-autofill,.dark-mode select:-webkit-autofill:focus,.dark-mode select:-webkit-autofill:hover,.dark-mode textarea:-webkit-autofill,.dark-mode textarea:-webkit-autofill:focus,.dark-mode textarea:-webkit-autofill:hover{-webkit-text-fill-color:#fff}.dark-mode .custom-range::-webkit-slider-runnable-track{background-color:#454d55}.dark-mode .custom-range::-moz-range-track{background-color:#454d55}.dark-mode .custom-range::-ms-track{background-color:#454d55}.dark-mode .custom-range.custom-range-primary:focus{outline:0}.dark-mode .custom-range.custom-range-primary:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-primary:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-primary:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-primary::-webkit-slider-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-primary::-webkit-slider-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-primary::-moz-range-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-primary::-moz-range-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-primary::-ms-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-primary::-ms-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-secondary:focus{outline:0}.dark-mode .custom-range.custom-range-secondary:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-secondary:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-secondary:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-secondary::-webkit-slider-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-secondary::-webkit-slider-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-secondary::-moz-range-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-secondary::-moz-range-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-secondary::-ms-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-secondary::-ms-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-success:focus{outline:0}.dark-mode .custom-range.custom-range-success:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-success:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-success:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-success::-webkit-slider-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-success::-webkit-slider-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-success::-moz-range-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-success::-moz-range-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-success::-ms-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-success::-ms-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-info:focus{outline:0}.dark-mode .custom-range.custom-range-info:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-info:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-info:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-info::-webkit-slider-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-info::-webkit-slider-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-info::-moz-range-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-info::-moz-range-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-info::-ms-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-info::-ms-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-warning:focus{outline:0}.dark-mode .custom-range.custom-range-warning:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-warning:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-warning:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-warning::-webkit-slider-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-warning::-webkit-slider-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-warning::-moz-range-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-warning::-moz-range-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-warning::-ms-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-warning::-ms-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-danger:focus{outline:0}.dark-mode .custom-range.custom-range-danger:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-danger:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-danger:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-danger::-webkit-slider-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-danger::-webkit-slider-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-danger::-moz-range-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-danger::-moz-range-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-danger::-ms-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-danger::-ms-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-light:focus{outline:0}.dark-mode .custom-range.custom-range-light:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.dark-mode .custom-range.custom-range-light:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.dark-mode .custom-range.custom-range-light:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.dark-mode .custom-range.custom-range-light::-webkit-slider-thumb{background-color:#f8f9fa}.dark-mode .custom-range.custom-range-light::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-light::-moz-range-thumb{background-color:#f8f9fa}.dark-mode .custom-range.custom-range-light::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-light::-ms-thumb{background-color:#f8f9fa}.dark-mode .custom-range.custom-range-light::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-dark:focus{outline:0}.dark-mode .custom-range.custom-range-dark:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-dark:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-dark:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-dark::-webkit-slider-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-dark::-webkit-slider-thumb:active{background-color:#88939e}.dark-mode .custom-range.custom-range-dark::-moz-range-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-dark::-moz-range-thumb:active{background-color:#88939e}.dark-mode .custom-range.custom-range-dark::-ms-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-dark::-ms-thumb:active{background-color:#88939e}.dark-mode .custom-range.custom-range-lightblue:focus{outline:0}.dark-mode .custom-range.custom-range-lightblue:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(134,186,216,.25)}.dark-mode .custom-range.custom-range-lightblue:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(134,186,216,.25)}.dark-mode .custom-range.custom-range-lightblue:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(134,186,216,.25)}.dark-mode .custom-range.custom-range-lightblue::-webkit-slider-thumb{background-color:#86bad8}.dark-mode .custom-range.custom-range-lightblue::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-lightblue::-moz-range-thumb{background-color:#86bad8}.dark-mode .custom-range.custom-range-lightblue::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-lightblue::-ms-thumb{background-color:#86bad8}.dark-mode .custom-range.custom-range-lightblue::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-navy:focus{outline:0}.dark-mode .custom-range.custom-range-navy:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,44,89,.25)}.dark-mode .custom-range.custom-range-navy:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,44,89,.25)}.dark-mode .custom-range.custom-range-navy:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,44,89,.25)}.dark-mode .custom-range.custom-range-navy::-webkit-slider-thumb{background-color:#002c59}.dark-mode .custom-range.custom-range-navy::-webkit-slider-thumb:active{background-color:#0c84ff}.dark-mode .custom-range.custom-range-navy::-moz-range-thumb{background-color:#002c59}.dark-mode .custom-range.custom-range-navy::-moz-range-thumb:active{background-color:#0c84ff}.dark-mode .custom-range.custom-range-navy::-ms-thumb{background-color:#002c59}.dark-mode .custom-range.custom-range-navy::-ms-thumb:active{background-color:#0c84ff}.dark-mode .custom-range.custom-range-olive:focus{outline:0}.dark-mode .custom-range.custom-range-olive:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(116,200,163,.25)}.dark-mode .custom-range.custom-range-olive:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(116,200,163,.25)}.dark-mode .custom-range.custom-range-olive:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(116,200,163,.25)}.dark-mode .custom-range.custom-range-olive::-webkit-slider-thumb{background-color:#74c8a3}.dark-mode .custom-range.custom-range-olive::-webkit-slider-thumb:active{background-color:#f4fbf8}.dark-mode .custom-range.custom-range-olive::-moz-range-thumb{background-color:#74c8a3}.dark-mode .custom-range.custom-range-olive::-moz-range-thumb:active{background-color:#f4fbf8}.dark-mode .custom-range.custom-range-olive::-ms-thumb{background-color:#74c8a3}.dark-mode .custom-range.custom-range-olive::-ms-thumb:active{background-color:#f4fbf8}.dark-mode .custom-range.custom-range-lime:focus{outline:0}.dark-mode .custom-range.custom-range-lime:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(103,255,169,.25)}.dark-mode .custom-range.custom-range-lime:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(103,255,169,.25)}.dark-mode .custom-range.custom-range-lime:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(103,255,169,.25)}.dark-mode .custom-range.custom-range-lime::-webkit-slider-thumb{background-color:#67ffa9}.dark-mode .custom-range.custom-range-lime::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-lime::-moz-range-thumb{background-color:#67ffa9}.dark-mode .custom-range.custom-range-lime::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-lime::-ms-thumb{background-color:#67ffa9}.dark-mode .custom-range.custom-range-lime::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-fuchsia:focus{outline:0}.dark-mode .custom-range.custom-range-fuchsia:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(246,114,216,.25)}.dark-mode .custom-range.custom-range-fuchsia:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(246,114,216,.25)}.dark-mode .custom-range.custom-range-fuchsia:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(246,114,216,.25)}.dark-mode .custom-range.custom-range-fuchsia::-webkit-slider-thumb{background-color:#f672d8}.dark-mode .custom-range.custom-range-fuchsia::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-fuchsia::-moz-range-thumb{background-color:#f672d8}.dark-mode .custom-range.custom-range-fuchsia::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-fuchsia::-ms-thumb{background-color:#f672d8}.dark-mode .custom-range.custom-range-fuchsia::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-maroon:focus{outline:0}.dark-mode .custom-range.custom-range-maroon:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(237,108,155,.25)}.dark-mode .custom-range.custom-range-maroon:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(237,108,155,.25)}.dark-mode .custom-range.custom-range-maroon:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(237,108,155,.25)}.dark-mode .custom-range.custom-range-maroon::-webkit-slider-thumb{background-color:#ed6c9b}.dark-mode .custom-range.custom-range-maroon::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-maroon::-moz-range-thumb{background-color:#ed6c9b}.dark-mode .custom-range.custom-range-maroon::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-maroon::-ms-thumb{background-color:#ed6c9b}.dark-mode .custom-range.custom-range-maroon::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-blue:focus{outline:0}.dark-mode .custom-range.custom-range-blue:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-blue:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-blue:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-range.custom-range-blue::-webkit-slider-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-blue::-webkit-slider-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-blue::-moz-range-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-blue::-moz-range-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-blue::-ms-thumb{background-color:#3f6791}.dark-mode .custom-range.custom-range-blue::-ms-thumb:active{background-color:#a9c1da}.dark-mode .custom-range.custom-range-indigo:focus{outline:0}.dark-mode .custom-range.custom-range-indigo:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.dark-mode .custom-range.custom-range-indigo:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.dark-mode .custom-range.custom-range-indigo:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.dark-mode .custom-range.custom-range-indigo::-webkit-slider-thumb{background-color:#6610f2}.dark-mode .custom-range.custom-range-indigo::-webkit-slider-thumb:active{background-color:#d2b9fb}.dark-mode .custom-range.custom-range-indigo::-moz-range-thumb{background-color:#6610f2}.dark-mode .custom-range.custom-range-indigo::-moz-range-thumb:active{background-color:#d2b9fb}.dark-mode .custom-range.custom-range-indigo::-ms-thumb{background-color:#6610f2}.dark-mode .custom-range.custom-range-indigo::-ms-thumb:active{background-color:#d2b9fb}.dark-mode .custom-range.custom-range-purple:focus{outline:0}.dark-mode .custom-range.custom-range-purple:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.dark-mode .custom-range.custom-range-purple:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.dark-mode .custom-range.custom-range-purple:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.dark-mode .custom-range.custom-range-purple::-webkit-slider-thumb{background-color:#6f42c1}.dark-mode .custom-range.custom-range-purple::-webkit-slider-thumb:active{background-color:#d5c8ed}.dark-mode .custom-range.custom-range-purple::-moz-range-thumb{background-color:#6f42c1}.dark-mode .custom-range.custom-range-purple::-moz-range-thumb:active{background-color:#d5c8ed}.dark-mode .custom-range.custom-range-purple::-ms-thumb{background-color:#6f42c1}.dark-mode .custom-range.custom-range-purple::-ms-thumb:active{background-color:#d5c8ed}.dark-mode .custom-range.custom-range-pink:focus{outline:0}.dark-mode .custom-range.custom-range-pink:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.dark-mode .custom-range.custom-range-pink:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.dark-mode .custom-range.custom-range-pink:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.dark-mode .custom-range.custom-range-pink::-webkit-slider-thumb{background-color:#e83e8c}.dark-mode .custom-range.custom-range-pink::-webkit-slider-thumb:active{background-color:#fbddeb}.dark-mode .custom-range.custom-range-pink::-moz-range-thumb{background-color:#e83e8c}.dark-mode .custom-range.custom-range-pink::-moz-range-thumb:active{background-color:#fbddeb}.dark-mode .custom-range.custom-range-pink::-ms-thumb{background-color:#e83e8c}.dark-mode .custom-range.custom-range-pink::-ms-thumb:active{background-color:#fbddeb}.dark-mode .custom-range.custom-range-red:focus{outline:0}.dark-mode .custom-range.custom-range-red:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-red:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-red:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-range.custom-range-red::-webkit-slider-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-red::-webkit-slider-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-red::-moz-range-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-red::-moz-range-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-red::-ms-thumb{background-color:#e74c3c}.dark-mode .custom-range.custom-range-red::-ms-thumb:active{background-color:#fbdedb}.dark-mode .custom-range.custom-range-orange:focus{outline:0}.dark-mode .custom-range.custom-range-orange:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.dark-mode .custom-range.custom-range-orange:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.dark-mode .custom-range.custom-range-orange:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.dark-mode .custom-range.custom-range-orange::-webkit-slider-thumb{background-color:#fd7e14}.dark-mode .custom-range.custom-range-orange::-webkit-slider-thumb:active{background-color:#ffdfc5}.dark-mode .custom-range.custom-range-orange::-moz-range-thumb{background-color:#fd7e14}.dark-mode .custom-range.custom-range-orange::-moz-range-thumb:active{background-color:#ffdfc5}.dark-mode .custom-range.custom-range-orange::-ms-thumb{background-color:#fd7e14}.dark-mode .custom-range.custom-range-orange::-ms-thumb:active{background-color:#ffdfc5}.dark-mode .custom-range.custom-range-yellow:focus{outline:0}.dark-mode .custom-range.custom-range-yellow:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-yellow:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-yellow:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-range.custom-range-yellow::-webkit-slider-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-yellow::-webkit-slider-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-yellow::-moz-range-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-yellow::-moz-range-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-yellow::-ms-thumb{background-color:#f39c12}.dark-mode .custom-range.custom-range-yellow::-ms-thumb:active{background-color:#fce3bc}.dark-mode .custom-range.custom-range-green:focus{outline:0}.dark-mode .custom-range.custom-range-green:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-green:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-green:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-range.custom-range-green::-webkit-slider-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-green::-webkit-slider-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-green::-moz-range-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-green::-moz-range-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-green::-ms-thumb{background-color:#00bc8c}.dark-mode .custom-range.custom-range-green::-ms-thumb:active{background-color:#70ffda}.dark-mode .custom-range.custom-range-teal:focus{outline:0}.dark-mode .custom-range.custom-range-teal:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.dark-mode .custom-range.custom-range-teal:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.dark-mode .custom-range.custom-range-teal:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.dark-mode .custom-range.custom-range-teal::-webkit-slider-thumb{background-color:#20c997}.dark-mode .custom-range.custom-range-teal::-webkit-slider-thumb:active{background-color:#aaf1dc}.dark-mode .custom-range.custom-range-teal::-moz-range-thumb{background-color:#20c997}.dark-mode .custom-range.custom-range-teal::-moz-range-thumb:active{background-color:#aaf1dc}.dark-mode .custom-range.custom-range-teal::-ms-thumb{background-color:#20c997}.dark-mode .custom-range.custom-range-teal::-ms-thumb:active{background-color:#aaf1dc}.dark-mode .custom-range.custom-range-cyan:focus{outline:0}.dark-mode .custom-range.custom-range-cyan:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-cyan:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-cyan:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-range.custom-range-cyan::-webkit-slider-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-cyan::-webkit-slider-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-cyan::-moz-range-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-cyan::-moz-range-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-cyan::-ms-thumb{background-color:#3498db}.dark-mode .custom-range.custom-range-cyan::-ms-thumb:active{background-color:#cce5f6}.dark-mode .custom-range.custom-range-white:focus{outline:0}.dark-mode .custom-range.custom-range-white:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.dark-mode .custom-range.custom-range-white:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.dark-mode .custom-range.custom-range-white:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.dark-mode .custom-range.custom-range-white::-webkit-slider-thumb{background-color:#fff}.dark-mode .custom-range.custom-range-white::-webkit-slider-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-white::-moz-range-thumb{background-color:#fff}.dark-mode .custom-range.custom-range-white::-moz-range-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-white::-ms-thumb{background-color:#fff}.dark-mode .custom-range.custom-range-white::-ms-thumb:active{background-color:#fff}.dark-mode .custom-range.custom-range-gray:focus{outline:0}.dark-mode .custom-range.custom-range-gray:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-gray:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-gray:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-range.custom-range-gray::-webkit-slider-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-gray::-webkit-slider-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-gray::-moz-range-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-gray::-moz-range-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-gray::-ms-thumb{background-color:#6c757d}.dark-mode .custom-range.custom-range-gray::-ms-thumb:active{background-color:#caced1}.dark-mode .custom-range.custom-range-gray-dark:focus{outline:0}.dark-mode .custom-range.custom-range-gray-dark:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-gray-dark:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-gray-dark:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-range.custom-range-gray-dark::-webkit-slider-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-gray-dark::-webkit-slider-thumb:active{background-color:#88939e}.dark-mode .custom-range.custom-range-gray-dark::-moz-range-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-gray-dark::-moz-range-thumb:active{background-color:#88939e}.dark-mode .custom-range.custom-range-gray-dark::-ms-thumb{background-color:#343a40}.dark-mode .custom-range.custom-range-gray-dark::-ms-thumb:active{background-color:#88939e}.dark-mode .custom-switch.custom-switch-off-primary .custom-control-input~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .custom-switch.custom-switch-off-primary .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-switch.custom-switch-off-primary .custom-control-input~.custom-control-label::after{background-color:#182838}.dark-mode .custom-switch.custom-switch-on-primary .custom-control-input:checked~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .custom-switch.custom-switch-on-primary .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-switch.custom-switch-on-primary .custom-control-input:checked~.custom-control-label::after{background-color:#97b4d2}.dark-mode .custom-switch.custom-switch-off-secondary .custom-control-input~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .custom-switch.custom-switch-off-secondary .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-switch.custom-switch-off-secondary .custom-control-input~.custom-control-label::after{background-color:#313539}.dark-mode .custom-switch.custom-switch-on-secondary .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .custom-switch.custom-switch-on-secondary .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-switch.custom-switch-on-secondary .custom-control-input:checked~.custom-control-label::after{background-color:#bcc1c6}.dark-mode .custom-switch.custom-switch-off-success .custom-control-input~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .custom-switch.custom-switch-off-success .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-switch.custom-switch-off-success .custom-control-input~.custom-control-label::after{background-color:#003d2d}.dark-mode .custom-switch.custom-switch-on-success .custom-control-input:checked~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .custom-switch.custom-switch-on-success .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-switch.custom-switch-on-success .custom-control-input:checked~.custom-control-label::after{background-color:#56ffd4}.dark-mode .custom-switch.custom-switch-off-info .custom-control-input~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .custom-switch.custom-switch-off-info .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-switch.custom-switch-off-info .custom-control-input~.custom-control-label::after{background-color:#16527a}.dark-mode .custom-switch.custom-switch-on-info .custom-control-input:checked~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .custom-switch.custom-switch-on-info .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-switch.custom-switch-on-info .custom-control-input:checked~.custom-control-label::after{background-color:#b6daf2}.dark-mode .custom-switch.custom-switch-off-warning .custom-control-input~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .custom-switch.custom-switch-off-warning .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-switch.custom-switch-off-warning .custom-control-input~.custom-control-label::after{background-color:#7f5006}.dark-mode .custom-switch.custom-switch-on-warning .custom-control-input:checked~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .custom-switch.custom-switch-on-warning .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-switch.custom-switch-on-warning .custom-control-input:checked~.custom-control-label::after{background-color:#fad9a4}.dark-mode .custom-switch.custom-switch-off-danger .custom-control-input~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .custom-switch.custom-switch-off-danger .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-switch.custom-switch-off-danger .custom-control-input~.custom-control-label::after{background-color:#921e12}.dark-mode .custom-switch.custom-switch-on-danger .custom-control-input:checked~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .custom-switch.custom-switch-on-danger .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-switch.custom-switch-on-danger .custom-control-input:checked~.custom-control-label::after{background-color:#f8c9c4}.dark-mode .custom-switch.custom-switch-off-light .custom-control-input~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.dark-mode .custom-switch.custom-switch-off-light .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.dark-mode .custom-switch.custom-switch-off-light .custom-control-input~.custom-control-label::after{background-color:#aeb9c5}.dark-mode .custom-switch.custom-switch-on-light .custom-control-input:checked~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.dark-mode .custom-switch.custom-switch-on-light .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(248,249,250,.25)}.dark-mode .custom-switch.custom-switch-on-light .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.dark-mode .custom-switch.custom-switch-off-dark .custom-control-input~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .custom-switch.custom-switch-off-dark .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-switch.custom-switch-off-dark .custom-control-input~.custom-control-label::after{background-color:#000}.dark-mode .custom-switch.custom-switch-on-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .custom-switch.custom-switch-on-dark .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-switch.custom-switch-on-dark .custom-control-input:checked~.custom-control-label::after{background-color:#7a8793}.dark-mode .custom-switch.custom-switch-off-lightblue .custom-control-input~.custom-control-label::before{background-color:#86bad8;border-color:#3c8dbc}.dark-mode .custom-switch.custom-switch-off-lightblue .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(134,186,216,.25)}.dark-mode .custom-switch.custom-switch-off-lightblue .custom-control-input~.custom-control-label::after{background-color:#367fa9}.dark-mode .custom-switch.custom-switch-on-lightblue .custom-control-input:checked~.custom-control-label::before{background-color:#86bad8;border-color:#3c8dbc}.dark-mode .custom-switch.custom-switch-on-lightblue .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(134,186,216,.25)}.dark-mode .custom-switch.custom-switch-on-lightblue .custom-control-input:checked~.custom-control-label::after{background-color:#fafcfd}.dark-mode .custom-switch.custom-switch-off-navy .custom-control-input~.custom-control-label::before{background-color:#002c59;border-color:#000}.dark-mode .custom-switch.custom-switch-off-navy .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,44,89,.25)}.dark-mode .custom-switch.custom-switch-off-navy .custom-control-input~.custom-control-label::after{background-color:#000}.dark-mode .custom-switch.custom-switch-on-navy .custom-control-input:checked~.custom-control-label::before{background-color:#002c59;border-color:#000}.dark-mode .custom-switch.custom-switch-on-navy .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,44,89,.25)}.dark-mode .custom-switch.custom-switch-on-navy .custom-control-input:checked~.custom-control-label::after{background-color:#0077f2}.dark-mode .custom-switch.custom-switch-off-olive .custom-control-input~.custom-control-label::before{background-color:#74c8a3;border-color:#3d9970}.dark-mode .custom-switch.custom-switch-off-olive .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(116,200,163,.25)}.dark-mode .custom-switch.custom-switch-off-olive .custom-control-input~.custom-control-label::after{background-color:#368763}.dark-mode .custom-switch.custom-switch-on-olive .custom-control-input:checked~.custom-control-label::before{background-color:#74c8a3;border-color:#3d9970}.dark-mode .custom-switch.custom-switch-on-olive .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(116,200,163,.25)}.dark-mode .custom-switch.custom-switch-on-olive .custom-control-input:checked~.custom-control-label::after{background-color:#e2f3eb}.dark-mode .custom-switch.custom-switch-off-lime .custom-control-input~.custom-control-label::before{background-color:#67ffa9;border-color:#01ff70}.dark-mode .custom-switch.custom-switch-off-lime .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(103,255,169,.25)}.dark-mode .custom-switch.custom-switch-off-lime .custom-control-input~.custom-control-label::after{background-color:#00e765}.dark-mode .custom-switch.custom-switch-on-lime .custom-control-input:checked~.custom-control-label::before{background-color:#67ffa9;border-color:#01ff70}.dark-mode .custom-switch.custom-switch-on-lime .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(103,255,169,.25)}.dark-mode .custom-switch.custom-switch-on-lime .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.dark-mode .custom-switch.custom-switch-off-fuchsia .custom-control-input~.custom-control-label::before{background-color:#f672d8;border-color:#f012be}.dark-mode .custom-switch.custom-switch-off-fuchsia .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(246,114,216,.25)}.dark-mode .custom-switch.custom-switch-off-fuchsia .custom-control-input~.custom-control-label::after{background-color:#db0ead}.dark-mode .custom-switch.custom-switch-on-fuchsia .custom-control-input:checked~.custom-control-label::before{background-color:#f672d8;border-color:#f012be}.dark-mode .custom-switch.custom-switch-on-fuchsia .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(246,114,216,.25)}.dark-mode .custom-switch.custom-switch-on-fuchsia .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.dark-mode .custom-switch.custom-switch-off-maroon .custom-control-input~.custom-control-label::before{background-color:#ed6c9b;border-color:#d81b60}.dark-mode .custom-switch.custom-switch-off-maroon .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(237,108,155,.25)}.dark-mode .custom-switch.custom-switch-off-maroon .custom-control-input~.custom-control-label::after{background-color:#c11856}.dark-mode .custom-switch.custom-switch-on-maroon .custom-control-input:checked~.custom-control-label::before{background-color:#ed6c9b;border-color:#d81b60}.dark-mode .custom-switch.custom-switch-on-maroon .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(237,108,155,.25)}.dark-mode .custom-switch.custom-switch-on-maroon .custom-control-input:checked~.custom-control-label::after{background-color:#fef4f8}.dark-mode .custom-switch.custom-switch-off-blue .custom-control-input~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .custom-switch.custom-switch-off-blue .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-switch.custom-switch-off-blue .custom-control-input~.custom-control-label::after{background-color:#182838}.dark-mode .custom-switch.custom-switch-on-blue .custom-control-input:checked~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .custom-switch.custom-switch-on-blue .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(63,103,145,.25)}.dark-mode .custom-switch.custom-switch-on-blue .custom-control-input:checked~.custom-control-label::after{background-color:#97b4d2}.dark-mode .custom-switch.custom-switch-off-indigo .custom-control-input~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.dark-mode .custom-switch.custom-switch-off-indigo .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.dark-mode .custom-switch.custom-switch-off-indigo .custom-control-input~.custom-control-label::after{background-color:#33077c}.dark-mode .custom-switch.custom-switch-on-indigo .custom-control-input:checked~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.dark-mode .custom-switch.custom-switch-on-indigo .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(102,16,242,.25)}.dark-mode .custom-switch.custom-switch-on-indigo .custom-control-input:checked~.custom-control-label::after{background-color:#c3a1fa}.dark-mode .custom-switch.custom-switch-off-purple .custom-control-input~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.dark-mode .custom-switch.custom-switch-off-purple .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.dark-mode .custom-switch.custom-switch-off-purple .custom-control-input~.custom-control-label::after{background-color:#382063}.dark-mode .custom-switch.custom-switch-on-purple .custom-control-input:checked~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.dark-mode .custom-switch.custom-switch-on-purple .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(111,66,193,.25)}.dark-mode .custom-switch.custom-switch-on-purple .custom-control-input:checked~.custom-control-label::after{background-color:#c7b5e7}.dark-mode .custom-switch.custom-switch-off-pink .custom-control-input~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.dark-mode .custom-switch.custom-switch-off-pink .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.dark-mode .custom-switch.custom-switch-off-pink .custom-control-input~.custom-control-label::after{background-color:#95124e}.dark-mode .custom-switch.custom-switch-on-pink .custom-control-input:checked~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.dark-mode .custom-switch.custom-switch-on-pink .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(232,62,140,.25)}.dark-mode .custom-switch.custom-switch-on-pink .custom-control-input:checked~.custom-control-label::after{background-color:#f8c7dd}.dark-mode .custom-switch.custom-switch-off-red .custom-control-input~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .custom-switch.custom-switch-off-red .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-switch.custom-switch-off-red .custom-control-input~.custom-control-label::after{background-color:#921e12}.dark-mode .custom-switch.custom-switch-on-red .custom-control-input:checked~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .custom-switch.custom-switch-on-red .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(231,76,60,.25)}.dark-mode .custom-switch.custom-switch-on-red .custom-control-input:checked~.custom-control-label::after{background-color:#f8c9c4}.dark-mode .custom-switch.custom-switch-off-orange .custom-control-input~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.dark-mode .custom-switch.custom-switch-off-orange .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.dark-mode .custom-switch.custom-switch-off-orange .custom-control-input~.custom-control-label::after{background-color:#904201}.dark-mode .custom-switch.custom-switch-on-orange .custom-control-input:checked~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.dark-mode .custom-switch.custom-switch-on-orange .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(253,126,20,.25)}.dark-mode .custom-switch.custom-switch-on-orange .custom-control-input:checked~.custom-control-label::after{background-color:#fed1ac}.dark-mode .custom-switch.custom-switch-off-yellow .custom-control-input~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .custom-switch.custom-switch-off-yellow .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-switch.custom-switch-off-yellow .custom-control-input~.custom-control-label::after{background-color:#7f5006}.dark-mode .custom-switch.custom-switch-on-yellow .custom-control-input:checked~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .custom-switch.custom-switch-on-yellow .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(243,156,18,.25)}.dark-mode .custom-switch.custom-switch-on-yellow .custom-control-input:checked~.custom-control-label::after{background-color:#fad9a4}.dark-mode .custom-switch.custom-switch-off-green .custom-control-input~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .custom-switch.custom-switch-off-green .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-switch.custom-switch-off-green .custom-control-input~.custom-control-label::after{background-color:#003d2d}.dark-mode .custom-switch.custom-switch-on-green .custom-control-input:checked~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .custom-switch.custom-switch-on-green .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(0,188,140,.25)}.dark-mode .custom-switch.custom-switch-on-green .custom-control-input:checked~.custom-control-label::after{background-color:#56ffd4}.dark-mode .custom-switch.custom-switch-off-teal .custom-control-input~.custom-control-label::before{background-color:#20c997;border-color:#127155}.dark-mode .custom-switch.custom-switch-off-teal .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.dark-mode .custom-switch.custom-switch-off-teal .custom-control-input~.custom-control-label::after{background-color:#0e5b44}.dark-mode .custom-switch.custom-switch-on-teal .custom-control-input:checked~.custom-control-label::before{background-color:#20c997;border-color:#127155}.dark-mode .custom-switch.custom-switch-on-teal .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(32,201,151,.25)}.dark-mode .custom-switch.custom-switch-on-teal .custom-control-input:checked~.custom-control-label::after{background-color:#94eed3}.dark-mode .custom-switch.custom-switch-off-cyan .custom-control-input~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .custom-switch.custom-switch-off-cyan .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-switch.custom-switch-off-cyan .custom-control-input~.custom-control-label::after{background-color:#16527a}.dark-mode .custom-switch.custom-switch-on-cyan .custom-control-input:checked~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .custom-switch.custom-switch-on-cyan .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,152,219,.25)}.dark-mode .custom-switch.custom-switch-on-cyan .custom-control-input:checked~.custom-control-label::after{background-color:#b6daf2}.dark-mode .custom-switch.custom-switch-off-white .custom-control-input~.custom-control-label::before{background-color:#fff;border-color:#ccc}.dark-mode .custom-switch.custom-switch-off-white .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.dark-mode .custom-switch.custom-switch-off-white .custom-control-input~.custom-control-label::after{background-color:#bfbfbf}.dark-mode .custom-switch.custom-switch-on-white .custom-control-input:checked~.custom-control-label::before{background-color:#fff;border-color:#ccc}.dark-mode .custom-switch.custom-switch-on-white .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(255,255,255,.25)}.dark-mode .custom-switch.custom-switch-on-white .custom-control-input:checked~.custom-control-label::after{background-color:#fff}.dark-mode .custom-switch.custom-switch-off-gray .custom-control-input~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .custom-switch.custom-switch-off-gray .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-switch.custom-switch-off-gray .custom-control-input~.custom-control-label::after{background-color:#313539}.dark-mode .custom-switch.custom-switch-on-gray .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .custom-switch.custom-switch-on-gray .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(108,117,125,.25)}.dark-mode .custom-switch.custom-switch-on-gray .custom-control-input:checked~.custom-control-label::after{background-color:#bcc1c6}.dark-mode .custom-switch.custom-switch-off-gray-dark .custom-control-input~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .custom-switch.custom-switch-off-gray-dark .custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-switch.custom-switch-off-gray-dark .custom-control-input~.custom-control-label::after{background-color:#000}.dark-mode .custom-switch.custom-switch-on-gray-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .custom-switch.custom-switch-on-gray-dark .custom-control-input:checked:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 2px rgba(52,58,64,.25)}.dark-mode .custom-switch.custom-switch-on-gray-dark .custom-control-input:checked~.custom-control-label::after{background-color:#7a8793}.dark-mode .custom-control-input-primary:checked~.custom-control-label::before{border-color:#3f6791;background-color:#3f6791}.dark-mode .custom-control-input-primary.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233f6791' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-primary.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233f6791'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-primary:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(63,103,145,.25)}.dark-mode .custom-control-input-primary:focus:not(:checked)~.custom-control-label::before{border-color:#85a7ca}.dark-mode .custom-control-input-primary:not(:disabled):active~.custom-control-label::before{background-color:#a9c1da;border-color:#a9c1da}.dark-mode .custom-control-input-secondary:checked~.custom-control-label::before{border-color:#6c757d;background-color:#6c757d}.dark-mode .custom-control-input-secondary.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236c757d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-secondary.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236c757d'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-secondary:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(108,117,125,.25)}.dark-mode .custom-control-input-secondary:focus:not(:checked)~.custom-control-label::before{border-color:#afb5ba}.dark-mode .custom-control-input-secondary:not(:disabled):active~.custom-control-label::before{background-color:#caced1;border-color:#caced1}.dark-mode .custom-control-input-success:checked~.custom-control-label::before{border-color:#00bc8c;background-color:#00bc8c}.dark-mode .custom-control-input-success.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2300bc8c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-success.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2300bc8c'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-success:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,188,140,.25)}.dark-mode .custom-control-input-success:focus:not(:checked)~.custom-control-label::before{border-color:#3dffcd}.dark-mode .custom-control-input-success:not(:disabled):active~.custom-control-label::before{background-color:#70ffda;border-color:#70ffda}.dark-mode .custom-control-input-info:checked~.custom-control-label::before{border-color:#3498db;background-color:#3498db}.dark-mode .custom-control-input-info.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233498db' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-info.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233498db'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-info:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,152,219,.25)}.dark-mode .custom-control-input-info:focus:not(:checked)~.custom-control-label::before{border-color:#a0cfee}.dark-mode .custom-control-input-info:not(:disabled):active~.custom-control-label::before{background-color:#cce5f6;border-color:#cce5f6}.dark-mode .custom-control-input-warning:checked~.custom-control-label::before{border-color:#f39c12;background-color:#f39c12}.dark-mode .custom-control-input-warning.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f39c12' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-warning.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f39c12'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-warning:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(243,156,18,.25)}.dark-mode .custom-control-input-warning:focus:not(:checked)~.custom-control-label::before{border-color:#f9cf8b}.dark-mode .custom-control-input-warning:not(:disabled):active~.custom-control-label::before{background-color:#fce3bc;border-color:#fce3bc}.dark-mode .custom-control-input-danger:checked~.custom-control-label::before{border-color:#e74c3c;background-color:#e74c3c}.dark-mode .custom-control-input-danger.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23e74c3c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-danger.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23e74c3c'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-danger:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(231,76,60,.25)}.dark-mode .custom-control-input-danger:focus:not(:checked)~.custom-control-label::before{border-color:#f5b4ae}.dark-mode .custom-control-input-danger:not(:disabled):active~.custom-control-label::before{background-color:#fbdedb;border-color:#fbdedb}.dark-mode .custom-control-input-light:checked~.custom-control-label::before{border-color:#f8f9fa;background-color:#f8f9fa}.dark-mode .custom-control-input-light.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f8f9fa' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-light.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f8f9fa'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-light:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(248,249,250,.25)}.dark-mode .custom-control-input-light:focus:not(:checked)~.custom-control-label::before{border-color:#fff}.dark-mode .custom-control-input-light:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-dark:checked~.custom-control-label::before{border-color:#343a40;background-color:#343a40}.dark-mode .custom-control-input-dark.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23343a40' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-dark.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23343a40'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-dark:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,58,64,.25)}.dark-mode .custom-control-input-dark:focus:not(:checked)~.custom-control-label::before{border-color:#6d7a86}.dark-mode .custom-control-input-dark:not(:disabled):active~.custom-control-label::before{background-color:#88939e;border-color:#88939e}.dark-mode .custom-control-input-lightblue:checked~.custom-control-label::before{border-color:#86bad8;background-color:#86bad8}.dark-mode .custom-control-input-lightblue.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2386bad8' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-lightblue.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2386bad8'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-lightblue:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(134,186,216,.25)}.dark-mode .custom-control-input-lightblue:focus:not(:checked)~.custom-control-label::before{border-color:#e6f1f7}.dark-mode .custom-control-input-lightblue:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-navy:checked~.custom-control-label::before{border-color:#002c59;background-color:#002c59}.dark-mode .custom-control-input-navy.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23002c59' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-navy.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23002c59'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-navy:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,44,89,.25)}.dark-mode .custom-control-input-navy:focus:not(:checked)~.custom-control-label::before{border-color:#006ad8}.dark-mode .custom-control-input-navy:not(:disabled):active~.custom-control-label::before{background-color:#0c84ff;border-color:#0c84ff}.dark-mode .custom-control-input-olive:checked~.custom-control-label::before{border-color:#74c8a3;background-color:#74c8a3}.dark-mode .custom-control-input-olive.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2374c8a3' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-olive.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2374c8a3'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-olive:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(116,200,163,.25)}.dark-mode .custom-control-input-olive:focus:not(:checked)~.custom-control-label::before{border-color:#cfecdf}.dark-mode .custom-control-input-olive:not(:disabled):active~.custom-control-label::before{background-color:#f4fbf8;border-color:#f4fbf8}.dark-mode .custom-control-input-lime:checked~.custom-control-label::before{border-color:#67ffa9;background-color:#67ffa9}.dark-mode .custom-control-input-lime.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2367ffa9' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-lime.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2367ffa9'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-lime:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(103,255,169,.25)}.dark-mode .custom-control-input-lime:focus:not(:checked)~.custom-control-label::before{border-color:#e7fff1}.dark-mode .custom-control-input-lime:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-fuchsia:checked~.custom-control-label::before{border-color:#f672d8;background-color:#f672d8}.dark-mode .custom-control-input-fuchsia.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f672d8' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-fuchsia.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f672d8'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-fuchsia:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(246,114,216,.25)}.dark-mode .custom-control-input-fuchsia:focus:not(:checked)~.custom-control-label::before{border-color:#feeaf9}.dark-mode .custom-control-input-fuchsia:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-maroon:checked~.custom-control-label::before{border-color:#ed6c9b;background-color:#ed6c9b}.dark-mode .custom-control-input-maroon.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23ed6c9b' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-maroon.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23ed6c9b'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-maroon:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(237,108,155,.25)}.dark-mode .custom-control-input-maroon:focus:not(:checked)~.custom-control-label::before{border-color:#fbdee8}.dark-mode .custom-control-input-maroon:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-blue:checked~.custom-control-label::before{border-color:#3f6791;background-color:#3f6791}.dark-mode .custom-control-input-blue.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233f6791' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-blue.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233f6791'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-blue:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(63,103,145,.25)}.dark-mode .custom-control-input-blue:focus:not(:checked)~.custom-control-label::before{border-color:#85a7ca}.dark-mode .custom-control-input-blue:not(:disabled):active~.custom-control-label::before{background-color:#a9c1da;border-color:#a9c1da}.dark-mode .custom-control-input-indigo:checked~.custom-control-label::before{border-color:#6610f2;background-color:#6610f2}.dark-mode .custom-control-input-indigo.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236610f2' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-indigo.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236610f2'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-indigo:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(102,16,242,.25)}.dark-mode .custom-control-input-indigo:focus:not(:checked)~.custom-control-label::before{border-color:#b389f9}.dark-mode .custom-control-input-indigo:not(:disabled):active~.custom-control-label::before{background-color:#d2b9fb;border-color:#d2b9fb}.dark-mode .custom-control-input-purple:checked~.custom-control-label::before{border-color:#6f42c1;background-color:#6f42c1}.dark-mode .custom-control-input-purple.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236f42c1' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-purple.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236f42c1'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-purple:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(111,66,193,.25)}.dark-mode .custom-control-input-purple:focus:not(:checked)~.custom-control-label::before{border-color:#b8a2e0}.dark-mode .custom-control-input-purple:not(:disabled):active~.custom-control-label::before{background-color:#d5c8ed;border-color:#d5c8ed}.dark-mode .custom-control-input-pink:checked~.custom-control-label::before{border-color:#e83e8c;background-color:#e83e8c}.dark-mode .custom-control-input-pink.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23e83e8c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-pink.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23e83e8c'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-pink:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(232,62,140,.25)}.dark-mode .custom-control-input-pink:focus:not(:checked)~.custom-control-label::before{border-color:#f6b0d0}.dark-mode .custom-control-input-pink:not(:disabled):active~.custom-control-label::before{background-color:#fbddeb;border-color:#fbddeb}.dark-mode .custom-control-input-red:checked~.custom-control-label::before{border-color:#e74c3c;background-color:#e74c3c}.dark-mode .custom-control-input-red.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23e74c3c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-red.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23e74c3c'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-red:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(231,76,60,.25)}.dark-mode .custom-control-input-red:focus:not(:checked)~.custom-control-label::before{border-color:#f5b4ae}.dark-mode .custom-control-input-red:not(:disabled):active~.custom-control-label::before{background-color:#fbdedb;border-color:#fbdedb}.dark-mode .custom-control-input-orange:checked~.custom-control-label::before{border-color:#fd7e14;background-color:#fd7e14}.dark-mode .custom-control-input-orange.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fd7e14' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-orange.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fd7e14'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-orange:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(253,126,20,.25)}.dark-mode .custom-control-input-orange:focus:not(:checked)~.custom-control-label::before{border-color:#fec392}.dark-mode .custom-control-input-orange:not(:disabled):active~.custom-control-label::before{background-color:#ffdfc5;border-color:#ffdfc5}.dark-mode .custom-control-input-yellow:checked~.custom-control-label::before{border-color:#f39c12;background-color:#f39c12}.dark-mode .custom-control-input-yellow.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f39c12' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-yellow.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23f39c12'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-yellow:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(243,156,18,.25)}.dark-mode .custom-control-input-yellow:focus:not(:checked)~.custom-control-label::before{border-color:#f9cf8b}.dark-mode .custom-control-input-yellow:not(:disabled):active~.custom-control-label::before{background-color:#fce3bc;border-color:#fce3bc}.dark-mode .custom-control-input-green:checked~.custom-control-label::before{border-color:#00bc8c;background-color:#00bc8c}.dark-mode .custom-control-input-green.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2300bc8c' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-green.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2300bc8c'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-green:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,188,140,.25)}.dark-mode .custom-control-input-green:focus:not(:checked)~.custom-control-label::before{border-color:#3dffcd}.dark-mode .custom-control-input-green:not(:disabled):active~.custom-control-label::before{background-color:#70ffda;border-color:#70ffda}.dark-mode .custom-control-input-teal:checked~.custom-control-label::before{border-color:#20c997;background-color:#20c997}.dark-mode .custom-control-input-teal.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%2320c997' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-teal.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%2320c997'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-teal:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(32,201,151,.25)}.dark-mode .custom-control-input-teal:focus:not(:checked)~.custom-control-label::before{border-color:#7eeaca}.dark-mode .custom-control-input-teal:not(:disabled):active~.custom-control-label::before{background-color:#aaf1dc;border-color:#aaf1dc}.dark-mode .custom-control-input-cyan:checked~.custom-control-label::before{border-color:#3498db;background-color:#3498db}.dark-mode .custom-control-input-cyan.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%233498db' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-cyan.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%233498db'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-cyan:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,152,219,.25)}.dark-mode .custom-control-input-cyan:focus:not(:checked)~.custom-control-label::before{border-color:#a0cfee}.dark-mode .custom-control-input-cyan:not(:disabled):active~.custom-control-label::before{background-color:#cce5f6;border-color:#cce5f6}.dark-mode .custom-control-input-white:checked~.custom-control-label::before{border-color:#fff;background-color:#fff}.dark-mode .custom-control-input-white.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-white.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-white:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(255,255,255,.25)}.dark-mode .custom-control-input-white:focus:not(:checked)~.custom-control-label::before{border-color:#fff}.dark-mode .custom-control-input-white:not(:disabled):active~.custom-control-label::before{background-color:#fff;border-color:#fff}.dark-mode .custom-control-input-gray:checked~.custom-control-label::before{border-color:#6c757d;background-color:#6c757d}.dark-mode .custom-control-input-gray.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%236c757d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-gray.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%236c757d'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-gray:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(108,117,125,.25)}.dark-mode .custom-control-input-gray:focus:not(:checked)~.custom-control-label::before{border-color:#afb5ba}.dark-mode .custom-control-input-gray:not(:disabled):active~.custom-control-label::before{background-color:#caced1;border-color:#caced1}.dark-mode .custom-control-input-gray-dark:checked~.custom-control-label::before{border-color:#343a40;background-color:#343a40}.dark-mode .custom-control-input-gray-dark.custom-control-input-outline:checked[type=checkbox]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23343a40' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-gray-dark.custom-control-input-outline:checked[type=radio]~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23343a40'/%3E%3C/svg%3E")!important}.dark-mode .custom-control-input-gray-dark:focus~.custom-control-label::before{box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(52,58,64,.25)}.dark-mode .custom-control-input-gray-dark:focus:not(:checked)~.custom-control-label::before{border-color:#6d7a86}.dark-mode .custom-control-input-gray-dark:not(:disabled):active~.custom-control-label::before{background-color:#88939e;border-color:#88939e}.progress{box-shadow:none;border-radius:1px}.progress.vertical{display:inline-block;height:200px;margin-right:10px;position:relative;width:30px}.progress.vertical>.progress-bar{bottom:0;position:absolute;width:100%}.progress.vertical.progress-sm,.progress.vertical.sm{width:20px}.progress.vertical.progress-xs,.progress.vertical.xs{width:10px}.progress.vertical.progress-xxs,.progress.vertical.xxs{width:3px}.progress-group{margin-bottom:.5rem}.progress-sm{height:10px}.progress-xs{height:7px}.progress-xxs{height:3px}.table tr>td .progress{margin:0}.dark-mode .progress{background:#454d55}.card-primary:not(.card-outline)>.card-header{background-color:#007bff}.card-primary:not(.card-outline)>.card-header,.card-primary:not(.card-outline)>.card-header a{color:#fff}.card-primary:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-primary.card-outline{border-top:3px solid #007bff}.card-primary.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-primary.card-outline-tabs>.card-header a.active{border-top:3px solid #007bff}.bg-gradient-primary>.card-header .btn-tool,.bg-primary>.card-header .btn-tool,.card-primary:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-primary>.card-header .btn-tool:hover,.bg-primary>.card-header .btn-tool:hover,.card-primary:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-primary .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-primary .bootstrap-datetimepicker-widget .table th,.card.bg-primary .bootstrap-datetimepicker-widget .table td,.card.bg-primary .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-primary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-primary .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-primary .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-primary .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-primary .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-primary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#0067d6;color:#fff}.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.today::before,.card.bg-primary .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-primary .bootstrap-datetimepicker-widget table td.active,.card.bg-primary .bootstrap-datetimepicker-widget table td.active:hover{background-color:#3395ff;color:#fff}.card-secondary:not(.card-outline)>.card-header{background-color:#6c757d}.card-secondary:not(.card-outline)>.card-header,.card-secondary:not(.card-outline)>.card-header a{color:#fff}.card-secondary:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-secondary.card-outline{border-top:3px solid #6c757d}.card-secondary.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-secondary.card-outline-tabs>.card-header a.active{border-top:3px solid #6c757d}.bg-gradient-secondary>.card-header .btn-tool,.bg-secondary>.card-header .btn-tool,.card-secondary:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-secondary>.card-header .btn-tool:hover,.bg-secondary>.card-header .btn-tool:hover,.card-secondary:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-secondary .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget .table th,.card.bg-secondary .bootstrap-datetimepicker-widget .table td,.card.bg-secondary .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#596167;color:#fff}.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.today::before,.card.bg-secondary .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-secondary .bootstrap-datetimepicker-widget table td.active,.card.bg-secondary .bootstrap-datetimepicker-widget table td.active:hover{background-color:#868e96;color:#fff}.card-success:not(.card-outline)>.card-header{background-color:#28a745}.card-success:not(.card-outline)>.card-header,.card-success:not(.card-outline)>.card-header a{color:#fff}.card-success:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-success.card-outline{border-top:3px solid #28a745}.card-success.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-success.card-outline-tabs>.card-header a.active{border-top:3px solid #28a745}.bg-gradient-success>.card-header .btn-tool,.bg-success>.card-header .btn-tool,.card-success:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-success>.card-header .btn-tool:hover,.bg-success>.card-header .btn-tool:hover,.card-success:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-success .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-success .bootstrap-datetimepicker-widget .table th,.card.bg-success .bootstrap-datetimepicker-widget .table td,.card.bg-success .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-success .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-success .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-success .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-success .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-success .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-success .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#208637;color:#fff}.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.today::before,.card.bg-success .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-success .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-success .bootstrap-datetimepicker-widget table td.active,.card.bg-success .bootstrap-datetimepicker-widget table td.active:hover{background-color:#34ce57;color:#fff}.card-info:not(.card-outline)>.card-header{background-color:#17a2b8}.card-info:not(.card-outline)>.card-header,.card-info:not(.card-outline)>.card-header a{color:#fff}.card-info:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-info.card-outline{border-top:3px solid #17a2b8}.card-info.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-info.card-outline-tabs>.card-header a.active{border-top:3px solid #17a2b8}.bg-gradient-info>.card-header .btn-tool,.bg-info>.card-header .btn-tool,.card-info:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-info>.card-header .btn-tool:hover,.bg-info>.card-header .btn-tool:hover,.card-info:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-info .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-info .bootstrap-datetimepicker-widget .table th,.card.bg-info .bootstrap-datetimepicker-widget .table td,.card.bg-info .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-info .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-info .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-info .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-info .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-info .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-info .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#128294;color:#fff}.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.today::before,.card.bg-info .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-info .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-info .bootstrap-datetimepicker-widget table td.active,.card.bg-info .bootstrap-datetimepicker-widget table td.active:hover{background-color:#1fc8e3;color:#fff}.card-warning:not(.card-outline)>.card-header{background-color:#ffc107}.card-warning:not(.card-outline)>.card-header,.card-warning:not(.card-outline)>.card-header a{color:#1f2d3d}.card-warning:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-warning.card-outline{border-top:3px solid #ffc107}.card-warning.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-warning.card-outline-tabs>.card-header a.active{border-top:3px solid #ffc107}.bg-gradient-warning>.card-header .btn-tool,.bg-warning>.card-header .btn-tool,.card-warning:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-warning>.card-header .btn-tool:hover,.bg-warning>.card-header .btn-tool:hover,.card-warning:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-warning .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-warning .bootstrap-datetimepicker-widget .table th,.card.bg-warning .bootstrap-datetimepicker-widget .table td,.card.bg-warning .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-warning .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-warning .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-warning .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-warning .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-warning .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-warning .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#dda600;color:#1f2d3d}.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.today::before,.card.bg-warning .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-warning .bootstrap-datetimepicker-widget table td.active,.card.bg-warning .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ffce3a;color:#1f2d3d}.card-danger:not(.card-outline)>.card-header{background-color:#dc3545}.card-danger:not(.card-outline)>.card-header,.card-danger:not(.card-outline)>.card-header a{color:#fff}.card-danger:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-danger.card-outline{border-top:3px solid #dc3545}.card-danger.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-danger.card-outline-tabs>.card-header a.active{border-top:3px solid #dc3545}.bg-danger>.card-header .btn-tool,.bg-gradient-danger>.card-header .btn-tool,.card-danger:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-danger>.card-header .btn-tool:hover,.bg-gradient-danger>.card-header .btn-tool:hover,.card-danger:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-danger .bootstrap-datetimepicker-widget .table td,.card.bg-danger .bootstrap-datetimepicker-widget .table th,.card.bg-gradient-danger .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-danger .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-danger .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-danger .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-danger .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-danger .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-danger .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#c62232;color:#fff}.card.bg-danger .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-danger .bootstrap-datetimepicker-widget table td.active,.card.bg-danger .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.active:hover{background-color:#e4606d;color:#fff}.card-light:not(.card-outline)>.card-header{background-color:#f8f9fa}.card-light:not(.card-outline)>.card-header,.card-light:not(.card-outline)>.card-header a{color:#1f2d3d}.card-light:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-light.card-outline{border-top:3px solid #f8f9fa}.card-light.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-light.card-outline-tabs>.card-header a.active{border-top:3px solid #f8f9fa}.bg-gradient-light>.card-header .btn-tool,.bg-light>.card-header .btn-tool,.card-light:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-light>.card-header .btn-tool:hover,.bg-light>.card-header .btn-tool:hover,.card-light:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-light .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-light .bootstrap-datetimepicker-widget .table th,.card.bg-light .bootstrap-datetimepicker-widget .table td,.card.bg-light .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-light .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-light .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-light .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-light .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-light .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-light .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e0e5e9;color:#1f2d3d}.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.today::before,.card.bg-light .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-light .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-light .bootstrap-datetimepicker-widget table td.active,.card.bg-light .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fff;color:#1f2d3d}.card-dark:not(.card-outline)>.card-header{background-color:#343a40}.card-dark:not(.card-outline)>.card-header,.card-dark:not(.card-outline)>.card-header a{color:#fff}.card-dark:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-dark.card-outline{border-top:3px solid #343a40}.card-dark.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-dark.card-outline-tabs>.card-header a.active{border-top:3px solid #343a40}.bg-dark>.card-header .btn-tool,.bg-gradient-dark>.card-header .btn-tool,.card-dark:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-dark>.card-header .btn-tool:hover,.bg-gradient-dark>.card-header .btn-tool:hover,.card-dark:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-dark .bootstrap-datetimepicker-widget .table td,.card.bg-dark .bootstrap-datetimepicker-widget .table th,.card.bg-gradient-dark .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-dark .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-dark .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-dark .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-dark .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-dark .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#222629;color:#fff}.card.bg-dark .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-dark .bootstrap-datetimepicker-widget table td.active,.card.bg-dark .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.active:hover{background-color:#4b545c;color:#fff}.card-lightblue:not(.card-outline)>.card-header{background-color:#3c8dbc}.card-lightblue:not(.card-outline)>.card-header,.card-lightblue:not(.card-outline)>.card-header a{color:#fff}.card-lightblue:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-lightblue.card-outline{border-top:3px solid #3c8dbc}.card-lightblue.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-lightblue.card-outline-tabs>.card-header a.active{border-top:3px solid #3c8dbc}.bg-gradient-lightblue>.card-header .btn-tool,.bg-lightblue>.card-header .btn-tool,.card-lightblue:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-lightblue>.card-header .btn-tool:hover,.bg-lightblue>.card-header .btn-tool:hover,.card-lightblue:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget .table th,.card.bg-lightblue .bootstrap-datetimepicker-widget .table td,.card.bg-lightblue .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#32769d;color:#fff}.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.today::before,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.active,.card.bg-lightblue .bootstrap-datetimepicker-widget table td.active:hover{background-color:#5fa4cc;color:#fff}.card-navy:not(.card-outline)>.card-header{background-color:#001f3f}.card-navy:not(.card-outline)>.card-header,.card-navy:not(.card-outline)>.card-header a{color:#fff}.card-navy:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-navy.card-outline{border-top:3px solid #001f3f}.card-navy.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-navy.card-outline-tabs>.card-header a.active{border-top:3px solid #001f3f}.bg-gradient-navy>.card-header .btn-tool,.bg-navy>.card-header .btn-tool,.card-navy:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-navy>.card-header .btn-tool:hover,.bg-navy>.card-header .btn-tool:hover,.card-navy:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-navy .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-navy .bootstrap-datetimepicker-widget .table th,.card.bg-navy .bootstrap-datetimepicker-widget .table td,.card.bg-navy .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-navy .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-navy .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-navy .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-navy .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-navy .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-navy .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#000b16;color:#fff}.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.today::before,.card.bg-navy .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-navy .bootstrap-datetimepicker-widget table td.active,.card.bg-navy .bootstrap-datetimepicker-widget table td.active:hover{background-color:#003872;color:#fff}.card-olive:not(.card-outline)>.card-header{background-color:#3d9970}.card-olive:not(.card-outline)>.card-header,.card-olive:not(.card-outline)>.card-header a{color:#fff}.card-olive:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-olive.card-outline{border-top:3px solid #3d9970}.card-olive.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-olive.card-outline-tabs>.card-header a.active{border-top:3px solid #3d9970}.bg-gradient-olive>.card-header .btn-tool,.bg-olive>.card-header .btn-tool,.card-olive:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-olive>.card-header .btn-tool:hover,.bg-olive>.card-header .btn-tool:hover,.card-olive:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-olive .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-olive .bootstrap-datetimepicker-widget .table th,.card.bg-olive .bootstrap-datetimepicker-widget .table td,.card.bg-olive .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-olive .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-olive .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-olive .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-olive .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-olive .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-olive .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#317c5b;color:#fff}.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.today::before,.card.bg-olive .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-olive .bootstrap-datetimepicker-widget table td.active,.card.bg-olive .bootstrap-datetimepicker-widget table td.active:hover{background-color:#50b98a;color:#fff}.card-lime:not(.card-outline)>.card-header{background-color:#01ff70}.card-lime:not(.card-outline)>.card-header,.card-lime:not(.card-outline)>.card-header a{color:#1f2d3d}.card-lime:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-lime.card-outline{border-top:3px solid #01ff70}.card-lime.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-lime.card-outline-tabs>.card-header a.active{border-top:3px solid #01ff70}.bg-gradient-lime>.card-header .btn-tool,.bg-lime>.card-header .btn-tool,.card-lime:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-lime>.card-header .btn-tool:hover,.bg-lime>.card-header .btn-tool:hover,.card-lime:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-lime .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-lime .bootstrap-datetimepicker-widget .table th,.card.bg-lime .bootstrap-datetimepicker-widget .table td,.card.bg-lime .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-lime .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-lime .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-lime .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-lime .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-lime .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-lime .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#00d75e;color:#1f2d3d}.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.today::before,.card.bg-lime .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-lime .bootstrap-datetimepicker-widget table td.active,.card.bg-lime .bootstrap-datetimepicker-widget table td.active:hover{background-color:#34ff8d;color:#1f2d3d}.card-fuchsia:not(.card-outline)>.card-header{background-color:#f012be}.card-fuchsia:not(.card-outline)>.card-header,.card-fuchsia:not(.card-outline)>.card-header a{color:#fff}.card-fuchsia:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-fuchsia.card-outline{border-top:3px solid #f012be}.card-fuchsia.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-fuchsia.card-outline-tabs>.card-header a.active{border-top:3px solid #f012be}.bg-fuchsia>.card-header .btn-tool,.bg-gradient-fuchsia>.card-header .btn-tool,.card-fuchsia:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-fuchsia>.card-header .btn-tool:hover,.bg-gradient-fuchsia>.card-header .btn-tool:hover,.card-fuchsia:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-fuchsia .bootstrap-datetimepicker-widget .table td,.card.bg-fuchsia .bootstrap-datetimepicker-widget .table th,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-fuchsia .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#cc0da1;color:#fff}.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.active,.card.bg-fuchsia .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.active:hover{background-color:#f342cb;color:#fff}.card-maroon:not(.card-outline)>.card-header{background-color:#d81b60}.card-maroon:not(.card-outline)>.card-header,.card-maroon:not(.card-outline)>.card-header a{color:#fff}.card-maroon:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-maroon.card-outline{border-top:3px solid #d81b60}.card-maroon.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-maroon.card-outline-tabs>.card-header a.active{border-top:3px solid #d81b60}.bg-gradient-maroon>.card-header .btn-tool,.bg-maroon>.card-header .btn-tool,.card-maroon:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-maroon>.card-header .btn-tool:hover,.bg-maroon>.card-header .btn-tool:hover,.card-maroon:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-maroon .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget .table th,.card.bg-maroon .bootstrap-datetimepicker-widget .table td,.card.bg-maroon .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#b41650;color:#fff}.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.today::before,.card.bg-maroon .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-maroon .bootstrap-datetimepicker-widget table td.active,.card.bg-maroon .bootstrap-datetimepicker-widget table td.active:hover{background-color:#e73f7c;color:#fff}.card-blue:not(.card-outline)>.card-header{background-color:#007bff}.card-blue:not(.card-outline)>.card-header,.card-blue:not(.card-outline)>.card-header a{color:#fff}.card-blue:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-blue.card-outline{border-top:3px solid #007bff}.card-blue.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-blue.card-outline-tabs>.card-header a.active{border-top:3px solid #007bff}.bg-blue>.card-header .btn-tool,.bg-gradient-blue>.card-header .btn-tool,.card-blue:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-blue>.card-header .btn-tool:hover,.bg-gradient-blue>.card-header .btn-tool:hover,.card-blue:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-blue .bootstrap-datetimepicker-widget .table td,.card.bg-blue .bootstrap-datetimepicker-widget .table th,.card.bg-gradient-blue .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-blue .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-blue .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-blue .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-blue .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-blue .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-blue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#0067d6;color:#fff}.card.bg-blue .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-blue .bootstrap-datetimepicker-widget table td.active,.card.bg-blue .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.active:hover{background-color:#3395ff;color:#fff}.card-indigo:not(.card-outline)>.card-header{background-color:#6610f2}.card-indigo:not(.card-outline)>.card-header,.card-indigo:not(.card-outline)>.card-header a{color:#fff}.card-indigo:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-indigo.card-outline{border-top:3px solid #6610f2}.card-indigo.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-indigo.card-outline-tabs>.card-header a.active{border-top:3px solid #6610f2}.bg-gradient-indigo>.card-header .btn-tool,.bg-indigo>.card-header .btn-tool,.card-indigo:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-indigo>.card-header .btn-tool:hover,.bg-indigo>.card-header .btn-tool:hover,.card-indigo:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-indigo .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget .table th,.card.bg-indigo .bootstrap-datetimepicker-widget .table td,.card.bg-indigo .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#550bce;color:#fff}.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.today::before,.card.bg-indigo .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-indigo .bootstrap-datetimepicker-widget table td.active,.card.bg-indigo .bootstrap-datetimepicker-widget table td.active:hover{background-color:#8540f5;color:#fff}.card-purple:not(.card-outline)>.card-header{background-color:#6f42c1}.card-purple:not(.card-outline)>.card-header,.card-purple:not(.card-outline)>.card-header a{color:#fff}.card-purple:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-purple.card-outline{border-top:3px solid #6f42c1}.card-purple.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-purple.card-outline-tabs>.card-header a.active{border-top:3px solid #6f42c1}.bg-gradient-purple>.card-header .btn-tool,.bg-purple>.card-header .btn-tool,.card-purple:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-purple>.card-header .btn-tool:hover,.bg-purple>.card-header .btn-tool:hover,.card-purple:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-purple .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-purple .bootstrap-datetimepicker-widget .table th,.card.bg-purple .bootstrap-datetimepicker-widget .table td,.card.bg-purple .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-purple .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-purple .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-purple .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-purple .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-purple .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-purple .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#5d36a4;color:#fff}.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.today::before,.card.bg-purple .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-purple .bootstrap-datetimepicker-widget table td.active,.card.bg-purple .bootstrap-datetimepicker-widget table td.active:hover{background-color:#8c68ce;color:#fff}.card-pink:not(.card-outline)>.card-header{background-color:#e83e8c}.card-pink:not(.card-outline)>.card-header,.card-pink:not(.card-outline)>.card-header a{color:#fff}.card-pink:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-pink.card-outline{border-top:3px solid #e83e8c}.card-pink.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-pink.card-outline-tabs>.card-header a.active{border-top:3px solid #e83e8c}.bg-gradient-pink>.card-header .btn-tool,.bg-pink>.card-header .btn-tool,.card-pink:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-pink>.card-header .btn-tool:hover,.bg-pink>.card-header .btn-tool:hover,.card-pink:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-pink .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-pink .bootstrap-datetimepicker-widget .table th,.card.bg-pink .bootstrap-datetimepicker-widget .table td,.card.bg-pink .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-pink .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-pink .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-pink .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-pink .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-pink .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-pink .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e21b76;color:#fff}.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.today::before,.card.bg-pink .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-pink .bootstrap-datetimepicker-widget table td.active,.card.bg-pink .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ed6ca7;color:#fff}.card-red:not(.card-outline)>.card-header{background-color:#dc3545}.card-red:not(.card-outline)>.card-header,.card-red:not(.card-outline)>.card-header a{color:#fff}.card-red:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-red.card-outline{border-top:3px solid #dc3545}.card-red.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-red.card-outline-tabs>.card-header a.active{border-top:3px solid #dc3545}.bg-gradient-red>.card-header .btn-tool,.bg-red>.card-header .btn-tool,.card-red:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-red>.card-header .btn-tool:hover,.bg-red>.card-header .btn-tool:hover,.card-red:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-red .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-red .bootstrap-datetimepicker-widget .table th,.card.bg-red .bootstrap-datetimepicker-widget .table td,.card.bg-red .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-red .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-red .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-red .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-red .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-red .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-red .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#c62232;color:#fff}.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.today::before,.card.bg-red .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-red .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-red .bootstrap-datetimepicker-widget table td.active,.card.bg-red .bootstrap-datetimepicker-widget table td.active:hover{background-color:#e4606d;color:#fff}.card-orange:not(.card-outline)>.card-header{background-color:#fd7e14}.card-orange:not(.card-outline)>.card-header,.card-orange:not(.card-outline)>.card-header a{color:#1f2d3d}.card-orange:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-orange.card-outline{border-top:3px solid #fd7e14}.card-orange.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-orange.card-outline-tabs>.card-header a.active{border-top:3px solid #fd7e14}.bg-gradient-orange>.card-header .btn-tool,.bg-orange>.card-header .btn-tool,.card-orange:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-orange>.card-header .btn-tool:hover,.bg-orange>.card-header .btn-tool:hover,.card-orange:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-orange .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-orange .bootstrap-datetimepicker-widget .table th,.card.bg-orange .bootstrap-datetimepicker-widget .table td,.card.bg-orange .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-orange .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-orange .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-orange .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-orange .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-orange .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-orange .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e66a02;color:#1f2d3d}.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.today::before,.card.bg-orange .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-orange .bootstrap-datetimepicker-widget table td.active,.card.bg-orange .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fd9a47;color:#1f2d3d}.card-yellow:not(.card-outline)>.card-header{background-color:#ffc107}.card-yellow:not(.card-outline)>.card-header,.card-yellow:not(.card-outline)>.card-header a{color:#1f2d3d}.card-yellow:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-yellow.card-outline{border-top:3px solid #ffc107}.card-yellow.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-yellow.card-outline-tabs>.card-header a.active{border-top:3px solid #ffc107}.bg-gradient-yellow>.card-header .btn-tool,.bg-yellow>.card-header .btn-tool,.card-yellow:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-yellow>.card-header .btn-tool:hover,.bg-yellow>.card-header .btn-tool:hover,.card-yellow:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-yellow .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget .table th,.card.bg-yellow .bootstrap-datetimepicker-widget .table td,.card.bg-yellow .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#dda600;color:#1f2d3d}.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.today::before,.card.bg-yellow .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-yellow .bootstrap-datetimepicker-widget table td.active,.card.bg-yellow .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ffce3a;color:#1f2d3d}.card-green:not(.card-outline)>.card-header{background-color:#28a745}.card-green:not(.card-outline)>.card-header,.card-green:not(.card-outline)>.card-header a{color:#fff}.card-green:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-green.card-outline{border-top:3px solid #28a745}.card-green.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-green.card-outline-tabs>.card-header a.active{border-top:3px solid #28a745}.bg-gradient-green>.card-header .btn-tool,.bg-green>.card-header .btn-tool,.card-green:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-green>.card-header .btn-tool:hover,.bg-green>.card-header .btn-tool:hover,.card-green:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-green .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-green .bootstrap-datetimepicker-widget .table th,.card.bg-green .bootstrap-datetimepicker-widget .table td,.card.bg-green .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-green .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-green .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-green .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-green .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-green .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-green .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#208637;color:#fff}.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.today::before,.card.bg-green .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-green .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-green .bootstrap-datetimepicker-widget table td.active,.card.bg-green .bootstrap-datetimepicker-widget table td.active:hover{background-color:#34ce57;color:#fff}.card-teal:not(.card-outline)>.card-header{background-color:#20c997}.card-teal:not(.card-outline)>.card-header,.card-teal:not(.card-outline)>.card-header a{color:#fff}.card-teal:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-teal.card-outline{border-top:3px solid #20c997}.card-teal.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-teal.card-outline-tabs>.card-header a.active{border-top:3px solid #20c997}.bg-gradient-teal>.card-header .btn-tool,.bg-teal>.card-header .btn-tool,.card-teal:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-teal>.card-header .btn-tool:hover,.bg-teal>.card-header .btn-tool:hover,.card-teal:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-teal .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-teal .bootstrap-datetimepicker-widget .table th,.card.bg-teal .bootstrap-datetimepicker-widget .table td,.card.bg-teal .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-teal .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-teal .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-teal .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-teal .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-teal .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-teal .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#1aa67d;color:#fff}.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.today::before,.card.bg-teal .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-teal .bootstrap-datetimepicker-widget table td.active,.card.bg-teal .bootstrap-datetimepicker-widget table td.active:hover{background-color:#3ce0af;color:#fff}.card-cyan:not(.card-outline)>.card-header{background-color:#17a2b8}.card-cyan:not(.card-outline)>.card-header,.card-cyan:not(.card-outline)>.card-header a{color:#fff}.card-cyan:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-cyan.card-outline{border-top:3px solid #17a2b8}.card-cyan.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-cyan.card-outline-tabs>.card-header a.active{border-top:3px solid #17a2b8}.bg-cyan>.card-header .btn-tool,.bg-gradient-cyan>.card-header .btn-tool,.card-cyan:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-cyan>.card-header .btn-tool:hover,.bg-gradient-cyan>.card-header .btn-tool:hover,.card-cyan:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-cyan .bootstrap-datetimepicker-widget .table td,.card.bg-cyan .bootstrap-datetimepicker-widget .table th,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-cyan .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-cyan .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-cyan .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-cyan .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-cyan .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#128294;color:#fff}.card.bg-cyan .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-cyan .bootstrap-datetimepicker-widget table td.active,.card.bg-cyan .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.active:hover{background-color:#1fc8e3;color:#fff}.card-white:not(.card-outline)>.card-header{background-color:#fff}.card-white:not(.card-outline)>.card-header,.card-white:not(.card-outline)>.card-header a{color:#1f2d3d}.card-white:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-white.card-outline{border-top:3px solid #fff}.card-white.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-white.card-outline-tabs>.card-header a.active{border-top:3px solid #fff}.bg-gradient-white>.card-header .btn-tool,.bg-white>.card-header .btn-tool,.card-white:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.bg-gradient-white>.card-header .btn-tool:hover,.bg-white>.card-header .btn-tool:hover,.card-white:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.card.bg-gradient-white .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-white .bootstrap-datetimepicker-widget .table th,.card.bg-white .bootstrap-datetimepicker-widget .table td,.card.bg-white .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-white .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-white .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-white .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-white .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-white .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-white .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#ebebeb;color:#1f2d3d}.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.today::before,.card.bg-white .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-white .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-white .bootstrap-datetimepicker-widget table td.active,.card.bg-white .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fff;color:#1f2d3d}.card-gray:not(.card-outline)>.card-header{background-color:#6c757d}.card-gray:not(.card-outline)>.card-header,.card-gray:not(.card-outline)>.card-header a{color:#fff}.card-gray:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-gray.card-outline{border-top:3px solid #6c757d}.card-gray.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-gray.card-outline-tabs>.card-header a.active{border-top:3px solid #6c757d}.bg-gradient-gray>.card-header .btn-tool,.bg-gray>.card-header .btn-tool,.card-gray:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-gray>.card-header .btn-tool:hover,.bg-gray>.card-header .btn-tool:hover,.card-gray:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-gray .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-gray .bootstrap-datetimepicker-widget .table th,.card.bg-gray .bootstrap-datetimepicker-widget .table td,.card.bg-gray .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-gray .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gray .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gray .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gray .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gray .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gray .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#596167;color:#fff}.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gray .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gray .bootstrap-datetimepicker-widget table td.active,.card.bg-gray .bootstrap-datetimepicker-widget table td.active:hover{background-color:#868e96;color:#fff}.card-gray-dark:not(.card-outline)>.card-header{background-color:#343a40}.card-gray-dark:not(.card-outline)>.card-header,.card-gray-dark:not(.card-outline)>.card-header a{color:#fff}.card-gray-dark:not(.card-outline)>.card-header a.active{color:#1f2d3d}.card-gray-dark.card-outline{border-top:3px solid #343a40}.card-gray-dark.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.card-gray-dark.card-outline-tabs>.card-header a.active{border-top:3px solid #343a40}.bg-gradient-gray-dark>.card-header .btn-tool,.bg-gray-dark>.card-header .btn-tool,.card-gray-dark:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.bg-gradient-gray-dark>.card-header .btn-tool:hover,.bg-gray-dark>.card-header .btn-tool:hover,.card-gray-dark:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget .table td,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget .table th,.card.bg-gray-dark .bootstrap-datetimepicker-widget .table td,.card.bg-gray-dark .bootstrap-datetimepicker-widget .table th{border:none}.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.day:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.hour:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.minute:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.second:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#222629;color:#fff}.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.today::before,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.active,.card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.active:hover,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.active,.card.bg-gray-dark .bootstrap-datetimepicker-widget table td.active:hover{background-color:#4b545c;color:#fff}.card{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);margin-bottom:1rem}.card.bg-dark .card-header{border-color:#383f45}.card.bg-dark,.card.bg-dark .card-body{color:#fff}.card.maximized-card{height:100%!important;left:0;max-height:100%!important;max-width:100%!important;position:fixed;top:0;width:100%!important;z-index:1040}.card.maximized-card.was-collapsed .card-body{display:block!important}.card.maximized-card .card-body{overflow:auto}.card.maximized-card [data-card-widgett=collapse]{display:none}.card.maximized-card .card-footer,.card.maximized-card .card-header{border-radius:0!important}.card.collapsed-card .card-body,.card.collapsed-card .card-footer{display:none}.card .nav.flex-column:not(.nav-sidebar)>li{border-bottom:1px solid rgba(0,0,0,.125);margin:0}.card .nav.flex-column:not(.nav-sidebar)>li:last-of-type{border-bottom:0}.card.height-control .card-body{max-height:300px;overflow:auto}.card .border-right{border-right:1px solid rgba(0,0,0,.125)}.card .border-left{border-left:1px solid rgba(0,0,0,.125)}.card.card-tabs:not(.card-outline)>.card-header{border-bottom:0}.card.card-tabs:not(.card-outline)>.card-header .nav-item:first-child .nav-link{border-left-color:transparent}.card.card-tabs.card-outline .nav-item{border-bottom:0}.card.card-tabs.card-outline .nav-item:first-child .nav-link{border-left:0;margin-left:0}.card.card-tabs .card-tools{margin:.3rem .5rem}.card.card-tabs:not(.expanding-card).collapsed-card .card-header{border-bottom:0}.card.card-tabs:not(.expanding-card).collapsed-card .card-header .nav-tabs{border-bottom:0}.card.card-tabs:not(.expanding-card).collapsed-card .card-header .nav-tabs .nav-item{margin-bottom:0}.card.card-tabs.expanding-card .card-header .nav-tabs .nav-item{margin-bottom:-1px}.card.card-outline-tabs{border-top:0}.card.card-outline-tabs .card-header .nav-item:first-child .nav-link{border-left:0;margin-left:0}.card.card-outline-tabs .card-header a{border-top:3px solid transparent}.card.card-outline-tabs .card-header a:hover{border-top:3px solid #dee2e6}.card.card-outline-tabs .card-header a.active:hover{margin-top:0}.card.card-outline-tabs .card-tools{margin:.5rem .5rem .3rem}.card.card-outline-tabs:not(.expanding-card).collapsed-card .card-header{border-bottom:0}.card.card-outline-tabs:not(.expanding-card).collapsed-card .card-header .nav-tabs{border-bottom:0}.card.card-outline-tabs:not(.expanding-card).collapsed-card .card-header .nav-tabs .nav-item{margin-bottom:0}.card.card-outline-tabs.expanding-card .card-header .nav-tabs .nav-item{margin-bottom:-1px}html.maximized-card{overflow:hidden}.card-body::after,.card-footer::after,.card-header::after{display:block;clear:both;content:""}.card-header{background-color:transparent;border-bottom:1px solid rgba(0,0,0,.125);padding:.75rem 1.25rem;position:relative;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.collapsed-card .card-header{border-bottom:0}.card-header>.card-tools{float:right;margin-right:-.625rem}.card-header>.card-tools .input-group,.card-header>.card-tools .nav,.card-header>.card-tools .pagination{margin-bottom:-.3rem;margin-top:-.3rem}.card-header>.card-tools [data-toggle=tooltip]{position:relative}.card-title{float:left;font-size:1.1rem;font-weight:400;margin:0}.card-text{clear:both}.btn-tool{background-color:transparent;color:#adb5bd;font-size:.875rem;margin:-.75rem 0;padding:.25rem .5rem}.btn-group.show .btn-tool,.btn-tool:hover{color:#495057}.btn-tool:focus,.show .btn-tool{box-shadow:none!important}.text-sm .card-title{font-size:1rem}.text-sm .nav-link{padding:.4rem .8rem}.card-body>.table{margin-bottom:0}.card-body>.table>thead>tr>td,.card-body>.table>thead>tr>th{border-top-width:0}.card-body .fc{margin-top:5px}.card-body .full-width-chart{margin:-19px}.card-body.p-0 .full-width-chart{margin:-9px}.chart-legend{padding-left:0;list-style:none;margin:10px 0}@media (max-width:576px){.chart-legend>li{float:left;margin-right:10px}}.card-comments{background-color:#f8f9fa}.card-comments .card-comment{border-bottom:1px solid #e9ecef;padding:8px 0}.card-comments .card-comment::after{display:block;clear:both;content:""}.card-comments .card-comment:last-of-type{border-bottom:0}.card-comments .card-comment:first-of-type{padding-top:0}.card-comments .card-comment img{height:1.875rem;width:1.875rem;float:left}.card-comments .comment-text{color:#78838e;margin-left:40px}.card-comments .username{color:#495057;display:block;font-weight:600}.card-comments .text-muted{font-size:12px;font-weight:400}.todo-list{list-style:none;margin:0;overflow:auto;padding:0}.todo-list>li{border-radius:2px;background-color:#f8f9fa;border-left:2px solid #e9ecef;color:#495057;margin-bottom:2px;padding:10px}.todo-list>li:last-of-type{margin-bottom:0}.todo-list>li>input[type=checkbox]{margin:0 10px 0 5px}.todo-list>li .text{display:inline-block;font-weight:600;margin-left:5px}.todo-list>li .badge{font-size:.7rem;margin-left:10px}.todo-list>li .tools{color:#dc3545;display:none;float:right}.todo-list>li .tools>.fa,.todo-list>li .tools>.fab,.todo-list>li .tools>.fad,.todo-list>li .tools>.fal,.todo-list>li .tools>.far,.todo-list>li .tools>.fas,.todo-list>li .tools>.ion,.todo-list>li .tools>.svg-inline--fa{cursor:pointer;margin-right:5px}.todo-list>li:hover .tools{display:inline-block}.todo-list>li.done{color:#697582}.todo-list>li.done .text{font-weight:500;text-decoration:line-through}.todo-list>li.done .badge{background-color:#adb5bd!important}.todo-list .primary{border-left-color:#007bff}.todo-list .secondary{border-left-color:#6c757d}.todo-list .success{border-left-color:#28a745}.todo-list .info{border-left-color:#17a2b8}.todo-list .warning{border-left-color:#ffc107}.todo-list .danger{border-left-color:#dc3545}.todo-list .light{border-left-color:#f8f9fa}.todo-list .dark{border-left-color:#343a40}.todo-list .lightblue{border-left-color:#3c8dbc}.todo-list .navy{border-left-color:#001f3f}.todo-list .olive{border-left-color:#3d9970}.todo-list .lime{border-left-color:#01ff70}.todo-list .fuchsia{border-left-color:#f012be}.todo-list .maroon{border-left-color:#d81b60}.todo-list .blue{border-left-color:#007bff}.todo-list .indigo{border-left-color:#6610f2}.todo-list .purple{border-left-color:#6f42c1}.todo-list .pink{border-left-color:#e83e8c}.todo-list .red{border-left-color:#dc3545}.todo-list .orange{border-left-color:#fd7e14}.todo-list .yellow{border-left-color:#ffc107}.todo-list .green{border-left-color:#28a745}.todo-list .teal{border-left-color:#20c997}.todo-list .cyan{border-left-color:#17a2b8}.todo-list .white{border-left-color:#fff}.todo-list .gray{border-left-color:#6c757d}.todo-list .gray-dark{border-left-color:#343a40}.todo-list .handle{cursor:move;display:inline-block;margin:0 5px}.card-input{max-width:200px}.card-default .nav-item:first-child .nav-link{border-left:0}.dark-mode .card-primary:not(.card-outline)>.card-header{background-color:#3f6791}.dark-mode .card-primary:not(.card-outline)>.card-header,.dark-mode .card-primary:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-primary:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-primary.card-outline{border-top:3px solid #3f6791}.dark-mode .card-primary.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-primary.card-outline-tabs>.card-header a.active{border-top:3px solid #3f6791}.dark-mode .bg-gradient-primary>.card-header .btn-tool,.dark-mode .bg-primary>.card-header .btn-tool,.dark-mode .card-primary:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-primary>.card-header .btn-tool:hover,.dark-mode .bg-primary>.card-header .btn-tool:hover,.dark-mode .card-primary:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#335375;color:#fff}.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-primary .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-primary .bootstrap-datetimepicker-widget table td.active:hover{background-color:#5080b3;color:#fff}.dark-mode .card-secondary:not(.card-outline)>.card-header{background-color:#6c757d}.dark-mode .card-secondary:not(.card-outline)>.card-header,.dark-mode .card-secondary:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-secondary:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-secondary.card-outline{border-top:3px solid #6c757d}.dark-mode .card-secondary.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-secondary.card-outline-tabs>.card-header a.active{border-top:3px solid #6c757d}.dark-mode .bg-gradient-secondary>.card-header .btn-tool,.dark-mode .bg-secondary>.card-header .btn-tool,.dark-mode .card-secondary:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-secondary>.card-header .btn-tool:hover,.dark-mode .bg-secondary>.card-header .btn-tool:hover,.dark-mode .card-secondary:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#596167;color:#fff}.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-secondary .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-secondary .bootstrap-datetimepicker-widget table td.active:hover{background-color:#868e96;color:#fff}.dark-mode .card-success:not(.card-outline)>.card-header{background-color:#00bc8c}.dark-mode .card-success:not(.card-outline)>.card-header,.dark-mode .card-success:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-success:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-success.card-outline{border-top:3px solid #00bc8c}.dark-mode .card-success.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-success.card-outline-tabs>.card-header a.active{border-top:3px solid #00bc8c}.dark-mode .bg-gradient-success>.card-header .btn-tool,.dark-mode .bg-success>.card-header .btn-tool,.dark-mode .card-success:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-success>.card-header .btn-tool:hover,.dark-mode .bg-success>.card-header .btn-tool:hover,.dark-mode .card-success:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#00936e;color:#fff}.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-success .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-success .bootstrap-datetimepicker-widget table td.active:hover{background-color:#00efb2;color:#fff}.dark-mode .card-info:not(.card-outline)>.card-header{background-color:#3498db}.dark-mode .card-info:not(.card-outline)>.card-header,.dark-mode .card-info:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-info:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-info.card-outline{border-top:3px solid #3498db}.dark-mode .card-info.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-info.card-outline-tabs>.card-header a.active{border-top:3px solid #3498db}.dark-mode .bg-gradient-info>.card-header .btn-tool,.dark-mode .bg-info>.card-header .btn-tool,.dark-mode .card-info:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-info>.card-header .btn-tool:hover,.dark-mode .bg-info>.card-header .btn-tool:hover,.dark-mode .card-info:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#2383c4;color:#fff}.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-info .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-info .bootstrap-datetimepicker-widget table td.active:hover{background-color:#5faee3;color:#fff}.dark-mode .card-warning:not(.card-outline)>.card-header{background-color:#f39c12}.dark-mode .card-warning:not(.card-outline)>.card-header,.dark-mode .card-warning:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-warning:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-warning.card-outline{border-top:3px solid #f39c12}.dark-mode .card-warning.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-warning.card-outline-tabs>.card-header a.active{border-top:3px solid #f39c12}.dark-mode .bg-gradient-warning>.card-header .btn-tool,.dark-mode .bg-warning>.card-header .btn-tool,.dark-mode .card-warning:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-warning>.card-header .btn-tool:hover,.dark-mode .bg-warning>.card-header .btn-tool:hover,.dark-mode .card-warning:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#d2850b;color:#1f2d3d}.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-warning .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-warning .bootstrap-datetimepicker-widget table td.active:hover{background-color:#f5b043;color:#1f2d3d}.dark-mode .card-danger:not(.card-outline)>.card-header{background-color:#e74c3c}.dark-mode .card-danger:not(.card-outline)>.card-header,.dark-mode .card-danger:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-danger:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-danger.card-outline{border-top:3px solid #e74c3c}.dark-mode .card-danger.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-danger.card-outline-tabs>.card-header a.active{border-top:3px solid #e74c3c}.dark-mode .bg-danger>.card-header .btn-tool,.dark-mode .bg-gradient-danger>.card-header .btn-tool,.dark-mode .card-danger:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-danger>.card-header .btn-tool:hover,.dark-mode .bg-gradient-danger>.card-header .btn-tool:hover,.dark-mode .card-danger:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#df2e1b;color:#fff}.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-danger .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-danger .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ed7669;color:#fff}.dark-mode .card-light:not(.card-outline)>.card-header{background-color:#f8f9fa}.dark-mode .card-light:not(.card-outline)>.card-header,.dark-mode .card-light:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-light:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-light.card-outline{border-top:3px solid #f8f9fa}.dark-mode .card-light.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-light.card-outline-tabs>.card-header a.active{border-top:3px solid #f8f9fa}.dark-mode .bg-gradient-light>.card-header .btn-tool,.dark-mode .bg-light>.card-header .btn-tool,.dark-mode .card-light:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-light>.card-header .btn-tool:hover,.dark-mode .bg-light>.card-header .btn-tool:hover,.dark-mode .card-light:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e0e5e9;color:#1f2d3d}.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-light .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-light .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fff;color:#1f2d3d}.dark-mode .card-dark:not(.card-outline)>.card-header{background-color:#343a40}.dark-mode .card-dark:not(.card-outline)>.card-header,.dark-mode .card-dark:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-dark:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-dark.card-outline{border-top:3px solid #343a40}.dark-mode .card-dark.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-dark.card-outline-tabs>.card-header a.active{border-top:3px solid #343a40}.dark-mode .bg-dark>.card-header .btn-tool,.dark-mode .bg-gradient-dark>.card-header .btn-tool,.dark-mode .card-dark:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-dark>.card-header .btn-tool:hover,.dark-mode .bg-gradient-dark>.card-header .btn-tool:hover,.dark-mode .card-dark:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#222629;color:#fff}.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-dark .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-dark .bootstrap-datetimepicker-widget table td.active:hover{background-color:#4b545c;color:#fff}.dark-mode .card-lightblue:not(.card-outline)>.card-header{background-color:#86bad8}.dark-mode .card-lightblue:not(.card-outline)>.card-header,.dark-mode .card-lightblue:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-lightblue:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-lightblue.card-outline{border-top:3px solid #86bad8}.dark-mode .card-lightblue.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-lightblue.card-outline-tabs>.card-header a.active{border-top:3px solid #86bad8}.dark-mode .bg-gradient-lightblue>.card-header .btn-tool,.dark-mode .bg-lightblue>.card-header .btn-tool,.dark-mode .card-lightblue:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-lightblue>.card-header .btn-tool:hover,.dark-mode .bg-lightblue>.card-header .btn-tool:hover,.dark-mode .card-lightblue:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#67a8ce;color:#1f2d3d}.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-lightblue .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-lightblue .bootstrap-datetimepicker-widget table td.active:hover{background-color:#acd0e5;color:#1f2d3d}.dark-mode .card-navy:not(.card-outline)>.card-header{background-color:#002c59}.dark-mode .card-navy:not(.card-outline)>.card-header,.dark-mode .card-navy:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-navy:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-navy.card-outline{border-top:3px solid #002c59}.dark-mode .card-navy.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-navy.card-outline-tabs>.card-header a.active{border-top:3px solid #002c59}.dark-mode .bg-gradient-navy>.card-header .btn-tool,.dark-mode .bg-navy>.card-header .btn-tool,.dark-mode .card-navy:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-navy>.card-header .btn-tool:hover,.dark-mode .bg-navy>.card-header .btn-tool:hover,.dark-mode .card-navy:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#001730;color:#fff}.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-navy .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-navy .bootstrap-datetimepicker-widget table td.active:hover{background-color:#00458c;color:#fff}.dark-mode .card-olive:not(.card-outline)>.card-header{background-color:#74c8a3}.dark-mode .card-olive:not(.card-outline)>.card-header,.dark-mode .card-olive:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-olive:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-olive.card-outline{border-top:3px solid #74c8a3}.dark-mode .card-olive.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-olive.card-outline-tabs>.card-header a.active{border-top:3px solid #74c8a3}.dark-mode .bg-gradient-olive>.card-header .btn-tool,.dark-mode .bg-olive>.card-header .btn-tool,.dark-mode .card-olive:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-olive>.card-header .btn-tool:hover,.dark-mode .bg-olive>.card-header .btn-tool:hover,.dark-mode .card-olive:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#57bc8f;color:#1f2d3d}.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-olive .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-olive .bootstrap-datetimepicker-widget table td.active:hover{background-color:#99d6bb;color:#1f2d3d}.dark-mode .card-lime:not(.card-outline)>.card-header{background-color:#67ffa9}.dark-mode .card-lime:not(.card-outline)>.card-header,.dark-mode .card-lime:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-lime:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-lime.card-outline{border-top:3px solid #67ffa9}.dark-mode .card-lime.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-lime.card-outline-tabs>.card-header a.active{border-top:3px solid #67ffa9}.dark-mode .bg-gradient-lime>.card-header .btn-tool,.dark-mode .bg-lime>.card-header .btn-tool,.dark-mode .card-lime:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-lime>.card-header .btn-tool:hover,.dark-mode .bg-lime>.card-header .btn-tool:hover,.dark-mode .card-lime:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#3eff92;color:#1f2d3d}.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-lime .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-lime .bootstrap-datetimepicker-widget table td.active:hover{background-color:#9affc6;color:#1f2d3d}.dark-mode .card-fuchsia:not(.card-outline)>.card-header{background-color:#f672d8}.dark-mode .card-fuchsia:not(.card-outline)>.card-header,.dark-mode .card-fuchsia:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-fuchsia:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-fuchsia.card-outline{border-top:3px solid #f672d8}.dark-mode .card-fuchsia.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-fuchsia.card-outline-tabs>.card-header a.active{border-top:3px solid #f672d8}.dark-mode .bg-fuchsia>.card-header .btn-tool,.dark-mode .bg-gradient-fuchsia>.card-header .btn-tool,.dark-mode .card-fuchsia:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-fuchsia>.card-header .btn-tool:hover,.dark-mode .bg-gradient-fuchsia>.card-header .btn-tool:hover,.dark-mode .card-fuchsia:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#f44cce;color:#1f2d3d}.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-fuchsia .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-fuchsia .bootstrap-datetimepicker-widget table td.active:hover{background-color:#f9a2e5;color:#1f2d3d}.dark-mode .card-maroon:not(.card-outline)>.card-header{background-color:#ed6c9b}.dark-mode .card-maroon:not(.card-outline)>.card-header,.dark-mode .card-maroon:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-maroon:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-maroon.card-outline{border-top:3px solid #ed6c9b}.dark-mode .card-maroon.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-maroon.card-outline-tabs>.card-header a.active{border-top:3px solid #ed6c9b}.dark-mode .bg-gradient-maroon>.card-header .btn-tool,.dark-mode .bg-maroon>.card-header .btn-tool,.dark-mode .card-maroon:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-maroon>.card-header .btn-tool:hover,.dark-mode .bg-maroon>.card-header .btn-tool:hover,.dark-mode .card-maroon:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e84883;color:#1f2d3d}.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-maroon .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-maroon .bootstrap-datetimepicker-widget table td.active:hover{background-color:#f29aba;color:#1f2d3d}.dark-mode .card-blue:not(.card-outline)>.card-header{background-color:#3f6791}.dark-mode .card-blue:not(.card-outline)>.card-header,.dark-mode .card-blue:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-blue:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-blue.card-outline{border-top:3px solid #3f6791}.dark-mode .card-blue.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-blue.card-outline-tabs>.card-header a.active{border-top:3px solid #3f6791}.dark-mode .bg-blue>.card-header .btn-tool,.dark-mode .bg-gradient-blue>.card-header .btn-tool,.dark-mode .card-blue:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-blue>.card-header .btn-tool:hover,.dark-mode .bg-gradient-blue>.card-header .btn-tool:hover,.dark-mode .card-blue:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#335375;color:#fff}.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-blue .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-blue .bootstrap-datetimepicker-widget table td.active:hover{background-color:#5080b3;color:#fff}.dark-mode .card-indigo:not(.card-outline)>.card-header{background-color:#6610f2}.dark-mode .card-indigo:not(.card-outline)>.card-header,.dark-mode .card-indigo:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-indigo:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-indigo.card-outline{border-top:3px solid #6610f2}.dark-mode .card-indigo.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-indigo.card-outline-tabs>.card-header a.active{border-top:3px solid #6610f2}.dark-mode .bg-gradient-indigo>.card-header .btn-tool,.dark-mode .bg-indigo>.card-header .btn-tool,.dark-mode .card-indigo:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-indigo>.card-header .btn-tool:hover,.dark-mode .bg-indigo>.card-header .btn-tool:hover,.dark-mode .card-indigo:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#550bce;color:#fff}.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-indigo .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-indigo .bootstrap-datetimepicker-widget table td.active:hover{background-color:#8540f5;color:#fff}.dark-mode .card-purple:not(.card-outline)>.card-header{background-color:#6f42c1}.dark-mode .card-purple:not(.card-outline)>.card-header,.dark-mode .card-purple:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-purple:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-purple.card-outline{border-top:3px solid #6f42c1}.dark-mode .card-purple.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-purple.card-outline-tabs>.card-header a.active{border-top:3px solid #6f42c1}.dark-mode .bg-gradient-purple>.card-header .btn-tool,.dark-mode .bg-purple>.card-header .btn-tool,.dark-mode .card-purple:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-purple>.card-header .btn-tool:hover,.dark-mode .bg-purple>.card-header .btn-tool:hover,.dark-mode .card-purple:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#5d36a4;color:#fff}.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-purple .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-purple .bootstrap-datetimepicker-widget table td.active:hover{background-color:#8c68ce;color:#fff}.dark-mode .card-pink:not(.card-outline)>.card-header{background-color:#e83e8c}.dark-mode .card-pink:not(.card-outline)>.card-header,.dark-mode .card-pink:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-pink:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-pink.card-outline{border-top:3px solid #e83e8c}.dark-mode .card-pink.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-pink.card-outline-tabs>.card-header a.active{border-top:3px solid #e83e8c}.dark-mode .bg-gradient-pink>.card-header .btn-tool,.dark-mode .bg-pink>.card-header .btn-tool,.dark-mode .card-pink:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-pink>.card-header .btn-tool:hover,.dark-mode .bg-pink>.card-header .btn-tool:hover,.dark-mode .card-pink:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e21b76;color:#fff}.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-pink .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-pink .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ed6ca7;color:#fff}.dark-mode .card-red:not(.card-outline)>.card-header{background-color:#e74c3c}.dark-mode .card-red:not(.card-outline)>.card-header,.dark-mode .card-red:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-red:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-red.card-outline{border-top:3px solid #e74c3c}.dark-mode .card-red.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-red.card-outline-tabs>.card-header a.active{border-top:3px solid #e74c3c}.dark-mode .bg-gradient-red>.card-header .btn-tool,.dark-mode .bg-red>.card-header .btn-tool,.dark-mode .card-red:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-red>.card-header .btn-tool:hover,.dark-mode .bg-red>.card-header .btn-tool:hover,.dark-mode .card-red:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#df2e1b;color:#fff}.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-red .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-red .bootstrap-datetimepicker-widget table td.active:hover{background-color:#ed7669;color:#fff}.dark-mode .card-orange:not(.card-outline)>.card-header{background-color:#fd7e14}.dark-mode .card-orange:not(.card-outline)>.card-header,.dark-mode .card-orange:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-orange:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-orange.card-outline{border-top:3px solid #fd7e14}.dark-mode .card-orange.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-orange.card-outline-tabs>.card-header a.active{border-top:3px solid #fd7e14}.dark-mode .bg-gradient-orange>.card-header .btn-tool,.dark-mode .bg-orange>.card-header .btn-tool,.dark-mode .card-orange:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-orange>.card-header .btn-tool:hover,.dark-mode .bg-orange>.card-header .btn-tool:hover,.dark-mode .card-orange:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#e66a02;color:#1f2d3d}.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-orange .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-orange .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fd9a47;color:#1f2d3d}.dark-mode .card-yellow:not(.card-outline)>.card-header{background-color:#f39c12}.dark-mode .card-yellow:not(.card-outline)>.card-header,.dark-mode .card-yellow:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-yellow:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-yellow.card-outline{border-top:3px solid #f39c12}.dark-mode .card-yellow.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-yellow.card-outline-tabs>.card-header a.active{border-top:3px solid #f39c12}.dark-mode .bg-gradient-yellow>.card-header .btn-tool,.dark-mode .bg-yellow>.card-header .btn-tool,.dark-mode .card-yellow:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-yellow>.card-header .btn-tool:hover,.dark-mode .bg-yellow>.card-header .btn-tool:hover,.dark-mode .card-yellow:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#d2850b;color:#1f2d3d}.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-yellow .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-yellow .bootstrap-datetimepicker-widget table td.active:hover{background-color:#f5b043;color:#1f2d3d}.dark-mode .card-green:not(.card-outline)>.card-header{background-color:#00bc8c}.dark-mode .card-green:not(.card-outline)>.card-header,.dark-mode .card-green:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-green:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-green.card-outline{border-top:3px solid #00bc8c}.dark-mode .card-green.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-green.card-outline-tabs>.card-header a.active{border-top:3px solid #00bc8c}.dark-mode .bg-gradient-green>.card-header .btn-tool,.dark-mode .bg-green>.card-header .btn-tool,.dark-mode .card-green:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-green>.card-header .btn-tool:hover,.dark-mode .bg-green>.card-header .btn-tool:hover,.dark-mode .card-green:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#00936e;color:#fff}.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-green .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-green .bootstrap-datetimepicker-widget table td.active:hover{background-color:#00efb2;color:#fff}.dark-mode .card-teal:not(.card-outline)>.card-header{background-color:#20c997}.dark-mode .card-teal:not(.card-outline)>.card-header,.dark-mode .card-teal:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-teal:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-teal.card-outline{border-top:3px solid #20c997}.dark-mode .card-teal.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-teal.card-outline-tabs>.card-header a.active{border-top:3px solid #20c997}.dark-mode .bg-gradient-teal>.card-header .btn-tool,.dark-mode .bg-teal>.card-header .btn-tool,.dark-mode .card-teal:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-teal>.card-header .btn-tool:hover,.dark-mode .bg-teal>.card-header .btn-tool:hover,.dark-mode .card-teal:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#1aa67d;color:#fff}.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-teal .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-teal .bootstrap-datetimepicker-widget table td.active:hover{background-color:#3ce0af;color:#fff}.dark-mode .card-cyan:not(.card-outline)>.card-header{background-color:#3498db}.dark-mode .card-cyan:not(.card-outline)>.card-header,.dark-mode .card-cyan:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-cyan:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-cyan.card-outline{border-top:3px solid #3498db}.dark-mode .card-cyan.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-cyan.card-outline-tabs>.card-header a.active{border-top:3px solid #3498db}.dark-mode .bg-cyan>.card-header .btn-tool,.dark-mode .bg-gradient-cyan>.card-header .btn-tool,.dark-mode .card-cyan:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-cyan>.card-header .btn-tool:hover,.dark-mode .bg-gradient-cyan>.card-header .btn-tool:hover,.dark-mode .card-cyan:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#2383c4;color:#fff}.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-cyan .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-cyan .bootstrap-datetimepicker-widget table td.active:hover{background-color:#5faee3;color:#fff}.dark-mode .card-white:not(.card-outline)>.card-header{background-color:#fff}.dark-mode .card-white:not(.card-outline)>.card-header,.dark-mode .card-white:not(.card-outline)>.card-header a{color:#1f2d3d}.dark-mode .card-white:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-white.card-outline{border-top:3px solid #fff}.dark-mode .card-white.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-white.card-outline-tabs>.card-header a.active{border-top:3px solid #fff}.dark-mode .bg-gradient-white>.card-header .btn-tool,.dark-mode .bg-white>.card-header .btn-tool,.dark-mode .card-white:not(.card-outline)>.card-header .btn-tool{color:rgba(31,45,61,.8)}.dark-mode .bg-gradient-white>.card-header .btn-tool:hover,.dark-mode .bg-white>.card-header .btn-tool:hover,.dark-mode .card-white:not(.card-outline)>.card-header .btn-tool:hover{color:#1f2d3d}.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#ebebeb;color:#1f2d3d}.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#1f2d3d}.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-white .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-white .bootstrap-datetimepicker-widget table td.active:hover{background-color:#fff;color:#1f2d3d}.dark-mode .card-gray:not(.card-outline)>.card-header{background-color:#6c757d}.dark-mode .card-gray:not(.card-outline)>.card-header,.dark-mode .card-gray:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-gray:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-gray.card-outline{border-top:3px solid #6c757d}.dark-mode .card-gray.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-gray.card-outline-tabs>.card-header a.active{border-top:3px solid #6c757d}.dark-mode .bg-gradient-gray>.card-header .btn-tool,.dark-mode .bg-gray>.card-header .btn-tool,.dark-mode .card-gray:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-gray>.card-header .btn-tool:hover,.dark-mode .bg-gray>.card-header .btn-tool:hover,.dark-mode .card-gray:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#596167;color:#fff}.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-gray .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gray .bootstrap-datetimepicker-widget table td.active:hover{background-color:#868e96;color:#fff}.dark-mode .card-gray-dark:not(.card-outline)>.card-header{background-color:#343a40}.dark-mode .card-gray-dark:not(.card-outline)>.card-header,.dark-mode .card-gray-dark:not(.card-outline)>.card-header a{color:#fff}.dark-mode .card-gray-dark:not(.card-outline)>.card-header a.active{color:#1f2d3d}.dark-mode .card-gray-dark.card-outline{border-top:3px solid #343a40}.dark-mode .card-gray-dark.card-outline-tabs>.card-header a:hover{border-top:3px solid #dee2e6}.dark-mode .card-gray-dark.card-outline-tabs>.card-header a.active{border-top:3px solid #343a40}.dark-mode .bg-gradient-gray-dark>.card-header .btn-tool,.dark-mode .bg-gray-dark>.card-header .btn-tool,.dark-mode .card-gray-dark:not(.card-outline)>.card-header .btn-tool{color:rgba(255,255,255,.8)}.dark-mode .bg-gradient-gray-dark>.card-header .btn-tool:hover,.dark-mode .bg-gray-dark>.card-header .btn-tool:hover,.dark-mode .card-gray-dark:not(.card-outline)>.card-header .btn-tool:hover{color:#fff}.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget .table th,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget .table td,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget .table th{border:none}.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.day:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.hour:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.minute:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.second:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table thead tr:first-child th:hover{background-color:#222629;color:#fff}.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.today::before,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.today::before{border-bottom-color:#fff}.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gradient-gray-dark .bootstrap-datetimepicker-widget table td.active:hover,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.active,.dark-mode .card.bg-gray-dark .bootstrap-datetimepicker-widget table td.active:hover{background-color:#4b545c;color:#fff}.dark-mode .card{background-color:#343a40;color:#fff}.dark-mode .card .card{background-color:#3f474e;color:#fff}.dark-mode .card .nav.flex-column>li{border-bottom-color:#6c757d}.dark-mode .card .card-footer{background-color:rgba(0,0,0,.1)}.dark-mode .card.card-outline-tabs .card-header a:hover{border-color:#6c757d;border-bottom-color:transparent}.dark-mode .card:not(.card-outline)>.card-header a.active{color:#fff}.dark-mode .card-comments{background-color:#373d44}.dark-mode .card-comments .username{color:#ced4da}.dark-mode .card-comments .card-comment{border-bottom-color:#454d55}.dark-mode .todo-list>li{background-color:#3f474e;border-color:#454d55;color:#fff}.dark-mode .todo-list .primary{border-left-color:#3f6791}.dark-mode .todo-list .secondary{border-left-color:#6c757d}.dark-mode .todo-list .success{border-left-color:#00bc8c}.dark-mode .todo-list .info{border-left-color:#3498db}.dark-mode .todo-list .warning{border-left-color:#f39c12}.dark-mode .todo-list .danger{border-left-color:#e74c3c}.dark-mode .todo-list .light{border-left-color:#f8f9fa}.dark-mode .todo-list .dark{border-left-color:#343a40}.dark-mode .todo-list .lightblue{border-left-color:#86bad8}.dark-mode .todo-list .navy{border-left-color:#002c59}.dark-mode .todo-list .olive{border-left-color:#74c8a3}.dark-mode .todo-list .lime{border-left-color:#67ffa9}.dark-mode .todo-list .fuchsia{border-left-color:#f672d8}.dark-mode .todo-list .maroon{border-left-color:#ed6c9b}.dark-mode .todo-list .blue{border-left-color:#3f6791}.dark-mode .todo-list .indigo{border-left-color:#6610f2}.dark-mode .todo-list .purple{border-left-color:#6f42c1}.dark-mode .todo-list .pink{border-left-color:#e83e8c}.dark-mode .todo-list .red{border-left-color:#e74c3c}.dark-mode .todo-list .orange{border-left-color:#fd7e14}.dark-mode .todo-list .yellow{border-left-color:#f39c12}.dark-mode .todo-list .green{border-left-color:#00bc8c}.dark-mode .todo-list .teal{border-left-color:#20c997}.dark-mode .todo-list .cyan{border-left-color:#3498db}.dark-mode .todo-list .white{border-left-color:#fff}.dark-mode .todo-list .gray{border-left-color:#6c757d}.dark-mode .todo-list .gray-dark{border-left-color:#343a40}.modal-dialog .overlay{display:-ms-flexbox;display:flex;position:absolute;left:0;top:0;bottom:0;right:0;margin:-1px;z-index:1052;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;background-color:rgba(0,0,0,.7);color:#666f76;border-radius:.3rem}.modal-content.bg-warning .modal-footer,.modal-content.bg-warning .modal-header{border-color:#343a40}.modal-content.bg-danger .close,.modal-content.bg-danger .mailbox-attachment-close,.modal-content.bg-info .close,.modal-content.bg-info .mailbox-attachment-close,.modal-content.bg-primary .close,.modal-content.bg-primary .mailbox-attachment-close,.modal-content.bg-secondary .close,.modal-content.bg-secondary .mailbox-attachment-close,.modal-content.bg-success .close,.modal-content.bg-success .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .modal-footer,.dark-mode .modal-header{border-color:#6c757d}.dark-mode .modal-content{background-color:#343a40}.dark-mode .modal-content.bg-warning .modal-footer,.dark-mode .modal-content.bg-warning .modal-header{border-color:#6c757d}.dark-mode .modal-content.bg-warning .close,.dark-mode .modal-content.bg-warning .mailbox-attachment-close{color:#343a40!important;text-shadow:0 1px 0 #495057!important}.dark-mode .modal-content.bg-danger .modal-footer,.dark-mode .modal-content.bg-danger .modal-header,.dark-mode .modal-content.bg-info .modal-footer,.dark-mode .modal-content.bg-info .modal-header,.dark-mode .modal-content.bg-primary .modal-footer,.dark-mode .modal-content.bg-primary .modal-header,.dark-mode .modal-content.bg-secondary .modal-footer,.dark-mode .modal-content.bg-secondary .modal-header,.dark-mode .modal-content.bg-success .modal-footer,.dark-mode .modal-content.bg-success .modal-header{border-color:#fff}.toasts-top-right{position:absolute;right:0;top:0;z-index:1040}.toasts-top-right.fixed{position:fixed}.toasts-top-left{left:0;position:absolute;top:0;z-index:1040}.toasts-top-left.fixed{position:fixed}.toasts-bottom-right{bottom:0;position:absolute;right:0;z-index:1040}.toasts-bottom-right.fixed{position:fixed}.toasts-bottom-left{bottom:0;left:0;position:absolute;z-index:1040}.toasts-bottom-left.fixed{position:fixed}.dark-mode .toast{background-color:rgba(52,58,64,.85);color:#fff}.dark-mode .toast .toast-header{background-color:rgba(52,58,64,.7);color:#f8f9fa}.dark-mode .toast.bg-primary{background-color:rgba(63,103,145,.9)!important}.dark-mode .toast.bg-primary .close,.dark-mode .toast.bg-primary .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-primary .toast-header{background-color:rgba(63,103,145,.85);color:#fff}.dark-mode .toast.bg-secondary{background-color:rgba(108,117,125,.9)!important}.dark-mode .toast.bg-secondary .close,.dark-mode .toast.bg-secondary .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-secondary .toast-header{background-color:rgba(108,117,125,.85);color:#fff}.dark-mode .toast.bg-success{background-color:rgba(0,188,140,.9)!important}.dark-mode .toast.bg-success .close,.dark-mode .toast.bg-success .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-success .toast-header{background-color:rgba(0,188,140,.85);color:#fff}.dark-mode .toast.bg-info{background-color:rgba(52,152,219,.9)!important}.dark-mode .toast.bg-info .close,.dark-mode .toast.bg-info .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-info .toast-header{background-color:rgba(52,152,219,.85);color:#fff}.dark-mode .toast.bg-warning{background-color:rgba(243,156,18,.9)!important}.dark-mode .toast.bg-warning .toast-header{background-color:rgba(243,156,18,.85);color:#1f2d3d}.dark-mode .toast.bg-danger{background-color:rgba(231,76,60,.9)!important}.dark-mode .toast.bg-danger .close,.dark-mode .toast.bg-danger .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-danger .toast-header{background-color:rgba(231,76,60,.85);color:#fff}.dark-mode .toast.bg-light{background-color:rgba(248,249,250,.9)!important}.dark-mode .toast.bg-light .toast-header{background-color:rgba(248,249,250,.85);color:#1f2d3d}.dark-mode .toast.bg-dark{background-color:rgba(52,58,64,.9)!important}.dark-mode .toast.bg-dark .close,.dark-mode .toast.bg-dark .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-dark .toast-header{background-color:rgba(52,58,64,.85);color:#fff}.dark-mode .toast.bg-lightblue{background-color:rgba(134,186,216,.9)!important}.dark-mode .toast.bg-lightblue .toast-header{background-color:rgba(134,186,216,.85);color:#1f2d3d}.dark-mode .toast.bg-navy{background-color:rgba(0,44,89,.9)!important}.dark-mode .toast.bg-navy .close,.dark-mode .toast.bg-navy .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-navy .toast-header{background-color:rgba(0,44,89,.85);color:#fff}.dark-mode .toast.bg-olive{background-color:rgba(116,200,163,.9)!important}.dark-mode .toast.bg-olive .toast-header{background-color:rgba(116,200,163,.85);color:#1f2d3d}.dark-mode .toast.bg-lime{background-color:rgba(103,255,169,.9)!important}.dark-mode .toast.bg-lime .toast-header{background-color:rgba(103,255,169,.85);color:#1f2d3d}.dark-mode .toast.bg-fuchsia{background-color:rgba(246,114,216,.9)!important}.dark-mode .toast.bg-fuchsia .toast-header{background-color:rgba(246,114,216,.85);color:#1f2d3d}.dark-mode .toast.bg-maroon{background-color:rgba(237,108,155,.9)!important}.dark-mode .toast.bg-maroon .toast-header{background-color:rgba(237,108,155,.85);color:#1f2d3d}.dark-mode .toast.bg-blue{background-color:rgba(63,103,145,.9)!important}.dark-mode .toast.bg-blue .close,.dark-mode .toast.bg-blue .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-blue .toast-header{background-color:rgba(63,103,145,.85);color:#fff}.dark-mode .toast.bg-indigo{background-color:rgba(102,16,242,.9)!important}.dark-mode .toast.bg-indigo .close,.dark-mode .toast.bg-indigo .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-indigo .toast-header{background-color:rgba(102,16,242,.85);color:#fff}.dark-mode .toast.bg-purple{background-color:rgba(111,66,193,.9)!important}.dark-mode .toast.bg-purple .close,.dark-mode .toast.bg-purple .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-purple .toast-header{background-color:rgba(111,66,193,.85);color:#fff}.dark-mode .toast.bg-pink{background-color:rgba(232,62,140,.9)!important}.dark-mode .toast.bg-pink .close,.dark-mode .toast.bg-pink .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-pink .toast-header{background-color:rgba(232,62,140,.85);color:#fff}.dark-mode .toast.bg-red{background-color:rgba(231,76,60,.9)!important}.dark-mode .toast.bg-red .close,.dark-mode .toast.bg-red .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-red .toast-header{background-color:rgba(231,76,60,.85);color:#fff}.dark-mode .toast.bg-orange{background-color:rgba(253,126,20,.9)!important}.dark-mode .toast.bg-orange .toast-header{background-color:rgba(253,126,20,.85);color:#1f2d3d}.dark-mode .toast.bg-yellow{background-color:rgba(243,156,18,.9)!important}.dark-mode .toast.bg-yellow .toast-header{background-color:rgba(243,156,18,.85);color:#1f2d3d}.dark-mode .toast.bg-green{background-color:rgba(0,188,140,.9)!important}.dark-mode .toast.bg-green .close,.dark-mode .toast.bg-green .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-green .toast-header{background-color:rgba(0,188,140,.85);color:#fff}.dark-mode .toast.bg-teal{background-color:rgba(32,201,151,.9)!important}.dark-mode .toast.bg-teal .close,.dark-mode .toast.bg-teal .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-teal .toast-header{background-color:rgba(32,201,151,.85);color:#fff}.dark-mode .toast.bg-cyan{background-color:rgba(52,152,219,.9)!important}.dark-mode .toast.bg-cyan .close,.dark-mode .toast.bg-cyan .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-cyan .toast-header{background-color:rgba(52,152,219,.85);color:#fff}.dark-mode .toast.bg-white{background-color:rgba(255,255,255,.9)!important}.dark-mode .toast.bg-white .toast-header{background-color:rgba(255,255,255,.85);color:#1f2d3d}.dark-mode .toast.bg-gray{background-color:rgba(108,117,125,.9)!important}.dark-mode .toast.bg-gray .close,.dark-mode .toast.bg-gray .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-gray .toast-header{background-color:rgba(108,117,125,.85);color:#fff}.dark-mode .toast.bg-gray-dark{background-color:rgba(52,58,64,.9)!important}.dark-mode .toast.bg-gray-dark .close,.dark-mode .toast.bg-gray-dark .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.dark-mode .toast.bg-gray-dark .toast-header{background-color:rgba(52,58,64,.85);color:#fff}.toast.bg-primary{background-color:rgba(0,123,255,.9)!important}.toast.bg-primary .close,.toast.bg-primary .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-primary .toast-header{background-color:rgba(0,123,255,.85);color:#fff}.toast.bg-secondary{background-color:rgba(108,117,125,.9)!important}.toast.bg-secondary .close,.toast.bg-secondary .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-secondary .toast-header{background-color:rgba(108,117,125,.85);color:#fff}.toast.bg-success{background-color:rgba(40,167,69,.9)!important}.toast.bg-success .close,.toast.bg-success .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-success .toast-header{background-color:rgba(40,167,69,.85);color:#fff}.toast.bg-info{background-color:rgba(23,162,184,.9)!important}.toast.bg-info .close,.toast.bg-info .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-info .toast-header{background-color:rgba(23,162,184,.85);color:#fff}.toast.bg-warning{background-color:rgba(255,193,7,.9)!important}.toast.bg-warning .toast-header{background-color:rgba(255,193,7,.85);color:#1f2d3d}.toast.bg-danger{background-color:rgba(220,53,69,.9)!important}.toast.bg-danger .close,.toast.bg-danger .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-danger .toast-header{background-color:rgba(220,53,69,.85);color:#fff}.toast.bg-light{background-color:rgba(248,249,250,.9)!important}.toast.bg-light .toast-header{background-color:rgba(248,249,250,.85);color:#1f2d3d}.toast.bg-dark{background-color:rgba(52,58,64,.9)!important}.toast.bg-dark .close,.toast.bg-dark .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-dark .toast-header{background-color:rgba(52,58,64,.85);color:#fff}.toast.bg-lightblue{background-color:rgba(60,141,188,.9)!important}.toast.bg-lightblue .close,.toast.bg-lightblue .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-lightblue .toast-header{background-color:rgba(60,141,188,.85);color:#fff}.toast.bg-navy{background-color:rgba(0,31,63,.9)!important}.toast.bg-navy .close,.toast.bg-navy .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-navy .toast-header{background-color:rgba(0,31,63,.85);color:#fff}.toast.bg-olive{background-color:rgba(61,153,112,.9)!important}.toast.bg-olive .close,.toast.bg-olive .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-olive .toast-header{background-color:rgba(61,153,112,.85);color:#fff}.toast.bg-lime{background-color:rgba(1,255,112,.9)!important}.toast.bg-lime .toast-header{background-color:rgba(1,255,112,.85);color:#1f2d3d}.toast.bg-fuchsia{background-color:rgba(240,18,190,.9)!important}.toast.bg-fuchsia .close,.toast.bg-fuchsia .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-fuchsia .toast-header{background-color:rgba(240,18,190,.85);color:#fff}.toast.bg-maroon{background-color:rgba(216,27,96,.9)!important}.toast.bg-maroon .close,.toast.bg-maroon .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-maroon .toast-header{background-color:rgba(216,27,96,.85);color:#fff}.toast.bg-blue{background-color:rgba(0,123,255,.9)!important}.toast.bg-blue .close,.toast.bg-blue .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-blue .toast-header{background-color:rgba(0,123,255,.85);color:#fff}.toast.bg-indigo{background-color:rgba(102,16,242,.9)!important}.toast.bg-indigo .close,.toast.bg-indigo .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-indigo .toast-header{background-color:rgba(102,16,242,.85);color:#fff}.toast.bg-purple{background-color:rgba(111,66,193,.9)!important}.toast.bg-purple .close,.toast.bg-purple .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-purple .toast-header{background-color:rgba(111,66,193,.85);color:#fff}.toast.bg-pink{background-color:rgba(232,62,140,.9)!important}.toast.bg-pink .close,.toast.bg-pink .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-pink .toast-header{background-color:rgba(232,62,140,.85);color:#fff}.toast.bg-red{background-color:rgba(220,53,69,.9)!important}.toast.bg-red .close,.toast.bg-red .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-red .toast-header{background-color:rgba(220,53,69,.85);color:#fff}.toast.bg-orange{background-color:rgba(253,126,20,.9)!important}.toast.bg-orange .toast-header{background-color:rgba(253,126,20,.85);color:#1f2d3d}.toast.bg-yellow{background-color:rgba(255,193,7,.9)!important}.toast.bg-yellow .toast-header{background-color:rgba(255,193,7,.85);color:#1f2d3d}.toast.bg-green{background-color:rgba(40,167,69,.9)!important}.toast.bg-green .close,.toast.bg-green .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-green .toast-header{background-color:rgba(40,167,69,.85);color:#fff}.toast.bg-teal{background-color:rgba(32,201,151,.9)!important}.toast.bg-teal .close,.toast.bg-teal .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-teal .toast-header{background-color:rgba(32,201,151,.85);color:#fff}.toast.bg-cyan{background-color:rgba(23,162,184,.9)!important}.toast.bg-cyan .close,.toast.bg-cyan .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-cyan .toast-header{background-color:rgba(23,162,184,.85);color:#fff}.toast.bg-white{background-color:rgba(255,255,255,.9)!important}.toast.bg-white .toast-header{background-color:rgba(255,255,255,.85);color:#1f2d3d}.toast.bg-gray{background-color:rgba(108,117,125,.9)!important}.toast.bg-gray .close,.toast.bg-gray .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-gray .toast-header{background-color:rgba(108,117,125,.85);color:#fff}.toast.bg-gray-dark{background-color:rgba(52,58,64,.9)!important}.toast.bg-gray-dark .close,.toast.bg-gray-dark .mailbox-attachment-close{color:#fff;text-shadow:0 1px 0 #000}.toast.bg-gray-dark .toast-header{background-color:rgba(52,58,64,.85);color:#fff}.btn.disabled,.btn:disabled{cursor:not-allowed}.btn.btn-flat{border-radius:0;border-width:1px;box-shadow:none}.btn.btn-file{overflow:hidden;position:relative}.btn.btn-file>input[type=file]{background-color:#fff;cursor:inherit;display:block;font-size:100px;min-height:100%;min-width:100%;opacity:0;outline:0;position:absolute;right:0;text-align:right;top:0}.text-sm .btn{font-size:.875rem!important}.btn-default{background-color:#f8f9fa;border-color:#ddd;color:#444}.btn-default.hover,.btn-default:active,.btn-default:hover{background-color:#e9ecef;color:#2b2b2b}.btn-default.disabled,.btn-default:disabled{color:#444;background-color:#f8f9fa}.btn-outline-light{color:#bdc6d0;border-color:#bdc6d0}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#bdc6d0;border-color:#bdc6d0}.btn-app{border-radius:3px;background-color:#f8f9fa;border:1px solid #ddd;color:#6c757d;font-size:12px;height:60px;margin:0 0 10px 10px;min-width:80px;padding:15px 5px;position:relative;text-align:center}.btn-app>.fa,.btn-app>.fab,.btn-app>.fad,.btn-app>.fal,.btn-app>.far,.btn-app>.fas,.btn-app>.ion,.btn-app>.svg-inline--fa{display:block;font-size:20px}.btn-app>.svg-inline--fa{margin:0 auto}.btn-app:hover{background-color:#f8f9fa;border-color:#aaa;color:#444}.btn-app:active,.btn-app:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-app>.badge{font-size:10px;font-weight:400;position:absolute;right:-10px;top:-3px}.btn-xs{padding:.125rem .25rem;font-size:.75rem;line-height:1.5;border-radius:.15rem}.dark-mode .btn-app,.dark-mode .btn-default{background-color:#3a4047;color:#fff;border-color:#6c757d}.dark-mode .btn-app:focus,.dark-mode .btn-app:hover,.dark-mode .btn-default:focus,.dark-mode .btn-default:hover{background-color:#3f474e;color:#dee2e6;border-color:#727b84}.dark-mode .btn-light{background-color:#454d55;color:#fff;border-color:#6c757d}.dark-mode .btn-light:focus,.dark-mode .btn-light:hover{background-color:#4b545c;color:#dee2e6;border-color:#78828a}.dark-mode .btn-primary{color:#fff;background-color:#3f6791;border-color:#3f6791;box-shadow:none}.dark-mode .btn-primary:hover{color:#fff;background-color:#335476;border-color:#304e6d}.dark-mode .btn-primary.focus,.dark-mode .btn-primary:focus{color:#fff;background-color:#335476;border-color:#304e6d;box-shadow:0 0 0 0 rgba(92,126,162,.5)}.dark-mode .btn-primary.disabled,.dark-mode .btn-primary:disabled{color:#fff;background-color:#3f6791;border-color:#3f6791}.dark-mode .btn-primary:not(:disabled):not(.disabled).active,.dark-mode .btn-primary:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-primary.dropdown-toggle{color:#fff;background-color:#304e6d;border-color:#2c4765}.dark-mode .btn-primary:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-primary:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(92,126,162,.5)}.dark-mode .btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d;box-shadow:none}.dark-mode .btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.dark-mode .btn-secondary.focus,.dark-mode .btn-secondary:focus{color:#fff;background-color:#5a6268;border-color:#545b62;box-shadow:0 0 0 0 rgba(130,138,145,.5)}.dark-mode .btn-secondary.disabled,.dark-mode .btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.dark-mode .btn-secondary:not(:disabled):not(.disabled).active,.dark-mode .btn-secondary:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.dark-mode .btn-secondary:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(130,138,145,.5)}.dark-mode .btn-success{color:#fff;background-color:#00bc8c;border-color:#00bc8c;box-shadow:none}.dark-mode .btn-success:hover{color:#fff;background-color:#009670;border-color:#008966}.dark-mode .btn-success.focus,.dark-mode .btn-success:focus{color:#fff;background-color:#009670;border-color:#008966;box-shadow:0 0 0 0 rgba(38,198,157,.5)}.dark-mode .btn-success.disabled,.dark-mode .btn-success:disabled{color:#fff;background-color:#00bc8c;border-color:#00bc8c}.dark-mode .btn-success:not(:disabled):not(.disabled).active,.dark-mode .btn-success:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-success.dropdown-toggle{color:#fff;background-color:#008966;border-color:#007c5d}.dark-mode .btn-success:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-success:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-success.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(38,198,157,.5)}.dark-mode .btn-info{color:#fff;background-color:#3498db;border-color:#3498db;box-shadow:none}.dark-mode .btn-info:hover{color:#fff;background-color:#2384c6;border-color:#217dbb}.dark-mode .btn-info.focus,.dark-mode .btn-info:focus{color:#fff;background-color:#2384c6;border-color:#217dbb;box-shadow:0 0 0 0 rgba(82,167,224,.5)}.dark-mode .btn-info.disabled,.dark-mode .btn-info:disabled{color:#fff;background-color:#3498db;border-color:#3498db}.dark-mode .btn-info:not(:disabled):not(.disabled).active,.dark-mode .btn-info:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-info.dropdown-toggle{color:#fff;background-color:#217dbb;border-color:#1f76b0}.dark-mode .btn-info:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-info:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-info.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(82,167,224,.5)}.dark-mode .btn-warning{color:#1f2d3d;background-color:#f39c12;border-color:#f39c12;box-shadow:none}.dark-mode .btn-warning:hover{color:#fff;background-color:#d4860b;border-color:#c87f0a}.dark-mode .btn-warning.focus,.dark-mode .btn-warning:focus{color:#fff;background-color:#d4860b;border-color:#c87f0a;box-shadow:0 0 0 0 rgba(211,139,24,.5)}.dark-mode .btn-warning.disabled,.dark-mode .btn-warning:disabled{color:#1f2d3d;background-color:#f39c12;border-color:#f39c12}.dark-mode .btn-warning:not(:disabled):not(.disabled).active,.dark-mode .btn-warning:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-warning.dropdown-toggle{color:#fff;background-color:#c87f0a;border-color:#bc770a}.dark-mode .btn-warning:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-warning:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(211,139,24,.5)}.dark-mode .btn-danger{color:#fff;background-color:#e74c3c;border-color:#e74c3c;box-shadow:none}.dark-mode .btn-danger:hover{color:#fff;background-color:#e12e1c;border-color:#d62c1a}.dark-mode .btn-danger.focus,.dark-mode .btn-danger:focus{color:#fff;background-color:#e12e1c;border-color:#d62c1a;box-shadow:0 0 0 0 rgba(235,103,89,.5)}.dark-mode .btn-danger.disabled,.dark-mode .btn-danger:disabled{color:#fff;background-color:#e74c3c;border-color:#e74c3c}.dark-mode .btn-danger:not(:disabled):not(.disabled).active,.dark-mode .btn-danger:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-danger.dropdown-toggle{color:#fff;background-color:#d62c1a;border-color:#ca2a19}.dark-mode .btn-danger:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-danger:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(235,103,89,.5)}.dark-mode .btn-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa;box-shadow:none}.dark-mode .btn-light:hover{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5}.dark-mode .btn-light.focus,.dark-mode .btn-light:focus{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 0 rgba(215,218,222,.5)}.dark-mode .btn-light.disabled,.dark-mode .btn-light:disabled{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.dark-mode .btn-light:not(:disabled):not(.disabled).active,.dark-mode .btn-light:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-light.dropdown-toggle{color:#1f2d3d;background-color:#dae0e5;border-color:#d3d9df}.dark-mode .btn-light:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-light:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-light.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(215,218,222,.5)}.dark-mode .btn-dark{color:#fff;background-color:#292d32;border-color:#4b545c;box-shadow:none}.dark-mode .btn-dark:hover{color:#fff;background-color:#171a1d;border-color:#343a40}.dark-mode .btn-dark.focus,.dark-mode .btn-dark:focus{color:#fff;background-color:#171a1d;border-color:#343a40;box-shadow:0 0 0 0 rgba(102,109,117,.5)}.dark-mode .btn-dark.disabled,.dark-mode .btn-dark:disabled{color:#fff;background-color:#292d32;border-color:#4b545c}.dark-mode .btn-dark:not(:disabled):not(.disabled).active,.dark-mode .btn-dark:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-dark.dropdown-toggle{color:#fff;background-color:#121416;border-color:#2e3439}.dark-mode .btn-dark:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-dark:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(102,109,117,.5)}.dark-mode .btn-outline-primary{color:#3f6791;border-color:#3f6791}.dark-mode .btn-outline-primary:hover{color:#fff;background-color:#3f6791;border-color:#3f6791}.dark-mode .btn-outline-primary.focus,.dark-mode .btn-outline-primary:focus{box-shadow:0 0 0 0 rgba(63,103,145,.5)}.dark-mode .btn-outline-primary.disabled,.dark-mode .btn-outline-primary:disabled{color:#3f6791;background-color:transparent}.dark-mode .btn-outline-primary:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-primary:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-primary.dropdown-toggle{color:#fff;background-color:#3f6791;border-color:#3f6791}.dark-mode .btn-outline-primary:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(63,103,145,.5)}.dark-mode .btn-outline-secondary{color:#6c757d;border-color:#6c757d}.dark-mode .btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.dark-mode .btn-outline-secondary.focus,.dark-mode .btn-outline-secondary:focus{box-shadow:0 0 0 0 rgba(108,117,125,.5)}.dark-mode .btn-outline-secondary.disabled,.dark-mode .btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.dark-mode .btn-outline-secondary:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.dark-mode .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(108,117,125,.5)}.dark-mode .btn-outline-success{color:#00bc8c;border-color:#00bc8c}.dark-mode .btn-outline-success:hover{color:#fff;background-color:#00bc8c;border-color:#00bc8c}.dark-mode .btn-outline-success.focus,.dark-mode .btn-outline-success:focus{box-shadow:0 0 0 0 rgba(0,188,140,.5)}.dark-mode .btn-outline-success.disabled,.dark-mode .btn-outline-success:disabled{color:#00bc8c;background-color:transparent}.dark-mode .btn-outline-success:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-success:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-success.dropdown-toggle{color:#fff;background-color:#00bc8c;border-color:#00bc8c}.dark-mode .btn-outline-success:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(0,188,140,.5)}.dark-mode .btn-outline-info{color:#3498db;border-color:#3498db}.dark-mode .btn-outline-info:hover{color:#fff;background-color:#3498db;border-color:#3498db}.dark-mode .btn-outline-info.focus,.dark-mode .btn-outline-info:focus{box-shadow:0 0 0 0 rgba(52,152,219,.5)}.dark-mode .btn-outline-info.disabled,.dark-mode .btn-outline-info:disabled{color:#3498db;background-color:transparent}.dark-mode .btn-outline-info:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-info:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-info.dropdown-toggle{color:#fff;background-color:#3498db;border-color:#3498db}.dark-mode .btn-outline-info:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(52,152,219,.5)}.dark-mode .btn-outline-warning{color:#f39c12;border-color:#f39c12}.dark-mode .btn-outline-warning:hover{color:#1f2d3d;background-color:#f39c12;border-color:#f39c12}.dark-mode .btn-outline-warning.focus,.dark-mode .btn-outline-warning:focus{box-shadow:0 0 0 0 rgba(243,156,18,.5)}.dark-mode .btn-outline-warning.disabled,.dark-mode .btn-outline-warning:disabled{color:#f39c12;background-color:transparent}.dark-mode .btn-outline-warning:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-warning:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-warning.dropdown-toggle{color:#1f2d3d;background-color:#f39c12;border-color:#f39c12}.dark-mode .btn-outline-warning:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(243,156,18,.5)}.dark-mode .btn-outline-danger{color:#e74c3c;border-color:#e74c3c}.dark-mode .btn-outline-danger:hover{color:#fff;background-color:#e74c3c;border-color:#e74c3c}.dark-mode .btn-outline-danger.focus,.dark-mode .btn-outline-danger:focus{box-shadow:0 0 0 0 rgba(231,76,60,.5)}.dark-mode .btn-outline-danger.disabled,.dark-mode .btn-outline-danger:disabled{color:#e74c3c;background-color:transparent}.dark-mode .btn-outline-danger:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-danger:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-danger.dropdown-toggle{color:#fff;background-color:#e74c3c;border-color:#e74c3c}.dark-mode .btn-outline-danger:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(231,76,60,.5)}.dark-mode .btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.dark-mode .btn-outline-light:hover{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.dark-mode .btn-outline-light.focus,.dark-mode .btn-outline-light:focus{box-shadow:0 0 0 0 rgba(248,249,250,.5)}.dark-mode .btn-outline-light.disabled,.dark-mode .btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.dark-mode .btn-outline-light:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-light:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-light.dropdown-toggle{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.dark-mode .btn-outline-light:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(248,249,250,.5)}.dark-mode .btn-outline-dark{color:#060708;border-color:#060708}.dark-mode .btn-outline-dark:hover{color:#fff;background-color:#060708;border-color:#060708}.dark-mode .btn-outline-dark.focus,.dark-mode .btn-outline-dark:focus{box-shadow:0 0 0 0 rgba(6,7,8,.5)}.dark-mode .btn-outline-dark.disabled,.dark-mode .btn-outline-dark:disabled{color:#060708;background-color:transparent}.dark-mode .btn-outline-dark:not(:disabled):not(.disabled).active,.dark-mode .btn-outline-dark:not(:disabled):not(.disabled):active,.show>.dark-mode .btn-outline-dark.dropdown-toggle{color:#fff;background-color:#060708;border-color:#060708}.dark-mode .btn-outline-dark:not(:disabled):not(.disabled).active:focus,.dark-mode .btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.dark-mode .btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 0 rgba(6,7,8,.5)}.callout{border-radius:.25rem;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);background-color:#fff;border-left:5px solid #e9ecef;margin-bottom:1rem;padding:1rem}.callout a{color:#495057;text-decoration:underline}.callout a:hover{color:#e9ecef}.callout p:last-child{margin-bottom:0}.callout.callout-danger{border-left-color:#bd2130}.callout.callout-warning{border-left-color:#d39e00}.callout.callout-info{border-left-color:#117a8b}.callout.callout-success{border-left-color:#1e7e34}.dark-mode .callout{background-color:#3f474e}.dark-mode .callout.callout-danger{border-left-color:#ed7669}.dark-mode .callout.callout-warning{border-left-color:#f5b043}.dark-mode .callout.callout-info{border-left-color:#5faee3}.dark-mode .callout.callout-success{border-left-color:#00efb2}.alert .icon{margin-right:10px}.alert .close,.alert .mailbox-attachment-close{color:#000;opacity:.2}.alert .close:hover,.alert .mailbox-attachment-close:hover{opacity:.5}.alert a{color:#fff;text-decoration:underline}.alert-primary{color:#fff;background-color:#007bff;border-color:#006fe6}.alert-default-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-default-primary hr{border-top-color:#9fcdff}.alert-default-primary .alert-link{color:#002752}.alert-secondary{color:#fff;background-color:#6c757d;border-color:#60686f}.alert-default-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-default-secondary hr{border-top-color:#c8cbcf}.alert-default-secondary .alert-link{color:#202326}.alert-success{color:#fff;background-color:#28a745;border-color:#23923d}.alert-default-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-default-success hr{border-top-color:#b1dfbb}.alert-default-success .alert-link{color:#0b2e13}.alert-info{color:#fff;background-color:#17a2b8;border-color:#148ea1}.alert-default-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-default-info hr{border-top-color:#abdde5}.alert-default-info .alert-link{color:#062c33}.alert-warning{color:#1f2d3d;background-color:#ffc107;border-color:#edb100}.alert-default-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-default-warning hr{border-top-color:#ffe8a1}.alert-default-warning .alert-link{color:#533f03}.alert-danger{color:#fff;background-color:#dc3545;border-color:#d32535}.alert-default-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-default-danger hr{border-top-color:#f1b0b7}.alert-default-danger .alert-link{color:#491217}.alert-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#e9ecef}.alert-default-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-default-light hr{border-top-color:#ececf6}.alert-default-light .alert-link{color:#686868}.alert-dark{color:#fff;background-color:#343a40;border-color:#292d32}.alert-default-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-default-dark hr{border-top-color:#b9bbbe}.alert-default-dark .alert-link{color:#040505}.dark-mode .alert-primary{color:#fff;background-color:#3f6791;border-color:#375a7f}.dark-mode .alert-default-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.dark-mode .alert-default-primary hr{border-top-color:#9fcdff}.dark-mode .alert-default-primary .alert-link{color:#002752}.dark-mode .alert-secondary{color:#fff;background-color:#6c757d;border-color:#60686f}.dark-mode .alert-default-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.dark-mode .alert-default-secondary hr{border-top-color:#c8cbcf}.dark-mode .alert-default-secondary .alert-link{color:#202326}.dark-mode .alert-success{color:#fff;background-color:#00bc8c;border-color:#00a379}.dark-mode .alert-default-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.dark-mode .alert-default-success hr{border-top-color:#b1dfbb}.dark-mode .alert-default-success .alert-link{color:#0b2e13}.dark-mode .alert-info{color:#fff;background-color:#3498db;border-color:#258cd1}.dark-mode .alert-default-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.dark-mode .alert-default-info hr{border-top-color:#abdde5}.dark-mode .alert-default-info .alert-link{color:#062c33}.dark-mode .alert-warning{color:#1f2d3d;background-color:#f39c12;border-color:#e08e0b}.dark-mode .alert-default-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.dark-mode .alert-default-warning hr{border-top-color:#ffe8a1}.dark-mode .alert-default-warning .alert-link{color:#533f03}.dark-mode .alert-danger{color:#fff;background-color:#e74c3c;border-color:#e43725}.dark-mode .alert-default-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.dark-mode .alert-default-danger hr{border-top-color:#f1b0b7}.dark-mode .alert-default-danger .alert-link{color:#491217}.dark-mode .alert-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#e9ecef}.dark-mode .alert-default-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.dark-mode .alert-default-light hr{border-top-color:#ececf6}.dark-mode .alert-default-light .alert-link{color:#686868}.dark-mode .alert-dark{color:#fff;background-color:#343a40;border-color:#292d32}.dark-mode .alert-default-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.dark-mode .alert-default-dark hr{border-top-color:#b9bbbe}.dark-mode .alert-default-dark .alert-link{color:#040505}.table:not(.table-dark){color:inherit}.table.table-head-fixed thead tr:nth-child(1) th{background-color:#fff;border-bottom:0;box-shadow:inset 0 1px 0 #dee2e6,inset 0 -1px 0 #dee2e6;position:-webkit-sticky;position:sticky;top:0;z-index:10}.table.table-head-fixed.table-dark thead tr:nth-child(1) th{background-color:#212529;box-shadow:inset 0 1px 0 #383f45,inset 0 -1px 0 #383f45}.table.no-border,.table.no-border td,.table.no-border th{border:0}.table.text-center,.table.text-center td,.table.text-center th{text-align:center}.table.table-valign-middle tbody>tr>td,.table.table-valign-middle tbody>tr>th,.table.table-valign-middle thead>tr>td,.table.table-valign-middle thead>tr>th{vertical-align:middle}.card-body.p-0 .table tbody>tr>td:first-of-type,.card-body.p-0 .table tbody>tr>th:first-of-type,.card-body.p-0 .table tfoot>tr>td:first-of-type,.card-body.p-0 .table tfoot>tr>th:first-of-type,.card-body.p-0 .table thead>tr>td:first-of-type,.card-body.p-0 .table thead>tr>th:first-of-type{padding-left:1.5rem}.card-body.p-0 .table tbody>tr>td:last-of-type,.card-body.p-0 .table tbody>tr>th:last-of-type,.card-body.p-0 .table tfoot>tr>td:last-of-type,.card-body.p-0 .table tfoot>tr>th:last-of-type,.card-body.p-0 .table thead>tr>td:last-of-type,.card-body.p-0 .table thead>tr>th:last-of-type{padding-right:1.5rem}.table-hover tbody tr.expandable-body:hover{background-color:inherit!important}[data-widget=expandable-table]{cursor:pointer}[data-widget=expandable-table] i.expandable-table-caret{transition:-webkit-transform .3s linear;transition:transform .3s linear;transition:transform .3s linear,-webkit-transform .3s linear}[data-widget=expandable-table][aria-expanded=true] td i.expandable-table-caret[class*=right]{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[data-widget=expandable-table][aria-expanded=true] td i.expandable-table-caret[class*=left]{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.expandable-body>td{padding:0!important;width:100%}.expandable-body>td>div,.expandable-body>td>p{padding:.75rem}.expandable-body .table{width:calc(100% - .75rem);margin:0 0 0 .75rem}.expandable-body .table tr:first-child td,.expandable-body .table tr:first-child th{border-top:none}.dark-mode .table-bordered,.dark-mode .table-bordered td,.dark-mode .table-bordered th{border-color:#6c757d}.dark-mode .table-hover tbody tr:hover{color:#dee2e6;background-color:#3a4047;border-color:#6c757d}.dark-mode .table thead th{border-bottom-color:#6c757d}.dark-mode .table td,.dark-mode .table th{border-top-color:#6c757d}.dark-mode .table.table-head-fixed thead tr:nth-child(1) th{background-color:#3f474e}.carousel-control-prev .carousel-control-custom-icon{margin-left:-20px}.carousel-control-next .carousel-control-custom-icon{margin-right:20px}.carousel-control-custom-icon>.fa,.carousel-control-custom-icon>.fab,.carousel-control-custom-icon>.fad,.carousel-control-custom-icon>.fal,.carousel-control-custom-icon>.far,.carousel-control-custom-icon>.fas,.carousel-control-custom-icon>.ion,.carousel-control-custom-icon>.svg-inline--fa{display:inline-block;font-size:40px;margin-top:-20px;position:absolute;top:50%;z-index:5}.close,.mailbox-attachment-close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover,.mailbox-attachment-close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover,.mailbox-attachment-close:not(:disabled):not(.disabled):focus,.mailbox-attachment-close:not(:disabled):not(.disabled):hover{opacity:.75}.close:focus,.mailbox-attachment-close:focus{outline:0}button.close,button.mailbox-attachment-close{padding:0;background-color:transparent;border:0}a.close.disabled,a.disabled.mailbox-attachment-close{pointer-events:none}.small-box{border-radius:.25rem;box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);display:block;margin-bottom:20px;position:relative}.small-box>.inner{padding:10px}.small-box>.small-box-footer{background-color:rgba(0,0,0,.1);color:rgba(255,255,255,.8);display:block;padding:3px 0;position:relative;text-align:center;text-decoration:none;z-index:10}.small-box>.small-box-footer:hover{background-color:rgba(0,0,0,.15);color:#fff}.small-box h3{font-size:2.2rem;font-weight:700;margin:0 0 10px;padding:0;white-space:nowrap}@media (min-width:992px){.col-lg-2 .small-box h3,.col-md-2 .small-box h3,.col-xl-2 .small-box h3{font-size:1.6rem}.col-lg-3 .small-box h3,.col-md-3 .small-box h3,.col-xl-3 .small-box h3{font-size:1.6rem}}@media (min-width:1200px){.col-lg-2 .small-box h3,.col-md-2 .small-box h3,.col-xl-2 .small-box h3{font-size:2.2rem}.col-lg-3 .small-box h3,.col-md-3 .small-box h3,.col-xl-3 .small-box h3{font-size:2.2rem}}.small-box p{font-size:1rem}.small-box p>small{color:#f8f9fa;display:block;font-size:.9rem;margin-top:5px}.small-box h3,.small-box p{z-index:5}.small-box .icon{color:rgba(0,0,0,.15);z-index:0}.small-box .icon>i{font-size:90px;position:absolute;right:15px;top:15px;transition:-webkit-transform .3s linear;transition:transform .3s linear;transition:transform .3s linear,-webkit-transform .3s linear}.small-box .icon>i.fa,.small-box .icon>i.fab,.small-box .icon>i.fad,.small-box .icon>i.fal,.small-box .icon>i.far,.small-box .icon>i.fas,.small-box .icon>i.ion{font-size:70px;top:20px}.small-box .icon svg{font-size:70px;position:absolute;right:15px;top:15px;transition:-webkit-transform .3s linear;transition:transform .3s linear;transition:transform .3s linear,-webkit-transform .3s linear}.small-box:hover{text-decoration:none}.small-box:hover .icon>i,.small-box:hover .icon>i.fa,.small-box:hover .icon>i.fab,.small-box:hover .icon>i.fad,.small-box:hover .icon>i.fal,.small-box:hover .icon>i.far,.small-box:hover .icon>i.fas,.small-box:hover .icon>i.ion{-webkit-transform:scale(1.1);transform:scale(1.1)}.small-box:hover .icon>svg{-webkit-transform:scale(1.1);transform:scale(1.1)}@media (max-width:767.98px){.small-box{text-align:center}.small-box .icon{display:none}.small-box p{font-size:12px}}.info-box{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;background-color:#fff;display:-ms-flexbox;display:flex;margin-bottom:1rem;min-height:80px;padding:.5rem;position:relative;width:100%}.info-box .progress{background-color:rgba(0,0,0,.125);height:2px;margin:5px 0}.info-box .progress .progress-bar{background-color:#fff}.info-box .info-box-icon{border-radius:.25rem;-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;font-size:1.875rem;-ms-flex-pack:center;justify-content:center;text-align:center;width:70px}.info-box .info-box-icon>img{max-width:100%}.info-box .info-box-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;line-height:1.8;-ms-flex:1;flex:1;padding:0 10px;overflow:hidden}.info-box .info-box-number{display:block;margin-top:.25rem;font-weight:700}.info-box .info-box-text,.info-box .progress-description{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.info-box .info-box .bg-gradient-primary,.info-box .info-box .bg-primary{color:#fff}.info-box .info-box .bg-gradient-primary .progress-bar,.info-box .info-box .bg-primary .progress-bar{background-color:#fff}.info-box .info-box .bg-gradient-secondary,.info-box .info-box .bg-secondary{color:#fff}.info-box .info-box .bg-gradient-secondary .progress-bar,.info-box .info-box .bg-secondary .progress-bar{background-color:#fff}.info-box .info-box .bg-gradient-success,.info-box .info-box .bg-success{color:#fff}.info-box .info-box .bg-gradient-success .progress-bar,.info-box .info-box .bg-success .progress-bar{background-color:#fff}.info-box .info-box .bg-gradient-info,.info-box .info-box .bg-info{color:#fff}.info-box .info-box .bg-gradient-info .progress-bar,.info-box .info-box .bg-info .progress-bar{background-color:#fff}.info-box .info-box .bg-gradient-warning,.info-box .info-box .bg-warning{color:#1f2d3d}.info-box .info-box .bg-gradient-warning .progress-bar,.info-box .info-box .bg-warning .progress-bar{background-color:#1f2d3d}.info-box .info-box .bg-danger,.info-box .info-box .bg-gradient-danger{color:#fff}.info-box .info-box .bg-danger .progress-bar,.info-box .info-box .bg-gradient-danger .progress-bar{background-color:#fff}.info-box .info-box .bg-gradient-light,.info-box .info-box .bg-light{color:#1f2d3d}.info-box .info-box .bg-gradient-light .progress-bar,.info-box .info-box .bg-light .progress-bar{background-color:#1f2d3d}.info-box .info-box .bg-dark,.info-box .info-box .bg-gradient-dark{color:#fff}.info-box .info-box .bg-dark .progress-bar,.info-box .info-box .bg-gradient-dark .progress-bar{background-color:#fff}.info-box .info-box-more{display:block}.info-box .progress-description{margin:0}@media (min-width:768px){.col-lg-2 .info-box .progress-description,.col-md-2 .info-box .progress-description,.col-xl-2 .info-box .progress-description{display:none}.col-lg-3 .info-box .progress-description,.col-md-3 .info-box .progress-description,.col-xl-3 .info-box .progress-description{display:none}}@media (min-width:992px){.col-lg-2 .info-box .progress-description,.col-md-2 .info-box .progress-description,.col-xl-2 .info-box .progress-description{font-size:.75rem;display:block}.col-lg-3 .info-box .progress-description,.col-md-3 .info-box .progress-description,.col-xl-3 .info-box .progress-description{font-size:.75rem;display:block}}@media (min-width:1200px){.col-lg-2 .info-box .progress-description,.col-md-2 .info-box .progress-description,.col-xl-2 .info-box .progress-description{font-size:1rem;display:block}.col-lg-3 .info-box .progress-description,.col-md-3 .info-box .progress-description,.col-xl-3 .info-box .progress-description{font-size:1rem;display:block}}.dark-mode .info-box{background-color:#343a40;color:#fff}.dark-mode .info-box .info-box .bg-gradient-primary,.dark-mode .info-box .info-box .bg-primary{color:#fff}.dark-mode .info-box .info-box .bg-gradient-primary .progress-bar,.dark-mode .info-box .info-box .bg-primary .progress-bar{background-color:#fff}.dark-mode .info-box .info-box .bg-gradient-secondary,.dark-mode .info-box .info-box .bg-secondary{color:#fff}.dark-mode .info-box .info-box .bg-gradient-secondary .progress-bar,.dark-mode .info-box .info-box .bg-secondary .progress-bar{background-color:#fff}.dark-mode .info-box .info-box .bg-gradient-success,.dark-mode .info-box .info-box .bg-success{color:#fff}.dark-mode .info-box .info-box .bg-gradient-success .progress-bar,.dark-mode .info-box .info-box .bg-success .progress-bar{background-color:#fff}.dark-mode .info-box .info-box .bg-gradient-info,.dark-mode .info-box .info-box .bg-info{color:#fff}.dark-mode .info-box .info-box .bg-gradient-info .progress-bar,.dark-mode .info-box .info-box .bg-info .progress-bar{background-color:#fff}.dark-mode .info-box .info-box .bg-gradient-warning,.dark-mode .info-box .info-box .bg-warning{color:#1f2d3d}.dark-mode .info-box .info-box .bg-gradient-warning .progress-bar,.dark-mode .info-box .info-box .bg-warning .progress-bar{background-color:#1f2d3d}.dark-mode .info-box .info-box .bg-danger,.dark-mode .info-box .info-box .bg-gradient-danger{color:#fff}.dark-mode .info-box .info-box .bg-danger .progress-bar,.dark-mode .info-box .info-box .bg-gradient-danger .progress-bar{background-color:#fff}.dark-mode .info-box .info-box .bg-gradient-light,.dark-mode .info-box .info-box .bg-light{color:#1f2d3d}.dark-mode .info-box .info-box .bg-gradient-light .progress-bar,.dark-mode .info-box .info-box .bg-light .progress-bar{background-color:#1f2d3d}.dark-mode .info-box .info-box .bg-dark,.dark-mode .info-box .info-box .bg-gradient-dark{color:#fff}.dark-mode .info-box .info-box .bg-dark .progress-bar,.dark-mode .info-box .info-box .bg-gradient-dark .progress-bar{background-color:#fff}.timeline{margin:0 0 45px;padding:0;position:relative}.timeline::before{border-radius:.25rem;background-color:#dee2e6;bottom:0;content:"";left:31px;margin:0;position:absolute;top:0;width:4px}.timeline>div{margin-bottom:15px;margin-right:10px;position:relative}.timeline>div::after,.timeline>div::before{content:"";display:table}.timeline>div>.timeline-item{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;background-color:#fff;color:#495057;margin-left:60px;margin-right:15px;margin-top:0;padding:0;position:relative}.timeline>div>.timeline-item>.time{color:#999;float:right;font-size:12px;padding:10px}.timeline>div>.timeline-item>.timeline-header{border-bottom:1px solid rgba(0,0,0,.125);color:#495057;font-size:16px;line-height:1.1;margin:0;padding:10px}.timeline>div>.timeline-item>.timeline-header>a{font-weight:600}.timeline>div>.timeline-item>.timeline-body,.timeline>div>.timeline-item>.timeline-footer{padding:10px}.timeline>div>.timeline-item>.timeline-body>img{margin:10px}.timeline>div>.timeline-item>.timeline-body ol,.timeline>div>.timeline-item>.timeline-body ul,.timeline>div>.timeline-item>.timeline-body>dl{margin:0}.timeline>div>.timeline-item>.timeline-footer>a{color:#fff}.timeline>div>.fa,.timeline>div>.fab,.timeline>div>.fad,.timeline>div>.fal,.timeline>div>.far,.timeline>div>.fas,.timeline>div>.ion,.timeline>div>.svg-inline--fa{background-color:#adb5bd;border-radius:50%;font-size:16px;height:30px;left:18px;line-height:30px;position:absolute;text-align:center;top:0;width:30px}.timeline>div>.svg-inline--fa{padding:7px}.timeline>.time-label>span{border-radius:4px;background-color:#fff;display:inline-block;font-weight:600;padding:5px}.timeline-inverse>div>.timeline-item{box-shadow:none;background-color:#f8f9fa;border:1px solid #dee2e6}.timeline-inverse>div>.timeline-item>.timeline-header{border-bottom-color:#dee2e6}.dark-mode .timeline::before{background-color:#6c757d}.dark-mode .timeline>div>.timeline-item{background-color:#343a40;color:#fff;border-color:#6c757d}.dark-mode .timeline>div>.timeline-item>.timeline-header{color:#ced4da;border-color:#6c757d}.dark-mode .timeline>div>.timeline-item>.time{color:#ced4da}.products-list{list-style:none;margin:0;padding:0}.products-list>.item{border-radius:.25rem;background-color:#fff;padding:10px 0}.products-list>.item::after{display:block;clear:both;content:""}.products-list .product-img{float:left}.products-list .product-img img{height:50px;width:50px}.products-list .product-info{margin-left:60px}.products-list .product-title{font-weight:600}.products-list .product-description{color:#6c757d;display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.product-list-in-card>.item{border-radius:0;border-bottom:1px solid rgba(0,0,0,.125)}.product-list-in-card>.item:last-of-type{border-bottom-width:0}.dark-mode .products-list>.item{background-color:#343a40;color:#fff;border-bottom-color:#6c757d}.dark-mode .product-description{color:#ced4da}.direct-chat .card-body{overflow-x:hidden;padding:0;position:relative}.direct-chat.chat-pane-open .direct-chat-contacts{-webkit-transform:translate(0,0);transform:translate(0,0)}.direct-chat.timestamp-light .direct-chat-timestamp{color:#30465f}.direct-chat.timestamp-dark .direct-chat-timestamp{color:#ccc}.direct-chat-messages{-webkit-transform:translate(0,0);transform:translate(0,0);height:250px;overflow:auto;padding:10px}.direct-chat-msg,.direct-chat-text{display:block}.direct-chat-msg{margin-bottom:10px}.direct-chat-msg::after{display:block;clear:both;content:""}.direct-chat-contacts,.direct-chat-messages{transition:-webkit-transform .5s ease-in-out;transition:transform .5s ease-in-out;transition:transform .5s ease-in-out,-webkit-transform .5s ease-in-out}.direct-chat-text{border-radius:.3rem;background-color:#d2d6de;border:1px solid #d2d6de;color:#444;margin:5px 0 0 50px;padding:5px 10px;position:relative}.direct-chat-text::after,.direct-chat-text::before{border:solid transparent;border-right-color:#d2d6de;content:" ";height:0;pointer-events:none;position:absolute;right:100%;top:15px;width:0}.direct-chat-text::after{border-width:5px;margin-top:-5px}.direct-chat-text::before{border-width:6px;margin-top:-6px}.right .direct-chat-text{margin-left:0;margin-right:50px}.right .direct-chat-text::after,.right .direct-chat-text::before{border-left-color:#d2d6de;border-right-color:transparent;left:100%;right:auto}.direct-chat-img{border-radius:50%;float:left;height:40px;width:40px}.right .direct-chat-img{float:right}.direct-chat-infos{display:block;font-size:.875rem;margin-bottom:2px}.direct-chat-name{font-weight:600}.direct-chat-timestamp{color:#697582}.direct-chat-contacts-open .direct-chat-contacts{-webkit-transform:translate(0,0);transform:translate(0,0)}.direct-chat-contacts{-webkit-transform:translate(101%,0);transform:translate(101%,0);background-color:#343a40;bottom:0;color:#fff;height:250px;overflow:auto;position:absolute;top:0;width:100%}.direct-chat-contacts-light{background-color:#f8f9fa}.direct-chat-contacts-light .contacts-list-name{color:#495057}.direct-chat-contacts-light .contacts-list-date{color:#6c757d}.direct-chat-contacts-light .contacts-list-msg{color:#545b62}.contacts-list{padding-left:0;list-style:none}.contacts-list>li{border-bottom:1px solid rgba(0,0,0,.2);margin:0;padding:10px}.contacts-list>li::after{display:block;clear:both;content:""}.contacts-list>li:last-of-type{border-bottom:0}.contacts-list-img{border-radius:50%;float:left;width:40px}.contacts-list-info{color:#fff;margin-left:45px}.contacts-list-name,.contacts-list-status{display:block}.contacts-list-name{font-weight:600}.contacts-list-status{font-size:.875rem}.contacts-list-date{color:#ced4da;font-weight:400}.contacts-list-msg{color:#b1bbc4}.direct-chat-primary .right>.direct-chat-text{background-color:#007bff;border-color:#007bff;color:#fff}.direct-chat-primary .right>.direct-chat-text::after,.direct-chat-primary .right>.direct-chat-text::before{border-left-color:#007bff}.direct-chat-secondary .right>.direct-chat-text{background-color:#6c757d;border-color:#6c757d;color:#fff}.direct-chat-secondary .right>.direct-chat-text::after,.direct-chat-secondary .right>.direct-chat-text::before{border-left-color:#6c757d}.direct-chat-success .right>.direct-chat-text{background-color:#28a745;border-color:#28a745;color:#fff}.direct-chat-success .right>.direct-chat-text::after,.direct-chat-success .right>.direct-chat-text::before{border-left-color:#28a745}.direct-chat-info .right>.direct-chat-text{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.direct-chat-info .right>.direct-chat-text::after,.direct-chat-info .right>.direct-chat-text::before{border-left-color:#17a2b8}.direct-chat-warning .right>.direct-chat-text{background-color:#ffc107;border-color:#ffc107;color:#1f2d3d}.direct-chat-warning .right>.direct-chat-text::after,.direct-chat-warning .right>.direct-chat-text::before{border-left-color:#ffc107}.direct-chat-danger .right>.direct-chat-text{background-color:#dc3545;border-color:#dc3545;color:#fff}.direct-chat-danger .right>.direct-chat-text::after,.direct-chat-danger .right>.direct-chat-text::before{border-left-color:#dc3545}.direct-chat-light .right>.direct-chat-text{background-color:#f8f9fa;border-color:#f8f9fa;color:#1f2d3d}.direct-chat-light .right>.direct-chat-text::after,.direct-chat-light .right>.direct-chat-text::before{border-left-color:#f8f9fa}.direct-chat-dark .right>.direct-chat-text{background-color:#343a40;border-color:#343a40;color:#fff}.direct-chat-dark .right>.direct-chat-text::after,.direct-chat-dark .right>.direct-chat-text::before{border-left-color:#343a40}.direct-chat-lightblue .right>.direct-chat-text{background-color:#3c8dbc;border-color:#3c8dbc;color:#fff}.direct-chat-lightblue .right>.direct-chat-text::after,.direct-chat-lightblue .right>.direct-chat-text::before{border-left-color:#3c8dbc}.direct-chat-navy .right>.direct-chat-text{background-color:#001f3f;border-color:#001f3f;color:#fff}.direct-chat-navy .right>.direct-chat-text::after,.direct-chat-navy .right>.direct-chat-text::before{border-left-color:#001f3f}.direct-chat-olive .right>.direct-chat-text{background-color:#3d9970;border-color:#3d9970;color:#fff}.direct-chat-olive .right>.direct-chat-text::after,.direct-chat-olive .right>.direct-chat-text::before{border-left-color:#3d9970}.direct-chat-lime .right>.direct-chat-text{background-color:#01ff70;border-color:#01ff70;color:#1f2d3d}.direct-chat-lime .right>.direct-chat-text::after,.direct-chat-lime .right>.direct-chat-text::before{border-left-color:#01ff70}.direct-chat-fuchsia .right>.direct-chat-text{background-color:#f012be;border-color:#f012be;color:#fff}.direct-chat-fuchsia .right>.direct-chat-text::after,.direct-chat-fuchsia .right>.direct-chat-text::before{border-left-color:#f012be}.direct-chat-maroon .right>.direct-chat-text{background-color:#d81b60;border-color:#d81b60;color:#fff}.direct-chat-maroon .right>.direct-chat-text::after,.direct-chat-maroon .right>.direct-chat-text::before{border-left-color:#d81b60}.direct-chat-blue .right>.direct-chat-text{background-color:#007bff;border-color:#007bff;color:#fff}.direct-chat-blue .right>.direct-chat-text::after,.direct-chat-blue .right>.direct-chat-text::before{border-left-color:#007bff}.direct-chat-indigo .right>.direct-chat-text{background-color:#6610f2;border-color:#6610f2;color:#fff}.direct-chat-indigo .right>.direct-chat-text::after,.direct-chat-indigo .right>.direct-chat-text::before{border-left-color:#6610f2}.direct-chat-purple .right>.direct-chat-text{background-color:#6f42c1;border-color:#6f42c1;color:#fff}.direct-chat-purple .right>.direct-chat-text::after,.direct-chat-purple .right>.direct-chat-text::before{border-left-color:#6f42c1}.direct-chat-pink .right>.direct-chat-text{background-color:#e83e8c;border-color:#e83e8c;color:#fff}.direct-chat-pink .right>.direct-chat-text::after,.direct-chat-pink .right>.direct-chat-text::before{border-left-color:#e83e8c}.direct-chat-red .right>.direct-chat-text{background-color:#dc3545;border-color:#dc3545;color:#fff}.direct-chat-red .right>.direct-chat-text::after,.direct-chat-red .right>.direct-chat-text::before{border-left-color:#dc3545}.direct-chat-orange .right>.direct-chat-text{background-color:#fd7e14;border-color:#fd7e14;color:#1f2d3d}.direct-chat-orange .right>.direct-chat-text::after,.direct-chat-orange .right>.direct-chat-text::before{border-left-color:#fd7e14}.direct-chat-yellow .right>.direct-chat-text{background-color:#ffc107;border-color:#ffc107;color:#1f2d3d}.direct-chat-yellow .right>.direct-chat-text::after,.direct-chat-yellow .right>.direct-chat-text::before{border-left-color:#ffc107}.direct-chat-green .right>.direct-chat-text{background-color:#28a745;border-color:#28a745;color:#fff}.direct-chat-green .right>.direct-chat-text::after,.direct-chat-green .right>.direct-chat-text::before{border-left-color:#28a745}.direct-chat-teal .right>.direct-chat-text{background-color:#20c997;border-color:#20c997;color:#fff}.direct-chat-teal .right>.direct-chat-text::after,.direct-chat-teal .right>.direct-chat-text::before{border-left-color:#20c997}.direct-chat-cyan .right>.direct-chat-text{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.direct-chat-cyan .right>.direct-chat-text::after,.direct-chat-cyan .right>.direct-chat-text::before{border-left-color:#17a2b8}.direct-chat-white .right>.direct-chat-text{background-color:#fff;border-color:#fff;color:#1f2d3d}.direct-chat-white .right>.direct-chat-text::after,.direct-chat-white .right>.direct-chat-text::before{border-left-color:#fff}.direct-chat-gray .right>.direct-chat-text{background-color:#6c757d;border-color:#6c757d;color:#fff}.direct-chat-gray .right>.direct-chat-text::after,.direct-chat-gray .right>.direct-chat-text::before{border-left-color:#6c757d}.direct-chat-gray-dark .right>.direct-chat-text{background-color:#343a40;border-color:#343a40;color:#fff}.direct-chat-gray-dark .right>.direct-chat-text::after,.direct-chat-gray-dark .right>.direct-chat-text::before{border-left-color:#343a40}.dark-mode .direct-chat-text{background-color:#454d55;border-color:#4b545c;color:#fff}.dark-mode .direct-chat-text::after,.dark-mode .direct-chat-text::before{border-right-color:#4b545c}.dark-mode .direct-chat-timestamp{color:#adb5bd}.dark-mode .right>.direct-chat-text::after,.dark-mode .right>.direct-chat-text::before{border-right-color:transparent}.dark-mode .direct-chat-primary .right>.direct-chat-text{background-color:#3f6791;border-color:#3f6791;color:#fff}.dark-mode .direct-chat-primary .right>.direct-chat-text::after,.dark-mode .direct-chat-primary .right>.direct-chat-text::before{border-left-color:#3f6791}.dark-mode .direct-chat-secondary .right>.direct-chat-text{background-color:#6c757d;border-color:#6c757d;color:#fff}.dark-mode .direct-chat-secondary .right>.direct-chat-text::after,.dark-mode .direct-chat-secondary .right>.direct-chat-text::before{border-left-color:#6c757d}.dark-mode .direct-chat-success .right>.direct-chat-text{background-color:#00bc8c;border-color:#00bc8c;color:#fff}.dark-mode .direct-chat-success .right>.direct-chat-text::after,.dark-mode .direct-chat-success .right>.direct-chat-text::before{border-left-color:#00bc8c}.dark-mode .direct-chat-info .right>.direct-chat-text{background-color:#3498db;border-color:#3498db;color:#fff}.dark-mode .direct-chat-info .right>.direct-chat-text::after,.dark-mode .direct-chat-info .right>.direct-chat-text::before{border-left-color:#3498db}.dark-mode .direct-chat-warning .right>.direct-chat-text{background-color:#f39c12;border-color:#f39c12;color:#1f2d3d}.dark-mode .direct-chat-warning .right>.direct-chat-text::after,.dark-mode .direct-chat-warning .right>.direct-chat-text::before{border-left-color:#f39c12}.dark-mode .direct-chat-danger .right>.direct-chat-text{background-color:#e74c3c;border-color:#e74c3c;color:#fff}.dark-mode .direct-chat-danger .right>.direct-chat-text::after,.dark-mode .direct-chat-danger .right>.direct-chat-text::before{border-left-color:#e74c3c}.dark-mode .direct-chat-light .right>.direct-chat-text{background-color:#f8f9fa;border-color:#f8f9fa;color:#1f2d3d}.dark-mode .direct-chat-light .right>.direct-chat-text::after,.dark-mode .direct-chat-light .right>.direct-chat-text::before{border-left-color:#f8f9fa}.dark-mode .direct-chat-dark .right>.direct-chat-text{background-color:#343a40;border-color:#343a40;color:#fff}.dark-mode .direct-chat-dark .right>.direct-chat-text::after,.dark-mode .direct-chat-dark .right>.direct-chat-text::before{border-left-color:#343a40}.dark-mode .direct-chat-lightblue .right>.direct-chat-text{background-color:#86bad8;border-color:#86bad8;color:#1f2d3d}.dark-mode .direct-chat-lightblue .right>.direct-chat-text::after,.dark-mode .direct-chat-lightblue .right>.direct-chat-text::before{border-left-color:#86bad8}.dark-mode .direct-chat-navy .right>.direct-chat-text{background-color:#002c59;border-color:#002c59;color:#fff}.dark-mode .direct-chat-navy .right>.direct-chat-text::after,.dark-mode .direct-chat-navy .right>.direct-chat-text::before{border-left-color:#002c59}.dark-mode .direct-chat-olive .right>.direct-chat-text{background-color:#74c8a3;border-color:#74c8a3;color:#1f2d3d}.dark-mode .direct-chat-olive .right>.direct-chat-text::after,.dark-mode .direct-chat-olive .right>.direct-chat-text::before{border-left-color:#74c8a3}.dark-mode .direct-chat-lime .right>.direct-chat-text{background-color:#67ffa9;border-color:#67ffa9;color:#1f2d3d}.dark-mode .direct-chat-lime .right>.direct-chat-text::after,.dark-mode .direct-chat-lime .right>.direct-chat-text::before{border-left-color:#67ffa9}.dark-mode .direct-chat-fuchsia .right>.direct-chat-text{background-color:#f672d8;border-color:#f672d8;color:#1f2d3d}.dark-mode .direct-chat-fuchsia .right>.direct-chat-text::after,.dark-mode .direct-chat-fuchsia .right>.direct-chat-text::before{border-left-color:#f672d8}.dark-mode .direct-chat-maroon .right>.direct-chat-text{background-color:#ed6c9b;border-color:#ed6c9b;color:#1f2d3d}.dark-mode .direct-chat-maroon .right>.direct-chat-text::after,.dark-mode .direct-chat-maroon .right>.direct-chat-text::before{border-left-color:#ed6c9b}.dark-mode .direct-chat-blue .right>.direct-chat-text{background-color:#3f6791;border-color:#3f6791;color:#fff}.dark-mode .direct-chat-blue .right>.direct-chat-text::after,.dark-mode .direct-chat-blue .right>.direct-chat-text::before{border-left-color:#3f6791}.dark-mode .direct-chat-indigo .right>.direct-chat-text{background-color:#6610f2;border-color:#6610f2;color:#fff}.dark-mode .direct-chat-indigo .right>.direct-chat-text::after,.dark-mode .direct-chat-indigo .right>.direct-chat-text::before{border-left-color:#6610f2}.dark-mode .direct-chat-purple .right>.direct-chat-text{background-color:#6f42c1;border-color:#6f42c1;color:#fff}.dark-mode .direct-chat-purple .right>.direct-chat-text::after,.dark-mode .direct-chat-purple .right>.direct-chat-text::before{border-left-color:#6f42c1}.dark-mode .direct-chat-pink .right>.direct-chat-text{background-color:#e83e8c;border-color:#e83e8c;color:#fff}.dark-mode .direct-chat-pink .right>.direct-chat-text::after,.dark-mode .direct-chat-pink .right>.direct-chat-text::before{border-left-color:#e83e8c}.dark-mode .direct-chat-red .right>.direct-chat-text{background-color:#e74c3c;border-color:#e74c3c;color:#fff}.dark-mode .direct-chat-red .right>.direct-chat-text::after,.dark-mode .direct-chat-red .right>.direct-chat-text::before{border-left-color:#e74c3c}.dark-mode .direct-chat-orange .right>.direct-chat-text{background-color:#fd7e14;border-color:#fd7e14;color:#1f2d3d}.dark-mode .direct-chat-orange .right>.direct-chat-text::after,.dark-mode .direct-chat-orange .right>.direct-chat-text::before{border-left-color:#fd7e14}.dark-mode .direct-chat-yellow .right>.direct-chat-text{background-color:#f39c12;border-color:#f39c12;color:#1f2d3d}.dark-mode .direct-chat-yellow .right>.direct-chat-text::after,.dark-mode .direct-chat-yellow .right>.direct-chat-text::before{border-left-color:#f39c12}.dark-mode .direct-chat-green .right>.direct-chat-text{background-color:#00bc8c;border-color:#00bc8c;color:#fff}.dark-mode .direct-chat-green .right>.direct-chat-text::after,.dark-mode .direct-chat-green .right>.direct-chat-text::before{border-left-color:#00bc8c}.dark-mode .direct-chat-teal .right>.direct-chat-text{background-color:#20c997;border-color:#20c997;color:#fff}.dark-mode .direct-chat-teal .right>.direct-chat-text::after,.dark-mode .direct-chat-teal .right>.direct-chat-text::before{border-left-color:#20c997}.dark-mode .direct-chat-cyan .right>.direct-chat-text{background-color:#3498db;border-color:#3498db;color:#fff}.dark-mode .direct-chat-cyan .right>.direct-chat-text::after,.dark-mode .direct-chat-cyan .right>.direct-chat-text::before{border-left-color:#3498db}.dark-mode .direct-chat-white .right>.direct-chat-text{background-color:#fff;border-color:#fff;color:#1f2d3d}.dark-mode .direct-chat-white .right>.direct-chat-text::after,.dark-mode .direct-chat-white .right>.direct-chat-text::before{border-left-color:#fff}.dark-mode .direct-chat-gray .right>.direct-chat-text{background-color:#6c757d;border-color:#6c757d;color:#fff}.dark-mode .direct-chat-gray .right>.direct-chat-text::after,.dark-mode .direct-chat-gray .right>.direct-chat-text::before{border-left-color:#6c757d}.dark-mode .direct-chat-gray-dark .right>.direct-chat-text{background-color:#343a40;border-color:#343a40;color:#fff}.dark-mode .direct-chat-gray-dark .right>.direct-chat-text::after,.dark-mode .direct-chat-gray-dark .right>.direct-chat-text::before{border-left-color:#343a40}.users-list{padding-left:0;list-style:none}.users-list>li{float:left;padding:10px;text-align:center;width:25%}.users-list>li img{border-radius:50%;height:auto;max-width:100%}.users-list>li>a:hover,.users-list>li>a:hover .users-list-name{color:#999}.users-list-date,.users-list-name{display:block}.users-list-name{color:#495057;font-size:.875rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.users-list-date{color:#748290;font-size:12px}.dark-mode .users-list-name{color:#ced4da}.dark-mode .users-list-date{color:#adb5bd}.card-widget{border:0;position:relative}.widget-user .widget-user-header{border-top-left-radius:.25rem;border-top-right-radius:.25rem;height:135px;padding:1rem;text-align:center}.widget-user .widget-user-username{font-size:25px;font-weight:300;margin-bottom:0;margin-top:0;text-shadow:0 1px 1px rgba(0,0,0,.2)}.widget-user .widget-user-desc{margin-top:0}.widget-user .widget-user-image{left:50%;margin-left:-45px;position:absolute;top:80px}.widget-user .widget-user-image>img{border:3px solid #fff;height:auto;width:90px}.widget-user .card-footer{padding-top:50px}.widget-user-2 .widget-user-header{border-top-left-radius:.25rem;border-top-right-radius:.25rem;padding:1rem}.widget-user-2 .widget-user-username{font-size:25px;font-weight:300;margin-bottom:5px;margin-top:5px}.widget-user-2 .widget-user-desc{margin-top:0}.widget-user-2 .widget-user-desc,.widget-user-2 .widget-user-username{margin-left:75px}.widget-user-2 .widget-user-image>img{float:left;height:auto;width:65px}.mailbox-messages>.table{margin:0}.mailbox-controls{padding:5px}.mailbox-controls.with-border{border-bottom:1px solid rgba(0,0,0,.125)}.mailbox-read-info{border-bottom:1px solid rgba(0,0,0,.125);padding:10px}.mailbox-read-info h3{font-size:20px;margin:0}.mailbox-read-info h5{margin:0;padding:5px 0 0}.mailbox-read-time{color:#999;font-size:13px}.mailbox-read-message{padding:10px}.mailbox-attachments{padding-left:0;list-style:none}.mailbox-attachments li{border:1px solid #eee;float:left;margin-bottom:10px;margin-right:10px;width:200px}.mailbox-attachment-name{color:#666;font-weight:700}.mailbox-attachment-icon,.mailbox-attachment-info,.mailbox-attachment-size{display:block}.mailbox-attachment-info{background-color:#f8f9fa;padding:10px}.mailbox-attachment-size{color:#999;font-size:12px}.mailbox-attachment-size>span{display:inline-block;padding-top:.75rem}.mailbox-attachment-icon{color:#666;font-size:65px;max-height:132.5px;padding:20px 10px;text-align:center}.mailbox-attachment-icon.has-img{padding:0}.mailbox-attachment-icon.has-img>img{height:auto;max-width:100%}.lockscreen{background-color:#e9ecef}.lockscreen .lockscreen-name{font-weight:600;text-align:center}.lockscreen-logo{font-size:35px;font-weight:300;margin-bottom:25px;text-align:center}.lockscreen-logo a{color:#495057}.lockscreen-wrapper{margin:0 auto;margin-top:10%;max-width:400px}.lockscreen-item{border-radius:4px;background-color:#fff;margin:10px auto 30px;padding:0;position:relative;width:290px}.lockscreen-image{border-radius:50%;background-color:#fff;left:-10px;padding:5px;position:absolute;top:-25px;z-index:10}.lockscreen-image>img{border-radius:50%;height:70px;width:70px}.lockscreen-credentials{margin-left:70px}.lockscreen-credentials .form-control{border:0}.lockscreen-credentials .btn{background-color:#fff;border:0;padding:0 10px}.lockscreen-footer{margin-top:10px}.dark-mode .lockscreen-item{background-color:#343a40}.dark-mode .lockscreen-logo a{color:#fff}.dark-mode .lockscreen-credentials .btn{background-color:#343a40}.dark-mode .lockscreen-image{background-color:#6c757d}.login-logo,.register-logo{font-size:2.1rem;font-weight:300;margin-bottom:.9rem;text-align:center}.login-logo a,.register-logo a{color:#495057}.login-page,.register-page{-ms-flex-align:center;align-items:center;background-color:#e9ecef;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:100vh;-ms-flex-pack:center;justify-content:center}.login-box,.register-box{width:360px}@media (max-width:576px){.login-box,.register-box{margin-top:.5rem;width:90%}}.login-box .card,.register-box .card{margin-bottom:0}.login-card-body,.register-card-body{background-color:#fff;border-top:0;color:#666;padding:20px}.login-card-body .input-group .form-control,.register-card-body .input-group .form-control{border-right:0}.login-card-body .input-group .form-control:focus,.register-card-body .input-group .form-control:focus{box-shadow:none}.login-card-body .input-group .form-control:focus~.input-group-append .input-group-text,.login-card-body .input-group .form-control:focus~.input-group-prepend .input-group-text,.register-card-body .input-group .form-control:focus~.input-group-append .input-group-text,.register-card-body .input-group .form-control:focus~.input-group-prepend .input-group-text{border-color:#80bdff}.login-card-body .input-group .form-control.is-valid:focus,.register-card-body .input-group .form-control.is-valid:focus{box-shadow:none}.login-card-body .input-group .form-control.is-valid~.input-group-append .input-group-text,.login-card-body .input-group .form-control.is-valid~.input-group-prepend .input-group-text,.register-card-body .input-group .form-control.is-valid~.input-group-append .input-group-text,.register-card-body .input-group .form-control.is-valid~.input-group-prepend .input-group-text{border-color:#28a745}.login-card-body .input-group .form-control.is-invalid:focus,.register-card-body .input-group .form-control.is-invalid:focus{box-shadow:none}.login-card-body .input-group .form-control.is-invalid~.input-group-append .input-group-text,.register-card-body .input-group .form-control.is-invalid~.input-group-append .input-group-text{border-color:#dc3545}.login-card-body .input-group .input-group-text,.register-card-body .input-group .input-group-text{background-color:transparent;border-bottom-right-radius:.25rem;border-left:0;border-top-right-radius:.25rem;color:#777;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.login-box-msg,.register-box-msg{margin:0;padding:0 20px 20px;text-align:center}.social-auth-links{margin:10px 0}.dark-mode .login-card-body,.dark-mode .register-card-body{background-color:#343a40;border-color:#6c757d;color:#fff}.dark-mode .login-logo a,.dark-mode .register-logo a{color:#fff}.error-page{margin:20px auto 0;width:600px}@media (max-width:767.98px){.error-page{width:100%}}.error-page>.headline{float:left;font-size:100px;font-weight:300}@media (max-width:767.98px){.error-page>.headline{float:none;text-align:center}}.error-page>.error-content{display:block;margin-left:190px}@media (max-width:767.98px){.error-page>.error-content{margin-left:0}}.error-page>.error-content>h3{font-size:25px;font-weight:300}@media (max-width:767.98px){.error-page>.error-content>h3{text-align:center}}.invoice{background-color:#fff;border:1px solid rgba(0,0,0,.125);position:relative}.invoice-title{margin-top:0}.dark-mode .invoice{background-color:#343a40}.profile-user-img{border:3px solid #adb5bd;margin:0 auto;padding:3px;width:100px}.profile-username{font-size:21px;margin-top:5px}.post{border-bottom:1px solid #adb5bd;color:#666;margin-bottom:15px;padding-bottom:15px}.post:last-of-type{border-bottom:0;margin-bottom:0;padding-bottom:0}.post .user-block{margin-bottom:15px;width:100%}.post .row{width:100%}.dark-mode .post{color:#fff;border-color:#6c757d}.product-image{max-width:100%;height:auto;width:100%}.product-image-thumbs{-ms-flex-align:stretch;align-items:stretch;display:-ms-flexbox;display:flex;margin-top:2rem}.product-image-thumb{box-shadow:0 1px 2px rgba(0,0,0,.075);border-radius:.25rem;background-color:#fff;border:1px solid #dee2e6;display:-ms-flexbox;display:flex;margin-right:1rem;max-width:7rem;padding:.5rem}.product-image-thumb img{max-width:100%;height:auto;-ms-flex-item-align:center;align-self:center}.product-image-thumb:hover{opacity:.5}.product-share a{margin-right:.5rem}.projects td{vertical-align:middle}.projects .list-inline{margin-bottom:0}.projects .table-avatar img,.projects img.table-avatar{border-radius:50%;display:inline;width:2.5rem}.projects .project-state{text-align:center}body.iframe-mode .main-sidebar{display:none}body.iframe-mode .content-wrapper{margin-left:0!important;margin-top:0!important;padding-bottom:0!important}body.iframe-mode .main-footer,body.iframe-mode .main-header{display:none}body.iframe-mode-fullscreen{overflow:hidden}body.iframe-mode-fullscreen.layout-navbar-fixed .wrapper .content-wrapper{margin-top:0!important}.content-wrapper{height:100%}.content-wrapper.iframe-mode .btn-iframe-close{color:#dc3545;position:absolute;line-height:1;right:.125rem;top:.125rem;z-index:10;visibility:hidden}.content-wrapper.iframe-mode .btn-iframe-close:focus,.content-wrapper.iframe-mode .btn-iframe-close:hover{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}@media (hover:none) and (pointer:coarse){.content-wrapper.iframe-mode .btn-iframe-close{visibility:visible}}.content-wrapper.iframe-mode .navbar-nav{overflow-y:auto;width:100%}.content-wrapper.iframe-mode .navbar-nav .nav-link{white-space:nowrap}.content-wrapper.iframe-mode .navbar-nav .nav-item{position:relative}.content-wrapper.iframe-mode .navbar-nav .nav-item:focus .btn-iframe-close,.content-wrapper.iframe-mode .navbar-nav .nav-item:hover .btn-iframe-close{-webkit-animation-name:fadeIn;animation-name:fadeIn;-webkit-animation-duration:.3s;animation-duration:.3s;-webkit-animation-fill-mode:both;animation-fill-mode:both;visibility:visible}@media (hover:none) and (pointer:coarse){.content-wrapper.iframe-mode .navbar-nav .nav-item:focus .btn-iframe-close,.content-wrapper.iframe-mode .navbar-nav .nav-item:hover .btn-iframe-close{visibility:visible}}.content-wrapper.iframe-mode .tab-content{position:relative}.content-wrapper.iframe-mode .tab-pane+.tab-empty{display:none}.content-wrapper.iframe-mode .tab-empty{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.content-wrapper.iframe-mode .tab-loading{position:absolute;top:0;left:0;width:100%;display:none;background-color:#f4f6f9}.content-wrapper.iframe-mode .tab-loading>div{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;width:100%;height:100%}.content-wrapper.iframe-mode iframe{border:0;width:100%;height:100%;margin-bottom:-8px}.content-wrapper.iframe-mode iframe .content-wrapper{padding-bottom:0!important}body.iframe-mode-fullscreen .content-wrapper.iframe-mode{position:absolute;left:0;top:0;right:0;bottom:0;margin-left:0!important;height:100%;min-height:100%;z-index:1048}.permanent-btn-iframe-close .btn-iframe-close{-webkit-animation:none!important;animation:none!important;visibility:visible!important;opacity:1}.dark-mode .content-wrapper.iframe-mode .tab-loading{background-color:#343a40}.content-wrapper.kanban{height:1px}.content-wrapper.kanban .content{height:100%;overflow-x:auto;overflow-y:hidden}.content-wrapper.kanban .content .container,.content-wrapper.kanban .content .container-fluid,.content-wrapper.kanban .content .container-lg,.content-wrapper.kanban .content .container-md,.content-wrapper.kanban .content .container-sm,.content-wrapper.kanban .content .container-xl{width:-webkit-max-content;width:-moz-max-content;width:max-content;display:-ms-flexbox;display:flex;-ms-flex-align:stretch;align-items:stretch}.content-wrapper.kanban .content-header+.content{height:calc(100% - ((2 * 15px) + (1.8rem * 1.2)))}.content-wrapper.kanban .card .card-body{padding:.5rem}.content-wrapper.kanban .card.card-row{width:340px;display:inline-block;margin:0 .5rem}.content-wrapper.kanban .card.card-row:first-child{margin-left:0}.content-wrapper.kanban .card.card-row .card-body{height:calc(100% - (12px + (1.8rem * 1.2) + .5rem));overflow-y:auto}.content-wrapper.kanban .card.card-row .card:last-child{margin-bottom:0;border-bottom-width:1px}.content-wrapper.kanban .card.card-row .card .card-header{padding:.5rem .75rem}.content-wrapper.kanban .card.card-row .card .card-body{padding:.75rem}.content-wrapper.kanban .btn-tool.btn-link{text-decoration:underline;padding-left:0;padding-right:0}.fc-button{background:#f8f9fa;background-image:none;border-bottom-color:#ddd;border-color:#ddd;color:#495057}.fc-button.hover,.fc-button:active,.fc-button:hover{background-color:#e9e9e9}.fc-header-title h2{color:#666;font-size:15px;line-height:1.6em;margin-left:10px}.fc-header-right{padding-right:10px}.fc-header-left{padding-left:10px}.fc-widget-header{background:#fafafa}.fc-grid{border:0;width:100%}.fc-widget-content:first-of-type,.fc-widget-header:first-of-type{border-left:0;border-right:0}.fc-widget-content:last-of-type,.fc-widget-header:last-of-type{border-right:0}.fc-toolbar,.fc-toolbar.fc-header-toolbar{margin:0;padding:1rem}@media (max-width:575.98px){.fc-toolbar{-ms-flex-direction:column;flex-direction:column}.fc-toolbar .fc-left{-ms-flex-order:1;order:1;margin-bottom:.5rem}.fc-toolbar .fc-center{-ms-flex-order:0;order:0;margin-bottom:.375rem}.fc-toolbar .fc-right{-ms-flex-order:2;order:2}}.fc-day-number{font-size:20px;font-weight:300;padding-right:10px}.fc-color-picker{list-style:none;margin:0;padding:0}.fc-color-picker>li{float:left;font-size:30px;line-height:30px;margin-right:5px}.fc-color-picker>li .fa,.fc-color-picker>li .fab,.fc-color-picker>li .fad,.fc-color-picker>li .fal,.fc-color-picker>li .far,.fc-color-picker>li .fas,.fc-color-picker>li .ion,.fc-color-picker>li .svg-inline--fa{transition:-webkit-transform linear .3s;transition:transform linear .3s;transition:transform linear .3s,-webkit-transform linear .3s}.fc-color-picker>li .fa:hover,.fc-color-picker>li .fab:hover,.fc-color-picker>li .fad:hover,.fc-color-picker>li .fal:hover,.fc-color-picker>li .far:hover,.fc-color-picker>li .fas:hover,.fc-color-picker>li .ion:hover,.fc-color-picker>li .svg-inline--fa:hover{-webkit-transform:rotate(30deg);transform:rotate(30deg)}#add-new-event{transition:all linear .3s}.external-event{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;cursor:move;font-weight:700;margin-bottom:4px;padding:5px 10px}.external-event:hover{box-shadow:inset 0 0 90px rgba(0,0,0,.2)}.select2-container--default .select2-selection--single{border:1px solid #ced4da;padding:.46875rem .75rem;height:calc(2.25rem + 2px)}.select2-container--default.select2-container--open .select2-selection--single{border-color:#80bdff}.select2-container--default .select2-dropdown{border:1px solid #ced4da}.select2-container--default .select2-results__option{padding:6px 12px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.select2-container--default .select2-selection--single .select2-selection__rendered{padding-left:0;height:auto;margin-top:-3px}.select2-container--default[dir=rtl] .select2-selection--single .select2-selection__rendered{padding-right:6px;padding-left:20px}.select2-container--default .select2-selection--single .select2-selection__arrow{height:31px;right:6px}.select2-container--default .select2-selection--single .select2-selection__arrow b{margin-top:0}.select2-container--default .select2-dropdown .select2-search__field,.select2-container--default .select2-search--inline .select2-search__field{border:1px solid #ced4da}.select2-container--default .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-search--inline .select2-search__field:focus{outline:0;border:1px solid #80bdff}.select2-container--default .select2-dropdown.select2-dropdown--below{border-top:0}.select2-container--default .select2-dropdown.select2-dropdown--above{border-bottom:0}.select2-container--default .select2-results__option[aria-disabled=true]{color:#6c757d}.select2-container--default .select2-results__option[aria-selected=true]{background-color:#dee2e6}.select2-container--default .select2-results__option[aria-selected=true],.select2-container--default .select2-results__option[aria-selected=true]:hover{color:#1f2d3d}.select2-container--default .select2-results__option--highlighted{background-color:#007bff;color:#fff}.select2-container--default .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#0074f0;color:#fff}.select2-container--default .select2-selection--multiple{border:1px solid #ced4da;min-height:calc(2.25rem + 2px)}.select2-container--default .select2-selection--multiple:focus{border-color:#80bdff}.select2-container--default .select2-selection--multiple .select2-selection__rendered{padding:0 .375rem .375rem;margin-bottom:-.375rem}.select2-container--default .select2-selection--multiple .select2-selection__rendered li:first-child.select2-search.select2-search--inline{width:100%;margin-left:.375rem}.select2-container--default .select2-selection--multiple .select2-selection__rendered li:first-child.select2-search.select2-search--inline .select2-search__field{width:100%!important}.select2-container--default .select2-selection--multiple .select2-selection__rendered .select2-search.select2-search--inline .select2-search__field{border:0;margin-top:6px}.select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#007bff;border-color:#006fe6;color:#fff;padding:0 10px;margin-top:.31rem}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7);float:right;margin-left:5px;margin-right:-2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-selection--multiple.text-sm .select2-search.select2-search--inline .select2-search__field,.text-sm .select2-container--default .select2-selection--multiple .select2-search.select2-search--inline .select2-search__field{margin-top:8px}.select2-container--default .select2-selection--multiple.text-sm .select2-selection__choice,.text-sm .select2-container--default .select2-selection--multiple .select2-selection__choice{margin-top:.4rem}.select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default.select2-container--focus .select2-selection--single{border-color:#80bdff}.select2-container--default.select2-container--focus .select2-search__field{border:0}.select2-container--default .select2-selection--single .select2-selection__rendered li{padding-right:10px}.input-group-prepend~.select2-container--default .select2-selection{border-bottom-left-radius:0;border-top-left-radius:0}.input-group>.select2-container--default:not(:last-child) .select2-selection{border-bottom-right-radius:0;border-top-right-radius:0}.select2-container--bootstrap4.select2-container--focus .select2-selection{box-shadow:none}select.form-control-sm~.select2-container--default{font-size:.875rem}.text-sm .select2-container--default .select2-selection--single,select.form-control-sm~.select2-container--default .select2-selection--single{height:calc(1.8125rem + 2px)}.text-sm .select2-container--default .select2-selection--single .select2-selection__rendered,select.form-control-sm~.select2-container--default .select2-selection--single .select2-selection__rendered{margin-top:-.4rem}.text-sm .select2-container--default .select2-selection--single .select2-selection__arrow,select.form-control-sm~.select2-container--default .select2-selection--single .select2-selection__arrow{top:-.12rem}.text-sm .select2-container--default .select2-selection--multiple,select.form-control-sm~.select2-container--default .select2-selection--multiple{min-height:calc(1.8125rem + 2px)}.text-sm .select2-container--default .select2-selection--multiple .select2-selection__rendered,select.form-control-sm~.select2-container--default .select2-selection--multiple .select2-selection__rendered{padding:0 .25rem .25rem;margin-top:-.1rem}.text-sm .select2-container--default .select2-selection--multiple .select2-selection__rendered li:first-child.select2-search.select2-search--inline,select.form-control-sm~.select2-container--default .select2-selection--multiple .select2-selection__rendered li:first-child.select2-search.select2-search--inline{margin-left:.25rem}.text-sm .select2-container--default .select2-selection--multiple .select2-selection__rendered .select2-search.select2-search--inline .select2-search__field,select.form-control-sm~.select2-container--default .select2-selection--multiple .select2-selection__rendered .select2-search.select2-search--inline .select2-search__field{margin-top:6px}.maximized-card .select2-dropdown{z-index:9999}.select2-primary+.select2-container--default.select2-container--open .select2-selection--single{border-color:#80bdff}.select2-primary+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#80bdff}.select2-container--default .select2-primary .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-primary .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-primary.select2-dropdown .select2-search__field:focus,.select2-primary .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-primary .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-primary .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #80bdff}.select2-container--default .select2-primary .select2-results__option--highlighted,.select2-primary .select2-container--default .select2-results__option--highlighted{background-color:#007bff;color:#fff}.select2-container--default .select2-primary .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-primary .select2-results__option--highlighted[aria-selected]:hover,.select2-primary .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-primary .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#0074f0;color:#fff}.select2-container--default .select2-primary .select2-selection--multiple:focus,.select2-primary .select2-container--default .select2-selection--multiple:focus{border-color:#80bdff}.select2-container--default .select2-primary .select2-selection--multiple .select2-selection__choice,.select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#007bff;border-color:#006fe6;color:#fff}.select2-container--default .select2-primary .select2-selection--multiple .select2-selection__choice__remove,.select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-primary .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-primary.select2-container--focus .select2-selection--multiple,.select2-primary .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#80bdff}.select2-secondary+.select2-container--default.select2-container--open .select2-selection--single{border-color:#afb5ba}.select2-secondary+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#afb5ba}.select2-container--default .select2-secondary .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-secondary .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-secondary.select2-dropdown .select2-search__field:focus,.select2-secondary .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-secondary .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-secondary .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #afb5ba}.select2-container--default .select2-secondary .select2-results__option--highlighted,.select2-secondary .select2-container--default .select2-results__option--highlighted{background-color:#6c757d;color:#fff}.select2-container--default .select2-secondary .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-secondary .select2-results__option--highlighted[aria-selected]:hover,.select2-secondary .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-secondary .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#656d75;color:#fff}.select2-container--default .select2-secondary .select2-selection--multiple:focus,.select2-secondary .select2-container--default .select2-selection--multiple:focus{border-color:#afb5ba}.select2-container--default .select2-secondary .select2-selection--multiple .select2-selection__choice,.select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#6c757d;border-color:#60686f;color:#fff}.select2-container--default .select2-secondary .select2-selection--multiple .select2-selection__choice__remove,.select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-secondary .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-secondary.select2-container--focus .select2-selection--multiple,.select2-secondary .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#afb5ba}.select2-success+.select2-container--default.select2-container--open .select2-selection--single{border-color:#71dd8a}.select2-success+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#71dd8a}.select2-container--default .select2-success .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-success .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-success.select2-dropdown .select2-search__field:focus,.select2-success .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-success .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-success .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #71dd8a}.select2-container--default .select2-success .select2-results__option--highlighted,.select2-success .select2-container--default .select2-results__option--highlighted{background-color:#28a745;color:#fff}.select2-container--default .select2-success .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-success .select2-results__option--highlighted[aria-selected]:hover,.select2-success .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-success .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#259b40;color:#fff}.select2-container--default .select2-success .select2-selection--multiple:focus,.select2-success .select2-container--default .select2-selection--multiple:focus{border-color:#71dd8a}.select2-container--default .select2-success .select2-selection--multiple .select2-selection__choice,.select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#28a745;border-color:#23923d;color:#fff}.select2-container--default .select2-success .select2-selection--multiple .select2-selection__choice__remove,.select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-success .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-success.select2-container--focus .select2-selection--multiple,.select2-success .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#71dd8a}.select2-info+.select2-container--default.select2-container--open .select2-selection--single{border-color:#63d9ec}.select2-info+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#63d9ec}.select2-container--default .select2-info .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-info .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-info.select2-dropdown .select2-search__field:focus,.select2-info .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-info .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-info .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #63d9ec}.select2-container--default .select2-info .select2-results__option--highlighted,.select2-info .select2-container--default .select2-results__option--highlighted{background-color:#17a2b8;color:#fff}.select2-container--default .select2-info .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-info .select2-results__option--highlighted[aria-selected]:hover,.select2-info .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-info .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#1596aa;color:#fff}.select2-container--default .select2-info .select2-selection--multiple:focus,.select2-info .select2-container--default .select2-selection--multiple:focus{border-color:#63d9ec}.select2-container--default .select2-info .select2-selection--multiple .select2-selection__choice,.select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#17a2b8;border-color:#148ea1;color:#fff}.select2-container--default .select2-info .select2-selection--multiple .select2-selection__choice__remove,.select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-info .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-info.select2-container--focus .select2-selection--multiple,.select2-info .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#63d9ec}.select2-warning+.select2-container--default.select2-container--open .select2-selection--single{border-color:#ffe187}.select2-warning+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#ffe187}.select2-container--default .select2-warning .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-warning .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-warning.select2-dropdown .select2-search__field:focus,.select2-warning .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-warning .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-warning .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #ffe187}.select2-container--default .select2-warning .select2-results__option--highlighted,.select2-warning .select2-container--default .select2-results__option--highlighted{background-color:#ffc107;color:#1f2d3d}.select2-container--default .select2-warning .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-warning .select2-results__option--highlighted[aria-selected]:hover,.select2-warning .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-warning .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#f7b900;color:#1f2d3d}.select2-container--default .select2-warning .select2-selection--multiple:focus,.select2-warning .select2-container--default .select2-selection--multiple:focus{border-color:#ffe187}.select2-container--default .select2-warning .select2-selection--multiple .select2-selection__choice,.select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#ffc107;border-color:#edb100;color:#1f2d3d}.select2-container--default .select2-warning .select2-selection--multiple .select2-selection__choice__remove,.select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-warning .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-warning.select2-container--focus .select2-selection--multiple,.select2-warning .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#ffe187}.select2-danger+.select2-container--default.select2-container--open .select2-selection--single{border-color:#efa2a9}.select2-danger+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#efa2a9}.select2-container--default .select2-danger .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-danger .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-danger.select2-dropdown .select2-search__field:focus,.select2-danger .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-danger .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-danger .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #efa2a9}.select2-container--default .select2-danger .select2-results__option--highlighted,.select2-danger .select2-container--default .select2-results__option--highlighted{background-color:#dc3545;color:#fff}.select2-container--default .select2-danger .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-danger .select2-results__option--highlighted[aria-selected]:hover,.select2-danger .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-danger .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#da2839;color:#fff}.select2-container--default .select2-danger .select2-selection--multiple:focus,.select2-danger .select2-container--default .select2-selection--multiple:focus{border-color:#efa2a9}.select2-container--default .select2-danger .select2-selection--multiple .select2-selection__choice,.select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#dc3545;border-color:#d32535;color:#fff}.select2-container--default .select2-danger .select2-selection--multiple .select2-selection__choice__remove,.select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-danger .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-danger.select2-container--focus .select2-selection--multiple,.select2-danger .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#efa2a9}.select2-light+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fff}.select2-light+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fff}.select2-container--default .select2-light .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-light .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-light.select2-dropdown .select2-search__field:focus,.select2-light .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-light .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-light .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #fff}.select2-container--default .select2-light .select2-results__option--highlighted,.select2-light .select2-container--default .select2-results__option--highlighted{background-color:#f8f9fa;color:#1f2d3d}.select2-container--default .select2-light .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-light .select2-results__option--highlighted[aria-selected]:hover,.select2-light .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-light .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#eff1f4;color:#1f2d3d}.select2-container--default .select2-light .select2-selection--multiple:focus,.select2-light .select2-container--default .select2-selection--multiple:focus{border-color:#fff}.select2-container--default .select2-light .select2-selection--multiple .select2-selection__choice,.select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#f8f9fa;border-color:#e9ecef;color:#1f2d3d}.select2-container--default .select2-light .select2-selection--multiple .select2-selection__choice__remove,.select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-light .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-light.select2-container--focus .select2-selection--multiple,.select2-light .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#fff}.select2-dark+.select2-container--default.select2-container--open .select2-selection--single{border-color:#6d7a86}.select2-dark+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#6d7a86}.select2-container--default .select2-dark .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-dark .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-dark.select2-dropdown .select2-search__field:focus,.select2-dark .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-dark .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-dark .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #6d7a86}.select2-container--default .select2-dark .select2-results__option--highlighted,.select2-dark .select2-container--default .select2-results__option--highlighted{background-color:#343a40;color:#fff}.select2-container--default .select2-dark .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-dark .select2-results__option--highlighted[aria-selected]:hover,.select2-dark .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-dark .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#2d3238;color:#fff}.select2-container--default .select2-dark .select2-selection--multiple:focus,.select2-dark .select2-container--default .select2-selection--multiple:focus{border-color:#6d7a86}.select2-container--default .select2-dark .select2-selection--multiple .select2-selection__choice,.select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#343a40;border-color:#292d32;color:#fff}.select2-container--default .select2-dark .select2-selection--multiple .select2-selection__choice__remove,.select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-dark .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-dark.select2-container--focus .select2-selection--multiple,.select2-dark .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#6d7a86}.select2-lightblue+.select2-container--default.select2-container--open .select2-selection--single{border-color:#99c5de}.select2-lightblue+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#99c5de}.select2-container--default .select2-lightblue .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-lightblue .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-lightblue.select2-dropdown .select2-search__field:focus,.select2-lightblue .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-lightblue .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-lightblue .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #99c5de}.select2-container--default .select2-lightblue .select2-results__option--highlighted,.select2-lightblue .select2-container--default .select2-results__option--highlighted{background-color:#3c8dbc;color:#fff}.select2-container--default .select2-lightblue .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-lightblue .select2-results__option--highlighted[aria-selected]:hover,.select2-lightblue .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-lightblue .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#3884b0;color:#fff}.select2-container--default .select2-lightblue .select2-selection--multiple:focus,.select2-lightblue .select2-container--default .select2-selection--multiple:focus{border-color:#99c5de}.select2-container--default .select2-lightblue .select2-selection--multiple .select2-selection__choice,.select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#3c8dbc;border-color:#367fa9;color:#fff}.select2-container--default .select2-lightblue .select2-selection--multiple .select2-selection__choice__remove,.select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-lightblue .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-lightblue.select2-container--focus .select2-selection--multiple,.select2-lightblue .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#99c5de}.select2-navy+.select2-container--default.select2-container--open .select2-selection--single{border-color:#005ebf}.select2-navy+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#005ebf}.select2-container--default .select2-navy .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-navy .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-navy.select2-dropdown .select2-search__field:focus,.select2-navy .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-navy .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-navy .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #005ebf}.select2-container--default .select2-navy .select2-results__option--highlighted,.select2-navy .select2-container--default .select2-results__option--highlighted{background-color:#001f3f;color:#fff}.select2-container--default .select2-navy .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-navy .select2-results__option--highlighted[aria-selected]:hover,.select2-navy .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-navy .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#001730;color:#fff}.select2-container--default .select2-navy .select2-selection--multiple:focus,.select2-navy .select2-container--default .select2-selection--multiple:focus{border-color:#005ebf}.select2-container--default .select2-navy .select2-selection--multiple .select2-selection__choice,.select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#001f3f;border-color:#001226;color:#fff}.select2-container--default .select2-navy .select2-selection--multiple .select2-selection__choice__remove,.select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-navy .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-navy.select2-container--focus .select2-selection--multiple,.select2-navy .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#005ebf}.select2-olive+.select2-container--default.select2-container--open .select2-selection--single{border-color:#87cfaf}.select2-olive+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#87cfaf}.select2-container--default .select2-olive .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-olive .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-olive.select2-dropdown .select2-search__field:focus,.select2-olive .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-olive .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-olive .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #87cfaf}.select2-container--default .select2-olive .select2-results__option--highlighted,.select2-olive .select2-container--default .select2-results__option--highlighted{background-color:#3d9970;color:#fff}.select2-container--default .select2-olive .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-olive .select2-results__option--highlighted[aria-selected]:hover,.select2-olive .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-olive .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#398e68;color:#fff}.select2-container--default .select2-olive .select2-selection--multiple:focus,.select2-olive .select2-container--default .select2-selection--multiple:focus{border-color:#87cfaf}.select2-container--default .select2-olive .select2-selection--multiple .select2-selection__choice,.select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#3d9970;border-color:#368763;color:#fff}.select2-container--default .select2-olive .select2-selection--multiple .select2-selection__choice__remove,.select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-olive .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-olive.select2-container--focus .select2-selection--multiple,.select2-olive .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#87cfaf}.select2-lime+.select2-container--default.select2-container--open .select2-selection--single{border-color:#81ffb8}.select2-lime+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#81ffb8}.select2-container--default .select2-lime .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-lime .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-lime.select2-dropdown .select2-search__field:focus,.select2-lime .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-lime .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-lime .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #81ffb8}.select2-container--default .select2-lime .select2-results__option--highlighted,.select2-lime .select2-container--default .select2-results__option--highlighted{background-color:#01ff70;color:#1f2d3d}.select2-container--default .select2-lime .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-lime .select2-results__option--highlighted[aria-selected]:hover,.select2-lime .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-lime .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#00f169;color:#1f2d3d}.select2-container--default .select2-lime .select2-selection--multiple:focus,.select2-lime .select2-container--default .select2-selection--multiple:focus{border-color:#81ffb8}.select2-container--default .select2-lime .select2-selection--multiple .select2-selection__choice,.select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#01ff70;border-color:#00e765;color:#1f2d3d}.select2-container--default .select2-lime .select2-selection--multiple .select2-selection__choice__remove,.select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-lime .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-lime.select2-container--focus .select2-selection--multiple,.select2-lime .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#81ffb8}.select2-fuchsia+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f88adf}.select2-fuchsia+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f88adf}.select2-container--default .select2-fuchsia .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-fuchsia .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-fuchsia.select2-dropdown .select2-search__field:focus,.select2-fuchsia .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-fuchsia .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-fuchsia .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #f88adf}.select2-container--default .select2-fuchsia .select2-results__option--highlighted,.select2-fuchsia .select2-container--default .select2-results__option--highlighted{background-color:#f012be;color:#fff}.select2-container--default .select2-fuchsia .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-fuchsia .select2-results__option--highlighted[aria-selected]:hover,.select2-fuchsia .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-fuchsia .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#e40eb4;color:#fff}.select2-container--default .select2-fuchsia .select2-selection--multiple:focus,.select2-fuchsia .select2-container--default .select2-selection--multiple:focus{border-color:#f88adf}.select2-container--default .select2-fuchsia .select2-selection--multiple .select2-selection__choice,.select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#f012be;border-color:#db0ead;color:#fff}.select2-container--default .select2-fuchsia .select2-selection--multiple .select2-selection__choice__remove,.select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-fuchsia .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-fuchsia.select2-container--focus .select2-selection--multiple,.select2-fuchsia .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#f88adf}.select2-maroon+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f083ab}.select2-maroon+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f083ab}.select2-container--default .select2-maroon .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-maroon .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-maroon.select2-dropdown .select2-search__field:focus,.select2-maroon .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-maroon .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-maroon .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #f083ab}.select2-container--default .select2-maroon .select2-results__option--highlighted,.select2-maroon .select2-container--default .select2-results__option--highlighted{background-color:#d81b60;color:#fff}.select2-container--default .select2-maroon .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-maroon .select2-results__option--highlighted[aria-selected]:hover,.select2-maroon .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-maroon .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#ca195a;color:#fff}.select2-container--default .select2-maroon .select2-selection--multiple:focus,.select2-maroon .select2-container--default .select2-selection--multiple:focus{border-color:#f083ab}.select2-container--default .select2-maroon .select2-selection--multiple .select2-selection__choice,.select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#d81b60;border-color:#c11856;color:#fff}.select2-container--default .select2-maroon .select2-selection--multiple .select2-selection__choice__remove,.select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-maroon .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-maroon.select2-container--focus .select2-selection--multiple,.select2-maroon .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#f083ab}.select2-blue+.select2-container--default.select2-container--open .select2-selection--single{border-color:#80bdff}.select2-blue+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#80bdff}.select2-blue .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-blue .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-blue .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .select2-blue .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-blue .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-blue.select2-dropdown .select2-search__field:focus{border:1px solid #80bdff}.select2-blue .select2-container--default .select2-results__option--highlighted,.select2-container--default .select2-blue .select2-results__option--highlighted{background-color:#007bff;color:#fff}.select2-blue .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-blue .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .select2-blue .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-blue .select2-results__option--highlighted[aria-selected]:hover{background-color:#0074f0;color:#fff}.select2-blue .select2-container--default .select2-selection--multiple:focus,.select2-container--default .select2-blue .select2-selection--multiple:focus{border-color:#80bdff}.select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .select2-blue .select2-selection--multiple .select2-selection__choice{background-color:#007bff;border-color:#006fe6;color:#fff}.select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .select2-blue .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .select2-blue .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-blue .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .select2-blue.select2-container--focus .select2-selection--multiple{border-color:#80bdff}.select2-indigo+.select2-container--default.select2-container--open .select2-selection--single{border-color:#b389f9}.select2-indigo+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#b389f9}.select2-container--default .select2-indigo .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-indigo .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-indigo.select2-dropdown .select2-search__field:focus,.select2-indigo .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-indigo .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-indigo .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #b389f9}.select2-container--default .select2-indigo .select2-results__option--highlighted,.select2-indigo .select2-container--default .select2-results__option--highlighted{background-color:#6610f2;color:#fff}.select2-container--default .select2-indigo .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-indigo .select2-results__option--highlighted[aria-selected]:hover,.select2-indigo .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-indigo .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#5f0de6;color:#fff}.select2-container--default .select2-indigo .select2-selection--multiple:focus,.select2-indigo .select2-container--default .select2-selection--multiple:focus{border-color:#b389f9}.select2-container--default .select2-indigo .select2-selection--multiple .select2-selection__choice,.select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#6610f2;border-color:#5b0cdd;color:#fff}.select2-container--default .select2-indigo .select2-selection--multiple .select2-selection__choice__remove,.select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-indigo .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-indigo.select2-container--focus .select2-selection--multiple,.select2-indigo .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#b389f9}.select2-purple+.select2-container--default.select2-container--open .select2-selection--single{border-color:#b8a2e0}.select2-purple+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#b8a2e0}.select2-container--default .select2-purple .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-purple .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-purple.select2-dropdown .select2-search__field:focus,.select2-purple .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-purple .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-purple .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #b8a2e0}.select2-container--default .select2-purple .select2-results__option--highlighted,.select2-purple .select2-container--default .select2-results__option--highlighted{background-color:#6f42c1;color:#fff}.select2-container--default .select2-purple .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-purple .select2-results__option--highlighted[aria-selected]:hover,.select2-purple .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-purple .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#683cb8;color:#fff}.select2-container--default .select2-purple .select2-selection--multiple:focus,.select2-purple .select2-container--default .select2-selection--multiple:focus{border-color:#b8a2e0}.select2-container--default .select2-purple .select2-selection--multiple .select2-selection__choice,.select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#6f42c1;border-color:#643ab0;color:#fff}.select2-container--default .select2-purple .select2-selection--multiple .select2-selection__choice__remove,.select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-purple .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-purple.select2-container--focus .select2-selection--multiple,.select2-purple .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#b8a2e0}.select2-pink+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f6b0d0}.select2-pink+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f6b0d0}.select2-container--default .select2-pink .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-pink .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-pink.select2-dropdown .select2-search__field:focus,.select2-pink .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-pink .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-pink .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #f6b0d0}.select2-container--default .select2-pink .select2-results__option--highlighted,.select2-pink .select2-container--default .select2-results__option--highlighted{background-color:#e83e8c;color:#fff}.select2-container--default .select2-pink .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-pink .select2-results__option--highlighted[aria-selected]:hover,.select2-pink .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-pink .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#e63084;color:#fff}.select2-container--default .select2-pink .select2-selection--multiple:focus,.select2-pink .select2-container--default .select2-selection--multiple:focus{border-color:#f6b0d0}.select2-container--default .select2-pink .select2-selection--multiple .select2-selection__choice,.select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#e83e8c;border-color:#e5277e;color:#fff}.select2-container--default .select2-pink .select2-selection--multiple .select2-selection__choice__remove,.select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-pink .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-pink.select2-container--focus .select2-selection--multiple,.select2-pink .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#f6b0d0}.select2-red+.select2-container--default.select2-container--open .select2-selection--single{border-color:#efa2a9}.select2-red+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#efa2a9}.select2-container--default .select2-red .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-red .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-red.select2-dropdown .select2-search__field:focus,.select2-red .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-red .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-red .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #efa2a9}.select2-container--default .select2-red .select2-results__option--highlighted,.select2-red .select2-container--default .select2-results__option--highlighted{background-color:#dc3545;color:#fff}.select2-container--default .select2-red .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-red .select2-results__option--highlighted[aria-selected]:hover,.select2-red .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-red .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#da2839;color:#fff}.select2-container--default .select2-red .select2-selection--multiple:focus,.select2-red .select2-container--default .select2-selection--multiple:focus{border-color:#efa2a9}.select2-container--default .select2-red .select2-selection--multiple .select2-selection__choice,.select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#dc3545;border-color:#d32535;color:#fff}.select2-container--default .select2-red .select2-selection--multiple .select2-selection__choice__remove,.select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-red .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-red.select2-container--focus .select2-selection--multiple,.select2-red .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#efa2a9}.select2-orange+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fec392}.select2-orange+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fec392}.select2-container--default .select2-orange .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-orange .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-orange.select2-dropdown .select2-search__field:focus,.select2-orange .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-orange .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-orange .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #fec392}.select2-container--default .select2-orange .select2-results__option--highlighted,.select2-orange .select2-container--default .select2-results__option--highlighted{background-color:#fd7e14;color:#1f2d3d}.select2-container--default .select2-orange .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-orange .select2-results__option--highlighted[aria-selected]:hover,.select2-orange .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-orange .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#fd7605;color:#fff}.select2-container--default .select2-orange .select2-selection--multiple:focus,.select2-orange .select2-container--default .select2-selection--multiple:focus{border-color:#fec392}.select2-container--default .select2-orange .select2-selection--multiple .select2-selection__choice,.select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#fd7e14;border-color:#f57102;color:#1f2d3d}.select2-container--default .select2-orange .select2-selection--multiple .select2-selection__choice__remove,.select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-orange .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-orange.select2-container--focus .select2-selection--multiple,.select2-orange .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#fec392}.select2-yellow+.select2-container--default.select2-container--open .select2-selection--single{border-color:#ffe187}.select2-yellow+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#ffe187}.select2-container--default .select2-yellow .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-yellow .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-yellow.select2-dropdown .select2-search__field:focus,.select2-yellow .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-yellow .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-yellow .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #ffe187}.select2-container--default .select2-yellow .select2-results__option--highlighted,.select2-yellow .select2-container--default .select2-results__option--highlighted{background-color:#ffc107;color:#1f2d3d}.select2-container--default .select2-yellow .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-yellow .select2-results__option--highlighted[aria-selected]:hover,.select2-yellow .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-yellow .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#f7b900;color:#1f2d3d}.select2-container--default .select2-yellow .select2-selection--multiple:focus,.select2-yellow .select2-container--default .select2-selection--multiple:focus{border-color:#ffe187}.select2-container--default .select2-yellow .select2-selection--multiple .select2-selection__choice,.select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#ffc107;border-color:#edb100;color:#1f2d3d}.select2-container--default .select2-yellow .select2-selection--multiple .select2-selection__choice__remove,.select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-yellow .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-yellow.select2-container--focus .select2-selection--multiple,.select2-yellow .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#ffe187}.select2-green+.select2-container--default.select2-container--open .select2-selection--single{border-color:#71dd8a}.select2-green+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#71dd8a}.select2-container--default .select2-green .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-green .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-green.select2-dropdown .select2-search__field:focus,.select2-green .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-green .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-green .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #71dd8a}.select2-container--default .select2-green .select2-results__option--highlighted,.select2-green .select2-container--default .select2-results__option--highlighted{background-color:#28a745;color:#fff}.select2-container--default .select2-green .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-green .select2-results__option--highlighted[aria-selected]:hover,.select2-green .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-green .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#259b40;color:#fff}.select2-container--default .select2-green .select2-selection--multiple:focus,.select2-green .select2-container--default .select2-selection--multiple:focus{border-color:#71dd8a}.select2-container--default .select2-green .select2-selection--multiple .select2-selection__choice,.select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#28a745;border-color:#23923d;color:#fff}.select2-container--default .select2-green .select2-selection--multiple .select2-selection__choice__remove,.select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-green .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-green.select2-container--focus .select2-selection--multiple,.select2-green .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#71dd8a}.select2-teal+.select2-container--default.select2-container--open .select2-selection--single{border-color:#7eeaca}.select2-teal+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#7eeaca}.select2-container--default .select2-teal .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-teal .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-teal.select2-dropdown .select2-search__field:focus,.select2-teal .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-teal .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-teal .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #7eeaca}.select2-container--default .select2-teal .select2-results__option--highlighted,.select2-teal .select2-container--default .select2-results__option--highlighted{background-color:#20c997;color:#fff}.select2-container--default .select2-teal .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-teal .select2-results__option--highlighted[aria-selected]:hover,.select2-teal .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-teal .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#1ebc8d;color:#fff}.select2-container--default .select2-teal .select2-selection--multiple:focus,.select2-teal .select2-container--default .select2-selection--multiple:focus{border-color:#7eeaca}.select2-container--default .select2-teal .select2-selection--multiple .select2-selection__choice,.select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#20c997;border-color:#1cb386;color:#fff}.select2-container--default .select2-teal .select2-selection--multiple .select2-selection__choice__remove,.select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-teal .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-teal.select2-container--focus .select2-selection--multiple,.select2-teal .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#7eeaca}.select2-cyan+.select2-container--default.select2-container--open .select2-selection--single{border-color:#63d9ec}.select2-cyan+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#63d9ec}.select2-container--default .select2-cyan .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-cyan .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-cyan.select2-dropdown .select2-search__field:focus,.select2-cyan .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-cyan .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-cyan .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #63d9ec}.select2-container--default .select2-cyan .select2-results__option--highlighted,.select2-cyan .select2-container--default .select2-results__option--highlighted{background-color:#17a2b8;color:#fff}.select2-container--default .select2-cyan .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-cyan .select2-results__option--highlighted[aria-selected]:hover,.select2-cyan .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-cyan .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#1596aa;color:#fff}.select2-container--default .select2-cyan .select2-selection--multiple:focus,.select2-cyan .select2-container--default .select2-selection--multiple:focus{border-color:#63d9ec}.select2-container--default .select2-cyan .select2-selection--multiple .select2-selection__choice,.select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#17a2b8;border-color:#148ea1;color:#fff}.select2-container--default .select2-cyan .select2-selection--multiple .select2-selection__choice__remove,.select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-cyan .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-cyan.select2-container--focus .select2-selection--multiple,.select2-cyan .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#63d9ec}.select2-white+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fff}.select2-white+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fff}.select2-container--default .select2-white .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-white .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-white.select2-dropdown .select2-search__field:focus,.select2-white .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-white .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-white .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #fff}.select2-container--default .select2-white .select2-results__option--highlighted,.select2-white .select2-container--default .select2-results__option--highlighted{background-color:#fff;color:#1f2d3d}.select2-container--default .select2-white .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-white .select2-results__option--highlighted[aria-selected]:hover,.select2-white .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-white .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#f7f7f7;color:#1f2d3d}.select2-container--default .select2-white .select2-selection--multiple:focus,.select2-white .select2-container--default .select2-selection--multiple:focus{border-color:#fff}.select2-container--default .select2-white .select2-selection--multiple .select2-selection__choice,.select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#fff;border-color:#f2f2f2;color:#1f2d3d}.select2-container--default .select2-white .select2-selection--multiple .select2-selection__choice__remove,.select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.select2-container--default .select2-white .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.select2-container--default .select2-white.select2-container--focus .select2-selection--multiple,.select2-white .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#fff}.select2-gray+.select2-container--default.select2-container--open .select2-selection--single{border-color:#afb5ba}.select2-gray+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#afb5ba}.select2-container--default .select2-gray .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-gray .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-gray.select2-dropdown .select2-search__field:focus,.select2-gray .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-gray .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-gray .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #afb5ba}.select2-container--default .select2-gray .select2-results__option--highlighted,.select2-gray .select2-container--default .select2-results__option--highlighted{background-color:#6c757d;color:#fff}.select2-container--default .select2-gray .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-gray .select2-results__option--highlighted[aria-selected]:hover,.select2-gray .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-gray .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#656d75;color:#fff}.select2-container--default .select2-gray .select2-selection--multiple:focus,.select2-gray .select2-container--default .select2-selection--multiple:focus{border-color:#afb5ba}.select2-container--default .select2-gray .select2-selection--multiple .select2-selection__choice,.select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#6c757d;border-color:#60686f;color:#fff}.select2-container--default .select2-gray .select2-selection--multiple .select2-selection__choice__remove,.select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-gray .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-gray.select2-container--focus .select2-selection--multiple,.select2-gray .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#afb5ba}.select2-gray-dark+.select2-container--default.select2-container--open .select2-selection--single{border-color:#6d7a86}.select2-gray-dark+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#6d7a86}.select2-container--default .select2-gray-dark .select2-dropdown .select2-search__field:focus,.select2-container--default .select2-gray-dark .select2-search--inline .select2-search__field:focus,.select2-container--default .select2-gray-dark.select2-dropdown .select2-search__field:focus,.select2-gray-dark .select2-container--default .select2-dropdown .select2-search__field:focus,.select2-gray-dark .select2-container--default .select2-search--inline .select2-search__field:focus,.select2-gray-dark .select2-container--default.select2-dropdown .select2-search__field:focus{border:1px solid #6d7a86}.select2-container--default .select2-gray-dark .select2-results__option--highlighted,.select2-gray-dark .select2-container--default .select2-results__option--highlighted{background-color:#343a40;color:#fff}.select2-container--default .select2-gray-dark .select2-results__option--highlighted[aria-selected],.select2-container--default .select2-gray-dark .select2-results__option--highlighted[aria-selected]:hover,.select2-gray-dark .select2-container--default .select2-results__option--highlighted[aria-selected],.select2-gray-dark .select2-container--default .select2-results__option--highlighted[aria-selected]:hover{background-color:#2d3238;color:#fff}.select2-container--default .select2-gray-dark .select2-selection--multiple:focus,.select2-gray-dark .select2-container--default .select2-selection--multiple:focus{border-color:#6d7a86}.select2-container--default .select2-gray-dark .select2-selection--multiple .select2-selection__choice,.select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#343a40;border-color:#292d32;color:#fff}.select2-container--default .select2-gray-dark .select2-selection--multiple .select2-selection__choice__remove,.select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.select2-container--default .select2-gray-dark .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container--default .select2-gray-dark.select2-container--focus .select2-selection--multiple,.select2-gray-dark .select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#6d7a86}.dark-mode .select2-selection{background-color:#343a40;border-color:#6c757d}.dark-mode .select2-container--disabled .select2-selection--single{background-color:#454d55}.dark-mode .select2-selection--single{background-color:#343a40;border-color:#6c757d}.dark-mode .select2-selection--single .select2-selection__rendered{color:#fff}.dark-mode .select2-dropdown .select2-search__field,.dark-mode .select2-search--inline .select2-search__field{background-color:#343a40;border-color:#6c757d;color:#fff}.dark-mode .select2-dropdown{background-color:#343a40;border-color:#6c757d;color:#fff}.dark-mode .select2-results__option[aria-selected=true]{background-color:#3f474e!important;color:#dee2e6}.dark-mode .select2-container .select2-search--inline .select2-search__field{background-color:transparent;color:#fff}.dark-mode .select2-container--bootstrap4 .select2-selection--multiple .select2-selection__choice{color:#fff}.dark-mode .select2-primary+.select2-container--default.select2-container--open .select2-selection--single{border-color:#85a7ca}.dark-mode .select2-primary+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#85a7ca}.dark-mode .select2-primary .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-primary .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-primary .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-primary .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-primary .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-primary.select2-dropdown .select2-search__field:focus{border:1px solid #85a7ca}.dark-mode .select2-primary .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-primary .select2-results__option--highlighted{background-color:#3f6791;color:#fff}.dark-mode .select2-primary .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-primary .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-primary .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-primary .select2-results__option--highlighted[aria-selected]:hover{background-color:#3a5f86;color:#fff}.dark-mode .select2-primary .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-primary .select2-selection--multiple:focus{border-color:#85a7ca}.dark-mode .select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-primary .select2-selection--multiple .select2-selection__choice{background-color:#3f6791;border-color:#375a7f;color:#fff}.dark-mode .select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-primary .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-primary .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-primary .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-primary.select2-container--focus .select2-selection--multiple{border-color:#85a7ca}.dark-mode .select2-secondary+.select2-container--default.select2-container--open .select2-selection--single{border-color:#afb5ba}.dark-mode .select2-secondary+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#afb5ba}.dark-mode .select2-secondary .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-secondary .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-secondary .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-secondary .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-secondary .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-secondary.select2-dropdown .select2-search__field:focus{border:1px solid #afb5ba}.dark-mode .select2-secondary .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-secondary .select2-results__option--highlighted{background-color:#6c757d;color:#fff}.dark-mode .select2-secondary .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-secondary .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-secondary .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-secondary .select2-results__option--highlighted[aria-selected]:hover{background-color:#656d75;color:#fff}.dark-mode .select2-secondary .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-secondary .select2-selection--multiple:focus{border-color:#afb5ba}.dark-mode .select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-secondary .select2-selection--multiple .select2-selection__choice{background-color:#6c757d;border-color:#60686f;color:#fff}.dark-mode .select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-secondary .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-secondary .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-secondary .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-secondary .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-secondary.select2-container--focus .select2-selection--multiple{border-color:#afb5ba}.dark-mode .select2-success+.select2-container--default.select2-container--open .select2-selection--single{border-color:#3dffcd}.dark-mode .select2-success+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#3dffcd}.dark-mode .select2-success .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-success .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-success .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-success .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-success .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-success.select2-dropdown .select2-search__field:focus{border:1px solid #3dffcd}.dark-mode .select2-success .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-success .select2-results__option--highlighted{background-color:#00bc8c;color:#fff}.dark-mode .select2-success .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-success .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-success .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-success .select2-results__option--highlighted[aria-selected]:hover{background-color:#00ad81;color:#fff}.dark-mode .select2-success .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-success .select2-selection--multiple:focus{border-color:#3dffcd}.dark-mode .select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-success .select2-selection--multiple .select2-selection__choice{background-color:#00bc8c;border-color:#00a379;color:#fff}.dark-mode .select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-success .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-success .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-success .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-success .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-success.select2-container--focus .select2-selection--multiple{border-color:#3dffcd}.dark-mode .select2-info+.select2-container--default.select2-container--open .select2-selection--single{border-color:#a0cfee}.dark-mode .select2-info+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#a0cfee}.dark-mode .select2-info .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-info .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-info .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-info .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-info .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-info.select2-dropdown .select2-search__field:focus{border:1px solid #a0cfee}.dark-mode .select2-info .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-info .select2-results__option--highlighted{background-color:#3498db;color:#fff}.dark-mode .select2-info .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-info .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-info .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-info .select2-results__option--highlighted[aria-selected]:hover{background-color:#2791d9;color:#fff}.dark-mode .select2-info .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-info .select2-selection--multiple:focus{border-color:#a0cfee}.dark-mode .select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-info .select2-selection--multiple .select2-selection__choice{background-color:#3498db;border-color:#258cd1;color:#fff}.dark-mode .select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-info .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-info .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-info .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-info .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-info.select2-container--focus .select2-selection--multiple{border-color:#a0cfee}.dark-mode .select2-warning+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f9cf8b}.dark-mode .select2-warning+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f9cf8b}.dark-mode .select2-warning .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-warning .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-warning .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-warning .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-warning .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-warning.select2-dropdown .select2-search__field:focus{border:1px solid #f9cf8b}.dark-mode .select2-warning .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-warning .select2-results__option--highlighted{background-color:#f39c12;color:#1f2d3d}.dark-mode .select2-warning .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-warning .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-warning .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-warning .select2-results__option--highlighted[aria-selected]:hover{background-color:#ea940c;color:#1f2d3d}.dark-mode .select2-warning .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-warning .select2-selection--multiple:focus{border-color:#f9cf8b}.dark-mode .select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-warning .select2-selection--multiple .select2-selection__choice{background-color:#f39c12;border-color:#e08e0b;color:#1f2d3d}.dark-mode .select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-warning .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-warning .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-warning .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-warning .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-warning.select2-container--focus .select2-selection--multiple{border-color:#f9cf8b}.dark-mode .select2-danger+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f5b4ae}.dark-mode .select2-danger+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f5b4ae}.dark-mode .select2-danger .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-danger .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-danger .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-danger .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-danger .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-danger.select2-dropdown .select2-search__field:focus{border:1px solid #f5b4ae}.dark-mode .select2-danger .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-danger .select2-results__option--highlighted{background-color:#e74c3c;color:#fff}.dark-mode .select2-danger .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-danger .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-danger .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-danger .select2-results__option--highlighted[aria-selected]:hover{background-color:#e53f2e;color:#fff}.dark-mode .select2-danger .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-danger .select2-selection--multiple:focus{border-color:#f5b4ae}.dark-mode .select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-danger .select2-selection--multiple .select2-selection__choice{background-color:#e74c3c;border-color:#e43725;color:#fff}.dark-mode .select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-danger .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-danger .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-danger .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-danger .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-danger.select2-container--focus .select2-selection--multiple{border-color:#f5b4ae}.dark-mode .select2-light+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fff}.dark-mode .select2-light+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fff}.dark-mode .select2-light .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-light .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-light .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-light .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-light .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-light.select2-dropdown .select2-search__field:focus{border:1px solid #fff}.dark-mode .select2-light .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-light .select2-results__option--highlighted{background-color:#f8f9fa;color:#1f2d3d}.dark-mode .select2-light .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-light .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-light .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-light .select2-results__option--highlighted[aria-selected]:hover{background-color:#eff1f4;color:#1f2d3d}.dark-mode .select2-light .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-light .select2-selection--multiple:focus{border-color:#fff}.dark-mode .select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-light .select2-selection--multiple .select2-selection__choice{background-color:#f8f9fa;border-color:#e9ecef;color:#1f2d3d}.dark-mode .select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-light .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-light .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-light .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-light .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-light.select2-container--focus .select2-selection--multiple{border-color:#fff}.dark-mode .select2-dark+.select2-container--default.select2-container--open .select2-selection--single{border-color:#6d7a86}.dark-mode .select2-dark+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#6d7a86}.dark-mode .select2-dark .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-dark .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-dark .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-dark .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-dark .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-dark.select2-dropdown .select2-search__field:focus{border:1px solid #6d7a86}.dark-mode .select2-dark .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-dark .select2-results__option--highlighted{background-color:#343a40;color:#fff}.dark-mode .select2-dark .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-dark .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-dark .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-dark .select2-results__option--highlighted[aria-selected]:hover{background-color:#2d3238;color:#fff}.dark-mode .select2-dark .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-dark .select2-selection--multiple:focus{border-color:#6d7a86}.dark-mode .select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-dark .select2-selection--multiple .select2-selection__choice{background-color:#343a40;border-color:#292d32;color:#fff}.dark-mode .select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-dark .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-dark .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-dark .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-dark.select2-container--focus .select2-selection--multiple{border-color:#6d7a86}.dark-mode .select2-lightblue+.select2-container--default.select2-container--open .select2-selection--single{border-color:#e6f1f7}.dark-mode .select2-lightblue+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#e6f1f7}.dark-mode .select2-lightblue .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-lightblue .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-lightblue .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-lightblue .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-lightblue .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-lightblue.select2-dropdown .select2-search__field:focus{border:1px solid #e6f1f7}.dark-mode .select2-lightblue .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-lightblue .select2-results__option--highlighted{background-color:#86bad8;color:#1f2d3d}.dark-mode .select2-lightblue .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-lightblue .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-lightblue .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-lightblue .select2-results__option--highlighted[aria-selected]:hover{background-color:#7ab3d5;color:#1f2d3d}.dark-mode .select2-lightblue .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-lightblue .select2-selection--multiple:focus{border-color:#e6f1f7}.dark-mode .select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-lightblue .select2-selection--multiple .select2-selection__choice{background-color:#86bad8;border-color:#72afd2;color:#1f2d3d}.dark-mode .select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-lightblue .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-lightblue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-lightblue .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-lightblue .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-lightblue.select2-container--focus .select2-selection--multiple{border-color:#e6f1f7}.dark-mode .select2-navy+.select2-container--default.select2-container--open .select2-selection--single{border-color:#006ad8}.dark-mode .select2-navy+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#006ad8}.dark-mode .select2-navy .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-navy .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-navy .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-navy .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-navy .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-navy.select2-dropdown .select2-search__field:focus{border:1px solid #006ad8}.dark-mode .select2-navy .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-navy .select2-results__option--highlighted{background-color:#002c59;color:#fff}.dark-mode .select2-navy .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-navy .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-navy .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-navy .select2-results__option--highlighted[aria-selected]:hover{background-color:#002449;color:#fff}.dark-mode .select2-navy .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-navy .select2-selection--multiple:focus{border-color:#006ad8}.dark-mode .select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-navy .select2-selection--multiple .select2-selection__choice{background-color:#002c59;border-color:#001f3f;color:#fff}.dark-mode .select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-navy .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-navy .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-navy .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-navy .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-navy.select2-container--focus .select2-selection--multiple{border-color:#006ad8}.dark-mode .select2-olive+.select2-container--default.select2-container--open .select2-selection--single{border-color:#cfecdf}.dark-mode .select2-olive+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#cfecdf}.dark-mode .select2-olive .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-olive .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-olive .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-olive .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-olive .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-olive.select2-dropdown .select2-search__field:focus{border:1px solid #cfecdf}.dark-mode .select2-olive .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-olive .select2-results__option--highlighted{background-color:#74c8a3;color:#1f2d3d}.dark-mode .select2-olive .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-olive .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-olive .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-olive .select2-results__option--highlighted[aria-selected]:hover{background-color:#69c39b;color:#1f2d3d}.dark-mode .select2-olive .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-olive .select2-selection--multiple:focus{border-color:#cfecdf}.dark-mode .select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-olive .select2-selection--multiple .select2-selection__choice{background-color:#74c8a3;border-color:#62c096;color:#1f2d3d}.dark-mode .select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-olive .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-olive .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-olive .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-olive .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-olive.select2-container--focus .select2-selection--multiple{border-color:#cfecdf}.dark-mode .select2-lime+.select2-container--default.select2-container--open .select2-selection--single{border-color:#e7fff1}.dark-mode .select2-lime+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#e7fff1}.dark-mode .select2-lime .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-lime .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-lime .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-lime .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-lime .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-lime.select2-dropdown .select2-search__field:focus{border:1px solid #e7fff1}.dark-mode .select2-lime .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-lime .select2-results__option--highlighted{background-color:#67ffa9;color:#1f2d3d}.dark-mode .select2-lime .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-lime .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-lime .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-lime .select2-results__option--highlighted[aria-selected]:hover{background-color:#58ffa1;color:#1f2d3d}.dark-mode .select2-lime .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-lime .select2-selection--multiple:focus{border-color:#e7fff1}.dark-mode .select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-lime .select2-selection--multiple .select2-selection__choice{background-color:#67ffa9;border-color:#4eff9b;color:#1f2d3d}.dark-mode .select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-lime .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-lime .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-lime .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-lime .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-lime.select2-container--focus .select2-selection--multiple{border-color:#e7fff1}.dark-mode .select2-fuchsia+.select2-container--default.select2-container--open .select2-selection--single{border-color:#feeaf9}.dark-mode .select2-fuchsia+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#feeaf9}.dark-mode .select2-fuchsia .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-fuchsia .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-fuchsia .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-fuchsia .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-fuchsia .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-fuchsia.select2-dropdown .select2-search__field:focus{border:1px solid #feeaf9}.dark-mode .select2-fuchsia .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-fuchsia .select2-results__option--highlighted{background-color:#f672d8;color:#1f2d3d}.dark-mode .select2-fuchsia .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-fuchsia .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-fuchsia .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-fuchsia .select2-results__option--highlighted[aria-selected]:hover{background-color:#f564d4;color:#1f2d3d}.dark-mode .select2-fuchsia .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-fuchsia .select2-selection--multiple:focus{border-color:#feeaf9}.dark-mode .select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-fuchsia .select2-selection--multiple .select2-selection__choice{background-color:#f672d8;border-color:#f55ad2;color:#1f2d3d}.dark-mode .select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-fuchsia .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-fuchsia .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-fuchsia .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-fuchsia .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-fuchsia.select2-container--focus .select2-selection--multiple{border-color:#feeaf9}.dark-mode .select2-maroon+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fbdee8}.dark-mode .select2-maroon+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fbdee8}.dark-mode .select2-maroon .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-maroon .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-maroon .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-maroon .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-maroon .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-maroon.select2-dropdown .select2-search__field:focus{border:1px solid #fbdee8}.dark-mode .select2-maroon .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-maroon .select2-results__option--highlighted{background-color:#ed6c9b;color:#1f2d3d}.dark-mode .select2-maroon .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-maroon .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-maroon .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-maroon .select2-results__option--highlighted[aria-selected]:hover{background-color:#eb5f92;color:#fff}.dark-mode .select2-maroon .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-maroon .select2-selection--multiple:focus{border-color:#fbdee8}.dark-mode .select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-maroon .select2-selection--multiple .select2-selection__choice{background-color:#ed6c9b;border-color:#ea568c;color:#1f2d3d}.dark-mode .select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-maroon .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-maroon .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-maroon .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-maroon .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-maroon.select2-container--focus .select2-selection--multiple{border-color:#fbdee8}.dark-mode .select2-blue+.select2-container--default.select2-container--open .select2-selection--single{border-color:#85a7ca}.dark-mode .select2-blue+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#85a7ca}.dark-mode .select2-blue .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-blue .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-blue .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-blue .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-blue .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-blue.select2-dropdown .select2-search__field:focus{border:1px solid #85a7ca}.dark-mode .select2-blue .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-blue .select2-results__option--highlighted{background-color:#3f6791;color:#fff}.dark-mode .select2-blue .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-blue .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-blue .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-blue .select2-results__option--highlighted[aria-selected]:hover{background-color:#3a5f86;color:#fff}.dark-mode .select2-blue .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-blue .select2-selection--multiple:focus{border-color:#85a7ca}.dark-mode .select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-blue .select2-selection--multiple .select2-selection__choice{background-color:#3f6791;border-color:#375a7f;color:#fff}.dark-mode .select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-blue .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-blue .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-blue .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-blue .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-blue.select2-container--focus .select2-selection--multiple{border-color:#85a7ca}.dark-mode .select2-indigo+.select2-container--default.select2-container--open .select2-selection--single{border-color:#b389f9}.dark-mode .select2-indigo+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#b389f9}.dark-mode .select2-indigo .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-indigo .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-indigo .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-indigo .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-indigo .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-indigo.select2-dropdown .select2-search__field:focus{border:1px solid #b389f9}.dark-mode .select2-indigo .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-indigo .select2-results__option--highlighted{background-color:#6610f2;color:#fff}.dark-mode .select2-indigo .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-indigo .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-indigo .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-indigo .select2-results__option--highlighted[aria-selected]:hover{background-color:#5f0de6;color:#fff}.dark-mode .select2-indigo .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-indigo .select2-selection--multiple:focus{border-color:#b389f9}.dark-mode .select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-indigo .select2-selection--multiple .select2-selection__choice{background-color:#6610f2;border-color:#5b0cdd;color:#fff}.dark-mode .select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-indigo .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-indigo .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-indigo .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-indigo .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-indigo.select2-container--focus .select2-selection--multiple{border-color:#b389f9}.dark-mode .select2-purple+.select2-container--default.select2-container--open .select2-selection--single{border-color:#b8a2e0}.dark-mode .select2-purple+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#b8a2e0}.dark-mode .select2-purple .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-purple .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-purple .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-purple .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-purple .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-purple.select2-dropdown .select2-search__field:focus{border:1px solid #b8a2e0}.dark-mode .select2-purple .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-purple .select2-results__option--highlighted{background-color:#6f42c1;color:#fff}.dark-mode .select2-purple .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-purple .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-purple .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-purple .select2-results__option--highlighted[aria-selected]:hover{background-color:#683cb8;color:#fff}.dark-mode .select2-purple .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-purple .select2-selection--multiple:focus{border-color:#b8a2e0}.dark-mode .select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-purple .select2-selection--multiple .select2-selection__choice{background-color:#6f42c1;border-color:#643ab0;color:#fff}.dark-mode .select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-purple .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-purple .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-purple .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-purple .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-purple.select2-container--focus .select2-selection--multiple{border-color:#b8a2e0}.dark-mode .select2-pink+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f6b0d0}.dark-mode .select2-pink+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f6b0d0}.dark-mode .select2-pink .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-pink .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-pink .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-pink .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-pink .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-pink.select2-dropdown .select2-search__field:focus{border:1px solid #f6b0d0}.dark-mode .select2-pink .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-pink .select2-results__option--highlighted{background-color:#e83e8c;color:#fff}.dark-mode .select2-pink .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-pink .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-pink .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-pink .select2-results__option--highlighted[aria-selected]:hover{background-color:#e63084;color:#fff}.dark-mode .select2-pink .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-pink .select2-selection--multiple:focus{border-color:#f6b0d0}.dark-mode .select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-pink .select2-selection--multiple .select2-selection__choice{background-color:#e83e8c;border-color:#e5277e;color:#fff}.dark-mode .select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-pink .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-pink .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-pink .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-pink .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-pink.select2-container--focus .select2-selection--multiple{border-color:#f6b0d0}.dark-mode .select2-red+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f5b4ae}.dark-mode .select2-red+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f5b4ae}.dark-mode .select2-red .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-red .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-red .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-red .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-red .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-red.select2-dropdown .select2-search__field:focus{border:1px solid #f5b4ae}.dark-mode .select2-red .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-red .select2-results__option--highlighted{background-color:#e74c3c;color:#fff}.dark-mode .select2-red .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-red .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-red .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-red .select2-results__option--highlighted[aria-selected]:hover{background-color:#e53f2e;color:#fff}.dark-mode .select2-red .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-red .select2-selection--multiple:focus{border-color:#f5b4ae}.dark-mode .select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-red .select2-selection--multiple .select2-selection__choice{background-color:#e74c3c;border-color:#e43725;color:#fff}.dark-mode .select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-red .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-red .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-red .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-red .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-red.select2-container--focus .select2-selection--multiple{border-color:#f5b4ae}.dark-mode .select2-orange+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fec392}.dark-mode .select2-orange+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fec392}.dark-mode .select2-orange .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-orange .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-orange .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-orange .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-orange .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-orange.select2-dropdown .select2-search__field:focus{border:1px solid #fec392}.dark-mode .select2-orange .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-orange .select2-results__option--highlighted{background-color:#fd7e14;color:#1f2d3d}.dark-mode .select2-orange .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-orange .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-orange .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-orange .select2-results__option--highlighted[aria-selected]:hover{background-color:#fd7605;color:#fff}.dark-mode .select2-orange .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-orange .select2-selection--multiple:focus{border-color:#fec392}.dark-mode .select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-orange .select2-selection--multiple .select2-selection__choice{background-color:#fd7e14;border-color:#f57102;color:#1f2d3d}.dark-mode .select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-orange .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-orange .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-orange .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-orange .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-orange.select2-container--focus .select2-selection--multiple{border-color:#fec392}.dark-mode .select2-yellow+.select2-container--default.select2-container--open .select2-selection--single{border-color:#f9cf8b}.dark-mode .select2-yellow+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#f9cf8b}.dark-mode .select2-yellow .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-yellow .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-yellow .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-yellow .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-yellow .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-yellow.select2-dropdown .select2-search__field:focus{border:1px solid #f9cf8b}.dark-mode .select2-yellow .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-yellow .select2-results__option--highlighted{background-color:#f39c12;color:#1f2d3d}.dark-mode .select2-yellow .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-yellow .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-yellow .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-yellow .select2-results__option--highlighted[aria-selected]:hover{background-color:#ea940c;color:#1f2d3d}.dark-mode .select2-yellow .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-yellow .select2-selection--multiple:focus{border-color:#f9cf8b}.dark-mode .select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-yellow .select2-selection--multiple .select2-selection__choice{background-color:#f39c12;border-color:#e08e0b;color:#1f2d3d}.dark-mode .select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-yellow .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-yellow .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-yellow .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-yellow .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-yellow.select2-container--focus .select2-selection--multiple{border-color:#f9cf8b}.dark-mode .select2-green+.select2-container--default.select2-container--open .select2-selection--single{border-color:#3dffcd}.dark-mode .select2-green+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#3dffcd}.dark-mode .select2-green .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-green .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-green .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-green .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-green .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-green.select2-dropdown .select2-search__field:focus{border:1px solid #3dffcd}.dark-mode .select2-green .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-green .select2-results__option--highlighted{background-color:#00bc8c;color:#fff}.dark-mode .select2-green .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-green .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-green .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-green .select2-results__option--highlighted[aria-selected]:hover{background-color:#00ad81;color:#fff}.dark-mode .select2-green .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-green .select2-selection--multiple:focus{border-color:#3dffcd}.dark-mode .select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-green .select2-selection--multiple .select2-selection__choice{background-color:#00bc8c;border-color:#00a379;color:#fff}.dark-mode .select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-green .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-green .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-green .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-green .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-green.select2-container--focus .select2-selection--multiple{border-color:#3dffcd}.dark-mode .select2-teal+.select2-container--default.select2-container--open .select2-selection--single{border-color:#7eeaca}.dark-mode .select2-teal+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#7eeaca}.dark-mode .select2-teal .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-teal .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-teal .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-teal .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-teal .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-teal.select2-dropdown .select2-search__field:focus{border:1px solid #7eeaca}.dark-mode .select2-teal .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-teal .select2-results__option--highlighted{background-color:#20c997;color:#fff}.dark-mode .select2-teal .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-teal .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-teal .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-teal .select2-results__option--highlighted[aria-selected]:hover{background-color:#1ebc8d;color:#fff}.dark-mode .select2-teal .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-teal .select2-selection--multiple:focus{border-color:#7eeaca}.dark-mode .select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-teal .select2-selection--multiple .select2-selection__choice{background-color:#20c997;border-color:#1cb386;color:#fff}.dark-mode .select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-teal .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-teal .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-teal .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-teal .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-teal.select2-container--focus .select2-selection--multiple{border-color:#7eeaca}.dark-mode .select2-cyan+.select2-container--default.select2-container--open .select2-selection--single{border-color:#a0cfee}.dark-mode .select2-cyan+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#a0cfee}.dark-mode .select2-cyan .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-cyan .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-cyan .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-cyan .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-cyan .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-cyan.select2-dropdown .select2-search__field:focus{border:1px solid #a0cfee}.dark-mode .select2-cyan .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-cyan .select2-results__option--highlighted{background-color:#3498db;color:#fff}.dark-mode .select2-cyan .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-cyan .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-cyan .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-cyan .select2-results__option--highlighted[aria-selected]:hover{background-color:#2791d9;color:#fff}.dark-mode .select2-cyan .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-cyan .select2-selection--multiple:focus{border-color:#a0cfee}.dark-mode .select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-cyan .select2-selection--multiple .select2-selection__choice{background-color:#3498db;border-color:#258cd1;color:#fff}.dark-mode .select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-cyan .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-cyan .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-cyan .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-cyan .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-cyan.select2-container--focus .select2-selection--multiple{border-color:#a0cfee}.dark-mode .select2-white+.select2-container--default.select2-container--open .select2-selection--single{border-color:#fff}.dark-mode .select2-white+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#fff}.dark-mode .select2-white .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-white .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-white .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-white .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-white .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-white.select2-dropdown .select2-search__field:focus{border:1px solid #fff}.dark-mode .select2-white .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-white .select2-results__option--highlighted{background-color:#fff;color:#1f2d3d}.dark-mode .select2-white .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-white .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-white .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-white .select2-results__option--highlighted[aria-selected]:hover{background-color:#f7f7f7;color:#1f2d3d}.dark-mode .select2-white .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-white .select2-selection--multiple:focus{border-color:#fff}.dark-mode .select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-white .select2-selection--multiple .select2-selection__choice{background-color:#fff;border-color:#f2f2f2;color:#1f2d3d}.dark-mode .select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-white .select2-selection--multiple .select2-selection__choice__remove{color:rgba(31,45,61,.7)}.dark-mode .select2-white .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-white .select2-selection--multiple .select2-selection__choice__remove:hover{color:#1f2d3d}.dark-mode .select2-white .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-white.select2-container--focus .select2-selection--multiple{border-color:#fff}.dark-mode .select2-gray+.select2-container--default.select2-container--open .select2-selection--single{border-color:#afb5ba}.dark-mode .select2-gray+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#afb5ba}.dark-mode .select2-gray .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-gray .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-gray .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray.select2-dropdown .select2-search__field:focus{border:1px solid #afb5ba}.dark-mode .select2-gray .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-gray .select2-results__option--highlighted{background-color:#6c757d;color:#fff}.dark-mode .select2-gray .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-gray .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-gray .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-gray .select2-results__option--highlighted[aria-selected]:hover{background-color:#656d75;color:#fff}.dark-mode .select2-gray .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-gray .select2-selection--multiple:focus{border-color:#afb5ba}.dark-mode .select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-gray .select2-selection--multiple .select2-selection__choice{background-color:#6c757d;border-color:#60686f;color:#fff}.dark-mode .select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-gray .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-gray .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-gray .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-gray .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-gray.select2-container--focus .select2-selection--multiple{border-color:#afb5ba}.dark-mode .select2-gray-dark+.select2-container--default.select2-container--open .select2-selection--single{border-color:#6d7a86}.dark-mode .select2-gray-dark+.select2-container--default.select2-container--focus .select2-selection--single{border-color:#6d7a86}.dark-mode .select2-gray-dark .select2-container--default .select2-dropdown .select2-search__field:focus,.dark-mode .select2-gray-dark .select2-container--default .select2-search--inline .select2-search__field:focus,.dark-mode .select2-gray-dark .select2-container--default.select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray-dark .select2-dropdown .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray-dark .select2-search--inline .select2-search__field:focus,.select2-container--default .dark-mode .select2-gray-dark.select2-dropdown .select2-search__field:focus{border:1px solid #6d7a86}.dark-mode .select2-gray-dark .select2-container--default .select2-results__option--highlighted,.select2-container--default .dark-mode .select2-gray-dark .select2-results__option--highlighted{background-color:#343a40;color:#fff}.dark-mode .select2-gray-dark .select2-container--default .select2-results__option--highlighted[aria-selected],.dark-mode .select2-gray-dark .select2-container--default .select2-results__option--highlighted[aria-selected]:hover,.select2-container--default .dark-mode .select2-gray-dark .select2-results__option--highlighted[aria-selected],.select2-container--default .dark-mode .select2-gray-dark .select2-results__option--highlighted[aria-selected]:hover{background-color:#2d3238;color:#fff}.dark-mode .select2-gray-dark .select2-container--default .select2-selection--multiple:focus,.select2-container--default .dark-mode .select2-gray-dark .select2-selection--multiple:focus{border-color:#6d7a86}.dark-mode .select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice,.select2-container--default .dark-mode .select2-gray-dark .select2-selection--multiple .select2-selection__choice{background-color:#343a40;border-color:#292d32;color:#fff}.dark-mode .select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove,.select2-container--default .dark-mode .select2-gray-dark .select2-selection--multiple .select2-selection__choice__remove{color:rgba(255,255,255,.7)}.dark-mode .select2-gray-dark .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover,.select2-container--default .dark-mode .select2-gray-dark .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.dark-mode .select2-gray-dark .select2-container--default.select2-container--focus .select2-selection--multiple,.select2-container--default .dark-mode .select2-gray-dark.select2-container--focus .select2-selection--multiple{border-color:#6d7a86}.slider .tooltip.in{opacity:.9}.slider.slider-vertical{height:100%}.slider.slider-horizontal{width:100%}.slider-primary .slider .slider-selection{background:#007bff}.slider-secondary .slider .slider-selection{background:#6c757d}.slider-success .slider .slider-selection{background:#28a745}.slider-info .slider .slider-selection{background:#17a2b8}.slider-warning .slider .slider-selection{background:#ffc107}.slider-danger .slider .slider-selection{background:#dc3545}.slider-light .slider .slider-selection{background:#f8f9fa}.slider-dark .slider .slider-selection{background:#343a40}.slider-lightblue .slider .slider-selection{background:#3c8dbc}.slider-navy .slider .slider-selection{background:#001f3f}.slider-olive .slider .slider-selection{background:#3d9970}.slider-lime .slider .slider-selection{background:#01ff70}.slider-fuchsia .slider .slider-selection{background:#f012be}.slider-maroon .slider .slider-selection{background:#d81b60}.slider-blue .slider .slider-selection{background:#007bff}.slider-indigo .slider .slider-selection{background:#6610f2}.slider-purple .slider .slider-selection{background:#6f42c1}.slider-pink .slider .slider-selection{background:#e83e8c}.slider-red .slider .slider-selection{background:#dc3545}.slider-orange .slider .slider-selection{background:#fd7e14}.slider-yellow .slider .slider-selection{background:#ffc107}.slider-green .slider .slider-selection{background:#28a745}.slider-teal .slider .slider-selection{background:#20c997}.slider-cyan .slider .slider-selection{background:#17a2b8}.slider-white .slider .slider-selection{background:#fff}.slider-gray .slider .slider-selection{background:#6c757d}.slider-gray-dark .slider .slider-selection{background:#343a40}.dark-mode .slider-track{background-color:#4b545c;background-image:none}.dark-mode .slider-primary .slider .slider-selection{background:#3f6791}.dark-mode .slider-secondary .slider .slider-selection{background:#6c757d}.dark-mode .slider-success .slider .slider-selection{background:#00bc8c}.dark-mode .slider-info .slider .slider-selection{background:#3498db}.dark-mode .slider-warning .slider .slider-selection{background:#f39c12}.dark-mode .slider-danger .slider .slider-selection{background:#e74c3c}.dark-mode .slider-light .slider .slider-selection{background:#f8f9fa}.dark-mode .slider-dark .slider .slider-selection{background:#343a40}.dark-mode .slider-lightblue .slider .slider-selection{background:#86bad8}.dark-mode .slider-navy .slider .slider-selection{background:#002c59}.dark-mode .slider-olive .slider .slider-selection{background:#74c8a3}.dark-mode .slider-lime .slider .slider-selection{background:#67ffa9}.dark-mode .slider-fuchsia .slider .slider-selection{background:#f672d8}.dark-mode .slider-maroon .slider .slider-selection{background:#ed6c9b}.dark-mode .slider-blue .slider .slider-selection{background:#3f6791}.dark-mode .slider-indigo .slider .slider-selection{background:#6610f2}.dark-mode .slider-purple .slider .slider-selection{background:#6f42c1}.dark-mode .slider-pink .slider .slider-selection{background:#e83e8c}.dark-mode .slider-red .slider .slider-selection{background:#e74c3c}.dark-mode .slider-orange .slider .slider-selection{background:#fd7e14}.dark-mode .slider-yellow .slider .slider-selection{background:#f39c12}.dark-mode .slider-green .slider .slider-selection{background:#00bc8c}.dark-mode .slider-teal .slider .slider-selection{background:#20c997}.dark-mode .slider-cyan .slider .slider-selection{background:#3498db}.dark-mode .slider-white .slider .slider-selection{background:#fff}.dark-mode .slider-gray .slider .slider-selection{background:#6c757d}.dark-mode .slider-gray-dark .slider .slider-selection{background:#343a40}.icheck-primary>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-primary>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#007bff}.icheck-primary>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-primary>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#007bff}.icheck-primary>input:first-child:checked+input[type=hidden]+label::before,.icheck-primary>input:first-child:checked+label::before{background-color:#007bff;border-color:#007bff}.icheck-secondary>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-secondary>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6c757d}.icheck-secondary>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-secondary>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6c757d}.icheck-secondary>input:first-child:checked+input[type=hidden]+label::before,.icheck-secondary>input:first-child:checked+label::before{background-color:#6c757d;border-color:#6c757d}.icheck-success>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-success>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#28a745}.icheck-success>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-success>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#28a745}.icheck-success>input:first-child:checked+input[type=hidden]+label::before,.icheck-success>input:first-child:checked+label::before{background-color:#28a745;border-color:#28a745}.icheck-info>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-info>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#17a2b8}.icheck-info>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-info>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#17a2b8}.icheck-info>input:first-child:checked+input[type=hidden]+label::before,.icheck-info>input:first-child:checked+label::before{background-color:#17a2b8;border-color:#17a2b8}.icheck-warning>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-warning>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#ffc107}.icheck-warning>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-warning>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#ffc107}.icheck-warning>input:first-child:checked+input[type=hidden]+label::before,.icheck-warning>input:first-child:checked+label::before{background-color:#ffc107;border-color:#ffc107}.icheck-danger>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-danger>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#dc3545}.icheck-danger>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-danger>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#dc3545}.icheck-danger>input:first-child:checked+input[type=hidden]+label::before,.icheck-danger>input:first-child:checked+label::before{background-color:#dc3545;border-color:#dc3545}.icheck-light>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-light>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f8f9fa}.icheck-light>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-light>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f8f9fa}.icheck-light>input:first-child:checked+input[type=hidden]+label::before,.icheck-light>input:first-child:checked+label::before{background-color:#f8f9fa;border-color:#f8f9fa}.icheck-dark>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-dark>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#343a40}.icheck-dark>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-dark>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#343a40}.icheck-dark>input:first-child:checked+input[type=hidden]+label::before,.icheck-dark>input:first-child:checked+label::before{background-color:#343a40;border-color:#343a40}.icheck-lightblue>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-lightblue>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3c8dbc}.icheck-lightblue>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-lightblue>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3c8dbc}.icheck-lightblue>input:first-child:checked+input[type=hidden]+label::before,.icheck-lightblue>input:first-child:checked+label::before{background-color:#3c8dbc;border-color:#3c8dbc}.icheck-navy>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-navy>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#001f3f}.icheck-navy>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-navy>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#001f3f}.icheck-navy>input:first-child:checked+input[type=hidden]+label::before,.icheck-navy>input:first-child:checked+label::before{background-color:#001f3f;border-color:#001f3f}.icheck-olive>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-olive>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3d9970}.icheck-olive>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-olive>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3d9970}.icheck-olive>input:first-child:checked+input[type=hidden]+label::before,.icheck-olive>input:first-child:checked+label::before{background-color:#3d9970;border-color:#3d9970}.icheck-lime>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-lime>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#01ff70}.icheck-lime>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-lime>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#01ff70}.icheck-lime>input:first-child:checked+input[type=hidden]+label::before,.icheck-lime>input:first-child:checked+label::before{background-color:#01ff70;border-color:#01ff70}.icheck-fuchsia>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-fuchsia>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f012be}.icheck-fuchsia>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-fuchsia>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f012be}.icheck-fuchsia>input:first-child:checked+input[type=hidden]+label::before,.icheck-fuchsia>input:first-child:checked+label::before{background-color:#f012be;border-color:#f012be}.icheck-maroon>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-maroon>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#d81b60}.icheck-maroon>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-maroon>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#d81b60}.icheck-maroon>input:first-child:checked+input[type=hidden]+label::before,.icheck-maroon>input:first-child:checked+label::before{background-color:#d81b60;border-color:#d81b60}.icheck-blue>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-blue>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#007bff}.icheck-blue>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-blue>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#007bff}.icheck-blue>input:first-child:checked+input[type=hidden]+label::before,.icheck-blue>input:first-child:checked+label::before{background-color:#007bff;border-color:#007bff}.icheck-indigo>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-indigo>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6610f2}.icheck-indigo>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-indigo>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6610f2}.icheck-indigo>input:first-child:checked+input[type=hidden]+label::before,.icheck-indigo>input:first-child:checked+label::before{background-color:#6610f2;border-color:#6610f2}.icheck-purple>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-purple>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6f42c1}.icheck-purple>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-purple>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6f42c1}.icheck-purple>input:first-child:checked+input[type=hidden]+label::before,.icheck-purple>input:first-child:checked+label::before{background-color:#6f42c1;border-color:#6f42c1}.icheck-pink>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-pink>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#e83e8c}.icheck-pink>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-pink>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#e83e8c}.icheck-pink>input:first-child:checked+input[type=hidden]+label::before,.icheck-pink>input:first-child:checked+label::before{background-color:#e83e8c;border-color:#e83e8c}.icheck-red>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-red>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#dc3545}.icheck-red>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-red>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#dc3545}.icheck-red>input:first-child:checked+input[type=hidden]+label::before,.icheck-red>input:first-child:checked+label::before{background-color:#dc3545;border-color:#dc3545}.icheck-orange>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-orange>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#fd7e14}.icheck-orange>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-orange>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#fd7e14}.icheck-orange>input:first-child:checked+input[type=hidden]+label::before,.icheck-orange>input:first-child:checked+label::before{background-color:#fd7e14;border-color:#fd7e14}.icheck-yellow>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-yellow>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#ffc107}.icheck-yellow>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-yellow>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#ffc107}.icheck-yellow>input:first-child:checked+input[type=hidden]+label::before,.icheck-yellow>input:first-child:checked+label::before{background-color:#ffc107;border-color:#ffc107}.icheck-green>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-green>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#28a745}.icheck-green>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-green>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#28a745}.icheck-green>input:first-child:checked+input[type=hidden]+label::before,.icheck-green>input:first-child:checked+label::before{background-color:#28a745;border-color:#28a745}.icheck-teal>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-teal>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#20c997}.icheck-teal>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-teal>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#20c997}.icheck-teal>input:first-child:checked+input[type=hidden]+label::before,.icheck-teal>input:first-child:checked+label::before{background-color:#20c997;border-color:#20c997}.icheck-cyan>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-cyan>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#17a2b8}.icheck-cyan>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-cyan>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#17a2b8}.icheck-cyan>input:first-child:checked+input[type=hidden]+label::before,.icheck-cyan>input:first-child:checked+label::before{background-color:#17a2b8;border-color:#17a2b8}.icheck-white>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-white>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#fff}.icheck-white>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-white>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#fff}.icheck-white>input:first-child:checked+input[type=hidden]+label::before,.icheck-white>input:first-child:checked+label::before{background-color:#fff;border-color:#fff}.icheck-gray>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-gray>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6c757d}.icheck-gray>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-gray>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6c757d}.icheck-gray>input:first-child:checked+input[type=hidden]+label::before,.icheck-gray>input:first-child:checked+label::before{background-color:#6c757d;border-color:#6c757d}.icheck-gray-dark>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.icheck-gray-dark>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#343a40}.icheck-gray-dark>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.icheck-gray-dark>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#343a40}.icheck-gray-dark>input:first-child:checked+input[type=hidden]+label::before,.icheck-gray-dark>input:first-child:checked+label::before{background-color:#343a40;border-color:#343a40}.dark-mode [class*=icheck-]>input:first-child:not(:checked)+input[type=hidden]+label::before,.dark-mode [class*=icheck-]>input:first-child:not(:checked)+label::before{border-color:#6c757d}.dark-mode .icheck-primary>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-primary>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3f6791}.dark-mode .icheck-primary>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-primary>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3f6791}.dark-mode .icheck-primary>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-primary>input:first-child:checked+label::before{background-color:#3f6791;border-color:#3f6791}.dark-mode .icheck-secondary>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-secondary>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6c757d}.dark-mode .icheck-secondary>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-secondary>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6c757d}.dark-mode .icheck-secondary>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-secondary>input:first-child:checked+label::before{background-color:#6c757d;border-color:#6c757d}.dark-mode .icheck-success>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-success>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#00bc8c}.dark-mode .icheck-success>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-success>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#00bc8c}.dark-mode .icheck-success>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-success>input:first-child:checked+label::before{background-color:#00bc8c;border-color:#00bc8c}.dark-mode .icheck-info>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-info>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3498db}.dark-mode .icheck-info>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-info>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3498db}.dark-mode .icheck-info>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-info>input:first-child:checked+label::before{background-color:#3498db;border-color:#3498db}.dark-mode .icheck-warning>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-warning>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f39c12}.dark-mode .icheck-warning>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-warning>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f39c12}.dark-mode .icheck-warning>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-warning>input:first-child:checked+label::before{background-color:#f39c12;border-color:#f39c12}.dark-mode .icheck-danger>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-danger>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#e74c3c}.dark-mode .icheck-danger>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-danger>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#e74c3c}.dark-mode .icheck-danger>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-danger>input:first-child:checked+label::before{background-color:#e74c3c;border-color:#e74c3c}.dark-mode .icheck-light>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-light>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f8f9fa}.dark-mode .icheck-light>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-light>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f8f9fa}.dark-mode .icheck-light>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-light>input:first-child:checked+label::before{background-color:#f8f9fa;border-color:#f8f9fa}.dark-mode .icheck-dark>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-dark>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#343a40}.dark-mode .icheck-dark>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-dark>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#343a40}.dark-mode .icheck-dark>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-dark>input:first-child:checked+label::before{background-color:#343a40;border-color:#343a40}.dark-mode .icheck-lightblue>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-lightblue>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#86bad8}.dark-mode .icheck-lightblue>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-lightblue>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#86bad8}.dark-mode .icheck-lightblue>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-lightblue>input:first-child:checked+label::before{background-color:#86bad8;border-color:#86bad8}.dark-mode .icheck-navy>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-navy>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#002c59}.dark-mode .icheck-navy>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-navy>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#002c59}.dark-mode .icheck-navy>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-navy>input:first-child:checked+label::before{background-color:#002c59;border-color:#002c59}.dark-mode .icheck-olive>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-olive>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#74c8a3}.dark-mode .icheck-olive>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-olive>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#74c8a3}.dark-mode .icheck-olive>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-olive>input:first-child:checked+label::before{background-color:#74c8a3;border-color:#74c8a3}.dark-mode .icheck-lime>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-lime>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#67ffa9}.dark-mode .icheck-lime>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-lime>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#67ffa9}.dark-mode .icheck-lime>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-lime>input:first-child:checked+label::before{background-color:#67ffa9;border-color:#67ffa9}.dark-mode .icheck-fuchsia>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-fuchsia>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f672d8}.dark-mode .icheck-fuchsia>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-fuchsia>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f672d8}.dark-mode .icheck-fuchsia>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-fuchsia>input:first-child:checked+label::before{background-color:#f672d8;border-color:#f672d8}.dark-mode .icheck-maroon>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-maroon>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#ed6c9b}.dark-mode .icheck-maroon>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-maroon>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#ed6c9b}.dark-mode .icheck-maroon>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-maroon>input:first-child:checked+label::before{background-color:#ed6c9b;border-color:#ed6c9b}.dark-mode .icheck-blue>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-blue>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3f6791}.dark-mode .icheck-blue>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-blue>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3f6791}.dark-mode .icheck-blue>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-blue>input:first-child:checked+label::before{background-color:#3f6791;border-color:#3f6791}.dark-mode .icheck-indigo>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-indigo>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6610f2}.dark-mode .icheck-indigo>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-indigo>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6610f2}.dark-mode .icheck-indigo>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-indigo>input:first-child:checked+label::before{background-color:#6610f2;border-color:#6610f2}.dark-mode .icheck-purple>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-purple>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6f42c1}.dark-mode .icheck-purple>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-purple>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6f42c1}.dark-mode .icheck-purple>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-purple>input:first-child:checked+label::before{background-color:#6f42c1;border-color:#6f42c1}.dark-mode .icheck-pink>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-pink>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#e83e8c}.dark-mode .icheck-pink>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-pink>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#e83e8c}.dark-mode .icheck-pink>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-pink>input:first-child:checked+label::before{background-color:#e83e8c;border-color:#e83e8c}.dark-mode .icheck-red>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-red>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#e74c3c}.dark-mode .icheck-red>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-red>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#e74c3c}.dark-mode .icheck-red>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-red>input:first-child:checked+label::before{background-color:#e74c3c;border-color:#e74c3c}.dark-mode .icheck-orange>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-orange>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#fd7e14}.dark-mode .icheck-orange>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-orange>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#fd7e14}.dark-mode .icheck-orange>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-orange>input:first-child:checked+label::before{background-color:#fd7e14;border-color:#fd7e14}.dark-mode .icheck-yellow>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-yellow>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#f39c12}.dark-mode .icheck-yellow>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-yellow>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#f39c12}.dark-mode .icheck-yellow>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-yellow>input:first-child:checked+label::before{background-color:#f39c12;border-color:#f39c12}.dark-mode .icheck-green>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-green>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#00bc8c}.dark-mode .icheck-green>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-green>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#00bc8c}.dark-mode .icheck-green>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-green>input:first-child:checked+label::before{background-color:#00bc8c;border-color:#00bc8c}.dark-mode .icheck-teal>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-teal>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#20c997}.dark-mode .icheck-teal>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-teal>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#20c997}.dark-mode .icheck-teal>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-teal>input:first-child:checked+label::before{background-color:#20c997;border-color:#20c997}.dark-mode .icheck-cyan>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-cyan>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#3498db}.dark-mode .icheck-cyan>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-cyan>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#3498db}.dark-mode .icheck-cyan>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-cyan>input:first-child:checked+label::before{background-color:#3498db;border-color:#3498db}.dark-mode .icheck-white>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-white>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#fff}.dark-mode .icheck-white>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-white>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#fff}.dark-mode .icheck-white>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-white>input:first-child:checked+label::before{background-color:#fff;border-color:#fff}.dark-mode .icheck-gray>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-gray>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#6c757d}.dark-mode .icheck-gray>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-gray>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#6c757d}.dark-mode .icheck-gray>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-gray>input:first-child:checked+label::before{background-color:#6c757d;border-color:#6c757d}.dark-mode .icheck-gray-dark>input:first-child:not(:checked):not(:disabled):hover+input[type=hidden]+label::before,.dark-mode .icheck-gray-dark>input:first-child:not(:checked):not(:disabled):hover+label::before{border-color:#343a40}.dark-mode .icheck-gray-dark>input:first-child:not(:checked):not(:disabled):focus+input[type=hidden]+label::before,.dark-mode .icheck-gray-dark>input:first-child:not(:checked):not(:disabled):focus+label::before{border-color:#343a40}.dark-mode .icheck-gray-dark>input:first-child:checked+input[type=hidden]+label::before,.dark-mode .icheck-gray-dark>input:first-child:checked+label::before{background-color:#343a40;border-color:#343a40}.mapael .map{position:relative}.mapael .mapTooltip{font-family:"Source Sans Pro",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;border-radius:.25rem;font-size:.875rem;background-color:#000;color:#fff;display:block;max-width:200px;padding:.25rem .5rem;position:absolute;text-align:center;word-wrap:break-word;z-index:1070}.mapael .myLegend{background-color:#f8f9fa;border:1px solid #adb5bd;padding:10px;width:600px}.mapael .zoomButton{background-color:#f8f9fa;border:1px solid #ddd;border-radius:.25rem;color:#444;cursor:pointer;font-weight:700;height:16px;left:10px;line-height:14px;padding-left:1px;position:absolute;text-align:center;top:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:16px}.mapael .zoomButton.hover,.mapael .zoomButton:active,.mapael .zoomButton:hover{background-color:#e9ecef;color:#2b2b2b}.mapael .zoomReset{line-height:12px;top:10px}.mapael .zoomIn{top:30px}.mapael .zoomOut{top:50px}.jqvmap-zoomin,.jqvmap-zoomout{background-color:#f8f9fa;border:1px solid #ddd;border-radius:.25rem;color:#444;height:15px;width:15px}.jqvmap-zoomin.hover,.jqvmap-zoomin:active,.jqvmap-zoomin:hover,.jqvmap-zoomout.hover,.jqvmap-zoomout:active,.jqvmap-zoomout:hover{background-color:#e9ecef;color:#2b2b2b}.swal2-icon.swal2-info{border-color:ligthen(#17a2b8,20%);color:#17a2b8}.swal2-icon.swal2-warning{border-color:ligthen(#ffc107,20%);color:#ffc107}.swal2-icon.swal2-error{border-color:ligthen(#dc3545,20%);color:#dc3545}.swal2-icon.swal2-question{border-color:ligthen(#6c757d,20%);color:#6c757d}.swal2-icon.swal2-success{border-color:ligthen(#28a745,20%);color:#28a745}.swal2-icon.swal2-success .swal2-success-ring{border-color:ligthen(#28a745,20%)}.swal2-icon.swal2-success [class^=swal2-success-line]{background-color:#28a745}.dark-mode .swal2-popup{background-color:#343a40;color:#e9ecef}.dark-mode .swal2-popup .swal2-content,.dark-mode .swal2-popup .swal2-title{color:#e9ecef}#toast-container .toast{background-color:#007bff}#toast-container .toast-success{background-color:#28a745}#toast-container .toast-error{background-color:#dc3545}#toast-container .toast-info{background-color:#17a2b8}#toast-container .toast-warning{background-color:#ffc107}.toast-bottom-full-width .toast,.toast-top-full-width .toast{max-width:inherit}.pace{z-index:1048}.pace .pace-progress{z-index:1049}.pace .pace-activity{z-index:1050}.pace-primary .pace .pace-progress{background:#007bff}.pace-barber-shop-primary .pace{background:#fff}.pace-barber-shop-primary .pace .pace-progress{background:#007bff}.pace-barber-shop-primary .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-primary .pace .pace-progress::after{color:rgba(0,123,255,.2)}.pace-bounce-primary .pace .pace-activity{background:#007bff}.pace-center-atom-primary .pace-progress{height:100px;width:80px}.pace-center-atom-primary .pace-progress::before{background:#007bff;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-primary .pace-activity{border-color:#007bff}.pace-center-atom-primary .pace-activity::after,.pace-center-atom-primary .pace-activity::before{border-color:#007bff}.pace-center-circle-primary .pace .pace-progress{background:rgba(0,123,255,.8);color:#fff}.pace-center-radar-primary .pace .pace-activity{border-color:#007bff transparent transparent}.pace-center-radar-primary .pace .pace-activity::before{border-color:#007bff transparent transparent}.pace-center-simple-primary .pace{background:#fff;border-color:#007bff}.pace-center-simple-primary .pace .pace-progress{background:#007bff}.pace-material-primary .pace{color:#007bff}.pace-corner-indicator-primary .pace .pace-activity{background:#007bff}.pace-corner-indicator-primary .pace .pace-activity::after,.pace-corner-indicator-primary .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-primary .pace .pace-activity::before{border-right-color:rgba(0,123,255,.2);border-left-color:rgba(0,123,255,.2)}.pace-corner-indicator-primary .pace .pace-activity::after{border-top-color:rgba(0,123,255,.2);border-bottom-color:rgba(0,123,255,.2)}.pace-fill-left-primary .pace .pace-progress{background-color:rgba(0,123,255,.2)}.pace-flash-primary .pace .pace-progress{background:#007bff}.pace-flash-primary .pace .pace-progress-inner{box-shadow:0 0 10px #007bff,0 0 5px #007bff}.pace-flash-primary .pace .pace-activity{border-top-color:#007bff;border-left-color:#007bff}.pace-loading-bar-primary .pace .pace-progress{background:#007bff;color:#007bff;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-primary .pace .pace-activity{box-shadow:inset 0 0 0 2px #007bff,inset 0 0 0 7px #fff}.pace-mac-osx-primary .pace .pace-progress{background-color:#007bff;box-shadow:inset -1px 0 #007bff,inset 0 -1px #007bff,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-primary .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-primary .pace-progress{color:#007bff}.pace-secondary .pace .pace-progress{background:#6c757d}.pace-barber-shop-secondary .pace{background:#fff}.pace-barber-shop-secondary .pace .pace-progress{background:#6c757d}.pace-barber-shop-secondary .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-secondary .pace .pace-progress::after{color:rgba(108,117,125,.2)}.pace-bounce-secondary .pace .pace-activity{background:#6c757d}.pace-center-atom-secondary .pace-progress{height:100px;width:80px}.pace-center-atom-secondary .pace-progress::before{background:#6c757d;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-secondary .pace-activity{border-color:#6c757d}.pace-center-atom-secondary .pace-activity::after,.pace-center-atom-secondary .pace-activity::before{border-color:#6c757d}.pace-center-circle-secondary .pace .pace-progress{background:rgba(108,117,125,.8);color:#fff}.pace-center-radar-secondary .pace .pace-activity{border-color:#6c757d transparent transparent}.pace-center-radar-secondary .pace .pace-activity::before{border-color:#6c757d transparent transparent}.pace-center-simple-secondary .pace{background:#fff;border-color:#6c757d}.pace-center-simple-secondary .pace .pace-progress{background:#6c757d}.pace-material-secondary .pace{color:#6c757d}.pace-corner-indicator-secondary .pace .pace-activity{background:#6c757d}.pace-corner-indicator-secondary .pace .pace-activity::after,.pace-corner-indicator-secondary .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-secondary .pace .pace-activity::before{border-right-color:rgba(108,117,125,.2);border-left-color:rgba(108,117,125,.2)}.pace-corner-indicator-secondary .pace .pace-activity::after{border-top-color:rgba(108,117,125,.2);border-bottom-color:rgba(108,117,125,.2)}.pace-fill-left-secondary .pace .pace-progress{background-color:rgba(108,117,125,.2)}.pace-flash-secondary .pace .pace-progress{background:#6c757d}.pace-flash-secondary .pace .pace-progress-inner{box-shadow:0 0 10px #6c757d,0 0 5px #6c757d}.pace-flash-secondary .pace .pace-activity{border-top-color:#6c757d;border-left-color:#6c757d}.pace-loading-bar-secondary .pace .pace-progress{background:#6c757d;color:#6c757d;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-secondary .pace .pace-activity{box-shadow:inset 0 0 0 2px #6c757d,inset 0 0 0 7px #fff}.pace-mac-osx-secondary .pace .pace-progress{background-color:#6c757d;box-shadow:inset -1px 0 #6c757d,inset 0 -1px #6c757d,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-secondary .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-secondary .pace-progress{color:#6c757d}.pace-success .pace .pace-progress{background:#28a745}.pace-barber-shop-success .pace{background:#fff}.pace-barber-shop-success .pace .pace-progress{background:#28a745}.pace-barber-shop-success .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-success .pace .pace-progress::after{color:rgba(40,167,69,.2)}.pace-bounce-success .pace .pace-activity{background:#28a745}.pace-center-atom-success .pace-progress{height:100px;width:80px}.pace-center-atom-success .pace-progress::before{background:#28a745;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-success .pace-activity{border-color:#28a745}.pace-center-atom-success .pace-activity::after,.pace-center-atom-success .pace-activity::before{border-color:#28a745}.pace-center-circle-success .pace .pace-progress{background:rgba(40,167,69,.8);color:#fff}.pace-center-radar-success .pace .pace-activity{border-color:#28a745 transparent transparent}.pace-center-radar-success .pace .pace-activity::before{border-color:#28a745 transparent transparent}.pace-center-simple-success .pace{background:#fff;border-color:#28a745}.pace-center-simple-success .pace .pace-progress{background:#28a745}.pace-material-success .pace{color:#28a745}.pace-corner-indicator-success .pace .pace-activity{background:#28a745}.pace-corner-indicator-success .pace .pace-activity::after,.pace-corner-indicator-success .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-success .pace .pace-activity::before{border-right-color:rgba(40,167,69,.2);border-left-color:rgba(40,167,69,.2)}.pace-corner-indicator-success .pace .pace-activity::after{border-top-color:rgba(40,167,69,.2);border-bottom-color:rgba(40,167,69,.2)}.pace-fill-left-success .pace .pace-progress{background-color:rgba(40,167,69,.2)}.pace-flash-success .pace .pace-progress{background:#28a745}.pace-flash-success .pace .pace-progress-inner{box-shadow:0 0 10px #28a745,0 0 5px #28a745}.pace-flash-success .pace .pace-activity{border-top-color:#28a745;border-left-color:#28a745}.pace-loading-bar-success .pace .pace-progress{background:#28a745;color:#28a745;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-success .pace .pace-activity{box-shadow:inset 0 0 0 2px #28a745,inset 0 0 0 7px #fff}.pace-mac-osx-success .pace .pace-progress{background-color:#28a745;box-shadow:inset -1px 0 #28a745,inset 0 -1px #28a745,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-success .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-success .pace-progress{color:#28a745}.pace-info .pace .pace-progress{background:#17a2b8}.pace-barber-shop-info .pace{background:#fff}.pace-barber-shop-info .pace .pace-progress{background:#17a2b8}.pace-barber-shop-info .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-info .pace .pace-progress::after{color:rgba(23,162,184,.2)}.pace-bounce-info .pace .pace-activity{background:#17a2b8}.pace-center-atom-info .pace-progress{height:100px;width:80px}.pace-center-atom-info .pace-progress::before{background:#17a2b8;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-info .pace-activity{border-color:#17a2b8}.pace-center-atom-info .pace-activity::after,.pace-center-atom-info .pace-activity::before{border-color:#17a2b8}.pace-center-circle-info .pace .pace-progress{background:rgba(23,162,184,.8);color:#fff}.pace-center-radar-info .pace .pace-activity{border-color:#17a2b8 transparent transparent}.pace-center-radar-info .pace .pace-activity::before{border-color:#17a2b8 transparent transparent}.pace-center-simple-info .pace{background:#fff;border-color:#17a2b8}.pace-center-simple-info .pace .pace-progress{background:#17a2b8}.pace-material-info .pace{color:#17a2b8}.pace-corner-indicator-info .pace .pace-activity{background:#17a2b8}.pace-corner-indicator-info .pace .pace-activity::after,.pace-corner-indicator-info .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-info .pace .pace-activity::before{border-right-color:rgba(23,162,184,.2);border-left-color:rgba(23,162,184,.2)}.pace-corner-indicator-info .pace .pace-activity::after{border-top-color:rgba(23,162,184,.2);border-bottom-color:rgba(23,162,184,.2)}.pace-fill-left-info .pace .pace-progress{background-color:rgba(23,162,184,.2)}.pace-flash-info .pace .pace-progress{background:#17a2b8}.pace-flash-info .pace .pace-progress-inner{box-shadow:0 0 10px #17a2b8,0 0 5px #17a2b8}.pace-flash-info .pace .pace-activity{border-top-color:#17a2b8;border-left-color:#17a2b8}.pace-loading-bar-info .pace .pace-progress{background:#17a2b8;color:#17a2b8;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-info .pace .pace-activity{box-shadow:inset 0 0 0 2px #17a2b8,inset 0 0 0 7px #fff}.pace-mac-osx-info .pace .pace-progress{background-color:#17a2b8;box-shadow:inset -1px 0 #17a2b8,inset 0 -1px #17a2b8,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-info .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-info .pace-progress{color:#17a2b8}.pace-warning .pace .pace-progress{background:#ffc107}.pace-barber-shop-warning .pace{background:#1f2d3d}.pace-barber-shop-warning .pace .pace-progress{background:#ffc107}.pace-barber-shop-warning .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-warning .pace .pace-progress::after{color:rgba(255,193,7,.2)}.pace-bounce-warning .pace .pace-activity{background:#ffc107}.pace-center-atom-warning .pace-progress{height:100px;width:80px}.pace-center-atom-warning .pace-progress::before{background:#ffc107;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-warning .pace-activity{border-color:#ffc107}.pace-center-atom-warning .pace-activity::after,.pace-center-atom-warning .pace-activity::before{border-color:#ffc107}.pace-center-circle-warning .pace .pace-progress{background:rgba(255,193,7,.8);color:#1f2d3d}.pace-center-radar-warning .pace .pace-activity{border-color:#ffc107 transparent transparent}.pace-center-radar-warning .pace .pace-activity::before{border-color:#ffc107 transparent transparent}.pace-center-simple-warning .pace{background:#1f2d3d;border-color:#ffc107}.pace-center-simple-warning .pace .pace-progress{background:#ffc107}.pace-material-warning .pace{color:#ffc107}.pace-corner-indicator-warning .pace .pace-activity{background:#ffc107}.pace-corner-indicator-warning .pace .pace-activity::after,.pace-corner-indicator-warning .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-warning .pace .pace-activity::before{border-right-color:rgba(255,193,7,.2);border-left-color:rgba(255,193,7,.2)}.pace-corner-indicator-warning .pace .pace-activity::after{border-top-color:rgba(255,193,7,.2);border-bottom-color:rgba(255,193,7,.2)}.pace-fill-left-warning .pace .pace-progress{background-color:rgba(255,193,7,.2)}.pace-flash-warning .pace .pace-progress{background:#ffc107}.pace-flash-warning .pace .pace-progress-inner{box-shadow:0 0 10px #ffc107,0 0 5px #ffc107}.pace-flash-warning .pace .pace-activity{border-top-color:#ffc107;border-left-color:#ffc107}.pace-loading-bar-warning .pace .pace-progress{background:#ffc107;color:#ffc107;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-warning .pace .pace-activity{box-shadow:inset 0 0 0 2px #ffc107,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-warning .pace .pace-progress{background-color:#ffc107;box-shadow:inset -1px 0 #ffc107,inset 0 -1px #ffc107,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-warning .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-warning .pace-progress{color:#ffc107}.pace-danger .pace .pace-progress{background:#dc3545}.pace-barber-shop-danger .pace{background:#fff}.pace-barber-shop-danger .pace .pace-progress{background:#dc3545}.pace-barber-shop-danger .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-danger .pace .pace-progress::after{color:rgba(220,53,69,.2)}.pace-bounce-danger .pace .pace-activity{background:#dc3545}.pace-center-atom-danger .pace-progress{height:100px;width:80px}.pace-center-atom-danger .pace-progress::before{background:#dc3545;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-danger .pace-activity{border-color:#dc3545}.pace-center-atom-danger .pace-activity::after,.pace-center-atom-danger .pace-activity::before{border-color:#dc3545}.pace-center-circle-danger .pace .pace-progress{background:rgba(220,53,69,.8);color:#fff}.pace-center-radar-danger .pace .pace-activity{border-color:#dc3545 transparent transparent}.pace-center-radar-danger .pace .pace-activity::before{border-color:#dc3545 transparent transparent}.pace-center-simple-danger .pace{background:#fff;border-color:#dc3545}.pace-center-simple-danger .pace .pace-progress{background:#dc3545}.pace-material-danger .pace{color:#dc3545}.pace-corner-indicator-danger .pace .pace-activity{background:#dc3545}.pace-corner-indicator-danger .pace .pace-activity::after,.pace-corner-indicator-danger .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-danger .pace .pace-activity::before{border-right-color:rgba(220,53,69,.2);border-left-color:rgba(220,53,69,.2)}.pace-corner-indicator-danger .pace .pace-activity::after{border-top-color:rgba(220,53,69,.2);border-bottom-color:rgba(220,53,69,.2)}.pace-fill-left-danger .pace .pace-progress{background-color:rgba(220,53,69,.2)}.pace-flash-danger .pace .pace-progress{background:#dc3545}.pace-flash-danger .pace .pace-progress-inner{box-shadow:0 0 10px #dc3545,0 0 5px #dc3545}.pace-flash-danger .pace .pace-activity{border-top-color:#dc3545;border-left-color:#dc3545}.pace-loading-bar-danger .pace .pace-progress{background:#dc3545;color:#dc3545;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-danger .pace .pace-activity{box-shadow:inset 0 0 0 2px #dc3545,inset 0 0 0 7px #fff}.pace-mac-osx-danger .pace .pace-progress{background-color:#dc3545;box-shadow:inset -1px 0 #dc3545,inset 0 -1px #dc3545,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-danger .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-danger .pace-progress{color:#dc3545}.pace-light .pace .pace-progress{background:#f8f9fa}.pace-barber-shop-light .pace{background:#1f2d3d}.pace-barber-shop-light .pace .pace-progress{background:#f8f9fa}.pace-barber-shop-light .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-light .pace .pace-progress::after{color:rgba(248,249,250,.2)}.pace-bounce-light .pace .pace-activity{background:#f8f9fa}.pace-center-atom-light .pace-progress{height:100px;width:80px}.pace-center-atom-light .pace-progress::before{background:#f8f9fa;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-light .pace-activity{border-color:#f8f9fa}.pace-center-atom-light .pace-activity::after,.pace-center-atom-light .pace-activity::before{border-color:#f8f9fa}.pace-center-circle-light .pace .pace-progress{background:rgba(248,249,250,.8);color:#1f2d3d}.pace-center-radar-light .pace .pace-activity{border-color:#f8f9fa transparent transparent}.pace-center-radar-light .pace .pace-activity::before{border-color:#f8f9fa transparent transparent}.pace-center-simple-light .pace{background:#1f2d3d;border-color:#f8f9fa}.pace-center-simple-light .pace .pace-progress{background:#f8f9fa}.pace-material-light .pace{color:#f8f9fa}.pace-corner-indicator-light .pace .pace-activity{background:#f8f9fa}.pace-corner-indicator-light .pace .pace-activity::after,.pace-corner-indicator-light .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-light .pace .pace-activity::before{border-right-color:rgba(248,249,250,.2);border-left-color:rgba(248,249,250,.2)}.pace-corner-indicator-light .pace .pace-activity::after{border-top-color:rgba(248,249,250,.2);border-bottom-color:rgba(248,249,250,.2)}.pace-fill-left-light .pace .pace-progress{background-color:rgba(248,249,250,.2)}.pace-flash-light .pace .pace-progress{background:#f8f9fa}.pace-flash-light .pace .pace-progress-inner{box-shadow:0 0 10px #f8f9fa,0 0 5px #f8f9fa}.pace-flash-light .pace .pace-activity{border-top-color:#f8f9fa;border-left-color:#f8f9fa}.pace-loading-bar-light .pace .pace-progress{background:#f8f9fa;color:#f8f9fa;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-light .pace .pace-activity{box-shadow:inset 0 0 0 2px #f8f9fa,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-light .pace .pace-progress{background-color:#f8f9fa;box-shadow:inset -1px 0 #f8f9fa,inset 0 -1px #f8f9fa,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-light .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-light .pace-progress{color:#f8f9fa}.pace-dark .pace .pace-progress{background:#343a40}.pace-barber-shop-dark .pace{background:#fff}.pace-barber-shop-dark .pace .pace-progress{background:#343a40}.pace-barber-shop-dark .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-dark .pace .pace-progress::after{color:rgba(52,58,64,.2)}.pace-bounce-dark .pace .pace-activity{background:#343a40}.pace-center-atom-dark .pace-progress{height:100px;width:80px}.pace-center-atom-dark .pace-progress::before{background:#343a40;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-dark .pace-activity{border-color:#343a40}.pace-center-atom-dark .pace-activity::after,.pace-center-atom-dark .pace-activity::before{border-color:#343a40}.pace-center-circle-dark .pace .pace-progress{background:rgba(52,58,64,.8);color:#fff}.pace-center-radar-dark .pace .pace-activity{border-color:#343a40 transparent transparent}.pace-center-radar-dark .pace .pace-activity::before{border-color:#343a40 transparent transparent}.pace-center-simple-dark .pace{background:#fff;border-color:#343a40}.pace-center-simple-dark .pace .pace-progress{background:#343a40}.pace-material-dark .pace{color:#343a40}.pace-corner-indicator-dark .pace .pace-activity{background:#343a40}.pace-corner-indicator-dark .pace .pace-activity::after,.pace-corner-indicator-dark .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-dark .pace .pace-activity::before{border-right-color:rgba(52,58,64,.2);border-left-color:rgba(52,58,64,.2)}.pace-corner-indicator-dark .pace .pace-activity::after{border-top-color:rgba(52,58,64,.2);border-bottom-color:rgba(52,58,64,.2)}.pace-fill-left-dark .pace .pace-progress{background-color:rgba(52,58,64,.2)}.pace-flash-dark .pace .pace-progress{background:#343a40}.pace-flash-dark .pace .pace-progress-inner{box-shadow:0 0 10px #343a40,0 0 5px #343a40}.pace-flash-dark .pace .pace-activity{border-top-color:#343a40;border-left-color:#343a40}.pace-loading-bar-dark .pace .pace-progress{background:#343a40;color:#343a40;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-dark .pace .pace-activity{box-shadow:inset 0 0 0 2px #343a40,inset 0 0 0 7px #fff}.pace-mac-osx-dark .pace .pace-progress{background-color:#343a40;box-shadow:inset -1px 0 #343a40,inset 0 -1px #343a40,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-dark .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-dark .pace-progress{color:#343a40}.pace-lightblue .pace .pace-progress{background:#3c8dbc}.pace-barber-shop-lightblue .pace{background:#fff}.pace-barber-shop-lightblue .pace .pace-progress{background:#3c8dbc}.pace-barber-shop-lightblue .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-lightblue .pace .pace-progress::after{color:rgba(60,141,188,.2)}.pace-bounce-lightblue .pace .pace-activity{background:#3c8dbc}.pace-center-atom-lightblue .pace-progress{height:100px;width:80px}.pace-center-atom-lightblue .pace-progress::before{background:#3c8dbc;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-lightblue .pace-activity{border-color:#3c8dbc}.pace-center-atom-lightblue .pace-activity::after,.pace-center-atom-lightblue .pace-activity::before{border-color:#3c8dbc}.pace-center-circle-lightblue .pace .pace-progress{background:rgba(60,141,188,.8);color:#fff}.pace-center-radar-lightblue .pace .pace-activity{border-color:#3c8dbc transparent transparent}.pace-center-radar-lightblue .pace .pace-activity::before{border-color:#3c8dbc transparent transparent}.pace-center-simple-lightblue .pace{background:#fff;border-color:#3c8dbc}.pace-center-simple-lightblue .pace .pace-progress{background:#3c8dbc}.pace-material-lightblue .pace{color:#3c8dbc}.pace-corner-indicator-lightblue .pace .pace-activity{background:#3c8dbc}.pace-corner-indicator-lightblue .pace .pace-activity::after,.pace-corner-indicator-lightblue .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-lightblue .pace .pace-activity::before{border-right-color:rgba(60,141,188,.2);border-left-color:rgba(60,141,188,.2)}.pace-corner-indicator-lightblue .pace .pace-activity::after{border-top-color:rgba(60,141,188,.2);border-bottom-color:rgba(60,141,188,.2)}.pace-fill-left-lightblue .pace .pace-progress{background-color:rgba(60,141,188,.2)}.pace-flash-lightblue .pace .pace-progress{background:#3c8dbc}.pace-flash-lightblue .pace .pace-progress-inner{box-shadow:0 0 10px #3c8dbc,0 0 5px #3c8dbc}.pace-flash-lightblue .pace .pace-activity{border-top-color:#3c8dbc;border-left-color:#3c8dbc}.pace-loading-bar-lightblue .pace .pace-progress{background:#3c8dbc;color:#3c8dbc;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-lightblue .pace .pace-activity{box-shadow:inset 0 0 0 2px #3c8dbc,inset 0 0 0 7px #fff}.pace-mac-osx-lightblue .pace .pace-progress{background-color:#3c8dbc;box-shadow:inset -1px 0 #3c8dbc,inset 0 -1px #3c8dbc,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-lightblue .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-lightblue .pace-progress{color:#3c8dbc}.pace-navy .pace .pace-progress{background:#001f3f}.pace-barber-shop-navy .pace{background:#fff}.pace-barber-shop-navy .pace .pace-progress{background:#001f3f}.pace-barber-shop-navy .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-navy .pace .pace-progress::after{color:rgba(0,31,63,.2)}.pace-bounce-navy .pace .pace-activity{background:#001f3f}.pace-center-atom-navy .pace-progress{height:100px;width:80px}.pace-center-atom-navy .pace-progress::before{background:#001f3f;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-navy .pace-activity{border-color:#001f3f}.pace-center-atom-navy .pace-activity::after,.pace-center-atom-navy .pace-activity::before{border-color:#001f3f}.pace-center-circle-navy .pace .pace-progress{background:rgba(0,31,63,.8);color:#fff}.pace-center-radar-navy .pace .pace-activity{border-color:#001f3f transparent transparent}.pace-center-radar-navy .pace .pace-activity::before{border-color:#001f3f transparent transparent}.pace-center-simple-navy .pace{background:#fff;border-color:#001f3f}.pace-center-simple-navy .pace .pace-progress{background:#001f3f}.pace-material-navy .pace{color:#001f3f}.pace-corner-indicator-navy .pace .pace-activity{background:#001f3f}.pace-corner-indicator-navy .pace .pace-activity::after,.pace-corner-indicator-navy .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-navy .pace .pace-activity::before{border-right-color:rgba(0,31,63,.2);border-left-color:rgba(0,31,63,.2)}.pace-corner-indicator-navy .pace .pace-activity::after{border-top-color:rgba(0,31,63,.2);border-bottom-color:rgba(0,31,63,.2)}.pace-fill-left-navy .pace .pace-progress{background-color:rgba(0,31,63,.2)}.pace-flash-navy .pace .pace-progress{background:#001f3f}.pace-flash-navy .pace .pace-progress-inner{box-shadow:0 0 10px #001f3f,0 0 5px #001f3f}.pace-flash-navy .pace .pace-activity{border-top-color:#001f3f;border-left-color:#001f3f}.pace-loading-bar-navy .pace .pace-progress{background:#001f3f;color:#001f3f;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-navy .pace .pace-activity{box-shadow:inset 0 0 0 2px #001f3f,inset 0 0 0 7px #fff}.pace-mac-osx-navy .pace .pace-progress{background-color:#001f3f;box-shadow:inset -1px 0 #001f3f,inset 0 -1px #001f3f,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-navy .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-navy .pace-progress{color:#001f3f}.pace-olive .pace .pace-progress{background:#3d9970}.pace-barber-shop-olive .pace{background:#fff}.pace-barber-shop-olive .pace .pace-progress{background:#3d9970}.pace-barber-shop-olive .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-olive .pace .pace-progress::after{color:rgba(61,153,112,.2)}.pace-bounce-olive .pace .pace-activity{background:#3d9970}.pace-center-atom-olive .pace-progress{height:100px;width:80px}.pace-center-atom-olive .pace-progress::before{background:#3d9970;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-olive .pace-activity{border-color:#3d9970}.pace-center-atom-olive .pace-activity::after,.pace-center-atom-olive .pace-activity::before{border-color:#3d9970}.pace-center-circle-olive .pace .pace-progress{background:rgba(61,153,112,.8);color:#fff}.pace-center-radar-olive .pace .pace-activity{border-color:#3d9970 transparent transparent}.pace-center-radar-olive .pace .pace-activity::before{border-color:#3d9970 transparent transparent}.pace-center-simple-olive .pace{background:#fff;border-color:#3d9970}.pace-center-simple-olive .pace .pace-progress{background:#3d9970}.pace-material-olive .pace{color:#3d9970}.pace-corner-indicator-olive .pace .pace-activity{background:#3d9970}.pace-corner-indicator-olive .pace .pace-activity::after,.pace-corner-indicator-olive .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-olive .pace .pace-activity::before{border-right-color:rgba(61,153,112,.2);border-left-color:rgba(61,153,112,.2)}.pace-corner-indicator-olive .pace .pace-activity::after{border-top-color:rgba(61,153,112,.2);border-bottom-color:rgba(61,153,112,.2)}.pace-fill-left-olive .pace .pace-progress{background-color:rgba(61,153,112,.2)}.pace-flash-olive .pace .pace-progress{background:#3d9970}.pace-flash-olive .pace .pace-progress-inner{box-shadow:0 0 10px #3d9970,0 0 5px #3d9970}.pace-flash-olive .pace .pace-activity{border-top-color:#3d9970;border-left-color:#3d9970}.pace-loading-bar-olive .pace .pace-progress{background:#3d9970;color:#3d9970;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-olive .pace .pace-activity{box-shadow:inset 0 0 0 2px #3d9970,inset 0 0 0 7px #fff}.pace-mac-osx-olive .pace .pace-progress{background-color:#3d9970;box-shadow:inset -1px 0 #3d9970,inset 0 -1px #3d9970,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-olive .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-olive .pace-progress{color:#3d9970}.pace-lime .pace .pace-progress{background:#01ff70}.pace-barber-shop-lime .pace{background:#1f2d3d}.pace-barber-shop-lime .pace .pace-progress{background:#01ff70}.pace-barber-shop-lime .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-lime .pace .pace-progress::after{color:rgba(1,255,112,.2)}.pace-bounce-lime .pace .pace-activity{background:#01ff70}.pace-center-atom-lime .pace-progress{height:100px;width:80px}.pace-center-atom-lime .pace-progress::before{background:#01ff70;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-lime .pace-activity{border-color:#01ff70}.pace-center-atom-lime .pace-activity::after,.pace-center-atom-lime .pace-activity::before{border-color:#01ff70}.pace-center-circle-lime .pace .pace-progress{background:rgba(1,255,112,.8);color:#1f2d3d}.pace-center-radar-lime .pace .pace-activity{border-color:#01ff70 transparent transparent}.pace-center-radar-lime .pace .pace-activity::before{border-color:#01ff70 transparent transparent}.pace-center-simple-lime .pace{background:#1f2d3d;border-color:#01ff70}.pace-center-simple-lime .pace .pace-progress{background:#01ff70}.pace-material-lime .pace{color:#01ff70}.pace-corner-indicator-lime .pace .pace-activity{background:#01ff70}.pace-corner-indicator-lime .pace .pace-activity::after,.pace-corner-indicator-lime .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-lime .pace .pace-activity::before{border-right-color:rgba(1,255,112,.2);border-left-color:rgba(1,255,112,.2)}.pace-corner-indicator-lime .pace .pace-activity::after{border-top-color:rgba(1,255,112,.2);border-bottom-color:rgba(1,255,112,.2)}.pace-fill-left-lime .pace .pace-progress{background-color:rgba(1,255,112,.2)}.pace-flash-lime .pace .pace-progress{background:#01ff70}.pace-flash-lime .pace .pace-progress-inner{box-shadow:0 0 10px #01ff70,0 0 5px #01ff70}.pace-flash-lime .pace .pace-activity{border-top-color:#01ff70;border-left-color:#01ff70}.pace-loading-bar-lime .pace .pace-progress{background:#01ff70;color:#01ff70;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-lime .pace .pace-activity{box-shadow:inset 0 0 0 2px #01ff70,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-lime .pace .pace-progress{background-color:#01ff70;box-shadow:inset -1px 0 #01ff70,inset 0 -1px #01ff70,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-lime .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-lime .pace-progress{color:#01ff70}.pace-fuchsia .pace .pace-progress{background:#f012be}.pace-barber-shop-fuchsia .pace{background:#fff}.pace-barber-shop-fuchsia .pace .pace-progress{background:#f012be}.pace-barber-shop-fuchsia .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-fuchsia .pace .pace-progress::after{color:rgba(240,18,190,.2)}.pace-bounce-fuchsia .pace .pace-activity{background:#f012be}.pace-center-atom-fuchsia .pace-progress{height:100px;width:80px}.pace-center-atom-fuchsia .pace-progress::before{background:#f012be;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-fuchsia .pace-activity{border-color:#f012be}.pace-center-atom-fuchsia .pace-activity::after,.pace-center-atom-fuchsia .pace-activity::before{border-color:#f012be}.pace-center-circle-fuchsia .pace .pace-progress{background:rgba(240,18,190,.8);color:#fff}.pace-center-radar-fuchsia .pace .pace-activity{border-color:#f012be transparent transparent}.pace-center-radar-fuchsia .pace .pace-activity::before{border-color:#f012be transparent transparent}.pace-center-simple-fuchsia .pace{background:#fff;border-color:#f012be}.pace-center-simple-fuchsia .pace .pace-progress{background:#f012be}.pace-material-fuchsia .pace{color:#f012be}.pace-corner-indicator-fuchsia .pace .pace-activity{background:#f012be}.pace-corner-indicator-fuchsia .pace .pace-activity::after,.pace-corner-indicator-fuchsia .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-fuchsia .pace .pace-activity::before{border-right-color:rgba(240,18,190,.2);border-left-color:rgba(240,18,190,.2)}.pace-corner-indicator-fuchsia .pace .pace-activity::after{border-top-color:rgba(240,18,190,.2);border-bottom-color:rgba(240,18,190,.2)}.pace-fill-left-fuchsia .pace .pace-progress{background-color:rgba(240,18,190,.2)}.pace-flash-fuchsia .pace .pace-progress{background:#f012be}.pace-flash-fuchsia .pace .pace-progress-inner{box-shadow:0 0 10px #f012be,0 0 5px #f012be}.pace-flash-fuchsia .pace .pace-activity{border-top-color:#f012be;border-left-color:#f012be}.pace-loading-bar-fuchsia .pace .pace-progress{background:#f012be;color:#f012be;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-fuchsia .pace .pace-activity{box-shadow:inset 0 0 0 2px #f012be,inset 0 0 0 7px #fff}.pace-mac-osx-fuchsia .pace .pace-progress{background-color:#f012be;box-shadow:inset -1px 0 #f012be,inset 0 -1px #f012be,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-fuchsia .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-fuchsia .pace-progress{color:#f012be}.pace-maroon .pace .pace-progress{background:#d81b60}.pace-barber-shop-maroon .pace{background:#fff}.pace-barber-shop-maroon .pace .pace-progress{background:#d81b60}.pace-barber-shop-maroon .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-maroon .pace .pace-progress::after{color:rgba(216,27,96,.2)}.pace-bounce-maroon .pace .pace-activity{background:#d81b60}.pace-center-atom-maroon .pace-progress{height:100px;width:80px}.pace-center-atom-maroon .pace-progress::before{background:#d81b60;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-maroon .pace-activity{border-color:#d81b60}.pace-center-atom-maroon .pace-activity::after,.pace-center-atom-maroon .pace-activity::before{border-color:#d81b60}.pace-center-circle-maroon .pace .pace-progress{background:rgba(216,27,96,.8);color:#fff}.pace-center-radar-maroon .pace .pace-activity{border-color:#d81b60 transparent transparent}.pace-center-radar-maroon .pace .pace-activity::before{border-color:#d81b60 transparent transparent}.pace-center-simple-maroon .pace{background:#fff;border-color:#d81b60}.pace-center-simple-maroon .pace .pace-progress{background:#d81b60}.pace-material-maroon .pace{color:#d81b60}.pace-corner-indicator-maroon .pace .pace-activity{background:#d81b60}.pace-corner-indicator-maroon .pace .pace-activity::after,.pace-corner-indicator-maroon .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-maroon .pace .pace-activity::before{border-right-color:rgba(216,27,96,.2);border-left-color:rgba(216,27,96,.2)}.pace-corner-indicator-maroon .pace .pace-activity::after{border-top-color:rgba(216,27,96,.2);border-bottom-color:rgba(216,27,96,.2)}.pace-fill-left-maroon .pace .pace-progress{background-color:rgba(216,27,96,.2)}.pace-flash-maroon .pace .pace-progress{background:#d81b60}.pace-flash-maroon .pace .pace-progress-inner{box-shadow:0 0 10px #d81b60,0 0 5px #d81b60}.pace-flash-maroon .pace .pace-activity{border-top-color:#d81b60;border-left-color:#d81b60}.pace-loading-bar-maroon .pace .pace-progress{background:#d81b60;color:#d81b60;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-maroon .pace .pace-activity{box-shadow:inset 0 0 0 2px #d81b60,inset 0 0 0 7px #fff}.pace-mac-osx-maroon .pace .pace-progress{background-color:#d81b60;box-shadow:inset -1px 0 #d81b60,inset 0 -1px #d81b60,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-maroon .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-maroon .pace-progress{color:#d81b60}.pace-blue .pace .pace-progress{background:#007bff}.pace-barber-shop-blue .pace{background:#fff}.pace-barber-shop-blue .pace .pace-progress{background:#007bff}.pace-barber-shop-blue .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-blue .pace .pace-progress::after{color:rgba(0,123,255,.2)}.pace-bounce-blue .pace .pace-activity{background:#007bff}.pace-center-atom-blue .pace-progress{height:100px;width:80px}.pace-center-atom-blue .pace-progress::before{background:#007bff;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-blue .pace-activity{border-color:#007bff}.pace-center-atom-blue .pace-activity::after,.pace-center-atom-blue .pace-activity::before{border-color:#007bff}.pace-center-circle-blue .pace .pace-progress{background:rgba(0,123,255,.8);color:#fff}.pace-center-radar-blue .pace .pace-activity{border-color:#007bff transparent transparent}.pace-center-radar-blue .pace .pace-activity::before{border-color:#007bff transparent transparent}.pace-center-simple-blue .pace{background:#fff;border-color:#007bff}.pace-center-simple-blue .pace .pace-progress{background:#007bff}.pace-material-blue .pace{color:#007bff}.pace-corner-indicator-blue .pace .pace-activity{background:#007bff}.pace-corner-indicator-blue .pace .pace-activity::after,.pace-corner-indicator-blue .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-blue .pace .pace-activity::before{border-right-color:rgba(0,123,255,.2);border-left-color:rgba(0,123,255,.2)}.pace-corner-indicator-blue .pace .pace-activity::after{border-top-color:rgba(0,123,255,.2);border-bottom-color:rgba(0,123,255,.2)}.pace-fill-left-blue .pace .pace-progress{background-color:rgba(0,123,255,.2)}.pace-flash-blue .pace .pace-progress{background:#007bff}.pace-flash-blue .pace .pace-progress-inner{box-shadow:0 0 10px #007bff,0 0 5px #007bff}.pace-flash-blue .pace .pace-activity{border-top-color:#007bff;border-left-color:#007bff}.pace-loading-bar-blue .pace .pace-progress{background:#007bff;color:#007bff;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-blue .pace .pace-activity{box-shadow:inset 0 0 0 2px #007bff,inset 0 0 0 7px #fff}.pace-mac-osx-blue .pace .pace-progress{background-color:#007bff;box-shadow:inset -1px 0 #007bff,inset 0 -1px #007bff,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-blue .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-blue .pace-progress{color:#007bff}.pace-indigo .pace .pace-progress{background:#6610f2}.pace-barber-shop-indigo .pace{background:#fff}.pace-barber-shop-indigo .pace .pace-progress{background:#6610f2}.pace-barber-shop-indigo .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-indigo .pace .pace-progress::after{color:rgba(102,16,242,.2)}.pace-bounce-indigo .pace .pace-activity{background:#6610f2}.pace-center-atom-indigo .pace-progress{height:100px;width:80px}.pace-center-atom-indigo .pace-progress::before{background:#6610f2;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-indigo .pace-activity{border-color:#6610f2}.pace-center-atom-indigo .pace-activity::after,.pace-center-atom-indigo .pace-activity::before{border-color:#6610f2}.pace-center-circle-indigo .pace .pace-progress{background:rgba(102,16,242,.8);color:#fff}.pace-center-radar-indigo .pace .pace-activity{border-color:#6610f2 transparent transparent}.pace-center-radar-indigo .pace .pace-activity::before{border-color:#6610f2 transparent transparent}.pace-center-simple-indigo .pace{background:#fff;border-color:#6610f2}.pace-center-simple-indigo .pace .pace-progress{background:#6610f2}.pace-material-indigo .pace{color:#6610f2}.pace-corner-indicator-indigo .pace .pace-activity{background:#6610f2}.pace-corner-indicator-indigo .pace .pace-activity::after,.pace-corner-indicator-indigo .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-indigo .pace .pace-activity::before{border-right-color:rgba(102,16,242,.2);border-left-color:rgba(102,16,242,.2)}.pace-corner-indicator-indigo .pace .pace-activity::after{border-top-color:rgba(102,16,242,.2);border-bottom-color:rgba(102,16,242,.2)}.pace-fill-left-indigo .pace .pace-progress{background-color:rgba(102,16,242,.2)}.pace-flash-indigo .pace .pace-progress{background:#6610f2}.pace-flash-indigo .pace .pace-progress-inner{box-shadow:0 0 10px #6610f2,0 0 5px #6610f2}.pace-flash-indigo .pace .pace-activity{border-top-color:#6610f2;border-left-color:#6610f2}.pace-loading-bar-indigo .pace .pace-progress{background:#6610f2;color:#6610f2;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-indigo .pace .pace-activity{box-shadow:inset 0 0 0 2px #6610f2,inset 0 0 0 7px #fff}.pace-mac-osx-indigo .pace .pace-progress{background-color:#6610f2;box-shadow:inset -1px 0 #6610f2,inset 0 -1px #6610f2,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-indigo .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-indigo .pace-progress{color:#6610f2}.pace-purple .pace .pace-progress{background:#6f42c1}.pace-barber-shop-purple .pace{background:#fff}.pace-barber-shop-purple .pace .pace-progress{background:#6f42c1}.pace-barber-shop-purple .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-purple .pace .pace-progress::after{color:rgba(111,66,193,.2)}.pace-bounce-purple .pace .pace-activity{background:#6f42c1}.pace-center-atom-purple .pace-progress{height:100px;width:80px}.pace-center-atom-purple .pace-progress::before{background:#6f42c1;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-purple .pace-activity{border-color:#6f42c1}.pace-center-atom-purple .pace-activity::after,.pace-center-atom-purple .pace-activity::before{border-color:#6f42c1}.pace-center-circle-purple .pace .pace-progress{background:rgba(111,66,193,.8);color:#fff}.pace-center-radar-purple .pace .pace-activity{border-color:#6f42c1 transparent transparent}.pace-center-radar-purple .pace .pace-activity::before{border-color:#6f42c1 transparent transparent}.pace-center-simple-purple .pace{background:#fff;border-color:#6f42c1}.pace-center-simple-purple .pace .pace-progress{background:#6f42c1}.pace-material-purple .pace{color:#6f42c1}.pace-corner-indicator-purple .pace .pace-activity{background:#6f42c1}.pace-corner-indicator-purple .pace .pace-activity::after,.pace-corner-indicator-purple .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-purple .pace .pace-activity::before{border-right-color:rgba(111,66,193,.2);border-left-color:rgba(111,66,193,.2)}.pace-corner-indicator-purple .pace .pace-activity::after{border-top-color:rgba(111,66,193,.2);border-bottom-color:rgba(111,66,193,.2)}.pace-fill-left-purple .pace .pace-progress{background-color:rgba(111,66,193,.2)}.pace-flash-purple .pace .pace-progress{background:#6f42c1}.pace-flash-purple .pace .pace-progress-inner{box-shadow:0 0 10px #6f42c1,0 0 5px #6f42c1}.pace-flash-purple .pace .pace-activity{border-top-color:#6f42c1;border-left-color:#6f42c1}.pace-loading-bar-purple .pace .pace-progress{background:#6f42c1;color:#6f42c1;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-purple .pace .pace-activity{box-shadow:inset 0 0 0 2px #6f42c1,inset 0 0 0 7px #fff}.pace-mac-osx-purple .pace .pace-progress{background-color:#6f42c1;box-shadow:inset -1px 0 #6f42c1,inset 0 -1px #6f42c1,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-purple .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-purple .pace-progress{color:#6f42c1}.pace-pink .pace .pace-progress{background:#e83e8c}.pace-barber-shop-pink .pace{background:#fff}.pace-barber-shop-pink .pace .pace-progress{background:#e83e8c}.pace-barber-shop-pink .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-pink .pace .pace-progress::after{color:rgba(232,62,140,.2)}.pace-bounce-pink .pace .pace-activity{background:#e83e8c}.pace-center-atom-pink .pace-progress{height:100px;width:80px}.pace-center-atom-pink .pace-progress::before{background:#e83e8c;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-pink .pace-activity{border-color:#e83e8c}.pace-center-atom-pink .pace-activity::after,.pace-center-atom-pink .pace-activity::before{border-color:#e83e8c}.pace-center-circle-pink .pace .pace-progress{background:rgba(232,62,140,.8);color:#fff}.pace-center-radar-pink .pace .pace-activity{border-color:#e83e8c transparent transparent}.pace-center-radar-pink .pace .pace-activity::before{border-color:#e83e8c transparent transparent}.pace-center-simple-pink .pace{background:#fff;border-color:#e83e8c}.pace-center-simple-pink .pace .pace-progress{background:#e83e8c}.pace-material-pink .pace{color:#e83e8c}.pace-corner-indicator-pink .pace .pace-activity{background:#e83e8c}.pace-corner-indicator-pink .pace .pace-activity::after,.pace-corner-indicator-pink .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-pink .pace .pace-activity::before{border-right-color:rgba(232,62,140,.2);border-left-color:rgba(232,62,140,.2)}.pace-corner-indicator-pink .pace .pace-activity::after{border-top-color:rgba(232,62,140,.2);border-bottom-color:rgba(232,62,140,.2)}.pace-fill-left-pink .pace .pace-progress{background-color:rgba(232,62,140,.2)}.pace-flash-pink .pace .pace-progress{background:#e83e8c}.pace-flash-pink .pace .pace-progress-inner{box-shadow:0 0 10px #e83e8c,0 0 5px #e83e8c}.pace-flash-pink .pace .pace-activity{border-top-color:#e83e8c;border-left-color:#e83e8c}.pace-loading-bar-pink .pace .pace-progress{background:#e83e8c;color:#e83e8c;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-pink .pace .pace-activity{box-shadow:inset 0 0 0 2px #e83e8c,inset 0 0 0 7px #fff}.pace-mac-osx-pink .pace .pace-progress{background-color:#e83e8c;box-shadow:inset -1px 0 #e83e8c,inset 0 -1px #e83e8c,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-pink .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-pink .pace-progress{color:#e83e8c}.pace-red .pace .pace-progress{background:#dc3545}.pace-barber-shop-red .pace{background:#fff}.pace-barber-shop-red .pace .pace-progress{background:#dc3545}.pace-barber-shop-red .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-red .pace .pace-progress::after{color:rgba(220,53,69,.2)}.pace-bounce-red .pace .pace-activity{background:#dc3545}.pace-center-atom-red .pace-progress{height:100px;width:80px}.pace-center-atom-red .pace-progress::before{background:#dc3545;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-red .pace-activity{border-color:#dc3545}.pace-center-atom-red .pace-activity::after,.pace-center-atom-red .pace-activity::before{border-color:#dc3545}.pace-center-circle-red .pace .pace-progress{background:rgba(220,53,69,.8);color:#fff}.pace-center-radar-red .pace .pace-activity{border-color:#dc3545 transparent transparent}.pace-center-radar-red .pace .pace-activity::before{border-color:#dc3545 transparent transparent}.pace-center-simple-red .pace{background:#fff;border-color:#dc3545}.pace-center-simple-red .pace .pace-progress{background:#dc3545}.pace-material-red .pace{color:#dc3545}.pace-corner-indicator-red .pace .pace-activity{background:#dc3545}.pace-corner-indicator-red .pace .pace-activity::after,.pace-corner-indicator-red .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-red .pace .pace-activity::before{border-right-color:rgba(220,53,69,.2);border-left-color:rgba(220,53,69,.2)}.pace-corner-indicator-red .pace .pace-activity::after{border-top-color:rgba(220,53,69,.2);border-bottom-color:rgba(220,53,69,.2)}.pace-fill-left-red .pace .pace-progress{background-color:rgba(220,53,69,.2)}.pace-flash-red .pace .pace-progress{background:#dc3545}.pace-flash-red .pace .pace-progress-inner{box-shadow:0 0 10px #dc3545,0 0 5px #dc3545}.pace-flash-red .pace .pace-activity{border-top-color:#dc3545;border-left-color:#dc3545}.pace-loading-bar-red .pace .pace-progress{background:#dc3545;color:#dc3545;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-red .pace .pace-activity{box-shadow:inset 0 0 0 2px #dc3545,inset 0 0 0 7px #fff}.pace-mac-osx-red .pace .pace-progress{background-color:#dc3545;box-shadow:inset -1px 0 #dc3545,inset 0 -1px #dc3545,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-red .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-red .pace-progress{color:#dc3545}.pace-orange .pace .pace-progress{background:#fd7e14}.pace-barber-shop-orange .pace{background:#1f2d3d}.pace-barber-shop-orange .pace .pace-progress{background:#fd7e14}.pace-barber-shop-orange .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-orange .pace .pace-progress::after{color:rgba(253,126,20,.2)}.pace-bounce-orange .pace .pace-activity{background:#fd7e14}.pace-center-atom-orange .pace-progress{height:100px;width:80px}.pace-center-atom-orange .pace-progress::before{background:#fd7e14;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-orange .pace-activity{border-color:#fd7e14}.pace-center-atom-orange .pace-activity::after,.pace-center-atom-orange .pace-activity::before{border-color:#fd7e14}.pace-center-circle-orange .pace .pace-progress{background:rgba(253,126,20,.8);color:#1f2d3d}.pace-center-radar-orange .pace .pace-activity{border-color:#fd7e14 transparent transparent}.pace-center-radar-orange .pace .pace-activity::before{border-color:#fd7e14 transparent transparent}.pace-center-simple-orange .pace{background:#1f2d3d;border-color:#fd7e14}.pace-center-simple-orange .pace .pace-progress{background:#fd7e14}.pace-material-orange .pace{color:#fd7e14}.pace-corner-indicator-orange .pace .pace-activity{background:#fd7e14}.pace-corner-indicator-orange .pace .pace-activity::after,.pace-corner-indicator-orange .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-orange .pace .pace-activity::before{border-right-color:rgba(253,126,20,.2);border-left-color:rgba(253,126,20,.2)}.pace-corner-indicator-orange .pace .pace-activity::after{border-top-color:rgba(253,126,20,.2);border-bottom-color:rgba(253,126,20,.2)}.pace-fill-left-orange .pace .pace-progress{background-color:rgba(253,126,20,.2)}.pace-flash-orange .pace .pace-progress{background:#fd7e14}.pace-flash-orange .pace .pace-progress-inner{box-shadow:0 0 10px #fd7e14,0 0 5px #fd7e14}.pace-flash-orange .pace .pace-activity{border-top-color:#fd7e14;border-left-color:#fd7e14}.pace-loading-bar-orange .pace .pace-progress{background:#fd7e14;color:#fd7e14;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-orange .pace .pace-activity{box-shadow:inset 0 0 0 2px #fd7e14,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-orange .pace .pace-progress{background-color:#fd7e14;box-shadow:inset -1px 0 #fd7e14,inset 0 -1px #fd7e14,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-orange .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-orange .pace-progress{color:#fd7e14}.pace-yellow .pace .pace-progress{background:#ffc107}.pace-barber-shop-yellow .pace{background:#1f2d3d}.pace-barber-shop-yellow .pace .pace-progress{background:#ffc107}.pace-barber-shop-yellow .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-yellow .pace .pace-progress::after{color:rgba(255,193,7,.2)}.pace-bounce-yellow .pace .pace-activity{background:#ffc107}.pace-center-atom-yellow .pace-progress{height:100px;width:80px}.pace-center-atom-yellow .pace-progress::before{background:#ffc107;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-yellow .pace-activity{border-color:#ffc107}.pace-center-atom-yellow .pace-activity::after,.pace-center-atom-yellow .pace-activity::before{border-color:#ffc107}.pace-center-circle-yellow .pace .pace-progress{background:rgba(255,193,7,.8);color:#1f2d3d}.pace-center-radar-yellow .pace .pace-activity{border-color:#ffc107 transparent transparent}.pace-center-radar-yellow .pace .pace-activity::before{border-color:#ffc107 transparent transparent}.pace-center-simple-yellow .pace{background:#1f2d3d;border-color:#ffc107}.pace-center-simple-yellow .pace .pace-progress{background:#ffc107}.pace-material-yellow .pace{color:#ffc107}.pace-corner-indicator-yellow .pace .pace-activity{background:#ffc107}.pace-corner-indicator-yellow .pace .pace-activity::after,.pace-corner-indicator-yellow .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-yellow .pace .pace-activity::before{border-right-color:rgba(255,193,7,.2);border-left-color:rgba(255,193,7,.2)}.pace-corner-indicator-yellow .pace .pace-activity::after{border-top-color:rgba(255,193,7,.2);border-bottom-color:rgba(255,193,7,.2)}.pace-fill-left-yellow .pace .pace-progress{background-color:rgba(255,193,7,.2)}.pace-flash-yellow .pace .pace-progress{background:#ffc107}.pace-flash-yellow .pace .pace-progress-inner{box-shadow:0 0 10px #ffc107,0 0 5px #ffc107}.pace-flash-yellow .pace .pace-activity{border-top-color:#ffc107;border-left-color:#ffc107}.pace-loading-bar-yellow .pace .pace-progress{background:#ffc107;color:#ffc107;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-yellow .pace .pace-activity{box-shadow:inset 0 0 0 2px #ffc107,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-yellow .pace .pace-progress{background-color:#ffc107;box-shadow:inset -1px 0 #ffc107,inset 0 -1px #ffc107,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-yellow .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-yellow .pace-progress{color:#ffc107}.pace-green .pace .pace-progress{background:#28a745}.pace-barber-shop-green .pace{background:#fff}.pace-barber-shop-green .pace .pace-progress{background:#28a745}.pace-barber-shop-green .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-green .pace .pace-progress::after{color:rgba(40,167,69,.2)}.pace-bounce-green .pace .pace-activity{background:#28a745}.pace-center-atom-green .pace-progress{height:100px;width:80px}.pace-center-atom-green .pace-progress::before{background:#28a745;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-green .pace-activity{border-color:#28a745}.pace-center-atom-green .pace-activity::after,.pace-center-atom-green .pace-activity::before{border-color:#28a745}.pace-center-circle-green .pace .pace-progress{background:rgba(40,167,69,.8);color:#fff}.pace-center-radar-green .pace .pace-activity{border-color:#28a745 transparent transparent}.pace-center-radar-green .pace .pace-activity::before{border-color:#28a745 transparent transparent}.pace-center-simple-green .pace{background:#fff;border-color:#28a745}.pace-center-simple-green .pace .pace-progress{background:#28a745}.pace-material-green .pace{color:#28a745}.pace-corner-indicator-green .pace .pace-activity{background:#28a745}.pace-corner-indicator-green .pace .pace-activity::after,.pace-corner-indicator-green .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-green .pace .pace-activity::before{border-right-color:rgba(40,167,69,.2);border-left-color:rgba(40,167,69,.2)}.pace-corner-indicator-green .pace .pace-activity::after{border-top-color:rgba(40,167,69,.2);border-bottom-color:rgba(40,167,69,.2)}.pace-fill-left-green .pace .pace-progress{background-color:rgba(40,167,69,.2)}.pace-flash-green .pace .pace-progress{background:#28a745}.pace-flash-green .pace .pace-progress-inner{box-shadow:0 0 10px #28a745,0 0 5px #28a745}.pace-flash-green .pace .pace-activity{border-top-color:#28a745;border-left-color:#28a745}.pace-loading-bar-green .pace .pace-progress{background:#28a745;color:#28a745;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-green .pace .pace-activity{box-shadow:inset 0 0 0 2px #28a745,inset 0 0 0 7px #fff}.pace-mac-osx-green .pace .pace-progress{background-color:#28a745;box-shadow:inset -1px 0 #28a745,inset 0 -1px #28a745,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-green .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-green .pace-progress{color:#28a745}.pace-teal .pace .pace-progress{background:#20c997}.pace-barber-shop-teal .pace{background:#fff}.pace-barber-shop-teal .pace .pace-progress{background:#20c997}.pace-barber-shop-teal .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-teal .pace .pace-progress::after{color:rgba(32,201,151,.2)}.pace-bounce-teal .pace .pace-activity{background:#20c997}.pace-center-atom-teal .pace-progress{height:100px;width:80px}.pace-center-atom-teal .pace-progress::before{background:#20c997;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-teal .pace-activity{border-color:#20c997}.pace-center-atom-teal .pace-activity::after,.pace-center-atom-teal .pace-activity::before{border-color:#20c997}.pace-center-circle-teal .pace .pace-progress{background:rgba(32,201,151,.8);color:#fff}.pace-center-radar-teal .pace .pace-activity{border-color:#20c997 transparent transparent}.pace-center-radar-teal .pace .pace-activity::before{border-color:#20c997 transparent transparent}.pace-center-simple-teal .pace{background:#fff;border-color:#20c997}.pace-center-simple-teal .pace .pace-progress{background:#20c997}.pace-material-teal .pace{color:#20c997}.pace-corner-indicator-teal .pace .pace-activity{background:#20c997}.pace-corner-indicator-teal .pace .pace-activity::after,.pace-corner-indicator-teal .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-teal .pace .pace-activity::before{border-right-color:rgba(32,201,151,.2);border-left-color:rgba(32,201,151,.2)}.pace-corner-indicator-teal .pace .pace-activity::after{border-top-color:rgba(32,201,151,.2);border-bottom-color:rgba(32,201,151,.2)}.pace-fill-left-teal .pace .pace-progress{background-color:rgba(32,201,151,.2)}.pace-flash-teal .pace .pace-progress{background:#20c997}.pace-flash-teal .pace .pace-progress-inner{box-shadow:0 0 10px #20c997,0 0 5px #20c997}.pace-flash-teal .pace .pace-activity{border-top-color:#20c997;border-left-color:#20c997}.pace-loading-bar-teal .pace .pace-progress{background:#20c997;color:#20c997;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-teal .pace .pace-activity{box-shadow:inset 0 0 0 2px #20c997,inset 0 0 0 7px #fff}.pace-mac-osx-teal .pace .pace-progress{background-color:#20c997;box-shadow:inset -1px 0 #20c997,inset 0 -1px #20c997,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-teal .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-teal .pace-progress{color:#20c997}.pace-cyan .pace .pace-progress{background:#17a2b8}.pace-barber-shop-cyan .pace{background:#fff}.pace-barber-shop-cyan .pace .pace-progress{background:#17a2b8}.pace-barber-shop-cyan .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-cyan .pace .pace-progress::after{color:rgba(23,162,184,.2)}.pace-bounce-cyan .pace .pace-activity{background:#17a2b8}.pace-center-atom-cyan .pace-progress{height:100px;width:80px}.pace-center-atom-cyan .pace-progress::before{background:#17a2b8;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-cyan .pace-activity{border-color:#17a2b8}.pace-center-atom-cyan .pace-activity::after,.pace-center-atom-cyan .pace-activity::before{border-color:#17a2b8}.pace-center-circle-cyan .pace .pace-progress{background:rgba(23,162,184,.8);color:#fff}.pace-center-radar-cyan .pace .pace-activity{border-color:#17a2b8 transparent transparent}.pace-center-radar-cyan .pace .pace-activity::before{border-color:#17a2b8 transparent transparent}.pace-center-simple-cyan .pace{background:#fff;border-color:#17a2b8}.pace-center-simple-cyan .pace .pace-progress{background:#17a2b8}.pace-material-cyan .pace{color:#17a2b8}.pace-corner-indicator-cyan .pace .pace-activity{background:#17a2b8}.pace-corner-indicator-cyan .pace .pace-activity::after,.pace-corner-indicator-cyan .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-cyan .pace .pace-activity::before{border-right-color:rgba(23,162,184,.2);border-left-color:rgba(23,162,184,.2)}.pace-corner-indicator-cyan .pace .pace-activity::after{border-top-color:rgba(23,162,184,.2);border-bottom-color:rgba(23,162,184,.2)}.pace-fill-left-cyan .pace .pace-progress{background-color:rgba(23,162,184,.2)}.pace-flash-cyan .pace .pace-progress{background:#17a2b8}.pace-flash-cyan .pace .pace-progress-inner{box-shadow:0 0 10px #17a2b8,0 0 5px #17a2b8}.pace-flash-cyan .pace .pace-activity{border-top-color:#17a2b8;border-left-color:#17a2b8}.pace-loading-bar-cyan .pace .pace-progress{background:#17a2b8;color:#17a2b8;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-cyan .pace .pace-activity{box-shadow:inset 0 0 0 2px #17a2b8,inset 0 0 0 7px #fff}.pace-mac-osx-cyan .pace .pace-progress{background-color:#17a2b8;box-shadow:inset -1px 0 #17a2b8,inset 0 -1px #17a2b8,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-cyan .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-cyan .pace-progress{color:#17a2b8}.pace-white .pace .pace-progress{background:#fff}.pace-barber-shop-white .pace{background:#1f2d3d}.pace-barber-shop-white .pace .pace-progress{background:#fff}.pace-barber-shop-white .pace .pace-activity{background-image:linear-gradient(45deg,rgba(31,45,61,.2) 25%,transparent 25%,transparent 50%,rgba(31,45,61,.2) 50%,rgba(31,45,61,.2) 75%,transparent 75%,transparent)}.pace-big-counter-white .pace .pace-progress::after{color:rgba(255,255,255,.2)}.pace-bounce-white .pace .pace-activity{background:#fff}.pace-center-atom-white .pace-progress{height:100px;width:80px}.pace-center-atom-white .pace-progress::before{background:#fff;color:#1f2d3d;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-white .pace-activity{border-color:#fff}.pace-center-atom-white .pace-activity::after,.pace-center-atom-white .pace-activity::before{border-color:#fff}.pace-center-circle-white .pace .pace-progress{background:rgba(255,255,255,.8);color:#1f2d3d}.pace-center-radar-white .pace .pace-activity{border-color:#fff transparent transparent}.pace-center-radar-white .pace .pace-activity::before{border-color:#fff transparent transparent}.pace-center-simple-white .pace{background:#1f2d3d;border-color:#fff}.pace-center-simple-white .pace .pace-progress{background:#fff}.pace-material-white .pace{color:#fff}.pace-corner-indicator-white .pace .pace-activity{background:#fff}.pace-corner-indicator-white .pace .pace-activity::after,.pace-corner-indicator-white .pace .pace-activity::before{border:5px solid #1f2d3d}.pace-corner-indicator-white .pace .pace-activity::before{border-right-color:rgba(255,255,255,.2);border-left-color:rgba(255,255,255,.2)}.pace-corner-indicator-white .pace .pace-activity::after{border-top-color:rgba(255,255,255,.2);border-bottom-color:rgba(255,255,255,.2)}.pace-fill-left-white .pace .pace-progress{background-color:rgba(255,255,255,.2)}.pace-flash-white .pace .pace-progress{background:#fff}.pace-flash-white .pace .pace-progress-inner{box-shadow:0 0 10px #fff,0 0 5px #fff}.pace-flash-white .pace .pace-activity{border-top-color:#fff;border-left-color:#fff}.pace-loading-bar-white .pace .pace-progress{background:#fff;color:#fff;box-shadow:120px 0 #1f2d3d,240px 0 #1f2d3d}.pace-loading-bar-white .pace .pace-activity{box-shadow:inset 0 0 0 2px #fff,inset 0 0 0 7px #1f2d3d}.pace-mac-osx-white .pace .pace-progress{background-color:#fff;box-shadow:inset -1px 0 #fff,inset 0 -1px #fff,inset 0 2px rgba(31,45,61,.5),inset 0 6px rgba(31,45,61,.3)}.pace-mac-osx-white .pace .pace-activity{background-image:radial-gradient(rgba(31,45,61,.65) 0,rgba(31,45,61,.15) 100%);height:12px}.pace-progress-color-white .pace-progress{color:#fff}.pace-gray .pace .pace-progress{background:#6c757d}.pace-barber-shop-gray .pace{background:#fff}.pace-barber-shop-gray .pace .pace-progress{background:#6c757d}.pace-barber-shop-gray .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-gray .pace .pace-progress::after{color:rgba(108,117,125,.2)}.pace-bounce-gray .pace .pace-activity{background:#6c757d}.pace-center-atom-gray .pace-progress{height:100px;width:80px}.pace-center-atom-gray .pace-progress::before{background:#6c757d;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-gray .pace-activity{border-color:#6c757d}.pace-center-atom-gray .pace-activity::after,.pace-center-atom-gray .pace-activity::before{border-color:#6c757d}.pace-center-circle-gray .pace .pace-progress{background:rgba(108,117,125,.8);color:#fff}.pace-center-radar-gray .pace .pace-activity{border-color:#6c757d transparent transparent}.pace-center-radar-gray .pace .pace-activity::before{border-color:#6c757d transparent transparent}.pace-center-simple-gray .pace{background:#fff;border-color:#6c757d}.pace-center-simple-gray .pace .pace-progress{background:#6c757d}.pace-material-gray .pace{color:#6c757d}.pace-corner-indicator-gray .pace .pace-activity{background:#6c757d}.pace-corner-indicator-gray .pace .pace-activity::after,.pace-corner-indicator-gray .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-gray .pace .pace-activity::before{border-right-color:rgba(108,117,125,.2);border-left-color:rgba(108,117,125,.2)}.pace-corner-indicator-gray .pace .pace-activity::after{border-top-color:rgba(108,117,125,.2);border-bottom-color:rgba(108,117,125,.2)}.pace-fill-left-gray .pace .pace-progress{background-color:rgba(108,117,125,.2)}.pace-flash-gray .pace .pace-progress{background:#6c757d}.pace-flash-gray .pace .pace-progress-inner{box-shadow:0 0 10px #6c757d,0 0 5px #6c757d}.pace-flash-gray .pace .pace-activity{border-top-color:#6c757d;border-left-color:#6c757d}.pace-loading-bar-gray .pace .pace-progress{background:#6c757d;color:#6c757d;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-gray .pace .pace-activity{box-shadow:inset 0 0 0 2px #6c757d,inset 0 0 0 7px #fff}.pace-mac-osx-gray .pace .pace-progress{background-color:#6c757d;box-shadow:inset -1px 0 #6c757d,inset 0 -1px #6c757d,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-gray .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-gray .pace-progress{color:#6c757d}.pace-gray-dark .pace .pace-progress{background:#343a40}.pace-barber-shop-gray-dark .pace{background:#fff}.pace-barber-shop-gray-dark .pace .pace-progress{background:#343a40}.pace-barber-shop-gray-dark .pace .pace-activity{background-image:linear-gradient(45deg,rgba(255,255,255,.2) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.2) 50%,rgba(255,255,255,.2) 75%,transparent 75%,transparent)}.pace-big-counter-gray-dark .pace .pace-progress::after{color:rgba(52,58,64,.2)}.pace-bounce-gray-dark .pace .pace-activity{background:#343a40}.pace-center-atom-gray-dark .pace-progress{height:100px;width:80px}.pace-center-atom-gray-dark .pace-progress::before{background:#343a40;color:#fff;font-size:.8rem;line-height:.7rem;padding-top:17%}.pace-center-atom-gray-dark .pace-activity{border-color:#343a40}.pace-center-atom-gray-dark .pace-activity::after,.pace-center-atom-gray-dark .pace-activity::before{border-color:#343a40}.pace-center-circle-gray-dark .pace .pace-progress{background:rgba(52,58,64,.8);color:#fff}.pace-center-radar-gray-dark .pace .pace-activity{border-color:#343a40 transparent transparent}.pace-center-radar-gray-dark .pace .pace-activity::before{border-color:#343a40 transparent transparent}.pace-center-simple-gray-dark .pace{background:#fff;border-color:#343a40}.pace-center-simple-gray-dark .pace .pace-progress{background:#343a40}.pace-material-gray-dark .pace{color:#343a40}.pace-corner-indicator-gray-dark .pace .pace-activity{background:#343a40}.pace-corner-indicator-gray-dark .pace .pace-activity::after,.pace-corner-indicator-gray-dark .pace .pace-activity::before{border:5px solid #fff}.pace-corner-indicator-gray-dark .pace .pace-activity::before{border-right-color:rgba(52,58,64,.2);border-left-color:rgba(52,58,64,.2)}.pace-corner-indicator-gray-dark .pace .pace-activity::after{border-top-color:rgba(52,58,64,.2);border-bottom-color:rgba(52,58,64,.2)}.pace-fill-left-gray-dark .pace .pace-progress{background-color:rgba(52,58,64,.2)}.pace-flash-gray-dark .pace .pace-progress{background:#343a40}.pace-flash-gray-dark .pace .pace-progress-inner{box-shadow:0 0 10px #343a40,0 0 5px #343a40}.pace-flash-gray-dark .pace .pace-activity{border-top-color:#343a40;border-left-color:#343a40}.pace-loading-bar-gray-dark .pace .pace-progress{background:#343a40;color:#343a40;box-shadow:120px 0 #fff,240px 0 #fff}.pace-loading-bar-gray-dark .pace .pace-activity{box-shadow:inset 0 0 0 2px #343a40,inset 0 0 0 7px #fff}.pace-mac-osx-gray-dark .pace .pace-progress{background-color:#343a40;box-shadow:inset -1px 0 #343a40,inset 0 -1px #343a40,inset 0 2px rgba(255,255,255,.5),inset 0 6px rgba(255,255,255,.3)}.pace-mac-osx-gray-dark .pace .pace-activity{background-image:radial-gradient(rgba(255,255,255,.65) 0,rgba(255,255,255,.15) 100%);height:12px}.pace-progress-color-gray-dark .pace-progress{color:#343a40}.bootstrap-switch{border:1px solid #ced4da;border-radius:.25rem;cursor:pointer;direction:ltr;display:inline-block;line-height:.5rem;overflow:hidden;position:relative;text-align:left;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;z-index:0}.bootstrap-switch .bootstrap-switch-container{border-radius:.25rem;display:inline-block;top:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.bootstrap-switch:focus-within{box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.bootstrap-switch .bootstrap-switch-handle-off,.bootstrap-switch .bootstrap-switch-handle-on,.bootstrap-switch .bootstrap-switch-label{box-sizing:border-box;cursor:pointer;display:table-cell;font-size:1rem;font-weight:500;line-height:1.2rem;padding:.25rem .5rem;vertical-align:middle}.bootstrap-switch .bootstrap-switch-handle-off,.bootstrap-switch .bootstrap-switch-handle-on{text-align:center;z-index:1}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-default,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-default{background:#e9ecef;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-primary,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-primary{background:#007bff;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-secondary,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-secondary{background:#6c757d;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-success,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-success{background:#28a745;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-info,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-info{background:#17a2b8;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-warning,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-warning{background:#ffc107;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-danger,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-danger{background:#dc3545;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-light,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-light{background:#f8f9fa;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-dark,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-dark{background:#343a40;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-lightblue,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-lightblue{background:#3c8dbc;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-navy,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-navy{background:#001f3f;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-olive,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-olive{background:#3d9970;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-lime,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-lime{background:#01ff70;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-fuchsia,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-fuchsia{background:#f012be;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-maroon,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-maroon{background:#d81b60;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-blue,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-blue{background:#007bff;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-indigo,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-indigo{background:#6610f2;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-purple,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-purple{background:#6f42c1;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-pink,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-pink{background:#e83e8c;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-red,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-red{background:#dc3545;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-orange,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-orange{background:#fd7e14;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-yellow,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-yellow{background:#ffc107;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-green,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-green{background:#28a745;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-teal,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-teal{background:#20c997;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-cyan,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-cyan{background:#17a2b8;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-white,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-white{background:#fff;color:#1f2d3d}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-gray,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-gray{background:#6c757d;color:#fff}.bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-gray-dark,.bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-gray-dark{background:#343a40;color:#fff}.bootstrap-switch .bootstrap-switch-handle-on{border-bottom-left-radius:.1rem;border-top-left-radius:.1rem}.bootstrap-switch .bootstrap-switch-handle-off{border-bottom-right-radius:.1rem;border-top-right-radius:.1rem}.bootstrap-switch input[type=checkbox],.bootstrap-switch input[type=radio]{left:0;margin:0;opacity:0;position:absolute;top:0;visibility:hidden;z-index:-1}.bootstrap-switch.bootstrap-switch-mini .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-mini .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-mini .bootstrap-switch-label{font-size:.875rem;line-height:1.5;padding:.1rem .3rem}.bootstrap-switch.bootstrap-switch-small .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-small .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-small .bootstrap-switch-label{font-size:.875rem;line-height:1.5;padding:.2rem .4rem}.bootstrap-switch.bootstrap-switch-large .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-large .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-large .bootstrap-switch-label{font-size:1.25rem;line-height:1.3333333rem;padding:.3rem .5rem}.bootstrap-switch.bootstrap-switch-disabled,.bootstrap-switch.bootstrap-switch-indeterminate,.bootstrap-switch.bootstrap-switch-readonly{cursor:default}.bootstrap-switch.bootstrap-switch-disabled .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-disabled .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-disabled .bootstrap-switch-label,.bootstrap-switch.bootstrap-switch-indeterminate .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-indeterminate .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-indeterminate .bootstrap-switch-label,.bootstrap-switch.bootstrap-switch-readonly .bootstrap-switch-handle-off,.bootstrap-switch.bootstrap-switch-readonly .bootstrap-switch-handle-on,.bootstrap-switch.bootstrap-switch-readonly .bootstrap-switch-label{cursor:default;opacity:.5}.bootstrap-switch.bootstrap-switch-animate .bootstrap-switch-container{transition:margin-left .5s}.bootstrap-switch.bootstrap-switch-inverse .bootstrap-switch-handle-on{border-radius:0 .1rem .1rem 0}.bootstrap-switch.bootstrap-switch-inverse .bootstrap-switch-handle-off{border-radius:.1rem 0 0 .1rem}.bootstrap-switch.bootstrap-switch-inverse.bootstrap-switch-off .bootstrap-switch-label,.bootstrap-switch.bootstrap-switch-on .bootstrap-switch-label{border-bottom-right-radius:.1rem;border-top-right-radius:.1rem}.bootstrap-switch.bootstrap-switch-inverse.bootstrap-switch-on .bootstrap-switch-label,.bootstrap-switch.bootstrap-switch-off .bootstrap-switch-label{border-bottom-left-radius:.1rem;border-top-left-radius:.1rem}.dark-mode .bootstrap-switch{border-color:#6c757d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-default,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-default{background-color:#3a4047;color:#fff;border-color:#454d55}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-primary,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-primary{background:#3f6791;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-secondary,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-secondary{background:#6c757d;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-success,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-success{background:#00bc8c;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-info,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-info{background:#3498db;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-warning,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-warning{background:#f39c12;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-danger,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-danger{background:#e74c3c;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-light,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-light{background:#f8f9fa;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-dark,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-dark{background:#343a40;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-lightblue,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-lightblue{background:#86bad8;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-navy,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-navy{background:#002c59;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-olive,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-olive{background:#74c8a3;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-lime,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-lime{background:#67ffa9;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-fuchsia,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-fuchsia{background:#f672d8;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-maroon,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-maroon{background:#ed6c9b;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-blue,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-blue{background:#3f6791;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-indigo,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-indigo{background:#6610f2;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-purple,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-purple{background:#6f42c1;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-pink,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-pink{background:#e83e8c;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-red,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-red{background:#e74c3c;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-orange,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-orange{background:#fd7e14;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-yellow,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-yellow{background:#f39c12;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-green,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-green{background:#00bc8c;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-teal,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-teal{background:#20c997;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-cyan,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-cyan{background:#3498db;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-white,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-white{background:#fff;color:#1f2d3d}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-gray,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-gray{background:#6c757d;color:#fff}.dark-mode .bootstrap-switch .bootstrap-switch-handle-off.bootstrap-switch-gray-dark,.dark-mode .bootstrap-switch .bootstrap-switch-handle-on.bootstrap-switch-gray-dark{background:#343a40;color:#fff}.dark-mode .daterangepicker{background-color:#3f474e;border:inherit}.dark-mode .daterangepicker::after,.dark-mode .daterangepicker::before{border-bottom-color:#3f474e}.dark-mode .daterangepicker td.available:hover,.dark-mode .daterangepicker th.available:hover{background-color:#3f474e}.dark-mode .daterangepicker td.in-range{background-color:#4b545c;color:#fff}.dark-mode .daterangepicker td.off,.dark-mode .daterangepicker td.off.end-date,.dark-mode .daterangepicker td.off.in-range,.dark-mode .daterangepicker td.off.start-date{background-color:#292d32;color:#fff}.dark-mode .daterangepicker .ranges li:hover{background-color:#343a40}.dark-mode .daterangepicker.show-ranges.ltr .drp-calendar{border-color:#4b545c}.dark-mode .daterangepicker.show-ranges.ltr .drp-calendar.left,.dark-mode .daterangepicker.show-ranges.ltr .drp-calendar.right{border-color:#4b545c;padding-top:0}.dark-mode .daterangepicker .drp-buttons{border-color:#4b545c}.dark-mode .daterangepicker .calendar-table{background-color:#343a40;border-color:#4b545c}.dark-mode .daterangepicker .calendar-table td,.dark-mode .daterangepicker .calendar-table th{color:#fff}.dark-mode .daterangepicker .calendar-table .next span,.dark-mode .daterangepicker .calendar-table .prev span{border-color:#fff}.dark-mode .daterangepicker select.ampmselect,.dark-mode .daterangepicker select.hourselect,.dark-mode .daterangepicker select.minuteselect,.dark-mode .daterangepicker select.secondselect{background-color:#343a40;border-color:#4b545c}.jqstooltip{height:auto!important;padding:5px!important;width:auto!important}.connectedSortable{min-height:100px}.ui-helper-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sort-highlight{background:#f8f9fa;border:1px dashed #dee2e6;margin-bottom:10px}.chart{overflow:hidden;position:relative}.dark-mode .irs--flat .irs-line{background-color:#4b545c}.dark-mode .jsgrid-alt-row>.jsgrid-cell,.dark-mode .jsgrid-edit-row>.jsgrid-cell,.dark-mode .jsgrid-filter-row>.jsgrid-cell,.dark-mode .jsgrid-grid-body,.dark-mode .jsgrid-grid-header,.dark-mode .jsgrid-header-row>.jsgrid-header-cell,.dark-mode .jsgrid-insert-row>.jsgrid-cell,.dark-mode .jsgrid-row>.jsgrid-cell{border-color:#6c757d}.dark-mode .jsgrid-header-row>.jsgrid-header-cell,.dark-mode .jsgrid-row>.jsgrid-cell{background-color:#343a40}.dark-mode .jsgrid-alt-row>.jsgrid-cell{background-color:#3a4047}.dark-mode .jsgrid-selected-row>.jsgrid-cell{background-color:#3f474e}.border-transparent{border-color:transparent!important}.description-block{display:block;margin:10px 0;text-align:center}.description-block.margin-bottom{margin-bottom:25px}.description-block>.description-header{font-size:16px;font-weight:600;margin:0;padding:0}.description-block>.description-text{text-transform:uppercase}.description-block .description-icon{font-size:16px}.list-group-unbordered>.list-group-item{border-left:0;border-radius:0;border-right:0;padding-left:0;padding-right:0}.list-header{color:#6c757d;font-size:15px;font-weight:700;padding:10px 4px}.list-seperator{background-color:rgba(0,0,0,.125);height:1px;margin:15px 0 9px}.list-link>a{color:#6c757d;padding:4px}.list-link>a:hover{color:#212529}.user-block{float:left}.user-block img{float:left;height:40px;width:40px}.user-block .comment,.user-block .description,.user-block .username{display:block;margin-left:50px}.user-block .username{font-size:16px;font-weight:600;margin-top:-1px}.user-block .description{color:#6c757d;font-size:13px;margin-top:-3px}.user-block.user-block-sm img{width:1.875rem;height:1.875rem}.user-block.user-block-sm .comment,.user-block.user-block-sm .description,.user-block.user-block-sm .username{margin-left:40px}.user-block.user-block-sm .username{font-size:14px}.img-lg,.img-md,.img-sm{float:left}.img-sm{height:1.875rem;width:1.875rem}.img-sm+.img-push{margin-left:2.5rem}.img-md{width:3.75rem;height:3.75rem}.img-md+.img-push{margin-left:4.375rem}.img-lg{width:6.25rem;height:6.25rem}.img-lg+.img-push{margin-left:6.875rem}.img-bordered{border:3px solid #adb5bd;padding:3px}.img-bordered-sm{border:2px solid #adb5bd;padding:2px}.img-rounded{border-radius:.25rem}.img-circle{border-radius:50%}.img-size-32,.img-size-50,.img-size-64{height:auto}.img-size-64{width:64px}.img-size-50{width:50px}.img-size-32{width:32px}.size-32,.size-40,.size-50{display:block;text-align:center}.size-32{height:32px;line-height:32px;width:32px}.size-40{height:40px;line-height:40px;width:40px}.size-50{height:50px;line-height:50px;width:50px}.attachment-block{background-color:#f8f9fa;border:1px solid rgba(0,0,0,.125);margin-bottom:10px;padding:5px}.attachment-block .attachment-img{float:left;height:auto;max-height:100px;max-width:100px}.attachment-block .attachment-pushed{margin-left:110px}.attachment-block .attachment-heading{margin:0}.attachment-block .attachment-text{color:#495057}.card>.loading-img,.card>.overlay,.info-box>.loading-img,.info-box>.overlay,.overlay-wrapper>.loading-img,.overlay-wrapper>.overlay,.small-box>.loading-img,.small-box>.overlay{height:100%;left:0;position:absolute;top:0;width:100%}.card .overlay,.info-box .overlay,.overlay-wrapper .overlay,.small-box .overlay{border-radius:.25rem;-ms-flex-align:center;align-items:center;background-color:rgba(255,255,255,.7);display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;z-index:50}.card .overlay>.fa,.card .overlay>.fab,.card .overlay>.fad,.card .overlay>.fal,.card .overlay>.far,.card .overlay>.fas,.card .overlay>.ion,.card .overlay>.svg-inline--fa,.info-box .overlay>.fa,.info-box .overlay>.fab,.info-box .overlay>.fad,.info-box .overlay>.fal,.info-box .overlay>.far,.info-box .overlay>.fas,.info-box .overlay>.ion,.info-box .overlay>.svg-inline--fa,.overlay-wrapper .overlay>.fa,.overlay-wrapper .overlay>.fab,.overlay-wrapper .overlay>.fad,.overlay-wrapper .overlay>.fal,.overlay-wrapper .overlay>.far,.overlay-wrapper .overlay>.fas,.overlay-wrapper .overlay>.ion,.overlay-wrapper .overlay>.svg-inline--fa,.small-box .overlay>.fa,.small-box .overlay>.fab,.small-box .overlay>.fad,.small-box .overlay>.fal,.small-box .overlay>.far,.small-box .overlay>.fas,.small-box .overlay>.ion,.small-box .overlay>.svg-inline--fa{color:#343a40}.card .overlay.dark,.info-box .overlay.dark,.overlay-wrapper .overlay.dark,.small-box .overlay.dark{background-color:rgba(0,0,0,.5)}.card .overlay.dark>.fa,.card .overlay.dark>.fab,.card .overlay.dark>.fad,.card .overlay.dark>.fal,.card .overlay.dark>.far,.card .overlay.dark>.fas,.card .overlay.dark>.ion,.card .overlay.dark>.svg-inline--fa,.info-box .overlay.dark>.fa,.info-box .overlay.dark>.fab,.info-box .overlay.dark>.fad,.info-box .overlay.dark>.fal,.info-box .overlay.dark>.far,.info-box .overlay.dark>.fas,.info-box .overlay.dark>.ion,.info-box .overlay.dark>.svg-inline--fa,.overlay-wrapper .overlay.dark>.fa,.overlay-wrapper .overlay.dark>.fab,.overlay-wrapper .overlay.dark>.fad,.overlay-wrapper .overlay.dark>.fal,.overlay-wrapper .overlay.dark>.far,.overlay-wrapper .overlay.dark>.fas,.overlay-wrapper .overlay.dark>.ion,.overlay-wrapper .overlay.dark>.svg-inline--fa,.small-box .overlay.dark>.fa,.small-box .overlay.dark>.fab,.small-box .overlay.dark>.fad,.small-box .overlay.dark>.fal,.small-box .overlay.dark>.far,.small-box .overlay.dark>.fas,.small-box .overlay.dark>.ion,.small-box .overlay.dark>.svg-inline--fa{color:#ced4da}.tab-pane>.overlay-wrapper{position:relative}.tab-pane>.overlay-wrapper>.overlay{border-top-left-radius:0;border-top-right-radius:0;-ms-flex-direction:column;flex-direction:column;margin-top:-1.25rem;margin-left:-1.25rem;height:calc(100% + 2 * 1.25rem);width:calc(100% + 2 * 1.25rem)}.tab-pane>.overlay-wrapper>.overlay.dark{color:#fff}.ribbon-wrapper{height:70px;overflow:hidden;position:absolute;right:-2px;top:-2px;width:70px;z-index:10}.ribbon-wrapper.ribbon-lg{height:120px;width:120px}.ribbon-wrapper.ribbon-lg .ribbon{right:0;top:26px;width:160px}.ribbon-wrapper.ribbon-xl{height:180px;width:180px}.ribbon-wrapper.ribbon-xl .ribbon{right:4px;top:47px;width:240px}.ribbon-wrapper .ribbon{box-shadow:0 0 3px rgba(0,0,0,.3);font-size:.8rem;line-height:100%;padding:.375rem 0;position:relative;right:-2px;text-align:center;text-shadow:0 -1px 0 rgba(0,0,0,.4);text-transform:uppercase;top:10px;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:90px}.ribbon-wrapper .ribbon::after,.ribbon-wrapper .ribbon::before{border-left:3px solid transparent;border-right:3px solid transparent;border-top:3px solid #9e9e9e;bottom:-3px;content:"";position:absolute}.ribbon-wrapper .ribbon::before{left:0}.ribbon-wrapper .ribbon::after{right:0}.back-to-top{bottom:1.25rem;position:fixed;right:1.25rem;z-index:1032}.back-to-top:focus{box-shadow:none}pre{padding:.75rem}blockquote{background-color:#fff;border-left:.7rem solid #007bff;margin:1.5em .7rem;padding:.5em .7rem}.box blockquote{background-color:#e9ecef}blockquote p:last-child{margin-bottom:0}blockquote h1,blockquote h2,blockquote h3,blockquote h4,blockquote h5,blockquote h6{color:#007bff;font-size:1.25rem;font-weight:600}blockquote.quote-primary{border-color:#007bff}blockquote.quote-primary h1,blockquote.quote-primary h2,blockquote.quote-primary h3,blockquote.quote-primary h4,blockquote.quote-primary h5,blockquote.quote-primary h6{color:#007bff}blockquote.quote-secondary{border-color:#6c757d}blockquote.quote-secondary h1,blockquote.quote-secondary h2,blockquote.quote-secondary h3,blockquote.quote-secondary h4,blockquote.quote-secondary h5,blockquote.quote-secondary h6{color:#6c757d}blockquote.quote-success{border-color:#28a745}blockquote.quote-success h1,blockquote.quote-success h2,blockquote.quote-success h3,blockquote.quote-success h4,blockquote.quote-success h5,blockquote.quote-success h6{color:#28a745}blockquote.quote-info{border-color:#17a2b8}blockquote.quote-info h1,blockquote.quote-info h2,blockquote.quote-info h3,blockquote.quote-info h4,blockquote.quote-info h5,blockquote.quote-info h6{color:#17a2b8}blockquote.quote-warning{border-color:#ffc107}blockquote.quote-warning h1,blockquote.quote-warning h2,blockquote.quote-warning h3,blockquote.quote-warning h4,blockquote.quote-warning h5,blockquote.quote-warning h6{color:#ffc107}blockquote.quote-danger{border-color:#dc3545}blockquote.quote-danger h1,blockquote.quote-danger h2,blockquote.quote-danger h3,blockquote.quote-danger h4,blockquote.quote-danger h5,blockquote.quote-danger h6{color:#dc3545}blockquote.quote-light{border-color:#f8f9fa}blockquote.quote-light h1,blockquote.quote-light h2,blockquote.quote-light h3,blockquote.quote-light h4,blockquote.quote-light h5,blockquote.quote-light h6{color:#f8f9fa}blockquote.quote-dark{border-color:#343a40}blockquote.quote-dark h1,blockquote.quote-dark h2,blockquote.quote-dark h3,blockquote.quote-dark h4,blockquote.quote-dark h5,blockquote.quote-dark h6{color:#343a40}blockquote.quote-lightblue{border-color:#3c8dbc}blockquote.quote-lightblue h1,blockquote.quote-lightblue h2,blockquote.quote-lightblue h3,blockquote.quote-lightblue h4,blockquote.quote-lightblue h5,blockquote.quote-lightblue h6{color:#3c8dbc}blockquote.quote-navy{border-color:#001f3f}blockquote.quote-navy h1,blockquote.quote-navy h2,blockquote.quote-navy h3,blockquote.quote-navy h4,blockquote.quote-navy h5,blockquote.quote-navy h6{color:#001f3f}blockquote.quote-olive{border-color:#3d9970}blockquote.quote-olive h1,blockquote.quote-olive h2,blockquote.quote-olive h3,blockquote.quote-olive h4,blockquote.quote-olive h5,blockquote.quote-olive h6{color:#3d9970}blockquote.quote-lime{border-color:#01ff70}blockquote.quote-lime h1,blockquote.quote-lime h2,blockquote.quote-lime h3,blockquote.quote-lime h4,blockquote.quote-lime h5,blockquote.quote-lime h6{color:#01ff70}blockquote.quote-fuchsia{border-color:#f012be}blockquote.quote-fuchsia h1,blockquote.quote-fuchsia h2,blockquote.quote-fuchsia h3,blockquote.quote-fuchsia h4,blockquote.quote-fuchsia h5,blockquote.quote-fuchsia h6{color:#f012be}blockquote.quote-maroon{border-color:#d81b60}blockquote.quote-maroon h1,blockquote.quote-maroon h2,blockquote.quote-maroon h3,blockquote.quote-maroon h4,blockquote.quote-maroon h5,blockquote.quote-maroon h6{color:#d81b60}blockquote.quote-blue{border-color:#007bff}blockquote.quote-blue h1,blockquote.quote-blue h2,blockquote.quote-blue h3,blockquote.quote-blue h4,blockquote.quote-blue h5,blockquote.quote-blue h6{color:#007bff}blockquote.quote-indigo{border-color:#6610f2}blockquote.quote-indigo h1,blockquote.quote-indigo h2,blockquote.quote-indigo h3,blockquote.quote-indigo h4,blockquote.quote-indigo h5,blockquote.quote-indigo h6{color:#6610f2}blockquote.quote-purple{border-color:#6f42c1}blockquote.quote-purple h1,blockquote.quote-purple h2,blockquote.quote-purple h3,blockquote.quote-purple h4,blockquote.quote-purple h5,blockquote.quote-purple h6{color:#6f42c1}blockquote.quote-pink{border-color:#e83e8c}blockquote.quote-pink h1,blockquote.quote-pink h2,blockquote.quote-pink h3,blockquote.quote-pink h4,blockquote.quote-pink h5,blockquote.quote-pink h6{color:#e83e8c}blockquote.quote-red{border-color:#dc3545}blockquote.quote-red h1,blockquote.quote-red h2,blockquote.quote-red h3,blockquote.quote-red h4,blockquote.quote-red h5,blockquote.quote-red h6{color:#dc3545}blockquote.quote-orange{border-color:#fd7e14}blockquote.quote-orange h1,blockquote.quote-orange h2,blockquote.quote-orange h3,blockquote.quote-orange h4,blockquote.quote-orange h5,blockquote.quote-orange h6{color:#fd7e14}blockquote.quote-yellow{border-color:#ffc107}blockquote.quote-yellow h1,blockquote.quote-yellow h2,blockquote.quote-yellow h3,blockquote.quote-yellow h4,blockquote.quote-yellow h5,blockquote.quote-yellow h6{color:#ffc107}blockquote.quote-green{border-color:#28a745}blockquote.quote-green h1,blockquote.quote-green h2,blockquote.quote-green h3,blockquote.quote-green h4,blockquote.quote-green h5,blockquote.quote-green h6{color:#28a745}blockquote.quote-teal{border-color:#20c997}blockquote.quote-teal h1,blockquote.quote-teal h2,blockquote.quote-teal h3,blockquote.quote-teal h4,blockquote.quote-teal h5,blockquote.quote-teal h6{color:#20c997}blockquote.quote-cyan{border-color:#17a2b8}blockquote.quote-cyan h1,blockquote.quote-cyan h2,blockquote.quote-cyan h3,blockquote.quote-cyan h4,blockquote.quote-cyan h5,blockquote.quote-cyan h6{color:#17a2b8}blockquote.quote-white{border-color:#fff}blockquote.quote-white h1,blockquote.quote-white h2,blockquote.quote-white h3,blockquote.quote-white h4,blockquote.quote-white h5,blockquote.quote-white h6{color:#fff}blockquote.quote-gray{border-color:#6c757d}blockquote.quote-gray h1,blockquote.quote-gray h2,blockquote.quote-gray h3,blockquote.quote-gray h4,blockquote.quote-gray h5,blockquote.quote-gray h6{color:#6c757d}blockquote.quote-gray-dark{border-color:#343a40}blockquote.quote-gray-dark h1,blockquote.quote-gray-dark h2,blockquote.quote-gray-dark h3,blockquote.quote-gray-dark h4,blockquote.quote-gray-dark h5,blockquote.quote-gray-dark h6{color:#343a40}.tab-custom-content{border-top:1px solid #dee2e6;margin-top:.5rem;padding-top:.5rem}.nav+.tab-custom-content{border-top:none;border-bottom:1px solid #dee2e6;margin-top:0;margin-bottom:.5rem;padding-bottom:.5rem}.badge-btn{border-radius:.15rem;font-size:.75rem;font-weight:400;padding:.25rem .5rem}.badge-btn.badge-pill{padding:.375rem .6rem}.dark-mode a:not(.btn):hover{color:#3395ff}.dark-mode .attachment-block{background-color:#3d444b}.dark-mode .attachment-block .attachment-text{color:#ced4da}.dark-mode blockquote{background-color:#3f474e}.dark-mode blockquote.quote-primary{border-color:#007bff}.dark-mode blockquote.quote-primary h1,.dark-mode blockquote.quote-primary h2,.dark-mode blockquote.quote-primary h3,.dark-mode blockquote.quote-primary h4,.dark-mode blockquote.quote-primary h5,.dark-mode blockquote.quote-primary h6{color:#007bff}.dark-mode blockquote.quote-secondary{border-color:#6c757d}.dark-mode blockquote.quote-secondary h1,.dark-mode blockquote.quote-secondary h2,.dark-mode blockquote.quote-secondary h3,.dark-mode blockquote.quote-secondary h4,.dark-mode blockquote.quote-secondary h5,.dark-mode blockquote.quote-secondary h6{color:#6c757d}.dark-mode blockquote.quote-success{border-color:#28a745}.dark-mode blockquote.quote-success h1,.dark-mode blockquote.quote-success h2,.dark-mode blockquote.quote-success h3,.dark-mode blockquote.quote-success h4,.dark-mode blockquote.quote-success h5,.dark-mode blockquote.quote-success h6{color:#28a745}.dark-mode blockquote.quote-info{border-color:#17a2b8}.dark-mode blockquote.quote-info h1,.dark-mode blockquote.quote-info h2,.dark-mode blockquote.quote-info h3,.dark-mode blockquote.quote-info h4,.dark-mode blockquote.quote-info h5,.dark-mode blockquote.quote-info h6{color:#17a2b8}.dark-mode blockquote.quote-warning{border-color:#ffc107}.dark-mode blockquote.quote-warning h1,.dark-mode blockquote.quote-warning h2,.dark-mode blockquote.quote-warning h3,.dark-mode blockquote.quote-warning h4,.dark-mode blockquote.quote-warning h5,.dark-mode blockquote.quote-warning h6{color:#ffc107}.dark-mode blockquote.quote-danger{border-color:#dc3545}.dark-mode blockquote.quote-danger h1,.dark-mode blockquote.quote-danger h2,.dark-mode blockquote.quote-danger h3,.dark-mode blockquote.quote-danger h4,.dark-mode blockquote.quote-danger h5,.dark-mode blockquote.quote-danger h6{color:#dc3545}.dark-mode blockquote.quote-light{border-color:#f8f9fa}.dark-mode blockquote.quote-light h1,.dark-mode blockquote.quote-light h2,.dark-mode blockquote.quote-light h3,.dark-mode blockquote.quote-light h4,.dark-mode blockquote.quote-light h5,.dark-mode blockquote.quote-light h6{color:#f8f9fa}.dark-mode blockquote.quote-dark{border-color:#343a40}.dark-mode blockquote.quote-dark h1,.dark-mode blockquote.quote-dark h2,.dark-mode blockquote.quote-dark h3,.dark-mode blockquote.quote-dark h4,.dark-mode blockquote.quote-dark h5,.dark-mode blockquote.quote-dark h6{color:#343a40}.dark-mode blockquote.quote-lightblue{border-color:#3c8dbc}.dark-mode blockquote.quote-lightblue h1,.dark-mode blockquote.quote-lightblue h2,.dark-mode blockquote.quote-lightblue h3,.dark-mode blockquote.quote-lightblue h4,.dark-mode blockquote.quote-lightblue h5,.dark-mode blockquote.quote-lightblue h6{color:#3c8dbc}.dark-mode blockquote.quote-navy{border-color:#001f3f}.dark-mode blockquote.quote-navy h1,.dark-mode blockquote.quote-navy h2,.dark-mode blockquote.quote-navy h3,.dark-mode blockquote.quote-navy h4,.dark-mode blockquote.quote-navy h5,.dark-mode blockquote.quote-navy h6{color:#001f3f}.dark-mode blockquote.quote-olive{border-color:#3d9970}.dark-mode blockquote.quote-olive h1,.dark-mode blockquote.quote-olive h2,.dark-mode blockquote.quote-olive h3,.dark-mode blockquote.quote-olive h4,.dark-mode blockquote.quote-olive h5,.dark-mode blockquote.quote-olive h6{color:#3d9970}.dark-mode blockquote.quote-lime{border-color:#01ff70}.dark-mode blockquote.quote-lime h1,.dark-mode blockquote.quote-lime h2,.dark-mode blockquote.quote-lime h3,.dark-mode blockquote.quote-lime h4,.dark-mode blockquote.quote-lime h5,.dark-mode blockquote.quote-lime h6{color:#01ff70}.dark-mode blockquote.quote-fuchsia{border-color:#f012be}.dark-mode blockquote.quote-fuchsia h1,.dark-mode blockquote.quote-fuchsia h2,.dark-mode blockquote.quote-fuchsia h3,.dark-mode blockquote.quote-fuchsia h4,.dark-mode blockquote.quote-fuchsia h5,.dark-mode blockquote.quote-fuchsia h6{color:#f012be}.dark-mode blockquote.quote-maroon{border-color:#d81b60}.dark-mode blockquote.quote-maroon h1,.dark-mode blockquote.quote-maroon h2,.dark-mode blockquote.quote-maroon h3,.dark-mode blockquote.quote-maroon h4,.dark-mode blockquote.quote-maroon h5,.dark-mode blockquote.quote-maroon h6{color:#d81b60}.dark-mode blockquote.quote-blue{border-color:#007bff}.dark-mode blockquote.quote-blue h1,.dark-mode blockquote.quote-blue h2,.dark-mode blockquote.quote-blue h3,.dark-mode blockquote.quote-blue h4,.dark-mode blockquote.quote-blue h5,.dark-mode blockquote.quote-blue h6{color:#007bff}.dark-mode blockquote.quote-indigo{border-color:#6610f2}.dark-mode blockquote.quote-indigo h1,.dark-mode blockquote.quote-indigo h2,.dark-mode blockquote.quote-indigo h3,.dark-mode blockquote.quote-indigo h4,.dark-mode blockquote.quote-indigo h5,.dark-mode blockquote.quote-indigo h6{color:#6610f2}.dark-mode blockquote.quote-purple{border-color:#6f42c1}.dark-mode blockquote.quote-purple h1,.dark-mode blockquote.quote-purple h2,.dark-mode blockquote.quote-purple h3,.dark-mode blockquote.quote-purple h4,.dark-mode blockquote.quote-purple h5,.dark-mode blockquote.quote-purple h6{color:#6f42c1}.dark-mode blockquote.quote-pink{border-color:#e83e8c}.dark-mode blockquote.quote-pink h1,.dark-mode blockquote.quote-pink h2,.dark-mode blockquote.quote-pink h3,.dark-mode blockquote.quote-pink h4,.dark-mode blockquote.quote-pink h5,.dark-mode blockquote.quote-pink h6{color:#e83e8c}.dark-mode blockquote.quote-red{border-color:#dc3545}.dark-mode blockquote.quote-red h1,.dark-mode blockquote.quote-red h2,.dark-mode blockquote.quote-red h3,.dark-mode blockquote.quote-red h4,.dark-mode blockquote.quote-red h5,.dark-mode blockquote.quote-red h6{color:#dc3545}.dark-mode blockquote.quote-orange{border-color:#fd7e14}.dark-mode blockquote.quote-orange h1,.dark-mode blockquote.quote-orange h2,.dark-mode blockquote.quote-orange h3,.dark-mode blockquote.quote-orange h4,.dark-mode blockquote.quote-orange h5,.dark-mode blockquote.quote-orange h6{color:#fd7e14}.dark-mode blockquote.quote-yellow{border-color:#ffc107}.dark-mode blockquote.quote-yellow h1,.dark-mode blockquote.quote-yellow h2,.dark-mode blockquote.quote-yellow h3,.dark-mode blockquote.quote-yellow h4,.dark-mode blockquote.quote-yellow h5,.dark-mode blockquote.quote-yellow h6{color:#ffc107}.dark-mode blockquote.quote-green{border-color:#28a745}.dark-mode blockquote.quote-green h1,.dark-mode blockquote.quote-green h2,.dark-mode blockquote.quote-green h3,.dark-mode blockquote.quote-green h4,.dark-mode blockquote.quote-green h5,.dark-mode blockquote.quote-green h6{color:#28a745}.dark-mode blockquote.quote-teal{border-color:#20c997}.dark-mode blockquote.quote-teal h1,.dark-mode blockquote.quote-teal h2,.dark-mode blockquote.quote-teal h3,.dark-mode blockquote.quote-teal h4,.dark-mode blockquote.quote-teal h5,.dark-mode blockquote.quote-teal h6{color:#20c997}.dark-mode blockquote.quote-cyan{border-color:#17a2b8}.dark-mode blockquote.quote-cyan h1,.dark-mode blockquote.quote-cyan h2,.dark-mode blockquote.quote-cyan h3,.dark-mode blockquote.quote-cyan h4,.dark-mode blockquote.quote-cyan h5,.dark-mode blockquote.quote-cyan h6{color:#17a2b8}.dark-mode blockquote.quote-white{border-color:#fff}.dark-mode blockquote.quote-white h1,.dark-mode blockquote.quote-white h2,.dark-mode blockquote.quote-white h3,.dark-mode blockquote.quote-white h4,.dark-mode blockquote.quote-white h5,.dark-mode blockquote.quote-white h6{color:#fff}.dark-mode blockquote.quote-gray{border-color:#6c757d}.dark-mode blockquote.quote-gray h1,.dark-mode blockquote.quote-gray h2,.dark-mode blockquote.quote-gray h3,.dark-mode blockquote.quote-gray h4,.dark-mode blockquote.quote-gray h5,.dark-mode blockquote.quote-gray h6{color:#6c757d}.dark-mode blockquote.quote-gray-dark{border-color:#343a40}.dark-mode blockquote.quote-gray-dark h1,.dark-mode blockquote.quote-gray-dark h2,.dark-mode blockquote.quote-gray-dark h3,.dark-mode blockquote.quote-gray-dark h4,.dark-mode blockquote.quote-gray-dark h5,.dark-mode blockquote.quote-gray-dark h6{color:#343a40}.dark-mode .close,.dark-mode .mailbox-attachment-close{color:#adb5bd;text-shadow:0 1px 0 #495057}.dark-mode .tab-custom-content{border-color:#6c757d}.dark-mode .list-group-item{background-color:#343a40;border-color:#6c757d}@media print{.content-header,.main-header,.main-sidebar,.no-print{display:none!important}.content-wrapper,.main-footer{-webkit-transform:translate(0,0);transform:translate(0,0);margin-left:0!important;min-height:0!important}.layout-fixed .content-wrapper{padding-top:0!important}.invoice{border:0;margin:0;padding:0;width:100%}.invoice-col{float:left;width:33.3333333%}.table-responsive{overflow:auto}.table-responsive>.table tr td,.table-responsive>.table tr th{white-space:normal!important}}.text-bold,.text-bold.table td,.text-bold.table th{font-weight:700}.text-xs{font-size:.75rem!important}.text-sm{font-size:.875rem!important}.text-md{font-size:1rem!important}.text-lg{font-size:1.25rem!important}.text-xl{font-size:2rem!important}.text-lightblue{color:#3c8dbc!important}.text-navy{color:#001f3f!important}.text-olive{color:#3d9970!important}.text-lime{color:#01ff70!important}.text-fuchsia{color:#f012be!important}.text-maroon{color:#d81b60!important}.text-blue{color:#007bff!important}.text-indigo{color:#6610f2!important}.text-purple{color:#6f42c1!important}.text-pink{color:#e83e8c!important}.text-red{color:#dc3545!important}.text-orange{color:#fd7e14!important}.text-yellow{color:#ffc107!important}.text-green{color:#28a745!important}.text-teal{color:#20c997!important}.text-cyan{color:#17a2b8!important}.text-white{color:#fff!important}.text-gray{color:#6c757d!important}.text-gray-dark{color:#343a40!important}.dark-mode .text-muted{color:#adb5bd!important}.dark-mode .text-lightblue{color:#86bad8!important}.dark-mode .text-navy{color:#002c59!important}.dark-mode .text-olive{color:#74c8a3!important}.dark-mode .text-lime{color:#67ffa9!important}.dark-mode .text-fuchsia{color:#f672d8!important}.dark-mode .text-maroon{color:#ed6c9b!important}.dark-mode .text-blue{color:#3f6791!important}.dark-mode .text-indigo{color:#6610f2!important}.dark-mode .text-purple{color:#6f42c1!important}.dark-mode .text-pink{color:#e83e8c!important}.dark-mode .text-red{color:#e74c3c!important}.dark-mode .text-orange{color:#fd7e14!important}.dark-mode .text-yellow{color:#f39c12!important}.dark-mode .text-green{color:#00bc8c!important}.dark-mode .text-teal{color:#20c997!important}.dark-mode .text-cyan{color:#3498db!important}.dark-mode .text-white{color:#fff!important}.dark-mode .text-gray{color:#6c757d!important}.dark-mode .text-gray-dark{color:#343a40!important}.elevation-0{box-shadow:none!important}.elevation-1{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)!important}.elevation-2{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)!important}.elevation-3{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23)!important}.elevation-4{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)!important}.elevation-5{box-shadow:0 19px 38px rgba(0,0,0,.3),0 15px 12px rgba(0,0,0,.22)!important}.bg-primary{background-color:#007bff!important}.bg-primary,.bg-primary>a{color:#fff!important}.bg-primary.btn:hover{border-color:#0062cc;color:#ececec}.bg-primary.btn.active,.bg-primary.btn:active,.bg-primary.btn:not(:disabled):not(.disabled).active,.bg-primary.btn:not(:disabled):not(.disabled):active{background-color:#0062cc!important;border-color:#005cbf;color:#fff}.bg-secondary{background-color:#6c757d!important}.bg-secondary,.bg-secondary>a{color:#fff!important}.bg-secondary.btn:hover{border-color:#545b62;color:#ececec}.bg-secondary.btn.active,.bg-secondary.btn:active,.bg-secondary.btn:not(:disabled):not(.disabled).active,.bg-secondary.btn:not(:disabled):not(.disabled):active{background-color:#545b62!important;border-color:#4e555b;color:#fff}.bg-success{background-color:#28a745!important}.bg-success,.bg-success>a{color:#fff!important}.bg-success.btn:hover{border-color:#1e7e34;color:#ececec}.bg-success.btn.active,.bg-success.btn:active,.bg-success.btn:not(:disabled):not(.disabled).active,.bg-success.btn:not(:disabled):not(.disabled):active{background-color:#1e7e34!important;border-color:#1c7430;color:#fff}.bg-info{background-color:#17a2b8!important}.bg-info,.bg-info>a{color:#fff!important}.bg-info.btn:hover{border-color:#117a8b;color:#ececec}.bg-info.btn.active,.bg-info.btn:active,.bg-info.btn:not(:disabled):not(.disabled).active,.bg-info.btn:not(:disabled):not(.disabled):active{background-color:#117a8b!important;border-color:#10707f;color:#fff}.bg-warning{background-color:#ffc107!important}.bg-warning,.bg-warning>a{color:#1f2d3d!important}.bg-warning.btn:hover{border-color:#d39e00;color:#121a24}.bg-warning.btn.active,.bg-warning.btn:active,.bg-warning.btn:not(:disabled):not(.disabled).active,.bg-warning.btn:not(:disabled):not(.disabled):active{background-color:#d39e00!important;border-color:#c69500;color:#1f2d3d}.bg-danger{background-color:#dc3545!important}.bg-danger,.bg-danger>a{color:#fff!important}.bg-danger.btn:hover{border-color:#bd2130;color:#ececec}.bg-danger.btn.active,.bg-danger.btn:active,.bg-danger.btn:not(:disabled):not(.disabled).active,.bg-danger.btn:not(:disabled):not(.disabled):active{background-color:#bd2130!important;border-color:#b21f2d;color:#fff}.bg-light{background-color:#f8f9fa!important}.bg-light,.bg-light>a{color:#1f2d3d!important}.bg-light.btn:hover{border-color:#dae0e5;color:#121a24}.bg-light.btn.active,.bg-light.btn:active,.bg-light.btn:not(:disabled):not(.disabled).active,.bg-light.btn:not(:disabled):not(.disabled):active{background-color:#dae0e5!important;border-color:#d3d9df;color:#1f2d3d}.bg-dark{background-color:#343a40!important}.bg-dark,.bg-dark>a{color:#fff!important}.bg-dark.btn:hover{border-color:#1d2124;color:#ececec}.bg-dark.btn.active,.bg-dark.btn:active,.bg-dark.btn:not(:disabled):not(.disabled).active,.bg-dark.btn:not(:disabled):not(.disabled):active{background-color:#1d2124!important;border-color:#171a1d;color:#fff}.bg-lightblue{background-color:#3c8dbc!important}.bg-lightblue,.bg-lightblue>a{color:#fff!important}.bg-lightblue.btn:hover{border-color:#307095;color:#ececec}.bg-lightblue.btn.active,.bg-lightblue.btn:active,.bg-lightblue.btn:not(:disabled):not(.disabled).active,.bg-lightblue.btn:not(:disabled):not(.disabled):active{background-color:#307095!important;border-color:#2d698c;color:#fff}.bg-navy{background-color:#001f3f!important}.bg-navy,.bg-navy>a{color:#fff!important}.bg-navy.btn:hover{border-color:#00060c;color:#ececec}.bg-navy.btn.active,.bg-navy.btn:active,.bg-navy.btn:not(:disabled):not(.disabled).active,.bg-navy.btn:not(:disabled):not(.disabled):active{background-color:#00060c!important;border-color:#000;color:#fff}.bg-olive{background-color:#3d9970!important}.bg-olive,.bg-olive>a{color:#fff!important}.bg-olive.btn:hover{border-color:#2e7555;color:#ececec}.bg-olive.btn.active,.bg-olive.btn:active,.bg-olive.btn:not(:disabled):not(.disabled).active,.bg-olive.btn:not(:disabled):not(.disabled):active{background-color:#2e7555!important;border-color:#2b6b4f;color:#fff}.bg-lime{background-color:#01ff70!important}.bg-lime,.bg-lime>a{color:#1f2d3d!important}.bg-lime.btn:hover{border-color:#00cd5a;color:#121a24}.bg-lime.btn.active,.bg-lime.btn:active,.bg-lime.btn:not(:disabled):not(.disabled).active,.bg-lime.btn:not(:disabled):not(.disabled):active{background-color:#00cd5a!important;border-color:#00c054;color:#fff}.bg-fuchsia{background-color:#f012be!important}.bg-fuchsia,.bg-fuchsia>a{color:#fff!important}.bg-fuchsia.btn:hover{border-color:#c30c9a;color:#ececec}.bg-fuchsia.btn.active,.bg-fuchsia.btn:active,.bg-fuchsia.btn:not(:disabled):not(.disabled).active,.bg-fuchsia.btn:not(:disabled):not(.disabled):active{background-color:#c30c9a!important;border-color:#b70c90;color:#fff}.bg-maroon{background-color:#d81b60!important}.bg-maroon,.bg-maroon>a{color:#fff!important}.bg-maroon.btn:hover{border-color:#ab154c;color:#ececec}.bg-maroon.btn.active,.bg-maroon.btn:active,.bg-maroon.btn:not(:disabled):not(.disabled).active,.bg-maroon.btn:not(:disabled):not(.disabled):active{background-color:#ab154c!important;border-color:#9f1447;color:#fff}.bg-blue{background-color:#007bff!important}.bg-blue,.bg-blue>a{color:#fff!important}.bg-blue.btn:hover{border-color:#0062cc;color:#ececec}.bg-blue.btn.active,.bg-blue.btn:active,.bg-blue.btn:not(:disabled):not(.disabled).active,.bg-blue.btn:not(:disabled):not(.disabled):active{background-color:#0062cc!important;border-color:#005cbf;color:#fff}.bg-indigo{background-color:#6610f2!important}.bg-indigo,.bg-indigo>a{color:#fff!important}.bg-indigo.btn:hover{border-color:#510bc4;color:#ececec}.bg-indigo.btn.active,.bg-indigo.btn:active,.bg-indigo.btn:not(:disabled):not(.disabled).active,.bg-indigo.btn:not(:disabled):not(.disabled):active{background-color:#510bc4!important;border-color:#4c0ab8;color:#fff}.bg-purple{background-color:#6f42c1!important}.bg-purple,.bg-purple>a{color:#fff!important}.bg-purple.btn:hover{border-color:#59339d;color:#ececec}.bg-purple.btn.active,.bg-purple.btn:active,.bg-purple.btn:not(:disabled):not(.disabled).active,.bg-purple.btn:not(:disabled):not(.disabled):active{background-color:#59339d!important;border-color:#533093;color:#fff}.bg-pink{background-color:#e83e8c!important}.bg-pink,.bg-pink>a{color:#fff!important}.bg-pink.btn:hover{border-color:#d91a72;color:#ececec}.bg-pink.btn.active,.bg-pink.btn:active,.bg-pink.btn:not(:disabled):not(.disabled).active,.bg-pink.btn:not(:disabled):not(.disabled):active{background-color:#d91a72!important;border-color:#ce196c;color:#fff}.bg-red{background-color:#dc3545!important}.bg-red,.bg-red>a{color:#fff!important}.bg-red.btn:hover{border-color:#bd2130;color:#ececec}.bg-red.btn.active,.bg-red.btn:active,.bg-red.btn:not(:disabled):not(.disabled).active,.bg-red.btn:not(:disabled):not(.disabled):active{background-color:#bd2130!important;border-color:#b21f2d;color:#fff}.bg-orange{background-color:#fd7e14!important}.bg-orange,.bg-orange>a{color:#1f2d3d!important}.bg-orange.btn:hover{border-color:#dc6502;color:#121a24}.bg-orange.btn.active,.bg-orange.btn:active,.bg-orange.btn:not(:disabled):not(.disabled).active,.bg-orange.btn:not(:disabled):not(.disabled):active{background-color:#dc6502!important;border-color:#cf5f02;color:#fff}.bg-yellow{background-color:#ffc107!important}.bg-yellow,.bg-yellow>a{color:#1f2d3d!important}.bg-yellow.btn:hover{border-color:#d39e00;color:#121a24}.bg-yellow.btn.active,.bg-yellow.btn:active,.bg-yellow.btn:not(:disabled):not(.disabled).active,.bg-yellow.btn:not(:disabled):not(.disabled):active{background-color:#d39e00!important;border-color:#c69500;color:#1f2d3d}.bg-green{background-color:#28a745!important}.bg-green,.bg-green>a{color:#fff!important}.bg-green.btn:hover{border-color:#1e7e34;color:#ececec}.bg-green.btn.active,.bg-green.btn:active,.bg-green.btn:not(:disabled):not(.disabled).active,.bg-green.btn:not(:disabled):not(.disabled):active{background-color:#1e7e34!important;border-color:#1c7430;color:#fff}.bg-teal{background-color:#20c997!important}.bg-teal,.bg-teal>a{color:#fff!important}.bg-teal.btn:hover{border-color:#199d76;color:#ececec}.bg-teal.btn.active,.bg-teal.btn:active,.bg-teal.btn:not(:disabled):not(.disabled).active,.bg-teal.btn:not(:disabled):not(.disabled):active{background-color:#199d76!important;border-color:#17926e;color:#fff}.bg-cyan{background-color:#17a2b8!important}.bg-cyan,.bg-cyan>a{color:#fff!important}.bg-cyan.btn:hover{border-color:#117a8b;color:#ececec}.bg-cyan.btn.active,.bg-cyan.btn:active,.bg-cyan.btn:not(:disabled):not(.disabled).active,.bg-cyan.btn:not(:disabled):not(.disabled):active{background-color:#117a8b!important;border-color:#10707f;color:#fff}.bg-white{background-color:#fff!important}.bg-white,.bg-white>a{color:#1f2d3d!important}.bg-white.btn:hover{border-color:#e6e6e6;color:#121a24}.bg-white.btn.active,.bg-white.btn:active,.bg-white.btn:not(:disabled):not(.disabled).active,.bg-white.btn:not(:disabled):not(.disabled):active{background-color:#e6e6e6!important;border-color:#dfdfdf;color:#1f2d3d}.bg-gray{background-color:#6c757d!important}.bg-gray,.bg-gray>a{color:#fff!important}.bg-gray.btn:hover{border-color:#545b62;color:#ececec}.bg-gray.btn.active,.bg-gray.btn:active,.bg-gray.btn:not(:disabled):not(.disabled).active,.bg-gray.btn:not(:disabled):not(.disabled):active{background-color:#545b62!important;border-color:#4e555b;color:#fff}.bg-gray-dark{background-color:#343a40!important}.bg-gray-dark,.bg-gray-dark>a{color:#fff!important}.bg-gray-dark.btn:hover{border-color:#1d2124;color:#ececec}.bg-gray-dark.btn.active,.bg-gray-dark.btn:active,.bg-gray-dark.btn:not(:disabled):not(.disabled).active,.bg-gray-dark.btn:not(:disabled):not(.disabled):active{background-color:#1d2124!important;border-color:#171a1d;color:#fff}.bg-gray{background-color:#adb5bd;color:#1f2d3d}.bg-gray-light{background-color:#f2f4f5;color:#1f2d3d!important}.bg-black{background-color:#000;color:#fff!important}.bg-white{background-color:#fff;color:#1f2d3d!important}.bg-gradient-primary{background:#007bff linear-gradient(180deg,#268fff,#007bff) repeat-x!important;color:#fff}.bg-gradient-primary.btn:not(:disabled):not(.disabled).active,.bg-gradient-primary.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-primary.btn.dropdown-toggle{background-image:none!important}.bg-gradient-primary.btn:hover{background:#007bff linear-gradient(180deg,#267fde,#0069d9) repeat-x!important;border-color:#0062cc;color:#ececec}.bg-gradient-primary.btn.active,.bg-gradient-primary.btn:active,.bg-gradient-primary.btn:not(:disabled):not(.disabled).active,.bg-gradient-primary.btn:not(:disabled):not(.disabled):active{background:#007bff linear-gradient(180deg,#267ad4,#0062cc) repeat-x!important;border-color:#005cbf;color:#fff}.bg-gradient-primary.btn.disabled,.bg-gradient-primary.btn:disabled{background-image:none!important;border-color:#007bff;color:#fff}.bg-gradient-secondary{background:#6c757d linear-gradient(180deg,#828a91,#6c757d) repeat-x!important;color:#fff}.bg-gradient-secondary.btn:not(:disabled):not(.disabled).active,.bg-gradient-secondary.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-secondary.btn.dropdown-toggle{background-image:none!important}.bg-gradient-secondary.btn:hover{background:#6c757d linear-gradient(180deg,#73797f,#5a6268) repeat-x!important;border-color:#545b62;color:#ececec}.bg-gradient-secondary.btn.active,.bg-gradient-secondary.btn:active,.bg-gradient-secondary.btn:not(:disabled):not(.disabled).active,.bg-gradient-secondary.btn:not(:disabled):not(.disabled):active{background:#6c757d linear-gradient(180deg,#6e7479,#545b62) repeat-x!important;border-color:#4e555b;color:#fff}.bg-gradient-secondary.btn.disabled,.bg-gradient-secondary.btn:disabled{background-image:none!important;border-color:#6c757d;color:#fff}.bg-gradient-success{background:#28a745 linear-gradient(180deg,#48b461,#28a745) repeat-x!important;color:#fff}.bg-gradient-success.btn:not(:disabled):not(.disabled).active,.bg-gradient-success.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-success.btn.dropdown-toggle{background-image:none!important}.bg-gradient-success.btn:hover{background:#28a745 linear-gradient(180deg,#429a56,#218838) repeat-x!important;border-color:#1e7e34;color:#ececec}.bg-gradient-success.btn.active,.bg-gradient-success.btn:active,.bg-gradient-success.btn:not(:disabled):not(.disabled).active,.bg-gradient-success.btn:not(:disabled):not(.disabled):active{background:#28a745 linear-gradient(180deg,#409152,#1e7e34) repeat-x!important;border-color:#1c7430;color:#fff}.bg-gradient-success.btn.disabled,.bg-gradient-success.btn:disabled{background-image:none!important;border-color:#28a745;color:#fff}.bg-gradient-info{background:#17a2b8 linear-gradient(180deg,#3ab0c3,#17a2b8) repeat-x!important;color:#fff}.bg-gradient-info.btn:not(:disabled):not(.disabled).active,.bg-gradient-info.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-info.btn.dropdown-toggle{background-image:none!important}.bg-gradient-info.btn:hover{background:#17a2b8 linear-gradient(180deg,#3697a6,#138496) repeat-x!important;border-color:#117a8b;color:#ececec}.bg-gradient-info.btn.active,.bg-gradient-info.btn:active,.bg-gradient-info.btn:not(:disabled):not(.disabled).active,.bg-gradient-info.btn:not(:disabled):not(.disabled):active{background:#17a2b8 linear-gradient(180deg,#358e9c,#117a8b) repeat-x!important;border-color:#10707f;color:#fff}.bg-gradient-info.btn.disabled,.bg-gradient-info.btn:disabled{background-image:none!important;border-color:#17a2b8;color:#fff}.bg-gradient-warning{background:#ffc107 linear-gradient(180deg,#ffca2c,#ffc107) repeat-x!important;color:#1f2d3d}.bg-gradient-warning.btn:not(:disabled):not(.disabled).active,.bg-gradient-warning.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-warning.btn.dropdown-toggle{background-image:none!important}.bg-gradient-warning.btn:hover{background:#ffc107 linear-gradient(180deg,#e4b526,#e0a800) repeat-x!important;border-color:#d39e00;color:#121a24}.bg-gradient-warning.btn.active,.bg-gradient-warning.btn:active,.bg-gradient-warning.btn:not(:disabled):not(.disabled).active,.bg-gradient-warning.btn:not(:disabled):not(.disabled):active{background:#ffc107 linear-gradient(180deg,#daad26,#d39e00) repeat-x!important;border-color:#c69500;color:#1f2d3d}.bg-gradient-warning.btn.disabled,.bg-gradient-warning.btn:disabled{background-image:none!important;border-color:#ffc107;color:#1f2d3d}.bg-gradient-danger{background:#dc3545 linear-gradient(180deg,#e15361,#dc3545) repeat-x!important;color:#fff}.bg-gradient-danger.btn:not(:disabled):not(.disabled).active,.bg-gradient-danger.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-danger.btn.dropdown-toggle{background-image:none!important}.bg-gradient-danger.btn:hover{background:#dc3545 linear-gradient(180deg,#d04451,#c82333) repeat-x!important;border-color:#bd2130;color:#ececec}.bg-gradient-danger.btn.active,.bg-gradient-danger.btn:active,.bg-gradient-danger.btn:not(:disabled):not(.disabled).active,.bg-gradient-danger.btn:not(:disabled):not(.disabled):active{background:#dc3545 linear-gradient(180deg,#c7424f,#bd2130) repeat-x!important;border-color:#b21f2d;color:#fff}.bg-gradient-danger.btn.disabled,.bg-gradient-danger.btn:disabled{background-image:none!important;border-color:#dc3545;color:#fff}.bg-gradient-light{background:#f8f9fa linear-gradient(180deg,#f9fafb,#f8f9fa) repeat-x!important;color:#1f2d3d}.bg-gradient-light.btn:not(:disabled):not(.disabled).active,.bg-gradient-light.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-light.btn.dropdown-toggle{background-image:none!important}.bg-gradient-light.btn:hover{background:#f8f9fa linear-gradient(180deg,#e6eaed,#e2e6ea) repeat-x!important;border-color:#dae0e5;color:#121a24}.bg-gradient-light.btn.active,.bg-gradient-light.btn:active,.bg-gradient-light.btn:not(:disabled):not(.disabled).active,.bg-gradient-light.btn:not(:disabled):not(.disabled):active{background:#f8f9fa linear-gradient(180deg,#e0e4e9,#dae0e5) repeat-x!important;border-color:#d3d9df;color:#1f2d3d}.bg-gradient-light.btn.disabled,.bg-gradient-light.btn:disabled{background-image:none!important;border-color:#f8f9fa;color:#1f2d3d}.bg-gradient-dark{background:#343a40 linear-gradient(180deg,#52585d,#343a40) repeat-x!important;color:#fff}.bg-gradient-dark.btn:not(:disabled):not(.disabled).active,.bg-gradient-dark.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-dark.btn.dropdown-toggle{background-image:none!important}.bg-gradient-dark.btn:hover{background:#343a40 linear-gradient(180deg,#44474b,#23272b) repeat-x!important;border-color:#1d2124;color:#ececec}.bg-gradient-dark.btn.active,.bg-gradient-dark.btn:active,.bg-gradient-dark.btn:not(:disabled):not(.disabled).active,.bg-gradient-dark.btn:not(:disabled):not(.disabled):active{background:#343a40 linear-gradient(180deg,#3f4245,#1d2124) repeat-x!important;border-color:#171a1d;color:#fff}.bg-gradient-dark.btn.disabled,.bg-gradient-dark.btn:disabled{background-image:none!important;border-color:#343a40;color:#fff}.bg-gradient-lightblue{background:#3c8dbc linear-gradient(180deg,#599ec6,#3c8dbc) repeat-x!important;color:#fff}.bg-gradient-lightblue.btn:not(:disabled):not(.disabled).active,.bg-gradient-lightblue.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-lightblue.btn.dropdown-toggle{background-image:none!important}.bg-gradient-lightblue.btn:hover{background:#3c8dbc linear-gradient(180deg,#518cad,#33779f) repeat-x!important;border-color:#307095;color:#ececec}.bg-gradient-lightblue.btn.active,.bg-gradient-lightblue.btn:active,.bg-gradient-lightblue.btn:not(:disabled):not(.disabled).active,.bg-gradient-lightblue.btn:not(:disabled):not(.disabled):active{background:#3c8dbc linear-gradient(180deg,#4f85a5,#307095) repeat-x!important;border-color:#2d698c;color:#fff}.bg-gradient-lightblue.btn.disabled,.bg-gradient-lightblue.btn:disabled{background-image:none!important;border-color:#3c8dbc;color:#fff}.bg-gradient-navy{background:#001f3f linear-gradient(180deg,#26415c,#001f3f) repeat-x!important;color:#fff}.bg-gradient-navy.btn:not(:disabled):not(.disabled).active,.bg-gradient-navy.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-navy.btn.dropdown-toggle{background-image:none!important}.bg-gradient-navy.btn:hover{background:#001f3f linear-gradient(180deg,#26313b,#000c19) repeat-x!important;border-color:#00060c;color:#ececec}.bg-gradient-navy.btn.active,.bg-gradient-navy.btn:active,.bg-gradient-navy.btn:not(:disabled):not(.disabled).active,.bg-gradient-navy.btn:not(:disabled):not(.disabled):active{background:#001f3f linear-gradient(180deg,#262b30,#00060c) repeat-x!important;border-color:#000;color:#fff}.bg-gradient-navy.btn.disabled,.bg-gradient-navy.btn:disabled{background-image:none!important;border-color:#001f3f;color:#fff}.bg-gradient-olive{background:#3d9970 linear-gradient(180deg,#5aa885,#3d9970) repeat-x!important;color:#fff}.bg-gradient-olive.btn:not(:disabled):not(.disabled).active,.bg-gradient-olive.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-olive.btn.dropdown-toggle{background-image:none!important}.bg-gradient-olive.btn:hover{background:#3d9970 linear-gradient(180deg,#519174,#327e5c) repeat-x!important;border-color:#2e7555;color:#ececec}.bg-gradient-olive.btn.active,.bg-gradient-olive.btn:active,.bg-gradient-olive.btn:not(:disabled):not(.disabled).active,.bg-gradient-olive.btn:not(:disabled):not(.disabled):active{background:#3d9970 linear-gradient(180deg,#4e896f,#2e7555) repeat-x!important;border-color:#2b6b4f;color:#fff}.bg-gradient-olive.btn.disabled,.bg-gradient-olive.btn:disabled{background-image:none!important;border-color:#3d9970;color:#fff}.bg-gradient-lime{background:#01ff70 linear-gradient(180deg,#27ff85,#01ff70) repeat-x!important;color:#1f2d3d}.bg-gradient-lime.btn:not(:disabled):not(.disabled).active,.bg-gradient-lime.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-lime.btn.dropdown-toggle{background-image:none!important}.bg-gradient-lime.btn:hover{background:#01ff70 linear-gradient(180deg,#26df77,#00da5f) repeat-x!important;border-color:#00cd5a;color:#121a24}.bg-gradient-lime.btn.active,.bg-gradient-lime.btn:active,.bg-gradient-lime.btn:not(:disabled):not(.disabled).active,.bg-gradient-lime.btn:not(:disabled):not(.disabled):active{background:#01ff70 linear-gradient(180deg,#26d572,#00cd5a) repeat-x!important;border-color:#00c054;color:#fff}.bg-gradient-lime.btn.disabled,.bg-gradient-lime.btn:disabled{background-image:none!important;border-color:#01ff70;color:#1f2d3d}.bg-gradient-fuchsia{background:#f012be linear-gradient(180deg,#f236c8,#f012be) repeat-x!important;color:#fff}.bg-gradient-fuchsia.btn:not(:disabled):not(.disabled).active,.bg-gradient-fuchsia.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-fuchsia.btn.dropdown-toggle{background-image:none!important}.bg-gradient-fuchsia.btn:hover{background:#f012be linear-gradient(180deg,#d631b1,#cf0da3) repeat-x!important;border-color:#c30c9a;color:#ececec}.bg-gradient-fuchsia.btn.active,.bg-gradient-fuchsia.btn:active,.bg-gradient-fuchsia.btn:not(:disabled):not(.disabled).active,.bg-gradient-fuchsia.btn:not(:disabled):not(.disabled):active{background:#f012be linear-gradient(180deg,#cc31a9,#c30c9a) repeat-x!important;border-color:#b70c90;color:#fff}.bg-gradient-fuchsia.btn.disabled,.bg-gradient-fuchsia.btn:disabled{background-image:none!important;border-color:#f012be;color:#fff}.bg-gradient-maroon{background:#d81b60 linear-gradient(180deg,#de3d78,#d81b60) repeat-x!important;color:#fff}.bg-gradient-maroon.btn:not(:disabled):not(.disabled).active,.bg-gradient-maroon.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-maroon.btn.dropdown-toggle{background-image:none!important}.bg-gradient-maroon.btn:hover{background:#d81b60 linear-gradient(180deg,#c13a6b,#b61751) repeat-x!important;border-color:#ab154c;color:#ececec}.bg-gradient-maroon.btn.active,.bg-gradient-maroon.btn:active,.bg-gradient-maroon.btn:not(:disabled):not(.disabled).active,.bg-gradient-maroon.btn:not(:disabled):not(.disabled):active{background:#d81b60 linear-gradient(180deg,#b73867,#ab154c) repeat-x!important;border-color:#9f1447;color:#fff}.bg-gradient-maroon.btn.disabled,.bg-gradient-maroon.btn:disabled{background-image:none!important;border-color:#d81b60;color:#fff}.bg-gradient-blue{background:#007bff linear-gradient(180deg,#268fff,#007bff) repeat-x!important;color:#fff}.bg-gradient-blue.btn:not(:disabled):not(.disabled).active,.bg-gradient-blue.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-blue.btn.dropdown-toggle{background-image:none!important}.bg-gradient-blue.btn:hover{background:#007bff linear-gradient(180deg,#267fde,#0069d9) repeat-x!important;border-color:#0062cc;color:#ececec}.bg-gradient-blue.btn.active,.bg-gradient-blue.btn:active,.bg-gradient-blue.btn:not(:disabled):not(.disabled).active,.bg-gradient-blue.btn:not(:disabled):not(.disabled):active{background:#007bff linear-gradient(180deg,#267ad4,#0062cc) repeat-x!important;border-color:#005cbf;color:#fff}.bg-gradient-blue.btn.disabled,.bg-gradient-blue.btn:disabled{background-image:none!important;border-color:#007bff;color:#fff}.bg-gradient-indigo{background:#6610f2 linear-gradient(180deg,#7d34f4,#6610f2) repeat-x!important;color:#fff}.bg-gradient-indigo.btn:not(:disabled):not(.disabled).active,.bg-gradient-indigo.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-indigo.btn.dropdown-toggle{background-image:none!important}.bg-gradient-indigo.btn:hover{background:#6610f2 linear-gradient(180deg,#7030d7,#560bd0) repeat-x!important;border-color:#510bc4;color:#ececec}.bg-gradient-indigo.btn.active,.bg-gradient-indigo.btn:active,.bg-gradient-indigo.btn:not(:disabled):not(.disabled).active,.bg-gradient-indigo.btn:not(:disabled):not(.disabled):active{background:#6610f2 linear-gradient(180deg,#6b2fcd,#510bc4) repeat-x!important;border-color:#4c0ab8;color:#fff}.bg-gradient-indigo.btn.disabled,.bg-gradient-indigo.btn:disabled{background-image:none!important;border-color:#6610f2;color:#fff}.bg-gradient-purple{background:#6f42c1 linear-gradient(180deg,#855eca,#6f42c1) repeat-x!important;color:#fff}.bg-gradient-purple.btn:not(:disabled):not(.disabled).active,.bg-gradient-purple.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-purple.btn.dropdown-toggle{background-image:none!important}.bg-gradient-purple.btn:hover{background:#6f42c1 linear-gradient(180deg,#7655b4,#5e37a6) repeat-x!important;border-color:#59339d;color:#ececec}.bg-gradient-purple.btn.active,.bg-gradient-purple.btn:active,.bg-gradient-purple.btn:not(:disabled):not(.disabled).active,.bg-gradient-purple.btn:not(:disabled):not(.disabled):active{background:#6f42c1 linear-gradient(180deg,#7252ab,#59339d) repeat-x!important;border-color:#533093;color:#fff}.bg-gradient-purple.btn.disabled,.bg-gradient-purple.btn:disabled{background-image:none!important;border-color:#6f42c1;color:#fff}.bg-gradient-pink{background:#e83e8c linear-gradient(180deg,#eb5b9d,#e83e8c) repeat-x!important;color:#fff}.bg-gradient-pink.btn:not(:disabled):not(.disabled).active,.bg-gradient-pink.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-pink.btn.dropdown-toggle{background-image:none!important}.bg-gradient-pink.btn:hover{background:#e83e8c linear-gradient(180deg,#e83e8c,#e41c78) repeat-x!important;border-color:#d91a72;color:#ececec}.bg-gradient-pink.btn.active,.bg-gradient-pink.btn:active,.bg-gradient-pink.btn:not(:disabled):not(.disabled).active,.bg-gradient-pink.btn:not(:disabled):not(.disabled):active{background:#e83e8c linear-gradient(180deg,#df3c87,#d91a72) repeat-x!important;border-color:#ce196c;color:#fff}.bg-gradient-pink.btn.disabled,.bg-gradient-pink.btn:disabled{background-image:none!important;border-color:#e83e8c;color:#fff}.bg-gradient-red{background:#dc3545 linear-gradient(180deg,#e15361,#dc3545) repeat-x!important;color:#fff}.bg-gradient-red.btn:not(:disabled):not(.disabled).active,.bg-gradient-red.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-red.btn.dropdown-toggle{background-image:none!important}.bg-gradient-red.btn:hover{background:#dc3545 linear-gradient(180deg,#d04451,#c82333) repeat-x!important;border-color:#bd2130;color:#ececec}.bg-gradient-red.btn.active,.bg-gradient-red.btn:active,.bg-gradient-red.btn:not(:disabled):not(.disabled).active,.bg-gradient-red.btn:not(:disabled):not(.disabled):active{background:#dc3545 linear-gradient(180deg,#c7424f,#bd2130) repeat-x!important;border-color:#b21f2d;color:#fff}.bg-gradient-red.btn.disabled,.bg-gradient-red.btn:disabled{background-image:none!important;border-color:#dc3545;color:#fff}.bg-gradient-orange{background:#fd7e14 linear-gradient(180deg,#fd9137,#fd7e14) repeat-x!important;color:#1f2d3d}.bg-gradient-orange.btn:not(:disabled):not(.disabled).active,.bg-gradient-orange.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-orange.btn.dropdown-toggle{background-image:none!important}.bg-gradient-orange.btn:hover{background:#fd7e14 linear-gradient(180deg,#ec8128,#e96b02) repeat-x!important;border-color:#dc6502;color:#121a24}.bg-gradient-orange.btn.active,.bg-gradient-orange.btn:active,.bg-gradient-orange.btn:not(:disabled):not(.disabled).active,.bg-gradient-orange.btn:not(:disabled):not(.disabled):active{background:#fd7e14 linear-gradient(180deg,#e17c28,#dc6502) repeat-x!important;border-color:#cf5f02;color:#fff}.bg-gradient-orange.btn.disabled,.bg-gradient-orange.btn:disabled{background-image:none!important;border-color:#fd7e14;color:#1f2d3d}.bg-gradient-yellow{background:#ffc107 linear-gradient(180deg,#ffca2c,#ffc107) repeat-x!important;color:#1f2d3d}.bg-gradient-yellow.btn:not(:disabled):not(.disabled).active,.bg-gradient-yellow.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-yellow.btn.dropdown-toggle{background-image:none!important}.bg-gradient-yellow.btn:hover{background:#ffc107 linear-gradient(180deg,#e4b526,#e0a800) repeat-x!important;border-color:#d39e00;color:#121a24}.bg-gradient-yellow.btn.active,.bg-gradient-yellow.btn:active,.bg-gradient-yellow.btn:not(:disabled):not(.disabled).active,.bg-gradient-yellow.btn:not(:disabled):not(.disabled):active{background:#ffc107 linear-gradient(180deg,#daad26,#d39e00) repeat-x!important;border-color:#c69500;color:#1f2d3d}.bg-gradient-yellow.btn.disabled,.bg-gradient-yellow.btn:disabled{background-image:none!important;border-color:#ffc107;color:#1f2d3d}.bg-gradient-green{background:#28a745 linear-gradient(180deg,#48b461,#28a745) repeat-x!important;color:#fff}.bg-gradient-green.btn:not(:disabled):not(.disabled).active,.bg-gradient-green.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-green.btn.dropdown-toggle{background-image:none!important}.bg-gradient-green.btn:hover{background:#28a745 linear-gradient(180deg,#429a56,#218838) repeat-x!important;border-color:#1e7e34;color:#ececec}.bg-gradient-green.btn.active,.bg-gradient-green.btn:active,.bg-gradient-green.btn:not(:disabled):not(.disabled).active,.bg-gradient-green.btn:not(:disabled):not(.disabled):active{background:#28a745 linear-gradient(180deg,#409152,#1e7e34) repeat-x!important;border-color:#1c7430;color:#fff}.bg-gradient-green.btn.disabled,.bg-gradient-green.btn:disabled{background-image:none!important;border-color:#28a745;color:#fff}.bg-gradient-teal{background:#20c997 linear-gradient(180deg,#41d1a7,#20c997) repeat-x!important;color:#fff}.bg-gradient-teal.btn:not(:disabled):not(.disabled).active,.bg-gradient-teal.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-teal.btn.dropdown-toggle{background-image:none!important}.bg-gradient-teal.btn:hover{background:#20c997 linear-gradient(180deg,#3db592,#1ba87e) repeat-x!important;border-color:#199d76;color:#ececec}.bg-gradient-teal.btn.active,.bg-gradient-teal.btn:active,.bg-gradient-teal.btn:not(:disabled):not(.disabled).active,.bg-gradient-teal.btn:not(:disabled):not(.disabled):active{background:#20c997 linear-gradient(180deg,#3bac8b,#199d76) repeat-x!important;border-color:#17926e;color:#fff}.bg-gradient-teal.btn.disabled,.bg-gradient-teal.btn:disabled{background-image:none!important;border-color:#20c997;color:#fff}.bg-gradient-cyan{background:#17a2b8 linear-gradient(180deg,#3ab0c3,#17a2b8) repeat-x!important;color:#fff}.bg-gradient-cyan.btn:not(:disabled):not(.disabled).active,.bg-gradient-cyan.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-cyan.btn.dropdown-toggle{background-image:none!important}.bg-gradient-cyan.btn:hover{background:#17a2b8 linear-gradient(180deg,#3697a6,#138496) repeat-x!important;border-color:#117a8b;color:#ececec}.bg-gradient-cyan.btn.active,.bg-gradient-cyan.btn:active,.bg-gradient-cyan.btn:not(:disabled):not(.disabled).active,.bg-gradient-cyan.btn:not(:disabled):not(.disabled):active{background:#17a2b8 linear-gradient(180deg,#358e9c,#117a8b) repeat-x!important;border-color:#10707f;color:#fff}.bg-gradient-cyan.btn.disabled,.bg-gradient-cyan.btn:disabled{background-image:none!important;border-color:#17a2b8;color:#fff}.bg-gradient-white{background:#fff linear-gradient(180deg,#fff,#fff) repeat-x!important;color:#1f2d3d}.bg-gradient-white.btn:not(:disabled):not(.disabled).active,.bg-gradient-white.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-white.btn.dropdown-toggle{background-image:none!important}.bg-gradient-white.btn:hover{background:#fff linear-gradient(180deg,#efefef,#ececec) repeat-x!important;border-color:#e6e6e6;color:#121a24}.bg-gradient-white.btn.active,.bg-gradient-white.btn:active,.bg-gradient-white.btn:not(:disabled):not(.disabled).active,.bg-gradient-white.btn:not(:disabled):not(.disabled):active{background:#fff linear-gradient(180deg,#e9e9e9,#e6e6e6) repeat-x!important;border-color:#dfdfdf;color:#1f2d3d}.bg-gradient-white.btn.disabled,.bg-gradient-white.btn:disabled{background-image:none!important;border-color:#fff;color:#1f2d3d}.bg-gradient-gray{background:#6c757d linear-gradient(180deg,#828a91,#6c757d) repeat-x!important;color:#fff}.bg-gradient-gray.btn:not(:disabled):not(.disabled).active,.bg-gradient-gray.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-gray.btn.dropdown-toggle{background-image:none!important}.bg-gradient-gray.btn:hover{background:#6c757d linear-gradient(180deg,#73797f,#5a6268) repeat-x!important;border-color:#545b62;color:#ececec}.bg-gradient-gray.btn.active,.bg-gradient-gray.btn:active,.bg-gradient-gray.btn:not(:disabled):not(.disabled).active,.bg-gradient-gray.btn:not(:disabled):not(.disabled):active{background:#6c757d linear-gradient(180deg,#6e7479,#545b62) repeat-x!important;border-color:#4e555b;color:#fff}.bg-gradient-gray.btn.disabled,.bg-gradient-gray.btn:disabled{background-image:none!important;border-color:#6c757d;color:#fff}.bg-gradient-gray-dark{background:#343a40 linear-gradient(180deg,#52585d,#343a40) repeat-x!important;color:#fff}.bg-gradient-gray-dark.btn:not(:disabled):not(.disabled).active,.bg-gradient-gray-dark.btn:not(:disabled):not(.disabled):active,.show>.bg-gradient-gray-dark.btn.dropdown-toggle{background-image:none!important}.bg-gradient-gray-dark.btn:hover{background:#343a40 linear-gradient(180deg,#44474b,#23272b) repeat-x!important;border-color:#1d2124;color:#ececec}.bg-gradient-gray-dark.btn.active,.bg-gradient-gray-dark.btn:active,.bg-gradient-gray-dark.btn:not(:disabled):not(.disabled).active,.bg-gradient-gray-dark.btn:not(:disabled):not(.disabled):active{background:#343a40 linear-gradient(180deg,#3f4245,#1d2124) repeat-x!important;border-color:#171a1d;color:#fff}.bg-gradient-gray-dark.btn.disabled,.bg-gradient-gray-dark.btn:disabled{background-image:none!important;border-color:#343a40;color:#fff}[class^=bg-].disabled{opacity:.65}a.text-muted:hover{color:#007bff!important}.link-muted{color:#5d6974}.link-muted:focus,.link-muted:hover{color:#464f58}.link-black{color:#6c757d}.link-black:focus,.link-black:hover{color:#e6e8ea}.accent-primary .btn-link,.accent-primary .nav-tabs .nav-link,.accent-primary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#007bff}.accent-primary .btn-link:hover,.accent-primary .nav-tabs .nav-link:hover,.accent-primary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#0056b3}.accent-primary .dropdown-item.active,.accent-primary .dropdown-item:active{background-color:#007bff;color:#fff}.accent-primary .custom-control-input:checked~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.accent-primary .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-primary .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-primary .custom-file-input:focus~.custom-file-label,.accent-primary .custom-select:focus,.accent-primary .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#80bdff}.accent-primary .page-item .page-link{color:#007bff}.accent-primary .page-item.active .page-link,.accent-primary .page-item.active a{background-color:#007bff;border-color:#007bff;color:#fff}.accent-primary .page-item.disabled .page-link,.accent-primary .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-primary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-primary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-primary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-primary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-primary .page-item .page-link:focus,.dark-mode.accent-primary .page-item .page-link:hover{color:#1a88ff}.accent-secondary .btn-link,.accent-secondary .nav-tabs .nav-link,.accent-secondary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6c757d}.accent-secondary .btn-link:hover,.accent-secondary .nav-tabs .nav-link:hover,.accent-secondary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#494f54}.accent-secondary .dropdown-item.active,.accent-secondary .dropdown-item:active{background-color:#6c757d;color:#fff}.accent-secondary .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.accent-secondary .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-secondary .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-secondary .custom-file-input:focus~.custom-file-label,.accent-secondary .custom-select:focus,.accent-secondary .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#afb5ba}.accent-secondary .page-item .page-link{color:#6c757d}.accent-secondary .page-item.active .page-link,.accent-secondary .page-item.active a{background-color:#6c757d;border-color:#6c757d;color:#fff}.accent-secondary .page-item.disabled .page-link,.accent-secondary .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-secondary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-secondary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-secondary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-secondary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-secondary .page-item .page-link:focus,.dark-mode.accent-secondary .page-item .page-link:hover{color:#78828a}.accent-success .btn-link,.accent-success .nav-tabs .nav-link,.accent-success a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#28a745}.accent-success .btn-link:hover,.accent-success .nav-tabs .nav-link:hover,.accent-success a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#19692c}.accent-success .dropdown-item.active,.accent-success .dropdown-item:active{background-color:#28a745;color:#fff}.accent-success .custom-control-input:checked~.custom-control-label::before{background-color:#28a745;border-color:#145523}.accent-success .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-success .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-success .custom-file-input:focus~.custom-file-label,.accent-success .custom-select:focus,.accent-success .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#71dd8a}.accent-success .page-item .page-link{color:#28a745}.accent-success .page-item.active .page-link,.accent-success .page-item.active a{background-color:#28a745;border-color:#28a745;color:#fff}.accent-success .page-item.disabled .page-link,.accent-success .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-success [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-success [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-success [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-success [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-success .page-item .page-link:focus,.dark-mode.accent-success .page-item .page-link:hover{color:#2dbc4e}.accent-info .btn-link,.accent-info .nav-tabs .nav-link,.accent-info a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#17a2b8}.accent-info .btn-link:hover,.accent-info .nav-tabs .nav-link:hover,.accent-info a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#0f6674}.accent-info .dropdown-item.active,.accent-info .dropdown-item:active{background-color:#17a2b8;color:#fff}.accent-info .custom-control-input:checked~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.accent-info .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-info .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-info .custom-file-input:focus~.custom-file-label,.accent-info .custom-select:focus,.accent-info .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#63d9ec}.accent-info .page-item .page-link{color:#17a2b8}.accent-info .page-item.active .page-link,.accent-info .page-item.active a{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.accent-info .page-item.disabled .page-link,.accent-info .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-info [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-info [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-info [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-info [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-info .page-item .page-link:focus,.dark-mode.accent-info .page-item .page-link:hover{color:#1ab6cf}.accent-warning .btn-link,.accent-warning .nav-tabs .nav-link,.accent-warning a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#ffc107}.accent-warning .btn-link:hover,.accent-warning .nav-tabs .nav-link:hover,.accent-warning a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#ba8b00}.accent-warning .dropdown-item.active,.accent-warning .dropdown-item:active{background-color:#ffc107;color:#1f2d3d}.accent-warning .custom-control-input:checked~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.accent-warning .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-warning .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-warning .custom-file-input:focus~.custom-file-label,.accent-warning .custom-select:focus,.accent-warning .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#ffe187}.accent-warning .page-item .page-link{color:#ffc107}.accent-warning .page-item.active .page-link,.accent-warning .page-item.active a{background-color:#ffc107;border-color:#ffc107;color:#fff}.accent-warning .page-item.disabled .page-link,.accent-warning .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-warning [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-warning [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-warning [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-warning [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-warning .page-item .page-link:focus,.dark-mode.accent-warning .page-item .page-link:hover{color:#ffc721}.accent-danger .btn-link,.accent-danger .nav-tabs .nav-link,.accent-danger a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#dc3545}.accent-danger .btn-link:hover,.accent-danger .nav-tabs .nav-link:hover,.accent-danger a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#a71d2a}.accent-danger .dropdown-item.active,.accent-danger .dropdown-item:active{background-color:#dc3545;color:#fff}.accent-danger .custom-control-input:checked~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.accent-danger .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-danger .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-danger .custom-file-input:focus~.custom-file-label,.accent-danger .custom-select:focus,.accent-danger .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#efa2a9}.accent-danger .page-item .page-link{color:#dc3545}.accent-danger .page-item.active .page-link,.accent-danger .page-item.active a{background-color:#dc3545;border-color:#dc3545;color:#fff}.accent-danger .page-item.disabled .page-link,.accent-danger .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-danger [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-danger [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-danger [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-danger [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-danger .page-item .page-link:focus,.dark-mode.accent-danger .page-item .page-link:hover{color:#e04b59}.accent-light .btn-link,.accent-light .nav-tabs .nav-link,.accent-light a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f8f9fa}.accent-light .btn-link:hover,.accent-light .nav-tabs .nav-link:hover,.accent-light a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#cbd3da}.accent-light .dropdown-item.active,.accent-light .dropdown-item:active{background-color:#f8f9fa;color:#1f2d3d}.accent-light .custom-control-input:checked~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.accent-light .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-light .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-light .custom-file-input:focus~.custom-file-label,.accent-light .custom-select:focus,.accent-light .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fff}.accent-light .page-item .page-link{color:#f8f9fa}.accent-light .page-item.active .page-link,.accent-light .page-item.active a{background-color:#f8f9fa;border-color:#f8f9fa;color:#fff}.accent-light .page-item.disabled .page-link,.accent-light .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-light [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-light [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-light [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-light [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-light .page-item .page-link:focus,.dark-mode.accent-light .page-item .page-link:hover{color:#fff}.accent-dark .btn-link,.accent-dark .nav-tabs .nav-link,.accent-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#343a40}.accent-dark .btn-link:hover,.accent-dark .nav-tabs .nav-link:hover,.accent-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#121416}.accent-dark .dropdown-item.active,.accent-dark .dropdown-item:active{background-color:#343a40;color:#fff}.accent-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.accent-dark .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-dark .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-dark .custom-file-input:focus~.custom-file-label,.accent-dark .custom-select:focus,.accent-dark .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#6d7a86}.accent-dark .page-item .page-link{color:#343a40}.accent-dark .page-item.active .page-link,.accent-dark .page-item.active a{background-color:#343a40;border-color:#343a40;color:#fff}.accent-dark .page-item.disabled .page-link,.accent-dark .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-dark .page-item .page-link:focus,.dark-mode.accent-dark .page-item .page-link:hover{color:#3f474e}.accent-lightblue .btn-link,.accent-lightblue .nav-tabs .nav-link,.accent-lightblue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3c8dbc}.accent-lightblue .btn-link:hover,.accent-lightblue .nav-tabs .nav-link:hover,.accent-lightblue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#296282}.accent-lightblue .dropdown-item.active,.accent-lightblue .dropdown-item:active{background-color:#3c8dbc;color:#fff}.accent-lightblue .custom-control-input:checked~.custom-control-label::before{background-color:#3c8dbc;border-color:#23536f}.accent-lightblue .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-lightblue .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-lightblue .custom-file-input:focus~.custom-file-label,.accent-lightblue .custom-select:focus,.accent-lightblue .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#99c5de}.accent-lightblue .page-item .page-link{color:#3c8dbc}.accent-lightblue .page-item.active .page-link,.accent-lightblue .page-item.active a{background-color:#3c8dbc;border-color:#3c8dbc;color:#fff}.accent-lightblue .page-item.disabled .page-link,.accent-lightblue .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-lightblue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-lightblue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-lightblue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-lightblue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-lightblue .page-item .page-link:focus,.dark-mode.accent-lightblue .page-item .page-link:hover{color:#4c99c6}.accent-navy .btn-link,.accent-navy .nav-tabs .nav-link,.accent-navy a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#001f3f}.accent-navy .btn-link:hover,.accent-navy .nav-tabs .nav-link:hover,.accent-navy a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#000}.accent-navy .dropdown-item.active,.accent-navy .dropdown-item:active{background-color:#001f3f;color:#fff}.accent-navy .custom-control-input:checked~.custom-control-label::before{background-color:#001f3f;border-color:#000}.accent-navy .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-navy .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-navy .custom-file-input:focus~.custom-file-label,.accent-navy .custom-select:focus,.accent-navy .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#005ebf}.accent-navy .page-item .page-link{color:#001f3f}.accent-navy .page-item.active .page-link,.accent-navy .page-item.active a{background-color:#001f3f;border-color:#001f3f;color:#fff}.accent-navy .page-item.disabled .page-link,.accent-navy .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-navy [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-navy [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-navy [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-navy [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-navy .page-item .page-link:focus,.dark-mode.accent-navy .page-item .page-link:hover{color:#002c59}.accent-olive .btn-link,.accent-olive .nav-tabs .nav-link,.accent-olive a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3d9970}.accent-olive .btn-link:hover,.accent-olive .nav-tabs .nav-link:hover,.accent-olive a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#276248}.accent-olive .dropdown-item.active,.accent-olive .dropdown-item:active{background-color:#3d9970;color:#fff}.accent-olive .custom-control-input:checked~.custom-control-label::before{background-color:#3d9970;border-color:#20503b}.accent-olive .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-olive .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-olive .custom-file-input:focus~.custom-file-label,.accent-olive .custom-select:focus,.accent-olive .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#87cfaf}.accent-olive .page-item .page-link{color:#3d9970}.accent-olive .page-item.active .page-link,.accent-olive .page-item.active a{background-color:#3d9970;border-color:#3d9970;color:#fff}.accent-olive .page-item.disabled .page-link,.accent-olive .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-olive [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-olive [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-olive [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-olive [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-olive .page-item .page-link:focus,.dark-mode.accent-olive .page-item .page-link:hover{color:#44ab7d}.accent-lime .btn-link,.accent-lime .nav-tabs .nav-link,.accent-lime a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#01ff70}.accent-lime .btn-link:hover,.accent-lime .nav-tabs .nav-link:hover,.accent-lime a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#00b44e}.accent-lime .dropdown-item.active,.accent-lime .dropdown-item:active{background-color:#01ff70;color:#1f2d3d}.accent-lime .custom-control-input:checked~.custom-control-label::before{background-color:#01ff70;border-color:#009a43}.accent-lime .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-lime .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-lime .custom-file-input:focus~.custom-file-label,.accent-lime .custom-select:focus,.accent-lime .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#81ffb8}.accent-lime .page-item .page-link{color:#01ff70}.accent-lime .page-item.active .page-link,.accent-lime .page-item.active a{background-color:#01ff70;border-color:#01ff70;color:#fff}.accent-lime .page-item.disabled .page-link,.accent-lime .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-lime [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-lime [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-lime [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-lime [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-lime .page-item .page-link:focus,.dark-mode.accent-lime .page-item .page-link:hover{color:#1bff7e}.accent-fuchsia .btn-link,.accent-fuchsia .nav-tabs .nav-link,.accent-fuchsia a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f012be}.accent-fuchsia .btn-link:hover,.accent-fuchsia .nav-tabs .nav-link:hover,.accent-fuchsia a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#ab0b87}.accent-fuchsia .dropdown-item.active,.accent-fuchsia .dropdown-item:active{background-color:#f012be;color:#fff}.accent-fuchsia .custom-control-input:checked~.custom-control-label::before{background-color:#f012be;border-color:#930974}.accent-fuchsia .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-fuchsia .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-fuchsia .custom-file-input:focus~.custom-file-label,.accent-fuchsia .custom-select:focus,.accent-fuchsia .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f88adf}.accent-fuchsia .page-item .page-link{color:#f012be}.accent-fuchsia .page-item.active .page-link,.accent-fuchsia .page-item.active a{background-color:#f012be;border-color:#f012be;color:#fff}.accent-fuchsia .page-item.disabled .page-link,.accent-fuchsia .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-fuchsia [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-fuchsia [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-fuchsia [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-fuchsia [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-fuchsia .page-item .page-link:focus,.dark-mode.accent-fuchsia .page-item .page-link:hover{color:#f22ac5}.accent-maroon .btn-link,.accent-maroon .nav-tabs .nav-link,.accent-maroon a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#d81b60}.accent-maroon .btn-link:hover,.accent-maroon .nav-tabs .nav-link:hover,.accent-maroon a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#941342}.accent-maroon .dropdown-item.active,.accent-maroon .dropdown-item:active{background-color:#d81b60;color:#fff}.accent-maroon .custom-control-input:checked~.custom-control-label::before{background-color:#d81b60;border-color:#7d1038}.accent-maroon .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-maroon .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-maroon .custom-file-input:focus~.custom-file-label,.accent-maroon .custom-select:focus,.accent-maroon .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f083ab}.accent-maroon .page-item .page-link{color:#d81b60}.accent-maroon .page-item.active .page-link,.accent-maroon .page-item.active a{background-color:#d81b60;border-color:#d81b60;color:#fff}.accent-maroon .page-item.disabled .page-link,.accent-maroon .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-maroon [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-maroon [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-maroon [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-maroon [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-maroon .page-item .page-link:focus,.dark-mode.accent-maroon .page-item .page-link:hover{color:#e4286d}.accent-blue .btn-link,.accent-blue .nav-tabs .nav-link,.accent-blue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#007bff}.accent-blue .btn-link:hover,.accent-blue .nav-tabs .nav-link:hover,.accent-blue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#0056b3}.accent-blue .dropdown-item.active,.accent-blue .dropdown-item:active{background-color:#007bff;color:#fff}.accent-blue .custom-control-input:checked~.custom-control-label::before{background-color:#007bff;border-color:#004a99}.accent-blue .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-blue .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-blue .custom-file-input:focus~.custom-file-label,.accent-blue .custom-select:focus,.accent-blue .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#80bdff}.accent-blue .page-item .page-link{color:#007bff}.accent-blue .page-item.active .page-link,.accent-blue .page-item.active a{background-color:#007bff;border-color:#007bff;color:#fff}.accent-blue .page-item.disabled .page-link,.accent-blue .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-blue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-blue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-blue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-blue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-blue .page-item .page-link:focus,.dark-mode.accent-blue .page-item .page-link:hover{color:#1a88ff}.accent-indigo .btn-link,.accent-indigo .nav-tabs .nav-link,.accent-indigo a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6610f2}.accent-indigo .btn-link:hover,.accent-indigo .nav-tabs .nav-link:hover,.accent-indigo a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#4709ac}.accent-indigo .dropdown-item.active,.accent-indigo .dropdown-item:active{background-color:#6610f2;color:#fff}.accent-indigo .custom-control-input:checked~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.accent-indigo .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-indigo .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-indigo .custom-file-input:focus~.custom-file-label,.accent-indigo .custom-select:focus,.accent-indigo .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#b389f9}.accent-indigo .page-item .page-link{color:#6610f2}.accent-indigo .page-item.active .page-link,.accent-indigo .page-item.active a{background-color:#6610f2;border-color:#6610f2;color:#fff}.accent-indigo .page-item.disabled .page-link,.accent-indigo .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-indigo [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-indigo [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-indigo [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-indigo [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-indigo .page-item .page-link:focus,.dark-mode.accent-indigo .page-item .page-link:hover{color:#7528f3}.accent-purple .btn-link,.accent-purple .nav-tabs .nav-link,.accent-purple a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6f42c1}.accent-purple .btn-link:hover,.accent-purple .nav-tabs .nav-link:hover,.accent-purple a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#4e2d89}.accent-purple .dropdown-item.active,.accent-purple .dropdown-item:active{background-color:#6f42c1;color:#fff}.accent-purple .custom-control-input:checked~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.accent-purple .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-purple .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-purple .custom-file-input:focus~.custom-file-label,.accent-purple .custom-select:focus,.accent-purple .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#b8a2e0}.accent-purple .page-item .page-link{color:#6f42c1}.accent-purple .page-item.active .page-link,.accent-purple .page-item.active a{background-color:#6f42c1;border-color:#6f42c1;color:#fff}.accent-purple .page-item.disabled .page-link,.accent-purple .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-purple [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-purple [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-purple [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-purple [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-purple .page-item .page-link:focus,.dark-mode.accent-purple .page-item .page-link:hover{color:#7e55c7}.accent-pink .btn-link,.accent-pink .nav-tabs .nav-link,.accent-pink a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#e83e8c}.accent-pink .btn-link:hover,.accent-pink .nav-tabs .nav-link:hover,.accent-pink a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#c21766}.accent-pink .dropdown-item.active,.accent-pink .dropdown-item:active{background-color:#e83e8c;color:#fff}.accent-pink .custom-control-input:checked~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.accent-pink .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-pink .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-pink .custom-file-input:focus~.custom-file-label,.accent-pink .custom-select:focus,.accent-pink .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f6b0d0}.accent-pink .page-item .page-link{color:#e83e8c}.accent-pink .page-item.active .page-link,.accent-pink .page-item.active a{background-color:#e83e8c;border-color:#e83e8c;color:#fff}.accent-pink .page-item.disabled .page-link,.accent-pink .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-pink [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-pink [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-pink [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-pink [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-pink .page-item .page-link:focus,.dark-mode.accent-pink .page-item .page-link:hover{color:#eb559a}.accent-red .btn-link,.accent-red .nav-tabs .nav-link,.accent-red a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#dc3545}.accent-red .btn-link:hover,.accent-red .nav-tabs .nav-link:hover,.accent-red a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#a71d2a}.accent-red .dropdown-item.active,.accent-red .dropdown-item:active{background-color:#dc3545;color:#fff}.accent-red .custom-control-input:checked~.custom-control-label::before{background-color:#dc3545;border-color:#921925}.accent-red .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-red .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-red .custom-file-input:focus~.custom-file-label,.accent-red .custom-select:focus,.accent-red .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#efa2a9}.accent-red .page-item .page-link{color:#dc3545}.accent-red .page-item.active .page-link,.accent-red .page-item.active a{background-color:#dc3545;border-color:#dc3545;color:#fff}.accent-red .page-item.disabled .page-link,.accent-red .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-red [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-red [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-red [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-red [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-red .page-item .page-link:focus,.dark-mode.accent-red .page-item .page-link:hover{color:#e04b59}.accent-orange .btn-link,.accent-orange .nav-tabs .nav-link,.accent-orange a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#fd7e14}.accent-orange .btn-link:hover,.accent-orange .nav-tabs .nav-link:hover,.accent-orange a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#c35a02}.accent-orange .dropdown-item.active,.accent-orange .dropdown-item:active{background-color:#fd7e14;color:#1f2d3d}.accent-orange .custom-control-input:checked~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.accent-orange .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-orange .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-orange .custom-file-input:focus~.custom-file-label,.accent-orange .custom-select:focus,.accent-orange .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fec392}.accent-orange .page-item .page-link{color:#fd7e14}.accent-orange .page-item.active .page-link,.accent-orange .page-item.active a{background-color:#fd7e14;border-color:#fd7e14;color:#fff}.accent-orange .page-item.disabled .page-link,.accent-orange .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-orange [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-orange [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-orange [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-orange [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-orange .page-item .page-link:focus,.dark-mode.accent-orange .page-item .page-link:hover{color:#fd8c2d}.accent-yellow .btn-link,.accent-yellow .nav-tabs .nav-link,.accent-yellow a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#ffc107}.accent-yellow .btn-link:hover,.accent-yellow .nav-tabs .nav-link:hover,.accent-yellow a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#ba8b00}.accent-yellow .dropdown-item.active,.accent-yellow .dropdown-item:active{background-color:#ffc107;color:#1f2d3d}.accent-yellow .custom-control-input:checked~.custom-control-label::before{background-color:#ffc107;border-color:#a07800}.accent-yellow .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-yellow .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-yellow .custom-file-input:focus~.custom-file-label,.accent-yellow .custom-select:focus,.accent-yellow .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#ffe187}.accent-yellow .page-item .page-link{color:#ffc107}.accent-yellow .page-item.active .page-link,.accent-yellow .page-item.active a{background-color:#ffc107;border-color:#ffc107;color:#fff}.accent-yellow .page-item.disabled .page-link,.accent-yellow .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-yellow [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-yellow [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-yellow [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-yellow [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-yellow .page-item .page-link:focus,.dark-mode.accent-yellow .page-item .page-link:hover{color:#ffc721}.accent-green .btn-link,.accent-green .nav-tabs .nav-link,.accent-green a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#28a745}.accent-green .btn-link:hover,.accent-green .nav-tabs .nav-link:hover,.accent-green a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#19692c}.accent-green .dropdown-item.active,.accent-green .dropdown-item:active{background-color:#28a745;color:#fff}.accent-green .custom-control-input:checked~.custom-control-label::before{background-color:#28a745;border-color:#145523}.accent-green .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-green .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-green .custom-file-input:focus~.custom-file-label,.accent-green .custom-select:focus,.accent-green .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#71dd8a}.accent-green .page-item .page-link{color:#28a745}.accent-green .page-item.active .page-link,.accent-green .page-item.active a{background-color:#28a745;border-color:#28a745;color:#fff}.accent-green .page-item.disabled .page-link,.accent-green .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-green [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-green [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-green [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-green [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-green .page-item .page-link:focus,.dark-mode.accent-green .page-item .page-link:hover{color:#2dbc4e}.accent-teal .btn-link,.accent-teal .nav-tabs .nav-link,.accent-teal a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#20c997}.accent-teal .btn-link:hover,.accent-teal .nav-tabs .nav-link:hover,.accent-teal a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#158765}.accent-teal .dropdown-item.active,.accent-teal .dropdown-item:active{background-color:#20c997;color:#fff}.accent-teal .custom-control-input:checked~.custom-control-label::before{background-color:#20c997;border-color:#127155}.accent-teal .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-teal .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-teal .custom-file-input:focus~.custom-file-label,.accent-teal .custom-select:focus,.accent-teal .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#7eeaca}.accent-teal .page-item .page-link{color:#20c997}.accent-teal .page-item.active .page-link,.accent-teal .page-item.active a{background-color:#20c997;border-color:#20c997;color:#fff}.accent-teal .page-item.disabled .page-link,.accent-teal .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-teal [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-teal [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-teal [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-teal [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-teal .page-item .page-link:focus,.dark-mode.accent-teal .page-item .page-link:hover{color:#26dca6}.accent-cyan .btn-link,.accent-cyan .nav-tabs .nav-link,.accent-cyan a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#17a2b8}.accent-cyan .btn-link:hover,.accent-cyan .nav-tabs .nav-link:hover,.accent-cyan a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#0f6674}.accent-cyan .dropdown-item.active,.accent-cyan .dropdown-item:active{background-color:#17a2b8;color:#fff}.accent-cyan .custom-control-input:checked~.custom-control-label::before{background-color:#17a2b8;border-color:#0c525d}.accent-cyan .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-cyan .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-cyan .custom-file-input:focus~.custom-file-label,.accent-cyan .custom-select:focus,.accent-cyan .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#63d9ec}.accent-cyan .page-item .page-link{color:#17a2b8}.accent-cyan .page-item.active .page-link,.accent-cyan .page-item.active a{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.accent-cyan .page-item.disabled .page-link,.accent-cyan .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-cyan [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-cyan [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-cyan [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-cyan [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-cyan .page-item .page-link:focus,.dark-mode.accent-cyan .page-item .page-link:hover{color:#1ab6cf}.accent-white .btn-link,.accent-white .nav-tabs .nav-link,.accent-white a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#fff}.accent-white .btn-link:hover,.accent-white .nav-tabs .nav-link:hover,.accent-white a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#d9d9d9}.accent-white .dropdown-item.active,.accent-white .dropdown-item:active{background-color:#fff;color:#1f2d3d}.accent-white .custom-control-input:checked~.custom-control-label::before{background-color:#fff;border-color:#ccc}.accent-white .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-white .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-white .custom-file-input:focus~.custom-file-label,.accent-white .custom-select:focus,.accent-white .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fff}.accent-white .page-item .page-link{color:#fff}.accent-white .page-item.active .page-link,.accent-white .page-item.active a{background-color:#fff;border-color:#fff;color:#fff}.accent-white .page-item.disabled .page-link,.accent-white .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-white [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-white [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-white [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-white [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-white .page-item .page-link:focus,.dark-mode.accent-white .page-item .page-link:hover{color:#fff}.accent-gray .btn-link,.accent-gray .nav-tabs .nav-link,.accent-gray a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6c757d}.accent-gray .btn-link:hover,.accent-gray .nav-tabs .nav-link:hover,.accent-gray a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#494f54}.accent-gray .dropdown-item.active,.accent-gray .dropdown-item:active{background-color:#6c757d;color:#fff}.accent-gray .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.accent-gray .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-gray .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-gray .custom-file-input:focus~.custom-file-label,.accent-gray .custom-select:focus,.accent-gray .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#afb5ba}.accent-gray .page-item .page-link{color:#6c757d}.accent-gray .page-item.active .page-link,.accent-gray .page-item.active a{background-color:#6c757d;border-color:#6c757d;color:#fff}.accent-gray .page-item.disabled .page-link,.accent-gray .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-gray [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-gray [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-gray [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-gray [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-gray .page-item .page-link:focus,.dark-mode.accent-gray .page-item .page-link:hover{color:#78828a}.accent-gray-dark .btn-link,.accent-gray-dark .nav-tabs .nav-link,.accent-gray-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#343a40}.accent-gray-dark .btn-link:hover,.accent-gray-dark .nav-tabs .nav-link:hover,.accent-gray-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#121416}.accent-gray-dark .dropdown-item.active,.accent-gray-dark .dropdown-item:active{background-color:#343a40;color:#fff}.accent-gray-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.accent-gray-dark .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.accent-gray-dark .custom-control-input:focus:not(:checked)~.custom-control-label::before,.accent-gray-dark .custom-file-input:focus~.custom-file-label,.accent-gray-dark .custom-select:focus,.accent-gray-dark .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#6d7a86}.accent-gray-dark .page-item .page-link{color:#343a40}.accent-gray-dark .page-item.active .page-link,.accent-gray-dark .page-item.active a{background-color:#343a40;border-color:#343a40;color:#fff}.accent-gray-dark .page-item.disabled .page-link,.accent-gray-dark .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.accent-gray-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.accent-gray-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.accent-gray-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.accent-gray-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode.accent-gray-dark .page-item .page-link:focus,.dark-mode.accent-gray-dark .page-item .page-link:hover{color:#3f474e}[class*=accent-] a.btn-primary{color:#fff}[class*=accent-] a.btn-secondary{color:#fff}[class*=accent-] a.btn-success{color:#fff}[class*=accent-] a.btn-info{color:#fff}[class*=accent-] a.btn-warning{color:#1f2d3d}[class*=accent-] a.btn-danger{color:#fff}[class*=accent-] a.btn-light{color:#1f2d3d}[class*=accent-] a.btn-dark{color:#fff}.dark-mode .bg-light{background-color:#454d55!important;color:#fff!important}.dark-mode .link-black,.dark-mode .link-dark,.dark-mode .text-black,.dark-mode .text-dark{color:#ced4da!important}.dark-mode .bg-primary{background-color:#3f6791!important}.dark-mode .bg-primary,.dark-mode .bg-primary>a{color:#fff!important}.dark-mode .bg-primary.btn:hover{border-color:#304e6d;color:#ececec}.dark-mode .bg-primary.btn.active,.dark-mode .bg-primary.btn:active,.dark-mode .bg-primary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-primary.btn:not(:disabled):not(.disabled):active{background-color:#304e6d!important;border-color:#2c4765;color:#fff}.dark-mode .bg-secondary{background-color:#6c757d!important}.dark-mode .bg-secondary,.dark-mode .bg-secondary>a{color:#fff!important}.dark-mode .bg-secondary.btn:hover{border-color:#545b62;color:#ececec}.dark-mode .bg-secondary.btn.active,.dark-mode .bg-secondary.btn:active,.dark-mode .bg-secondary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-secondary.btn:not(:disabled):not(.disabled):active{background-color:#545b62!important;border-color:#4e555b;color:#fff}.dark-mode .bg-success{background-color:#00bc8c!important}.dark-mode .bg-success,.dark-mode .bg-success>a{color:#fff!important}.dark-mode .bg-success.btn:hover{border-color:#008966;color:#ececec}.dark-mode .bg-success.btn.active,.dark-mode .bg-success.btn:active,.dark-mode .bg-success.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-success.btn:not(:disabled):not(.disabled):active{background-color:#008966!important;border-color:#007c5d;color:#fff}.dark-mode .bg-info{background-color:#3498db!important}.dark-mode .bg-info,.dark-mode .bg-info>a{color:#fff!important}.dark-mode .bg-info.btn:hover{border-color:#217dbb;color:#ececec}.dark-mode .bg-info.btn.active,.dark-mode .bg-info.btn:active,.dark-mode .bg-info.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-info.btn:not(:disabled):not(.disabled):active{background-color:#217dbb!important;border-color:#1f76b0;color:#fff}.dark-mode .bg-warning{background-color:#f39c12!important}.dark-mode .bg-warning,.dark-mode .bg-warning>a{color:#1f2d3d!important}.dark-mode .bg-warning.btn:hover{border-color:#c87f0a;color:#121a24}.dark-mode .bg-warning.btn.active,.dark-mode .bg-warning.btn:active,.dark-mode .bg-warning.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-warning.btn:not(:disabled):not(.disabled):active{background-color:#c87f0a!important;border-color:#bc770a;color:#fff}.dark-mode .bg-danger{background-color:#e74c3c!important}.dark-mode .bg-danger,.dark-mode .bg-danger>a{color:#fff!important}.dark-mode .bg-danger.btn:hover{border-color:#d62c1a;color:#ececec}.dark-mode .bg-danger.btn.active,.dark-mode .bg-danger.btn:active,.dark-mode .bg-danger.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-danger.btn:not(:disabled):not(.disabled):active{background-color:#d62c1a!important;border-color:#ca2a19;color:#fff}.dark-mode .bg-light{background-color:#f8f9fa!important}.dark-mode .bg-light,.dark-mode .bg-light>a{color:#1f2d3d!important}.dark-mode .bg-light.btn:hover{border-color:#dae0e5;color:#121a24}.dark-mode .bg-light.btn.active,.dark-mode .bg-light.btn:active,.dark-mode .bg-light.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-light.btn:not(:disabled):not(.disabled):active{background-color:#dae0e5!important;border-color:#d3d9df;color:#1f2d3d}.dark-mode .bg-dark{background-color:#343a40!important}.dark-mode .bg-dark,.dark-mode .bg-dark>a{color:#fff!important}.dark-mode .bg-dark.btn:hover{border-color:#1d2124;color:#ececec}.dark-mode .bg-dark.btn.active,.dark-mode .bg-dark.btn:active,.dark-mode .bg-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-dark.btn:not(:disabled):not(.disabled):active{background-color:#1d2124!important;border-color:#171a1d;color:#fff}.dark-mode .bg-lightblue{background-color:#86bad8!important}.dark-mode .bg-lightblue,.dark-mode .bg-lightblue>a{color:#1f2d3d!important}.dark-mode .bg-lightblue.btn:hover{border-color:#5fa4cc;color:#121a24}.dark-mode .bg-lightblue.btn.active,.dark-mode .bg-lightblue.btn:active,.dark-mode .bg-lightblue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-lightblue.btn:not(:disabled):not(.disabled):active{background-color:#5fa4cc!important;border-color:#559ec9;color:#fff}.dark-mode .bg-navy{background-color:#002c59!important}.dark-mode .bg-navy,.dark-mode .bg-navy>a{color:#fff!important}.dark-mode .bg-navy.btn:hover{border-color:#001226;color:#ececec}.dark-mode .bg-navy.btn.active,.dark-mode .bg-navy.btn:active,.dark-mode .bg-navy.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-navy.btn:not(:disabled):not(.disabled):active{background-color:#001226!important;border-color:#000c19;color:#fff}.dark-mode .bg-olive{background-color:#74c8a3!important}.dark-mode .bg-olive,.dark-mode .bg-olive>a{color:#1f2d3d!important}.dark-mode .bg-olive.btn:hover{border-color:#50b98a;color:#121a24}.dark-mode .bg-olive.btn.active,.dark-mode .bg-olive.btn:active,.dark-mode .bg-olive.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-olive.btn:not(:disabled):not(.disabled):active{background-color:#50b98a!important;border-color:#48b484;color:#fff}.dark-mode .bg-lime{background-color:#67ffa9!important}.dark-mode .bg-lime,.dark-mode .bg-lime>a{color:#1f2d3d!important}.dark-mode .bg-lime.btn:hover{border-color:#34ff8d;color:#121a24}.dark-mode .bg-lime.btn.active,.dark-mode .bg-lime.btn:active,.dark-mode .bg-lime.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-lime.btn:not(:disabled):not(.disabled):active{background-color:#34ff8d!important;border-color:#27ff86;color:#1f2d3d}.dark-mode .bg-fuchsia{background-color:#f672d8!important}.dark-mode .bg-fuchsia,.dark-mode .bg-fuchsia>a{color:#1f2d3d!important}.dark-mode .bg-fuchsia.btn:hover{border-color:#f342cb;color:#121a24}.dark-mode .bg-fuchsia.btn.active,.dark-mode .bg-fuchsia.btn:active,.dark-mode .bg-fuchsia.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-fuchsia.btn:not(:disabled):not(.disabled):active{background-color:#f342cb!important;border-color:#f236c8;color:#fff}.dark-mode .bg-maroon{background-color:#ed6c9b!important}.dark-mode .bg-maroon,.dark-mode .bg-maroon>a{color:#1f2d3d!important}.dark-mode .bg-maroon.btn:hover{border-color:#e73f7c;color:#121a24}.dark-mode .bg-maroon.btn.active,.dark-mode .bg-maroon.btn:active,.dark-mode .bg-maroon.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-maroon.btn:not(:disabled):not(.disabled):active{background-color:#e73f7c!important;border-color:#e63475;color:#fff}.dark-mode .bg-blue{background-color:#3f6791!important}.dark-mode .bg-blue,.dark-mode .bg-blue>a{color:#fff!important}.dark-mode .bg-blue.btn:hover{border-color:#304e6d;color:#ececec}.dark-mode .bg-blue.btn.active,.dark-mode .bg-blue.btn:active,.dark-mode .bg-blue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-blue.btn:not(:disabled):not(.disabled):active{background-color:#304e6d!important;border-color:#2c4765;color:#fff}.dark-mode .bg-indigo{background-color:#6610f2!important}.dark-mode .bg-indigo,.dark-mode .bg-indigo>a{color:#fff!important}.dark-mode .bg-indigo.btn:hover{border-color:#510bc4;color:#ececec}.dark-mode .bg-indigo.btn.active,.dark-mode .bg-indigo.btn:active,.dark-mode .bg-indigo.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-indigo.btn:not(:disabled):not(.disabled):active{background-color:#510bc4!important;border-color:#4c0ab8;color:#fff}.dark-mode .bg-purple{background-color:#6f42c1!important}.dark-mode .bg-purple,.dark-mode .bg-purple>a{color:#fff!important}.dark-mode .bg-purple.btn:hover{border-color:#59339d;color:#ececec}.dark-mode .bg-purple.btn.active,.dark-mode .bg-purple.btn:active,.dark-mode .bg-purple.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-purple.btn:not(:disabled):not(.disabled):active{background-color:#59339d!important;border-color:#533093;color:#fff}.dark-mode .bg-pink{background-color:#e83e8c!important}.dark-mode .bg-pink,.dark-mode .bg-pink>a{color:#fff!important}.dark-mode .bg-pink.btn:hover{border-color:#d91a72;color:#ececec}.dark-mode .bg-pink.btn.active,.dark-mode .bg-pink.btn:active,.dark-mode .bg-pink.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-pink.btn:not(:disabled):not(.disabled):active{background-color:#d91a72!important;border-color:#ce196c;color:#fff}.dark-mode .bg-red{background-color:#e74c3c!important}.dark-mode .bg-red,.dark-mode .bg-red>a{color:#fff!important}.dark-mode .bg-red.btn:hover{border-color:#d62c1a;color:#ececec}.dark-mode .bg-red.btn.active,.dark-mode .bg-red.btn:active,.dark-mode .bg-red.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-red.btn:not(:disabled):not(.disabled):active{background-color:#d62c1a!important;border-color:#ca2a19;color:#fff}.dark-mode .bg-orange{background-color:#fd7e14!important}.dark-mode .bg-orange,.dark-mode .bg-orange>a{color:#1f2d3d!important}.dark-mode .bg-orange.btn:hover{border-color:#dc6502;color:#121a24}.dark-mode .bg-orange.btn.active,.dark-mode .bg-orange.btn:active,.dark-mode .bg-orange.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-orange.btn:not(:disabled):not(.disabled):active{background-color:#dc6502!important;border-color:#cf5f02;color:#fff}.dark-mode .bg-yellow{background-color:#f39c12!important}.dark-mode .bg-yellow,.dark-mode .bg-yellow>a{color:#1f2d3d!important}.dark-mode .bg-yellow.btn:hover{border-color:#c87f0a;color:#121a24}.dark-mode .bg-yellow.btn.active,.dark-mode .bg-yellow.btn:active,.dark-mode .bg-yellow.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-yellow.btn:not(:disabled):not(.disabled):active{background-color:#c87f0a!important;border-color:#bc770a;color:#fff}.dark-mode .bg-green{background-color:#00bc8c!important}.dark-mode .bg-green,.dark-mode .bg-green>a{color:#fff!important}.dark-mode .bg-green.btn:hover{border-color:#008966;color:#ececec}.dark-mode .bg-green.btn.active,.dark-mode .bg-green.btn:active,.dark-mode .bg-green.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-green.btn:not(:disabled):not(.disabled):active{background-color:#008966!important;border-color:#007c5d;color:#fff}.dark-mode .bg-teal{background-color:#20c997!important}.dark-mode .bg-teal,.dark-mode .bg-teal>a{color:#fff!important}.dark-mode .bg-teal.btn:hover{border-color:#199d76;color:#ececec}.dark-mode .bg-teal.btn.active,.dark-mode .bg-teal.btn:active,.dark-mode .bg-teal.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-teal.btn:not(:disabled):not(.disabled):active{background-color:#199d76!important;border-color:#17926e;color:#fff}.dark-mode .bg-cyan{background-color:#3498db!important}.dark-mode .bg-cyan,.dark-mode .bg-cyan>a{color:#fff!important}.dark-mode .bg-cyan.btn:hover{border-color:#217dbb;color:#ececec}.dark-mode .bg-cyan.btn.active,.dark-mode .bg-cyan.btn:active,.dark-mode .bg-cyan.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-cyan.btn:not(:disabled):not(.disabled):active{background-color:#217dbb!important;border-color:#1f76b0;color:#fff}.dark-mode .bg-white{background-color:#fff!important}.dark-mode .bg-white,.dark-mode .bg-white>a{color:#1f2d3d!important}.dark-mode .bg-white.btn:hover{border-color:#e6e6e6;color:#121a24}.dark-mode .bg-white.btn.active,.dark-mode .bg-white.btn:active,.dark-mode .bg-white.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-white.btn:not(:disabled):not(.disabled):active{background-color:#e6e6e6!important;border-color:#dfdfdf;color:#1f2d3d}.dark-mode .bg-gray{background-color:#6c757d!important}.dark-mode .bg-gray,.dark-mode .bg-gray>a{color:#fff!important}.dark-mode .bg-gray.btn:hover{border-color:#545b62;color:#ececec}.dark-mode .bg-gray.btn.active,.dark-mode .bg-gray.btn:active,.dark-mode .bg-gray.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gray.btn:not(:disabled):not(.disabled):active{background-color:#545b62!important;border-color:#4e555b;color:#fff}.dark-mode .bg-gray-dark{background-color:#343a40!important}.dark-mode .bg-gray-dark,.dark-mode .bg-gray-dark>a{color:#fff!important}.dark-mode .bg-gray-dark.btn:hover{border-color:#1d2124;color:#ececec}.dark-mode .bg-gray-dark.btn.active,.dark-mode .bg-gray-dark.btn:active,.dark-mode .bg-gray-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gray-dark.btn:not(:disabled):not(.disabled):active{background-color:#1d2124!important;border-color:#171a1d;color:#fff}.dark-mode .bg-gradient-primary{background:#3f6791 linear-gradient(180deg,#5c7ea2,#3f6791) repeat-x!important;color:#fff}.dark-mode .bg-gradient-primary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-primary.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-primary.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-primary.btn:hover{background:#3f6791 linear-gradient(180deg,#526e8b,#335476) repeat-x!important;border-color:#304e6d;color:#ececec}.dark-mode .bg-gradient-primary.btn.active,.dark-mode .bg-gradient-primary.btn:active,.dark-mode .bg-gradient-primary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-primary.btn:not(:disabled):not(.disabled):active{background:#3f6791 linear-gradient(180deg,#4f6883,#304e6d) repeat-x!important;border-color:#2c4765;color:#fff}.dark-mode .bg-gradient-primary.btn.disabled,.dark-mode .bg-gradient-primary.btn:disabled{background-image:none!important;border-color:#3f6791;color:#fff}.dark-mode .bg-gradient-secondary{background:#6c757d linear-gradient(180deg,#828a91,#6c757d) repeat-x!important;color:#fff}.dark-mode .bg-gradient-secondary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-secondary.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-secondary.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-secondary.btn:hover{background:#6c757d linear-gradient(180deg,#73797f,#5a6268) repeat-x!important;border-color:#545b62;color:#ececec}.dark-mode .bg-gradient-secondary.btn.active,.dark-mode .bg-gradient-secondary.btn:active,.dark-mode .bg-gradient-secondary.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-secondary.btn:not(:disabled):not(.disabled):active{background:#6c757d linear-gradient(180deg,#6e7479,#545b62) repeat-x!important;border-color:#4e555b;color:#fff}.dark-mode .bg-gradient-secondary.btn.disabled,.dark-mode .bg-gradient-secondary.btn:disabled{background-image:none!important;border-color:#6c757d;color:#fff}.dark-mode .bg-gradient-success{background:#00bc8c linear-gradient(180deg,#26c69d,#00bc8c) repeat-x!important;color:#fff}.dark-mode .bg-gradient-success.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-success.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-success.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-success.btn:hover{background:#00bc8c linear-gradient(180deg,#26a685,#009670) repeat-x!important;border-color:#008966;color:#ececec}.dark-mode .bg-gradient-success.btn.active,.dark-mode .bg-gradient-success.btn:active,.dark-mode .bg-gradient-success.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-success.btn:not(:disabled):not(.disabled):active{background:#00bc8c linear-gradient(180deg,#269b7d,#008966) repeat-x!important;border-color:#007c5d;color:#fff}.dark-mode .bg-gradient-success.btn.disabled,.dark-mode .bg-gradient-success.btn:disabled{background-image:none!important;border-color:#00bc8c;color:#fff}.dark-mode .bg-gradient-info{background:#3498db linear-gradient(180deg,#52a7e0,#3498db) repeat-x!important;color:#fff}.dark-mode .bg-gradient-info.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-info.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-info.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-info.btn:hover{background:#3498db linear-gradient(180deg,#4497ce,#2384c6) repeat-x!important;border-color:#217dbb;color:#ececec}.dark-mode .bg-gradient-info.btn.active,.dark-mode .bg-gradient-info.btn:active,.dark-mode .bg-gradient-info.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-info.btn:not(:disabled):not(.disabled):active{background:#3498db linear-gradient(180deg,#4291c5,#217dbb) repeat-x!important;border-color:#1f76b0;color:#fff}.dark-mode .bg-gradient-info.btn.disabled,.dark-mode .bg-gradient-info.btn:disabled{background-image:none!important;border-color:#3498db;color:#fff}.dark-mode .bg-gradient-warning{background:#f39c12 linear-gradient(180deg,#f5ab36,#f39c12) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-warning.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-warning.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-warning.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-warning.btn:hover{background:#f39c12 linear-gradient(180deg,#da982f,#d4860b) repeat-x!important;border-color:#c87f0a;color:#121a24}.dark-mode .bg-gradient-warning.btn.active,.dark-mode .bg-gradient-warning.btn:active,.dark-mode .bg-gradient-warning.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-warning.btn:not(:disabled):not(.disabled):active{background:#f39c12 linear-gradient(180deg,#d0922f,#c87f0a) repeat-x!important;border-color:#bc770a;color:#fff}.dark-mode .bg-gradient-warning.btn.disabled,.dark-mode .bg-gradient-warning.btn:disabled{background-image:none!important;border-color:#f39c12;color:#1f2d3d}.dark-mode .bg-gradient-danger{background:#e74c3c linear-gradient(180deg,#eb6759,#e74c3c) repeat-x!important;color:#fff}.dark-mode .bg-gradient-danger.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-danger.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-danger.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-danger.btn:hover{background:#e74c3c linear-gradient(180deg,#e64d3e,#e12e1c) repeat-x!important;border-color:#d62c1a;color:#ececec}.dark-mode .bg-gradient-danger.btn.active,.dark-mode .bg-gradient-danger.btn:active,.dark-mode .bg-gradient-danger.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-danger.btn:not(:disabled):not(.disabled):active{background:#e74c3c linear-gradient(180deg,#dc4c3d,#d62c1a) repeat-x!important;border-color:#ca2a19;color:#fff}.dark-mode .bg-gradient-danger.btn.disabled,.dark-mode .bg-gradient-danger.btn:disabled{background-image:none!important;border-color:#e74c3c;color:#fff}.dark-mode .bg-gradient-light{background:#f8f9fa linear-gradient(180deg,#f9fafb,#f8f9fa) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-light.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-light.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-light.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-light.btn:hover{background:#f8f9fa linear-gradient(180deg,#e6eaed,#e2e6ea) repeat-x!important;border-color:#dae0e5;color:#121a24}.dark-mode .bg-gradient-light.btn.active,.dark-mode .bg-gradient-light.btn:active,.dark-mode .bg-gradient-light.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-light.btn:not(:disabled):not(.disabled):active{background:#f8f9fa linear-gradient(180deg,#e0e4e9,#dae0e5) repeat-x!important;border-color:#d3d9df;color:#1f2d3d}.dark-mode .bg-gradient-light.btn.disabled,.dark-mode .bg-gradient-light.btn:disabled{background-image:none!important;border-color:#f8f9fa;color:#1f2d3d}.dark-mode .bg-gradient-dark{background:#343a40 linear-gradient(180deg,#52585d,#343a40) repeat-x!important;color:#fff}.dark-mode .bg-gradient-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-dark.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-dark.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-dark.btn:hover{background:#343a40 linear-gradient(180deg,#44474b,#23272b) repeat-x!important;border-color:#1d2124;color:#ececec}.dark-mode .bg-gradient-dark.btn.active,.dark-mode .bg-gradient-dark.btn:active,.dark-mode .bg-gradient-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-dark.btn:not(:disabled):not(.disabled):active{background:#343a40 linear-gradient(180deg,#3f4245,#1d2124) repeat-x!important;border-color:#171a1d;color:#fff}.dark-mode .bg-gradient-dark.btn.disabled,.dark-mode .bg-gradient-dark.btn:disabled{background-image:none!important;border-color:#343a40;color:#fff}.dark-mode .bg-gradient-lightblue{background:#86bad8 linear-gradient(180deg,#98c4de,#86bad8) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-lightblue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-lightblue.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-lightblue.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-lightblue.btn:hover{background:#86bad8 linear-gradient(180deg,#7fb6d6,#69a9cf) repeat-x!important;border-color:#5fa4cc;color:#121a24}.dark-mode .bg-gradient-lightblue.btn.active,.dark-mode .bg-gradient-lightblue.btn:active,.dark-mode .bg-gradient-lightblue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-lightblue.btn:not(:disabled):not(.disabled):active{background:#86bad8 linear-gradient(180deg,#77b2d4,#5fa4cc) repeat-x!important;border-color:#559ec9;color:#fff}.dark-mode .bg-gradient-lightblue.btn.disabled,.dark-mode .bg-gradient-lightblue.btn:disabled{background-image:none!important;border-color:#86bad8;color:#1f2d3d}.dark-mode .bg-gradient-navy{background:#002c59 linear-gradient(180deg,#264b71,#002c59) repeat-x!important;color:#fff}.dark-mode .bg-gradient-navy.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-navy.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-navy.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-navy.btn:hover{background:#002c59 linear-gradient(180deg,#263b51,#001932) repeat-x!important;border-color:#001226;color:#ececec}.dark-mode .bg-gradient-navy.btn.active,.dark-mode .bg-gradient-navy.btn:active,.dark-mode .bg-gradient-navy.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-navy.btn:not(:disabled):not(.disabled):active{background:#002c59 linear-gradient(180deg,#263646,#001226) repeat-x!important;border-color:#000c19;color:#fff}.dark-mode .bg-gradient-navy.btn.disabled,.dark-mode .bg-gradient-navy.btn:disabled{background-image:none!important;border-color:#002c59;color:#fff}.dark-mode .bg-gradient-olive{background:#74c8a3 linear-gradient(180deg,#89d0b0,#74c8a3) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-olive.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-olive.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-olive.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-olive.btn:hover{background:#74c8a3 linear-gradient(180deg,#72c7a1,#59bd90) repeat-x!important;border-color:#50b98a;color:#121a24}.dark-mode .bg-gradient-olive.btn.active,.dark-mode .bg-gradient-olive.btn:active,.dark-mode .bg-gradient-olive.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-olive.btn:not(:disabled):not(.disabled):active{background:#74c8a3 linear-gradient(180deg,#6ac49c,#50b98a) repeat-x!important;border-color:#48b484;color:#fff}.dark-mode .bg-gradient-olive.btn.disabled,.dark-mode .bg-gradient-olive.btn:disabled{background-image:none!important;border-color:#74c8a3;color:#1f2d3d}.dark-mode .bg-gradient-lime{background:#67ffa9 linear-gradient(180deg,#7effb6,#67ffa9) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-lime.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-lime.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-lime.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-lime.btn:hover{background:#67ffa9 linear-gradient(180deg,#5dffa4,#41ff94) repeat-x!important;border-color:#34ff8d;color:#121a24}.dark-mode .bg-gradient-lime.btn.active,.dark-mode .bg-gradient-lime.btn:active,.dark-mode .bg-gradient-lime.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-lime.btn:not(:disabled):not(.disabled):active{background:#67ffa9 linear-gradient(180deg,#52ff9e,#34ff8d) repeat-x!important;border-color:#27ff86;color:#1f2d3d}.dark-mode .bg-gradient-lime.btn.disabled,.dark-mode .bg-gradient-lime.btn:disabled{background-image:none!important;border-color:#67ffa9;color:#1f2d3d}.dark-mode .bg-gradient-fuchsia{background:#f672d8 linear-gradient(180deg,#f787de,#f672d8) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-fuchsia.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-fuchsia.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-fuchsia.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-fuchsia.btn:hover{background:#f672d8 linear-gradient(180deg,#f569d6,#f44ece) repeat-x!important;border-color:#f342cb;color:#121a24}.dark-mode .bg-gradient-fuchsia.btn.active,.dark-mode .bg-gradient-fuchsia.btn:active,.dark-mode .bg-gradient-fuchsia.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-fuchsia.btn:not(:disabled):not(.disabled):active{background:#f672d8 linear-gradient(180deg,#f55ed3,#f342cb) repeat-x!important;border-color:#f236c8;color:#fff}.dark-mode .bg-gradient-fuchsia.btn.disabled,.dark-mode .bg-gradient-fuchsia.btn:disabled{background-image:none!important;border-color:#f672d8;color:#1f2d3d}.dark-mode .bg-gradient-maroon{background:#ed6c9b linear-gradient(180deg,#ef82aa,#ed6c9b) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-maroon.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-maroon.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-maroon.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-maroon.btn:hover{background:#ed6c9b linear-gradient(180deg,#ec6596,#e84a84) repeat-x!important;border-color:#e73f7c;color:#121a24}.dark-mode .bg-gradient-maroon.btn.active,.dark-mode .bg-gradient-maroon.btn:active,.dark-mode .bg-gradient-maroon.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-maroon.btn:not(:disabled):not(.disabled):active{background:#ed6c9b linear-gradient(180deg,#eb5c90,#e73f7c) repeat-x!important;border-color:#e63475;color:#fff}.dark-mode .bg-gradient-maroon.btn.disabled,.dark-mode .bg-gradient-maroon.btn:disabled{background-image:none!important;border-color:#ed6c9b;color:#1f2d3d}.dark-mode .bg-gradient-blue{background:#3f6791 linear-gradient(180deg,#5c7ea2,#3f6791) repeat-x!important;color:#fff}.dark-mode .bg-gradient-blue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-blue.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-blue.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-blue.btn:hover{background:#3f6791 linear-gradient(180deg,#526e8b,#335476) repeat-x!important;border-color:#304e6d;color:#ececec}.dark-mode .bg-gradient-blue.btn.active,.dark-mode .bg-gradient-blue.btn:active,.dark-mode .bg-gradient-blue.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-blue.btn:not(:disabled):not(.disabled):active{background:#3f6791 linear-gradient(180deg,#4f6883,#304e6d) repeat-x!important;border-color:#2c4765;color:#fff}.dark-mode .bg-gradient-blue.btn.disabled,.dark-mode .bg-gradient-blue.btn:disabled{background-image:none!important;border-color:#3f6791;color:#fff}.dark-mode .bg-gradient-indigo{background:#6610f2 linear-gradient(180deg,#7d34f4,#6610f2) repeat-x!important;color:#fff}.dark-mode .bg-gradient-indigo.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-indigo.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-indigo.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-indigo.btn:hover{background:#6610f2 linear-gradient(180deg,#7030d7,#560bd0) repeat-x!important;border-color:#510bc4;color:#ececec}.dark-mode .bg-gradient-indigo.btn.active,.dark-mode .bg-gradient-indigo.btn:active,.dark-mode .bg-gradient-indigo.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-indigo.btn:not(:disabled):not(.disabled):active{background:#6610f2 linear-gradient(180deg,#6b2fcd,#510bc4) repeat-x!important;border-color:#4c0ab8;color:#fff}.dark-mode .bg-gradient-indigo.btn.disabled,.dark-mode .bg-gradient-indigo.btn:disabled{background-image:none!important;border-color:#6610f2;color:#fff}.dark-mode .bg-gradient-purple{background:#6f42c1 linear-gradient(180deg,#855eca,#6f42c1) repeat-x!important;color:#fff}.dark-mode .bg-gradient-purple.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-purple.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-purple.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-purple.btn:hover{background:#6f42c1 linear-gradient(180deg,#7655b4,#5e37a6) repeat-x!important;border-color:#59339d;color:#ececec}.dark-mode .bg-gradient-purple.btn.active,.dark-mode .bg-gradient-purple.btn:active,.dark-mode .bg-gradient-purple.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-purple.btn:not(:disabled):not(.disabled):active{background:#6f42c1 linear-gradient(180deg,#7252ab,#59339d) repeat-x!important;border-color:#533093;color:#fff}.dark-mode .bg-gradient-purple.btn.disabled,.dark-mode .bg-gradient-purple.btn:disabled{background-image:none!important;border-color:#6f42c1;color:#fff}.dark-mode .bg-gradient-pink{background:#e83e8c linear-gradient(180deg,#eb5b9d,#e83e8c) repeat-x!important;color:#fff}.dark-mode .bg-gradient-pink.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-pink.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-pink.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-pink.btn:hover{background:#e83e8c linear-gradient(180deg,#e83e8c,#e41c78) repeat-x!important;border-color:#d91a72;color:#ececec}.dark-mode .bg-gradient-pink.btn.active,.dark-mode .bg-gradient-pink.btn:active,.dark-mode .bg-gradient-pink.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-pink.btn:not(:disabled):not(.disabled):active{background:#e83e8c linear-gradient(180deg,#df3c87,#d91a72) repeat-x!important;border-color:#ce196c;color:#fff}.dark-mode .bg-gradient-pink.btn.disabled,.dark-mode .bg-gradient-pink.btn:disabled{background-image:none!important;border-color:#e83e8c;color:#fff}.dark-mode .bg-gradient-red{background:#e74c3c linear-gradient(180deg,#eb6759,#e74c3c) repeat-x!important;color:#fff}.dark-mode .bg-gradient-red.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-red.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-red.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-red.btn:hover{background:#e74c3c linear-gradient(180deg,#e64d3e,#e12e1c) repeat-x!important;border-color:#d62c1a;color:#ececec}.dark-mode .bg-gradient-red.btn.active,.dark-mode .bg-gradient-red.btn:active,.dark-mode .bg-gradient-red.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-red.btn:not(:disabled):not(.disabled):active{background:#e74c3c linear-gradient(180deg,#dc4c3d,#d62c1a) repeat-x!important;border-color:#ca2a19;color:#fff}.dark-mode .bg-gradient-red.btn.disabled,.dark-mode .bg-gradient-red.btn:disabled{background-image:none!important;border-color:#e74c3c;color:#fff}.dark-mode .bg-gradient-orange{background:#fd7e14 linear-gradient(180deg,#fd9137,#fd7e14) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-orange.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-orange.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-orange.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-orange.btn:hover{background:#fd7e14 linear-gradient(180deg,#ec8128,#e96b02) repeat-x!important;border-color:#dc6502;color:#121a24}.dark-mode .bg-gradient-orange.btn.active,.dark-mode .bg-gradient-orange.btn:active,.dark-mode .bg-gradient-orange.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-orange.btn:not(:disabled):not(.disabled):active{background:#fd7e14 linear-gradient(180deg,#e17c28,#dc6502) repeat-x!important;border-color:#cf5f02;color:#fff}.dark-mode .bg-gradient-orange.btn.disabled,.dark-mode .bg-gradient-orange.btn:disabled{background-image:none!important;border-color:#fd7e14;color:#1f2d3d}.dark-mode .bg-gradient-yellow{background:#f39c12 linear-gradient(180deg,#f5ab36,#f39c12) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-yellow.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-yellow.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-yellow.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-yellow.btn:hover{background:#f39c12 linear-gradient(180deg,#da982f,#d4860b) repeat-x!important;border-color:#c87f0a;color:#121a24}.dark-mode .bg-gradient-yellow.btn.active,.dark-mode .bg-gradient-yellow.btn:active,.dark-mode .bg-gradient-yellow.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-yellow.btn:not(:disabled):not(.disabled):active{background:#f39c12 linear-gradient(180deg,#d0922f,#c87f0a) repeat-x!important;border-color:#bc770a;color:#fff}.dark-mode .bg-gradient-yellow.btn.disabled,.dark-mode .bg-gradient-yellow.btn:disabled{background-image:none!important;border-color:#f39c12;color:#1f2d3d}.dark-mode .bg-gradient-green{background:#00bc8c linear-gradient(180deg,#26c69d,#00bc8c) repeat-x!important;color:#fff}.dark-mode .bg-gradient-green.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-green.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-green.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-green.btn:hover{background:#00bc8c linear-gradient(180deg,#26a685,#009670) repeat-x!important;border-color:#008966;color:#ececec}.dark-mode .bg-gradient-green.btn.active,.dark-mode .bg-gradient-green.btn:active,.dark-mode .bg-gradient-green.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-green.btn:not(:disabled):not(.disabled):active{background:#00bc8c linear-gradient(180deg,#269b7d,#008966) repeat-x!important;border-color:#007c5d;color:#fff}.dark-mode .bg-gradient-green.btn.disabled,.dark-mode .bg-gradient-green.btn:disabled{background-image:none!important;border-color:#00bc8c;color:#fff}.dark-mode .bg-gradient-teal{background:#20c997 linear-gradient(180deg,#41d1a7,#20c997) repeat-x!important;color:#fff}.dark-mode .bg-gradient-teal.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-teal.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-teal.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-teal.btn:hover{background:#20c997 linear-gradient(180deg,#3db592,#1ba87e) repeat-x!important;border-color:#199d76;color:#ececec}.dark-mode .bg-gradient-teal.btn.active,.dark-mode .bg-gradient-teal.btn:active,.dark-mode .bg-gradient-teal.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-teal.btn:not(:disabled):not(.disabled):active{background:#20c997 linear-gradient(180deg,#3bac8b,#199d76) repeat-x!important;border-color:#17926e;color:#fff}.dark-mode .bg-gradient-teal.btn.disabled,.dark-mode .bg-gradient-teal.btn:disabled{background-image:none!important;border-color:#20c997;color:#fff}.dark-mode .bg-gradient-cyan{background:#3498db linear-gradient(180deg,#52a7e0,#3498db) repeat-x!important;color:#fff}.dark-mode .bg-gradient-cyan.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-cyan.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-cyan.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-cyan.btn:hover{background:#3498db linear-gradient(180deg,#4497ce,#2384c6) repeat-x!important;border-color:#217dbb;color:#ececec}.dark-mode .bg-gradient-cyan.btn.active,.dark-mode .bg-gradient-cyan.btn:active,.dark-mode .bg-gradient-cyan.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-cyan.btn:not(:disabled):not(.disabled):active{background:#3498db linear-gradient(180deg,#4291c5,#217dbb) repeat-x!important;border-color:#1f76b0;color:#fff}.dark-mode .bg-gradient-cyan.btn.disabled,.dark-mode .bg-gradient-cyan.btn:disabled{background-image:none!important;border-color:#3498db;color:#fff}.dark-mode .bg-gradient-white{background:#fff linear-gradient(180deg,#fff,#fff) repeat-x!important;color:#1f2d3d}.dark-mode .bg-gradient-white.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-white.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-white.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-white.btn:hover{background:#fff linear-gradient(180deg,#efefef,#ececec) repeat-x!important;border-color:#e6e6e6;color:#121a24}.dark-mode .bg-gradient-white.btn.active,.dark-mode .bg-gradient-white.btn:active,.dark-mode .bg-gradient-white.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-white.btn:not(:disabled):not(.disabled):active{background:#fff linear-gradient(180deg,#e9e9e9,#e6e6e6) repeat-x!important;border-color:#dfdfdf;color:#1f2d3d}.dark-mode .bg-gradient-white.btn.disabled,.dark-mode .bg-gradient-white.btn:disabled{background-image:none!important;border-color:#fff;color:#1f2d3d}.dark-mode .bg-gradient-gray{background:#6c757d linear-gradient(180deg,#828a91,#6c757d) repeat-x!important;color:#fff}.dark-mode .bg-gradient-gray.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-gray.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-gray.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-gray.btn:hover{background:#6c757d linear-gradient(180deg,#73797f,#5a6268) repeat-x!important;border-color:#545b62;color:#ececec}.dark-mode .bg-gradient-gray.btn.active,.dark-mode .bg-gradient-gray.btn:active,.dark-mode .bg-gradient-gray.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-gray.btn:not(:disabled):not(.disabled):active{background:#6c757d linear-gradient(180deg,#6e7479,#545b62) repeat-x!important;border-color:#4e555b;color:#fff}.dark-mode .bg-gradient-gray.btn.disabled,.dark-mode .bg-gradient-gray.btn:disabled{background-image:none!important;border-color:#6c757d;color:#fff}.dark-mode .bg-gradient-gray-dark{background:#343a40 linear-gradient(180deg,#52585d,#343a40) repeat-x!important;color:#fff}.dark-mode .bg-gradient-gray-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-gray-dark.btn:not(:disabled):not(.disabled):active,.show>.dark-mode .bg-gradient-gray-dark.btn.dropdown-toggle{background-image:none!important}.dark-mode .bg-gradient-gray-dark.btn:hover{background:#343a40 linear-gradient(180deg,#44474b,#23272b) repeat-x!important;border-color:#1d2124;color:#ececec}.dark-mode .bg-gradient-gray-dark.btn.active,.dark-mode .bg-gradient-gray-dark.btn:active,.dark-mode .bg-gradient-gray-dark.btn:not(:disabled):not(.disabled).active,.dark-mode .bg-gradient-gray-dark.btn:not(:disabled):not(.disabled):active{background:#343a40 linear-gradient(180deg,#3f4245,#1d2124) repeat-x!important;border-color:#171a1d;color:#fff}.dark-mode .bg-gradient-gray-dark.btn.disabled,.dark-mode .bg-gradient-gray-dark.btn:disabled{background-image:none!important;border-color:#343a40;color:#fff}.dark-mode .accent-primary .btn-link,.dark-mode .accent-primary .nav-tabs .nav-link,.dark-mode .accent-primary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3f6791}.dark-mode .accent-primary .btn-link:hover,.dark-mode .accent-primary .nav-tabs .nav-link:hover,.dark-mode .accent-primary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#28415c}.dark-mode .accent-primary .dropdown-item.active,.dark-mode .accent-primary .dropdown-item:active{background-color:#3f6791;color:#fff}.dark-mode .accent-primary .custom-control-input:checked~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .accent-primary .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-primary .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-primary .custom-file-input:focus~.custom-file-label,.dark-mode .accent-primary .custom-select:focus,.dark-mode .accent-primary .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#85a7ca}.dark-mode .accent-primary .page-item .page-link{color:#3f6791}.dark-mode .accent-primary .page-item.active .page-link,.dark-mode .accent-primary .page-item.active a{background-color:#3f6791;border-color:#3f6791;color:#fff}.dark-mode .accent-primary .page-item.disabled .page-link,.dark-mode .accent-primary .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-primary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-primary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-primary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-primary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-primary .page-item .page-link:focus,.dark-mode .dark-mode.accent-primary .page-item .page-link:hover{color:#4774a3}.dark-mode .accent-secondary .btn-link,.dark-mode .accent-secondary .nav-tabs .nav-link,.dark-mode .accent-secondary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6c757d}.dark-mode .accent-secondary .btn-link:hover,.dark-mode .accent-secondary .nav-tabs .nav-link:hover,.dark-mode .accent-secondary a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#494f54}.dark-mode .accent-secondary .dropdown-item.active,.dark-mode .accent-secondary .dropdown-item:active{background-color:#6c757d;color:#fff}.dark-mode .accent-secondary .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .accent-secondary .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-secondary .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-secondary .custom-file-input:focus~.custom-file-label,.dark-mode .accent-secondary .custom-select:focus,.dark-mode .accent-secondary .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#afb5ba}.dark-mode .accent-secondary .page-item .page-link{color:#6c757d}.dark-mode .accent-secondary .page-item.active .page-link,.dark-mode .accent-secondary .page-item.active a{background-color:#6c757d;border-color:#6c757d;color:#fff}.dark-mode .accent-secondary .page-item.disabled .page-link,.dark-mode .accent-secondary .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-secondary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-secondary [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-secondary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-secondary [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-secondary .page-item .page-link:focus,.dark-mode .dark-mode.accent-secondary .page-item .page-link:hover{color:#78828a}.dark-mode .accent-success .btn-link,.dark-mode .accent-success .nav-tabs .nav-link,.dark-mode .accent-success a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#00bc8c}.dark-mode .accent-success .btn-link:hover,.dark-mode .accent-success .nav-tabs .nav-link:hover,.dark-mode .accent-success a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#007053}.dark-mode .accent-success .dropdown-item.active,.dark-mode .accent-success .dropdown-item:active{background-color:#00bc8c;color:#fff}.dark-mode .accent-success .custom-control-input:checked~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .accent-success .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-success .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-success .custom-file-input:focus~.custom-file-label,.dark-mode .accent-success .custom-select:focus,.dark-mode .accent-success .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#3dffcd}.dark-mode .accent-success .page-item .page-link{color:#00bc8c}.dark-mode .accent-success .page-item.active .page-link,.dark-mode .accent-success .page-item.active a{background-color:#00bc8c;border-color:#00bc8c;color:#fff}.dark-mode .accent-success .page-item.disabled .page-link,.dark-mode .accent-success .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-success [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-success [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-success [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-success [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-success .page-item .page-link:focus,.dark-mode .dark-mode.accent-success .page-item .page-link:hover{color:#00d69f}.dark-mode .accent-info .btn-link,.dark-mode .accent-info .nav-tabs .nav-link,.dark-mode .accent-info a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3498db}.dark-mode .accent-info .btn-link:hover,.dark-mode .accent-info .nav-tabs .nav-link:hover,.dark-mode .accent-info a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#1d6fa5}.dark-mode .accent-info .dropdown-item.active,.dark-mode .accent-info .dropdown-item:active{background-color:#3498db;color:#fff}.dark-mode .accent-info .custom-control-input:checked~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .accent-info .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-info .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-info .custom-file-input:focus~.custom-file-label,.dark-mode .accent-info .custom-select:focus,.dark-mode .accent-info .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#a0cfee}.dark-mode .accent-info .page-item .page-link{color:#3498db}.dark-mode .accent-info .page-item.active .page-link,.dark-mode .accent-info .page-item.active a{background-color:#3498db;border-color:#3498db;color:#fff}.dark-mode .accent-info .page-item.disabled .page-link,.dark-mode .accent-info .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-info [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-info [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-info [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-info [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-info .page-item .page-link:focus,.dark-mode .dark-mode.accent-info .page-item .page-link:hover{color:#4aa3df}.dark-mode .accent-warning .btn-link,.dark-mode .accent-warning .nav-tabs .nav-link,.dark-mode .accent-warning a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f39c12}.dark-mode .accent-warning .btn-link:hover,.dark-mode .accent-warning .nav-tabs .nav-link:hover,.dark-mode .accent-warning a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#b06f09}.dark-mode .accent-warning .dropdown-item.active,.dark-mode .accent-warning .dropdown-item:active{background-color:#f39c12;color:#1f2d3d}.dark-mode .accent-warning .custom-control-input:checked~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .accent-warning .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-warning .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-warning .custom-file-input:focus~.custom-file-label,.dark-mode .accent-warning .custom-select:focus,.dark-mode .accent-warning .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f9cf8b}.dark-mode .accent-warning .page-item .page-link{color:#f39c12}.dark-mode .accent-warning .page-item.active .page-link,.dark-mode .accent-warning .page-item.active a{background-color:#f39c12;border-color:#f39c12;color:#fff}.dark-mode .accent-warning .page-item.disabled .page-link,.dark-mode .accent-warning .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-warning [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-warning [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-warning [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-warning [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-warning .page-item .page-link:focus,.dark-mode .dark-mode.accent-warning .page-item .page-link:hover{color:#f4a62a}.dark-mode .accent-danger .btn-link,.dark-mode .accent-danger .nav-tabs .nav-link,.dark-mode .accent-danger a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#e74c3c}.dark-mode .accent-danger .btn-link:hover,.dark-mode .accent-danger .nav-tabs .nav-link:hover,.dark-mode .accent-danger a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#bf2718}.dark-mode .accent-danger .dropdown-item.active,.dark-mode .accent-danger .dropdown-item:active{background-color:#e74c3c;color:#fff}.dark-mode .accent-danger .custom-control-input:checked~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .accent-danger .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-danger .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-danger .custom-file-input:focus~.custom-file-label,.dark-mode .accent-danger .custom-select:focus,.dark-mode .accent-danger .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f5b4ae}.dark-mode .accent-danger .page-item .page-link{color:#e74c3c}.dark-mode .accent-danger .page-item.active .page-link,.dark-mode .accent-danger .page-item.active a{background-color:#e74c3c;border-color:#e74c3c;color:#fff}.dark-mode .accent-danger .page-item.disabled .page-link,.dark-mode .accent-danger .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-danger [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-danger [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-danger [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-danger [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-danger .page-item .page-link:focus,.dark-mode .dark-mode.accent-danger .page-item .page-link:hover{color:#ea6153}.dark-mode .accent-light .btn-link,.dark-mode .accent-light .nav-tabs .nav-link,.dark-mode .accent-light a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f8f9fa}.dark-mode .accent-light .btn-link:hover,.dark-mode .accent-light .nav-tabs .nav-link:hover,.dark-mode .accent-light a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#cbd3da}.dark-mode .accent-light .dropdown-item.active,.dark-mode .accent-light .dropdown-item:active{background-color:#f8f9fa;color:#1f2d3d}.dark-mode .accent-light .custom-control-input:checked~.custom-control-label::before{background-color:#f8f9fa;border-color:#bdc6d0}.dark-mode .accent-light .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-light .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-light .custom-file-input:focus~.custom-file-label,.dark-mode .accent-light .custom-select:focus,.dark-mode .accent-light .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fff}.dark-mode .accent-light .page-item .page-link{color:#f8f9fa}.dark-mode .accent-light .page-item.active .page-link,.dark-mode .accent-light .page-item.active a{background-color:#f8f9fa;border-color:#f8f9fa;color:#fff}.dark-mode .accent-light .page-item.disabled .page-link,.dark-mode .accent-light .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-light [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-light [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-light [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-light [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-light .page-item .page-link:focus,.dark-mode .dark-mode.accent-light .page-item .page-link:hover{color:#fff}.dark-mode .accent-dark .btn-link,.dark-mode .accent-dark .nav-tabs .nav-link,.dark-mode .accent-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#343a40}.dark-mode .accent-dark .btn-link:hover,.dark-mode .accent-dark .nav-tabs .nav-link:hover,.dark-mode .accent-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#121416}.dark-mode .accent-dark .dropdown-item.active,.dark-mode .accent-dark .dropdown-item:active{background-color:#343a40;color:#fff}.dark-mode .accent-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .accent-dark .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-dark .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-dark .custom-file-input:focus~.custom-file-label,.dark-mode .accent-dark .custom-select:focus,.dark-mode .accent-dark .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#6d7a86}.dark-mode .accent-dark .page-item .page-link{color:#343a40}.dark-mode .accent-dark .page-item.active .page-link,.dark-mode .accent-dark .page-item.active a{background-color:#343a40;border-color:#343a40;color:#fff}.dark-mode .accent-dark .page-item.disabled .page-link,.dark-mode .accent-dark .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-dark .page-item .page-link:focus,.dark-mode .dark-mode.accent-dark .page-item .page-link:hover{color:#3f474e}.dark-mode [class*=accent-] a.btn-primary{color:#fff}.dark-mode [class*=accent-] a.btn-secondary{color:#fff}.dark-mode [class*=accent-] a.btn-success{color:#fff}.dark-mode [class*=accent-] a.btn-info{color:#fff}.dark-mode [class*=accent-] a.btn-warning{color:#1f2d3d}.dark-mode [class*=accent-] a.btn-danger{color:#fff}.dark-mode [class*=accent-] a.btn-light{color:#1f2d3d}.dark-mode [class*=accent-] a.btn-dark{color:#fff}.dark-mode .accent-lightblue .btn-link,.dark-mode .accent-lightblue .nav-tabs .nav-link,.dark-mode .accent-lightblue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#86bad8}.dark-mode .accent-lightblue .btn-link:hover,.dark-mode .accent-lightblue .nav-tabs .nav-link:hover,.dark-mode .accent-lightblue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#4c99c6}.dark-mode .accent-lightblue .dropdown-item.active,.dark-mode .accent-lightblue .dropdown-item:active{background-color:#86bad8;color:#1f2d3d}.dark-mode .accent-lightblue .custom-control-input:checked~.custom-control-label::before{background-color:#86bad8;border-color:#3c8dbc}.dark-mode .accent-lightblue .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-lightblue .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-lightblue .custom-file-input:focus~.custom-file-label,.dark-mode .accent-lightblue .custom-select:focus,.dark-mode .accent-lightblue .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#e6f1f7}.dark-mode .accent-lightblue .page-item .page-link{color:#86bad8}.dark-mode .accent-lightblue .page-item.active .page-link,.dark-mode .accent-lightblue .page-item.active a{background-color:#86bad8;border-color:#86bad8;color:#fff}.dark-mode .accent-lightblue .page-item.disabled .page-link,.dark-mode .accent-lightblue .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-lightblue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-lightblue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-lightblue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-lightblue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-lightblue .page-item .page-link:focus,.dark-mode .dark-mode.accent-lightblue .page-item .page-link:hover{color:#99c5de}.dark-mode .accent-navy .btn-link,.dark-mode .accent-navy .nav-tabs .nav-link,.dark-mode .accent-navy a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#002c59}.dark-mode .accent-navy .btn-link:hover,.dark-mode .accent-navy .nav-tabs .nav-link:hover,.dark-mode .accent-navy a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#00060c}.dark-mode .accent-navy .dropdown-item.active,.dark-mode .accent-navy .dropdown-item:active{background-color:#002c59;color:#fff}.dark-mode .accent-navy .custom-control-input:checked~.custom-control-label::before{background-color:#002c59;border-color:#000}.dark-mode .accent-navy .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-navy .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-navy .custom-file-input:focus~.custom-file-label,.dark-mode .accent-navy .custom-select:focus,.dark-mode .accent-navy .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#006ad8}.dark-mode .accent-navy .page-item .page-link{color:#002c59}.dark-mode .accent-navy .page-item.active .page-link,.dark-mode .accent-navy .page-item.active a{background-color:#002c59;border-color:#002c59;color:#fff}.dark-mode .accent-navy .page-item.disabled .page-link,.dark-mode .accent-navy .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-navy [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-navy [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-navy [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-navy [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-navy .page-item .page-link:focus,.dark-mode .dark-mode.accent-navy .page-item .page-link:hover{color:#003872}.dark-mode .accent-olive .btn-link,.dark-mode .accent-olive .nav-tabs .nav-link,.dark-mode .accent-olive a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#74c8a3}.dark-mode .accent-olive .btn-link:hover,.dark-mode .accent-olive .nav-tabs .nav-link:hover,.dark-mode .accent-olive a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#44ab7d}.dark-mode .accent-olive .dropdown-item.active,.dark-mode .accent-olive .dropdown-item:active{background-color:#74c8a3;color:#1f2d3d}.dark-mode .accent-olive .custom-control-input:checked~.custom-control-label::before{background-color:#74c8a3;border-color:#3d9970}.dark-mode .accent-olive .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-olive .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-olive .custom-file-input:focus~.custom-file-label,.dark-mode .accent-olive .custom-select:focus,.dark-mode .accent-olive .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#cfecdf}.dark-mode .accent-olive .page-item .page-link{color:#74c8a3}.dark-mode .accent-olive .page-item.active .page-link,.dark-mode .accent-olive .page-item.active a{background-color:#74c8a3;border-color:#74c8a3;color:#fff}.dark-mode .accent-olive .page-item.disabled .page-link,.dark-mode .accent-olive .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-olive [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-olive [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-olive [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-olive [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-olive .page-item .page-link:focus,.dark-mode .dark-mode.accent-olive .page-item .page-link:hover{color:#87cfaf}.dark-mode .accent-lime .btn-link,.dark-mode .accent-lime .nav-tabs .nav-link,.dark-mode .accent-lime a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#67ffa9}.dark-mode .accent-lime .btn-link:hover,.dark-mode .accent-lime .nav-tabs .nav-link:hover,.dark-mode .accent-lime a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#1bff7e}.dark-mode .accent-lime .dropdown-item.active,.dark-mode .accent-lime .dropdown-item:active{background-color:#67ffa9;color:#1f2d3d}.dark-mode .accent-lime .custom-control-input:checked~.custom-control-label::before{background-color:#67ffa9;border-color:#01ff70}.dark-mode .accent-lime .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-lime .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-lime .custom-file-input:focus~.custom-file-label,.dark-mode .accent-lime .custom-select:focus,.dark-mode .accent-lime .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#e7fff1}.dark-mode .accent-lime .page-item .page-link{color:#67ffa9}.dark-mode .accent-lime .page-item.active .page-link,.dark-mode .accent-lime .page-item.active a{background-color:#67ffa9;border-color:#67ffa9;color:#fff}.dark-mode .accent-lime .page-item.disabled .page-link,.dark-mode .accent-lime .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-lime [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-lime [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-lime [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-lime [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-lime .page-item .page-link:focus,.dark-mode .dark-mode.accent-lime .page-item .page-link:hover{color:#81ffb8}.dark-mode .accent-fuchsia .btn-link,.dark-mode .accent-fuchsia .nav-tabs .nav-link,.dark-mode .accent-fuchsia a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f672d8}.dark-mode .accent-fuchsia .btn-link:hover,.dark-mode .accent-fuchsia .nav-tabs .nav-link:hover,.dark-mode .accent-fuchsia a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#f22ac5}.dark-mode .accent-fuchsia .dropdown-item.active,.dark-mode .accent-fuchsia .dropdown-item:active{background-color:#f672d8;color:#1f2d3d}.dark-mode .accent-fuchsia .custom-control-input:checked~.custom-control-label::before{background-color:#f672d8;border-color:#f012be}.dark-mode .accent-fuchsia .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-fuchsia .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-fuchsia .custom-file-input:focus~.custom-file-label,.dark-mode .accent-fuchsia .custom-select:focus,.dark-mode .accent-fuchsia .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#feeaf9}.dark-mode .accent-fuchsia .page-item .page-link{color:#f672d8}.dark-mode .accent-fuchsia .page-item.active .page-link,.dark-mode .accent-fuchsia .page-item.active a{background-color:#f672d8;border-color:#f672d8;color:#fff}.dark-mode .accent-fuchsia .page-item.disabled .page-link,.dark-mode .accent-fuchsia .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-fuchsia [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-fuchsia [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-fuchsia [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-fuchsia [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-fuchsia .page-item .page-link:focus,.dark-mode .dark-mode.accent-fuchsia .page-item .page-link:hover{color:#f88adf}.dark-mode .accent-maroon .btn-link,.dark-mode .accent-maroon .nav-tabs .nav-link,.dark-mode .accent-maroon a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#ed6c9b}.dark-mode .accent-maroon .btn-link:hover,.dark-mode .accent-maroon .nav-tabs .nav-link:hover,.dark-mode .accent-maroon a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#e4286d}.dark-mode .accent-maroon .dropdown-item.active,.dark-mode .accent-maroon .dropdown-item:active{background-color:#ed6c9b;color:#1f2d3d}.dark-mode .accent-maroon .custom-control-input:checked~.custom-control-label::before{background-color:#ed6c9b;border-color:#d81b60}.dark-mode .accent-maroon .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-maroon .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-maroon .custom-file-input:focus~.custom-file-label,.dark-mode .accent-maroon .custom-select:focus,.dark-mode .accent-maroon .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fbdee8}.dark-mode .accent-maroon .page-item .page-link{color:#ed6c9b}.dark-mode .accent-maroon .page-item.active .page-link,.dark-mode .accent-maroon .page-item.active a{background-color:#ed6c9b;border-color:#ed6c9b;color:#fff}.dark-mode .accent-maroon .page-item.disabled .page-link,.dark-mode .accent-maroon .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-maroon [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-maroon [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-maroon [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-maroon [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-maroon .page-item .page-link:focus,.dark-mode .dark-mode.accent-maroon .page-item .page-link:hover{color:#f083ab}.dark-mode .accent-blue .btn-link,.dark-mode .accent-blue .nav-tabs .nav-link,.dark-mode .accent-blue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3f6791}.dark-mode .accent-blue .btn-link:hover,.dark-mode .accent-blue .nav-tabs .nav-link:hover,.dark-mode .accent-blue a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#28415c}.dark-mode .accent-blue .dropdown-item.active,.dark-mode .accent-blue .dropdown-item:active{background-color:#3f6791;color:#fff}.dark-mode .accent-blue .custom-control-input:checked~.custom-control-label::before{background-color:#3f6791;border-color:#20344a}.dark-mode .accent-blue .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-blue .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-blue .custom-file-input:focus~.custom-file-label,.dark-mode .accent-blue .custom-select:focus,.dark-mode .accent-blue .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#85a7ca}.dark-mode .accent-blue .page-item .page-link{color:#3f6791}.dark-mode .accent-blue .page-item.active .page-link,.dark-mode .accent-blue .page-item.active a{background-color:#3f6791;border-color:#3f6791;color:#fff}.dark-mode .accent-blue .page-item.disabled .page-link,.dark-mode .accent-blue .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-blue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-blue [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-blue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-blue [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-blue .page-item .page-link:focus,.dark-mode .dark-mode.accent-blue .page-item .page-link:hover{color:#4774a3}.dark-mode .accent-indigo .btn-link,.dark-mode .accent-indigo .nav-tabs .nav-link,.dark-mode .accent-indigo a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6610f2}.dark-mode .accent-indigo .btn-link:hover,.dark-mode .accent-indigo .nav-tabs .nav-link:hover,.dark-mode .accent-indigo a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#4709ac}.dark-mode .accent-indigo .dropdown-item.active,.dark-mode .accent-indigo .dropdown-item:active{background-color:#6610f2;color:#fff}.dark-mode .accent-indigo .custom-control-input:checked~.custom-control-label::before{background-color:#6610f2;border-color:#3d0894}.dark-mode .accent-indigo .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-indigo .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-indigo .custom-file-input:focus~.custom-file-label,.dark-mode .accent-indigo .custom-select:focus,.dark-mode .accent-indigo .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#b389f9}.dark-mode .accent-indigo .page-item .page-link{color:#6610f2}.dark-mode .accent-indigo .page-item.active .page-link,.dark-mode .accent-indigo .page-item.active a{background-color:#6610f2;border-color:#6610f2;color:#fff}.dark-mode .accent-indigo .page-item.disabled .page-link,.dark-mode .accent-indigo .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-indigo [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-indigo [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-indigo [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-indigo [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-indigo .page-item .page-link:focus,.dark-mode .dark-mode.accent-indigo .page-item .page-link:hover{color:#7528f3}.dark-mode .accent-purple .btn-link,.dark-mode .accent-purple .nav-tabs .nav-link,.dark-mode .accent-purple a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6f42c1}.dark-mode .accent-purple .btn-link:hover,.dark-mode .accent-purple .nav-tabs .nav-link:hover,.dark-mode .accent-purple a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#4e2d89}.dark-mode .accent-purple .dropdown-item.active,.dark-mode .accent-purple .dropdown-item:active{background-color:#6f42c1;color:#fff}.dark-mode .accent-purple .custom-control-input:checked~.custom-control-label::before{background-color:#6f42c1;border-color:#432776}.dark-mode .accent-purple .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-purple .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-purple .custom-file-input:focus~.custom-file-label,.dark-mode .accent-purple .custom-select:focus,.dark-mode .accent-purple .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#b8a2e0}.dark-mode .accent-purple .page-item .page-link{color:#6f42c1}.dark-mode .accent-purple .page-item.active .page-link,.dark-mode .accent-purple .page-item.active a{background-color:#6f42c1;border-color:#6f42c1;color:#fff}.dark-mode .accent-purple .page-item.disabled .page-link,.dark-mode .accent-purple .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-purple [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-purple [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-purple [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-purple [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-purple .page-item .page-link:focus,.dark-mode .dark-mode.accent-purple .page-item .page-link:hover{color:#7e55c7}.dark-mode .accent-pink .btn-link,.dark-mode .accent-pink .nav-tabs .nav-link,.dark-mode .accent-pink a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#e83e8c}.dark-mode .accent-pink .btn-link:hover,.dark-mode .accent-pink .nav-tabs .nav-link:hover,.dark-mode .accent-pink a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#c21766}.dark-mode .accent-pink .dropdown-item.active,.dark-mode .accent-pink .dropdown-item:active{background-color:#e83e8c;color:#fff}.dark-mode .accent-pink .custom-control-input:checked~.custom-control-label::before{background-color:#e83e8c;border-color:#ac145a}.dark-mode .accent-pink .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-pink .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-pink .custom-file-input:focus~.custom-file-label,.dark-mode .accent-pink .custom-select:focus,.dark-mode .accent-pink .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f6b0d0}.dark-mode .accent-pink .page-item .page-link{color:#e83e8c}.dark-mode .accent-pink .page-item.active .page-link,.dark-mode .accent-pink .page-item.active a{background-color:#e83e8c;border-color:#e83e8c;color:#fff}.dark-mode .accent-pink .page-item.disabled .page-link,.dark-mode .accent-pink .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-pink [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-pink [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-pink [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-pink [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-pink .page-item .page-link:focus,.dark-mode .dark-mode.accent-pink .page-item .page-link:hover{color:#eb559a}.dark-mode .accent-red .btn-link,.dark-mode .accent-red .nav-tabs .nav-link,.dark-mode .accent-red a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#e74c3c}.dark-mode .accent-red .btn-link:hover,.dark-mode .accent-red .nav-tabs .nav-link:hover,.dark-mode .accent-red a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#bf2718}.dark-mode .accent-red .dropdown-item.active,.dark-mode .accent-red .dropdown-item:active{background-color:#e74c3c;color:#fff}.dark-mode .accent-red .custom-control-input:checked~.custom-control-label::before{background-color:#e74c3c;border-color:#a82315}.dark-mode .accent-red .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-red .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-red .custom-file-input:focus~.custom-file-label,.dark-mode .accent-red .custom-select:focus,.dark-mode .accent-red .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f5b4ae}.dark-mode .accent-red .page-item .page-link{color:#e74c3c}.dark-mode .accent-red .page-item.active .page-link,.dark-mode .accent-red .page-item.active a{background-color:#e74c3c;border-color:#e74c3c;color:#fff}.dark-mode .accent-red .page-item.disabled .page-link,.dark-mode .accent-red .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-red [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-red [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-red [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-red [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-red .page-item .page-link:focus,.dark-mode .dark-mode.accent-red .page-item .page-link:hover{color:#ea6153}.dark-mode .accent-orange .btn-link,.dark-mode .accent-orange .nav-tabs .nav-link,.dark-mode .accent-orange a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#fd7e14}.dark-mode .accent-orange .btn-link:hover,.dark-mode .accent-orange .nav-tabs .nav-link:hover,.dark-mode .accent-orange a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#c35a02}.dark-mode .accent-orange .dropdown-item.active,.dark-mode .accent-orange .dropdown-item:active{background-color:#fd7e14;color:#1f2d3d}.dark-mode .accent-orange .custom-control-input:checked~.custom-control-label::before{background-color:#fd7e14;border-color:#aa4e01}.dark-mode .accent-orange .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-orange .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-orange .custom-file-input:focus~.custom-file-label,.dark-mode .accent-orange .custom-select:focus,.dark-mode .accent-orange .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fec392}.dark-mode .accent-orange .page-item .page-link{color:#fd7e14}.dark-mode .accent-orange .page-item.active .page-link,.dark-mode .accent-orange .page-item.active a{background-color:#fd7e14;border-color:#fd7e14;color:#fff}.dark-mode .accent-orange .page-item.disabled .page-link,.dark-mode .accent-orange .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-orange [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-orange [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-orange [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-orange [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-orange .page-item .page-link:focus,.dark-mode .dark-mode.accent-orange .page-item .page-link:hover{color:#fd8c2d}.dark-mode .accent-yellow .btn-link,.dark-mode .accent-yellow .nav-tabs .nav-link,.dark-mode .accent-yellow a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#f39c12}.dark-mode .accent-yellow .btn-link:hover,.dark-mode .accent-yellow .nav-tabs .nav-link:hover,.dark-mode .accent-yellow a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#b06f09}.dark-mode .accent-yellow .dropdown-item.active,.dark-mode .accent-yellow .dropdown-item:active{background-color:#f39c12;color:#1f2d3d}.dark-mode .accent-yellow .custom-control-input:checked~.custom-control-label::before{background-color:#f39c12;border-color:#976008}.dark-mode .accent-yellow .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-yellow .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-yellow .custom-file-input:focus~.custom-file-label,.dark-mode .accent-yellow .custom-select:focus,.dark-mode .accent-yellow .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#f9cf8b}.dark-mode .accent-yellow .page-item .page-link{color:#f39c12}.dark-mode .accent-yellow .page-item.active .page-link,.dark-mode .accent-yellow .page-item.active a{background-color:#f39c12;border-color:#f39c12;color:#fff}.dark-mode .accent-yellow .page-item.disabled .page-link,.dark-mode .accent-yellow .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-yellow [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-yellow [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-yellow [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-yellow [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-yellow .page-item .page-link:focus,.dark-mode .dark-mode.accent-yellow .page-item .page-link:hover{color:#f4a62a}.dark-mode .accent-green .btn-link,.dark-mode .accent-green .nav-tabs .nav-link,.dark-mode .accent-green a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#00bc8c}.dark-mode .accent-green .btn-link:hover,.dark-mode .accent-green .nav-tabs .nav-link:hover,.dark-mode .accent-green a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#007053}.dark-mode .accent-green .dropdown-item.active,.dark-mode .accent-green .dropdown-item:active{background-color:#00bc8c;color:#fff}.dark-mode .accent-green .custom-control-input:checked~.custom-control-label::before{background-color:#00bc8c;border-color:#005640}.dark-mode .accent-green .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-green .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-green .custom-file-input:focus~.custom-file-label,.dark-mode .accent-green .custom-select:focus,.dark-mode .accent-green .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#3dffcd}.dark-mode .accent-green .page-item .page-link{color:#00bc8c}.dark-mode .accent-green .page-item.active .page-link,.dark-mode .accent-green .page-item.active a{background-color:#00bc8c;border-color:#00bc8c;color:#fff}.dark-mode .accent-green .page-item.disabled .page-link,.dark-mode .accent-green .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-green [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-green [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-green [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-green [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-green .page-item .page-link:focus,.dark-mode .dark-mode.accent-green .page-item .page-link:hover{color:#00d69f}.dark-mode .accent-teal .btn-link,.dark-mode .accent-teal .nav-tabs .nav-link,.dark-mode .accent-teal a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#20c997}.dark-mode .accent-teal .btn-link:hover,.dark-mode .accent-teal .nav-tabs .nav-link:hover,.dark-mode .accent-teal a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#158765}.dark-mode .accent-teal .dropdown-item.active,.dark-mode .accent-teal .dropdown-item:active{background-color:#20c997;color:#fff}.dark-mode .accent-teal .custom-control-input:checked~.custom-control-label::before{background-color:#20c997;border-color:#127155}.dark-mode .accent-teal .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-teal .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-teal .custom-file-input:focus~.custom-file-label,.dark-mode .accent-teal .custom-select:focus,.dark-mode .accent-teal .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#7eeaca}.dark-mode .accent-teal .page-item .page-link{color:#20c997}.dark-mode .accent-teal .page-item.active .page-link,.dark-mode .accent-teal .page-item.active a{background-color:#20c997;border-color:#20c997;color:#fff}.dark-mode .accent-teal .page-item.disabled .page-link,.dark-mode .accent-teal .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-teal [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-teal [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-teal [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-teal [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-teal .page-item .page-link:focus,.dark-mode .dark-mode.accent-teal .page-item .page-link:hover{color:#26dca6}.dark-mode .accent-cyan .btn-link,.dark-mode .accent-cyan .nav-tabs .nav-link,.dark-mode .accent-cyan a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#3498db}.dark-mode .accent-cyan .btn-link:hover,.dark-mode .accent-cyan .nav-tabs .nav-link:hover,.dark-mode .accent-cyan a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#1d6fa5}.dark-mode .accent-cyan .dropdown-item.active,.dark-mode .accent-cyan .dropdown-item:active{background-color:#3498db;color:#fff}.dark-mode .accent-cyan .custom-control-input:checked~.custom-control-label::before{background-color:#3498db;border-color:#196090}.dark-mode .accent-cyan .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-cyan .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-cyan .custom-file-input:focus~.custom-file-label,.dark-mode .accent-cyan .custom-select:focus,.dark-mode .accent-cyan .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#a0cfee}.dark-mode .accent-cyan .page-item .page-link{color:#3498db}.dark-mode .accent-cyan .page-item.active .page-link,.dark-mode .accent-cyan .page-item.active a{background-color:#3498db;border-color:#3498db;color:#fff}.dark-mode .accent-cyan .page-item.disabled .page-link,.dark-mode .accent-cyan .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-cyan [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-cyan [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-cyan [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-cyan [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-cyan .page-item .page-link:focus,.dark-mode .dark-mode.accent-cyan .page-item .page-link:hover{color:#4aa3df}.dark-mode .accent-white .btn-link,.dark-mode .accent-white .nav-tabs .nav-link,.dark-mode .accent-white a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#fff}.dark-mode .accent-white .btn-link:hover,.dark-mode .accent-white .nav-tabs .nav-link:hover,.dark-mode .accent-white a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#d9d9d9}.dark-mode .accent-white .dropdown-item.active,.dark-mode .accent-white .dropdown-item:active{background-color:#fff;color:#1f2d3d}.dark-mode .accent-white .custom-control-input:checked~.custom-control-label::before{background-color:#fff;border-color:#ccc}.dark-mode .accent-white .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%231f2d3d' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-white .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-white .custom-file-input:focus~.custom-file-label,.dark-mode .accent-white .custom-select:focus,.dark-mode .accent-white .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#fff}.dark-mode .accent-white .page-item .page-link{color:#fff}.dark-mode .accent-white .page-item.active .page-link,.dark-mode .accent-white .page-item.active a{background-color:#fff;border-color:#fff;color:#fff}.dark-mode .accent-white .page-item.disabled .page-link,.dark-mode .accent-white .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-white [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-white [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-white [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-white [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-white .page-item .page-link:focus,.dark-mode .dark-mode.accent-white .page-item .page-link:hover{color:#fff}.dark-mode .accent-gray .btn-link,.dark-mode .accent-gray .nav-tabs .nav-link,.dark-mode .accent-gray a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#6c757d}.dark-mode .accent-gray .btn-link:hover,.dark-mode .accent-gray .nav-tabs .nav-link:hover,.dark-mode .accent-gray a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#494f54}.dark-mode .accent-gray .dropdown-item.active,.dark-mode .accent-gray .dropdown-item:active{background-color:#6c757d;color:#fff}.dark-mode .accent-gray .custom-control-input:checked~.custom-control-label::before{background-color:#6c757d;border-color:#3d4246}.dark-mode .accent-gray .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-gray .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-gray .custom-file-input:focus~.custom-file-label,.dark-mode .accent-gray .custom-select:focus,.dark-mode .accent-gray .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#afb5ba}.dark-mode .accent-gray .page-item .page-link{color:#6c757d}.dark-mode .accent-gray .page-item.active .page-link,.dark-mode .accent-gray .page-item.active a{background-color:#6c757d;border-color:#6c757d;color:#fff}.dark-mode .accent-gray .page-item.disabled .page-link,.dark-mode .accent-gray .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-gray [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-gray [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-gray [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-gray [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-gray .page-item .page-link:focus,.dark-mode .dark-mode.accent-gray .page-item .page-link:hover{color:#78828a}.dark-mode .accent-gray-dark .btn-link,.dark-mode .accent-gray-dark .nav-tabs .nav-link,.dark-mode .accent-gray-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn){color:#343a40}.dark-mode .accent-gray-dark .btn-link:hover,.dark-mode .accent-gray-dark .nav-tabs .nav-link:hover,.dark-mode .accent-gray-dark a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):not(.page-link):not(.badge):not(.btn):hover{color:#121416}.dark-mode .accent-gray-dark .dropdown-item.active,.dark-mode .accent-gray-dark .dropdown-item:active{background-color:#343a40;color:#fff}.dark-mode .accent-gray-dark .custom-control-input:checked~.custom-control-label::before{background-color:#343a40;border-color:#060708}.dark-mode .accent-gray-dark .custom-control-input:checked~.custom-control-label::after{background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")}.dark-mode .accent-gray-dark .custom-control-input:focus:not(:checked)~.custom-control-label::before,.dark-mode .accent-gray-dark .custom-file-input:focus~.custom-file-label,.dark-mode .accent-gray-dark .custom-select:focus,.dark-mode .accent-gray-dark .form-control:focus:not(.is-invalid):not(.is-warning):not(.is-valid){border-color:#6d7a86}.dark-mode .accent-gray-dark .page-item .page-link{color:#343a40}.dark-mode .accent-gray-dark .page-item.active .page-link,.dark-mode .accent-gray-dark .page-item.active a{background-color:#343a40;border-color:#343a40;color:#fff}.dark-mode .accent-gray-dark .page-item.disabled .page-link,.dark-mode .accent-gray-dark .page-item.disabled a{background-color:#fff;border-color:#dee2e6;color:#6c757d}.dark-mode .accent-gray-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#c2c7d0}.dark-mode .accent-gray-dark [class*=sidebar-dark-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#fff}.dark-mode .accent-gray-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link){color:#343a40}.dark-mode .accent-gray-dark [class*=sidebar-light-] .sidebar a:not(.dropdown-item):not(.btn-app):not(.nav-link):not(.brand-link):hover{color:#212529}.dark-mode .dark-mode.accent-gray-dark .page-item .page-link:focus,.dark-mode .dark-mode.accent-gray-dark .page-item .page-link:hover{color:#3f474e}.dark-mode .border-dark{border-color:#4b545c!important}[m
[32m+[m[32m/*# sourceMappingURL=adminlte.min.css.map */[m
\ No newline at end of file[m
[1mdiff --git a/public/assets/lte.js b/public/assets/lte.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d5f1412[m
[1m--- /dev/null[m
[1m+++ b/public/assets/lte.js[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m/*![m
[32m+[m[32m * AdminLTE v3.2.0-rc (https://adminlte.io)[m
[32m+[m[32m * Copyright 2014-2021 Colorlib <https://colorlib.com>[m
[32m+[m[32m * Licensed under MIT (https://github.com/ColorlibHQ/AdminLTE/blob/master/LICENSE)[m
[32m+[m[32m */[m
[32m+[m[32m!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("jquery")):"function"==typeof define&&define.amd?define(["exports","jquery"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).adminlte={},e.jQuery)}(this,(function(e,t){"use strict";function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=a(t),i="CardRefresh",o="lte.cardrefresh",l=n.default.fn[i],s="card",r='[data-card-widget="card-refresh"]',d={source:"",sourceSelector:"",params:{},trigger:r,content:".card-body",loadInContent:!0,loadOnInit:!0,loadErrorTemplate:!0,responseType:"",overlayTemplate:'<div class="overlay"><i class="fas fa-2x fa-sync-alt fa-spin"></i></div>',errorTemplate:'<span class="text-danger"></span>',onLoadStart:function(){},onLoadDone:function(e){return e},onLoadFail:function(e,t,a){}},f=function(){function e(e,t){if(this._element=e,this._parent=e.parents(".card").first(),this._settings=n.default.extend({},d,t),this._overlay=n.default(this._settings.overlayTemplate),e.hasClass(s)&&(this._parent=e),""===this._settings.source)throw new Error("Source url was not defined. Please specify a url in your CardRefresh source option.")}var t=e.prototype;return t.load=function(){var e=this;this._addOverlay(),this._settings.onLoadStart.call(n.default(this)),n.default.get(this._settings.source,this._settings.params,(function(t){e._settings.loadInContent&&(""!==e._settings.sourceSelector&&(t=n.default(t).find(e._settings.sourceSelector).html()),e._parent.find(e._settings.content).html(t)),e._settings.onLoadDone.call(n.default(e),t),e._removeOverlay()}),""!==this._settings.responseType&&this._settings.responseType).fail((function(t,a,i){if(e._removeOverlay(),e._settings.loadErrorTemplate){var o=n.default(e._settings.errorTemplate).text(i);e._parent.find(e._settings.content).empty().append(o)}e._settings.onLoadFail.call(n.default(e),t,a,i)})),n.default(this._element).trigger(n.default.Event("loaded.lte.cardrefresh"))},t._addOverlay=function(){this._parent.append(this._overlay),n.default(this._element).trigger(n.default.Event("overlay.added.lte.cardrefresh"))},t._removeOverlay=function(){this._parent.find(this._overlay).remove(),n.default(this._element).trigger(n.default.Event("overlay.removed.lte.cardrefresh"))},t._init=function(){var e=this;n.default(this).find(this._settings.trigger).on("click",(function(){e.load()})),this._settings.loadOnInit&&this.load()},e._jQueryInterface=function(t){var a=n.default(this).data(o),i=n.default.extend({},d,n.default(this).data());a||(a=new e(n.default(this),i),n.default(this).data(o,"string"==typeof t?a:t)),"string"==typeof t&&/load/.test(t)?a[t]():a._init(n.default(this))},e}();n.default(document).on("click",r,(function(e){e&&e.preventDefault(),f._jQueryInterface.call(n.default(this),"load")})),n.default((function(){n.default(r).each((function(){f._jQueryInterface.call(n.default(this))}))})),n.default.fn[i]=f._jQueryInterface,n.default.fn[i].Constructor=f,n.default.fn[i].noConflict=function(){return n.default.fn[i]=l,f._jQueryInterface};var u="CardWidget",c="lte.cardwidget",h=n.default.fn[u],g="card",p="collapsed-card",m="collapsing-card",v="expanding-card",_="was-collapsed",b="maximized-card",y='[data-card-widget="remove"]',w='[data-card-widget="collapse"]',C='[data-card-widget="maximize"]',x={animationSpeed:"normal",collapseTrigger:w,removeTrigger:y,maximizeTrigger:C,collapseIcon:"fa-minus",expandIcon:"fa-plus",maximizeIcon:"fa-expand",minimizeIcon:"fa-compress"},I=function(){function e(e,t){this._element=e,this._parent=e.parents(".card").first(),e.hasClass(g)&&(this._parent=e),this._settings=n.default.extend({},x,t)}var t=e.prototype;return t.collapse=function(){var e=this;this._parent.addClass(m).children(".card-body, .card-footer").slideUp(this._settings.animationSpeed,(function(){e._parent.addClass(p).removeClass(m)})),this._parent.find("> .card-header "+this._settings.collapseTrigger+" ."+this._settings.collapseIcon).addClass(this._settings.expandIcon).removeClass(this._settings.collapseIcon),this._element.trigger(n.default.Event("collapsed.lte.cardwidget"),this._parent)},t.expand=function(){var e=this;this._parent.addClass(v).children(".card-body, .card-footer").slideDown(this._settings.animationSpeed,(function(){e._parent.removeClass(p).removeClass(v)})),this._parent.find("> .card-header "+this._settings.collapseTrigger+" ."+this._settings.expandIcon).addClass(this._settings.collapseIcon).removeClass(this._settings.expandIcon),this._element.trigger(n.default.Event("expanded.lte.cardwidget"),this._parent)},t.remove=function(){this._parent.slideUp(),this._element.trigger(n.default.Event("removed.lte.cardwidget"),this._parent)},t.toggle=function(){this._parent.hasClass(p)?this.expand():this.collapse()},t.maximize=function(){this._parent.find(this._settings.maximizeTrigger+" ."+this._settings.maximizeIcon).addClass(this._settings.minimizeIcon).removeClass(this._settings.maximizeIcon),this._parent.css({height:this._parent.height(),width:this._parent.width(),transition:"all .15s"}).delay(150).queue((function(){var e=n.default(this);e.addClass(b),n.default("html").addClass(b),e.hasClass(p)&&e.addClass(_),e.dequeue()})),this._element.trigger(n.default.Event("maximized.lte.cardwidget"),this._parent)},t.minimize=function(){this._parent.find(this._settings.maximizeTrigger+" ."+this._settings.minimizeIcon).addClass(this._settings.maximizeIcon).removeClass(this._settings.minimizeIcon),this._parent.css("cssText","height: "+this._parent[0].style.height+" !important; width: "+this._parent[0].style.width+" !important; transition: all .15s;").delay(10).queue((function(){var e=n.default(this);e.removeClass(b),n.default("html").removeClass(b),e.css({height:"inherit",width:"inherit"}),e.hasClass(_)&&e.removeClass(_),e.dequeue()})),this._element.trigger(n.default.Event("minimized.lte.cardwidget"),this._parent)},t.toggleMaximize=function(){this._parent.hasClass(b)?this.minimize():this.maximize()},t._init=function(e){var t=this;this._parent=e,n.default(this).find(this._settings.collapseTrigger).click((function(){t.toggle()})),n.default(this).find(this._settings.maximizeTrigger).click((function(){t.toggleMaximize()})),n.default(this).find(this._settings.removeTrigger).click((function(){t.remove()}))},e._jQueryInterface=function(t){var a=n.default(this).data(c),i=n.default.extend({},x,n.default(this).data());a||(a=new e(n.default(this),i),n.default(this).data(c,"string"==typeof t?a:t)),"string"==typeof t&&/collapse|expand|remove|toggle|maximize|minimize|toggleMaximize/.test(t)?a[t]():"object"==typeof t&&a._init(n.default(this))},e}();n.default(document).on("click",w,(function(e){e&&e.preventDefault(),I._jQueryInterface.call(n.default(this),"toggle")})),n.default(document).on("click",y,(function(e){e&&e.preventDefault(),I._jQueryInterface.call(n.default(this),"remove")})),n.default(document).on("click",C,(function(e){e&&e.preventDefault(),I._jQueryInterface.call(n.default(this),"toggleMaximize")})),n.default.fn[u]=I._jQueryInterface,n.default.fn[u].Constructor=I,n.default.fn[u].noConflict=function(){return n.default.fn[u]=h,I._jQueryInterface};var T="ControlSidebar",S="lte.controlsidebar",j=n.default.fn[T],k=".control-sidebar",Q=".control-sidebar-content",H='[data-widget="control-sidebar"]',z=".main-header",F=".main-footer",E="control-sidebar-animate",L="control-sidebar-open",D="control-sidebar-slide-open",R="layout-fixed",A={controlsidebarSlide:!0,scrollbarTheme:"os-theme-light",scrollbarAutoHide:"l",target:k,animationSpeed:300},M=function(){function e(e,t){this._element=e,this._config=t}var t=e.prototype;return t.collapse=function(){var e=this,t=n.default("body"),a=n.default("html"),i=this._config.target;this._config.controlsidebarSlide?(a.addClass(E),t.removeClass(D).delay(300).queue((function(){n.default(i).hide(),a.removeClass(E),n.default(this).dequeue()}))):t.removeClass(L),n.default(this._element).trigger(n.default.Event("collapsed.lte.controlsidebar")),setTimeout((function(){n.default(e._element).trigger(n.default.Event("collapsed-done.lte.controlsidebar"))}),this._config.animationSpeed)},t.show=function(){var e=n.default("body"),t=n.default("html");this._config.controlsidebarSlide?(t.addClass(E),n.default(this._config.target).show().delay(10).queue((function(){e.addClass(D).delay(300).queue((function(){t.removeClass(E),n.default(this).dequeue()})),n.default(this).dequeue()}))):e.addClass(L),this._fixHeight(),this._fixScrollHeight(),n.default(this._element).trigger(n.default.Event("expanded.lte.controlsidebar"))},t.toggle=function(){var e=n.default("body");e.hasClass(L)||e.hasClass(D)?this.collapse():this.show()},t._init=function(){var e=this,t=n.default("body");t.hasClass(L)||t.hasClass(D)?(n.default(k).not(this._config.target).hide(),n.default(this._config.target).css("display","block")):n.default(k).hide(),this._fixHeight(),this._fixScrollHeight(),n.default(window).resize((function(){e._fixHeight(),e._fixScrollHeight()})),n.default(window).scroll((function(){var t=n.default("body");(t.hasClass(L)||t.hasClass(D))&&e._fixScrollHeight()}))},t._isNavbarFixed=function(){var e=n.default("body");return e.hasClass("layout-navbar-fixed")||e.hasClass("layout-sm-navbar-fixed")||e.hasClass("layout-md-navbar-fixed")||e.hasClass("layout-lg-navbar-fixed")||e.hasClass("layout-xl-navbar-fixed")},t._isFooterFixed=function(){var e=n.default("body");return e.hasClass("layout-footer-fixed")||e.hasClass("layout-sm-footer-fixed")||e.hasClass("layout-md-footer-fixed")||e.hasClass("layout-lg-footer-fixed")||e.hasClass("layout-xl-footer-fixed")},t._fixScrollHeight=function(){var e=n.default("body"),t=n.default(this._config.target);if(e.hasClass(R)){var a={scroll:n.default(document).height(),window:n.default(window).height(),header:n.default(z).outerHeight(),footer:n.default(F).outerHeight()},i=Math.abs(a.window+n.default(window).scrollTop()-a.scroll),o=n.default(window).scrollTop(),l=this._isNavbarFixed()&&"fixed"===n.default(z).css("position"),s=this._isFooterFixed()&&"fixed"===n.default(F).css("position"),r=n.default(this._config.target+", "+this._config.target+" "+Q);if(0===o&&0===i)t.css({bottom:a.footer,top:a.header}),r.css("height",a.window-(a.header+a.footer));else if(i<=a.footer)if(!1===s){var d=a.header-o;t.css("bottom",a.footer-i).css("top",d>=0?d:0),r.css("height",a.window-(a.footer-i))}else t.css("bottom",a.footer);else o<=a.header?!1===l?(t.css("top",a.header-o),r.css("height",a.window-(a.header-o))):t.css("top",a.header):!1===l?(t.css("top",0),r.css("height",a.window)):t.css("top",a.header);s&&l?(r.css("height","100%"),t.css("height","")):(s||l)&&(r.css("height","100%"),r.css("height",""))}},t._fixHeight=function(){var e=n.default("body"),t=n.default(this._config.target+" "+Q);if(e.hasClass(R)){var a=n.default(window).height(),i=n.default(z).outerHeight(),o=n.default(F).outerHeight(),l=a-i;this._isFooterFixed()&&"fixed"===n.default(F).css("position")&&(l=a-i-o),t.css("height",l),"undefined"!=typeof n.default.fn.overlayScrollbars&&t.overlayScrollbars({className:this._config.scrollbarTheme,sizeAutoCapable:!0,scrollbars:{autoHide:this._config.scrollbarAutoHide,clickScrolling:!0}})}else t.attr("style","")},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(S),i=n.default.extend({},A,n.default(this).data());if(a||(a=new e(this,i),n.default(this).data(S,a)),"undefined"===a[t])throw new Error(t+" is not a function");a[t]()}))},e}();n.default(document).on("click",H,(function(e){e.preventDefault(),M._jQueryInterface.call(n.default(this),"toggle")})),n.default(document).ready((function(){M._jQueryInterface.call(n.default(H),"_init")})),n.default.fn[T]=M._jQueryInterface,n.default.fn[T].Constructor=M,n.default.fn[T].noConflict=function(){return n.default.fn[T]=j,M._jQueryInterface};var q="DirectChat",O="lte.directchat",N=n.default.fn[q],P=function(){function e(e){this._element=e}return e.prototype.toggle=function(){n.default(this._element).parents(".direct-chat").first().toggleClass("direct-chat-contacts-open"),n.default(this._element).trigger(n.default.Event("toggled.lte.directchat"))},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(O);a||(a=new e(n.default(this)),n.default(this).data(O,a)),a[t]()}))},e}();n.default(document).on("click",'[data-widget="chat-pane-toggle"]',(function(e){e&&e.preventDefault(),P._jQueryInterface.call(n.default(this),"toggle")})),n.default.fn[q]=P._jQueryInterface,n.default.fn[q].Constructor=P,n.default.fn[q].noConflict=function(){return n.default.fn[q]=N,P._jQueryInterface};var U="Dropdown",B="lte.dropdown",$=n.default.fn[U],J=".dropdown-menu",W={},V=function(){function e(e,t){this._config=t,this._element=e}var t=e.prototype;return t.toggleSubmenu=function(){this._element.siblings().show().toggleClass("show"),this._element.next().hasClass("show")||this._element.parents(J).first().find(".show").removeClass("show").hide(),this._element.parents("li.nav-item.dropdown.show").on("hidden.bs.dropdown",(function(){n.default(".dropdown-submenu .show").removeClass("show").hide()}))},t.fixPosition=function(){var e=n.default(".dropdown-menu.show");if(0!==e.length){e.hasClass("dropdown-menu-right")?e.css({left:"inherit",right:0}):e.css({left:0,right:"inherit"});var t=e.offset(),a=e.width(),i=n.default(window).width()-t.left;t.left<0?e.css({left:"inherit",right:t.left-5}):i<a&&e.css({left:"inherit",right:0})}},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(B),i=n.default.extend({},W,n.default(this).data());a||(a=new e(n.default(this),i),n.default(this).data(B,a)),"toggleSubmenu"!==t&&"fixPosition"!==t||a[t]()}))},e}();n.default('.dropdown-menu [data-toggle="dropdown"]').on("click",(function(e){e.preventDefault(),e.stopPropagation(),V._jQueryInterface.call(n.default(this),"toggleSubmenu")})),n.default('.navbar [data-toggle="dropdown"]').on("click",(function(e){e.preventDefault(),n.default(e.target).parent().hasClass("dropdown-submenu")||setTimeout((function(){V._jQueryInterface.call(n.default(this),"fixPosition")}),1)})),n.default.fn[U]=V._jQueryInterface,n.default.fn[U].Constructor=V,n.default.fn[U].noConflict=function(){return n.default.fn[U]=$,V._jQueryInterface};var G="ExpandableTable",K="lte.expandableTable",X=n.default.fn[G],Y=".expandable-body",Z='[data-widget="expandable-table"]',ee="aria-expanded",te=function(){function e(e,t){this._options=t,this._element=e}var t=e.prototype;return t.init=function(){n.default(Z).each((function(e,t){var a=n.default(t).attr(ee),i=n.default(t).next(Y).children().first().children();"true"===a?i.show():"false"===a&&(i.hide(),i.parent().parent().addClass("d-none"))}))},t.toggleRow=function(){var e=this._element,t=e.attr(ee),a=e.next(Y).children().first().children();a.stop(),"true"===t?(a.slideUp(500,(function(){e.next(Y).addClass("d-none")})),e.attr(ee,"false"),e.trigger(n.default.Event("collapsed.lte.expandableTable"))):"false"===t&&(e.next(Y).removeClass("d-none"),a.slideDown(500),e.attr(ee,"true"),e.trigger(n.default.Event("expanded.lte.expandableTable")))},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(K);a||(a=new e(n.default(this)),n.default(this).data(K,a)),"string"==typeof t&&/init|toggleRow/.test(t)&&a[t]()}))},e}();n.default(".expandable-table").ready((function(){te._jQueryInterface.call(n.default(this),"init")})),n.default(document).on("click",Z,(function(){te._jQueryInterface.call(n.default(this),"toggleRow")})),n.default.fn[G]=te._jQueryInterface,n.default.fn[G].Constructor=te,n.default.fn[G].noConflict=function(){return n.default.fn[G]=X,te._jQueryInterface};var ae="Fullscreen",ne="lte.fullscreen",ie=n.default.fn[ae],oe='[data-widget="fullscreen"]',le=oe+" i",se={minimizeIcon:"fa-compress-arrows-alt",maximizeIcon:"fa-expand-arrows-alt"},re=function(){function e(e,t){this.element=e,this.options=n.default.extend({},se,t)}var t=e.prototype;return t.toggle=function(){document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement?this.windowed():this.fullscreen()},t.toggleIcon=function(){document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement?n.default(le).removeClass(this.options.maximizeIcon).addClass(this.options.minimizeIcon):n.default(le).removeClass(this.options.minimizeIcon).addClass(this.options.maximizeIcon)},t.fullscreen=function(){document.documentElement.requestFullscreen?document.documentElement.requestFullscreen():document.documentElement.webkitRequestFullscreen?document.documentElement.webkitRequestFullscreen():document.documentElement.msRequestFullscreen&&document.documentElement.msRequestFullscreen()},t.windowed=function(){document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},e._jQueryInterface=function(t){var a=n.default(this).data(ne);a||(a=n.default(this).data());var i=n.default.extend({},se,"object"==typeof t?t:a),o=new e(n.default(this),i);n.default(this).data(ne,"object"==typeof t?t:a),"string"==typeof t&&/toggle|toggleIcon|fullscreen|windowed/.test(t)?o[t]():o.init()},e}();n.default(document).on("click",oe,(function(){re._jQueryInterface.call(n.default(this),"toggle")})),n.default(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange",(function(){re._jQueryInterface.call(n.default(oe),"toggleIcon")})),n.default.fn[ae]=re._jQueryInterface,n.default.fn[ae].Constructor=re,n.default.fn[ae].noConflict=function(){return n.default.fn[ae]=ie,re._jQueryInterface};var de="lte.iframe",fe=n.default.fn.IFrame,ue='[data-widget="iframe"]',ce='[data-widget="iframe-fullscreen"]',he=".content-wrapper",ge=".content-wrapper iframe",pe=".content-wrapper.iframe-mode .nav",me=".content-wrapper.iframe-mode .navbar-nav",ve=me+" .nav-item",_e=me+" .nav-link",be=".content-wrapper.iframe-mode .tab-content",ye=be+" .tab-empty",we=be+" .tab-loading",Ce=be+" .tab-pane",xe=".main-sidebar .nav-item > a.nav-link",Ie=".main-header .nav-item a.nav-link",Te=".main-header a.dropdown-item",Se="iframe-mode",je="iframe-mode-fullscreen",ke={onTabClick:function(e){return e},onTabChanged:function(e){return e},onTabCreated:function(e){return e},autoIframeMode:!0,autoItemActive:!0,autoShowNewTab:!0,autoDarkMode:!1,allowDuplicates:!1,allowReload:!0,loadingScreen:!0,useNavbarItems:!0,scrollOffset:40,scrollBehaviorSwap:!1,iconMaximize:"fa-expand",iconMinimize:"fa-compress"},Qe=function(){function e(e,t){this._config=t,this._element=e,this._init()}var t=e.prototype;return t.onTabClick=function(e){this._config.onTabClick(e)},t.onTabChanged=function(e){this._config.onTabChanged(e)},t.onTabCreated=function(e){this._config.onTabCreated(e)},t.createTab=function(e,t,a,i){var o=this,l="panel-"+a,s="tab-"+a;this._config.allowDuplicates&&(l+="-"+Math.floor(1e3*Math.random()),s+="-"+Math.floor(1e3*Math.random()));var r='<li class="nav-item" role="presentation"><a href="#" class="btn-iframe-close" data-widget="iframe-close" data-type="only-this"><i class="fas fa-times"></i></a><a class="nav-link" data-toggle="row" id="'+s+'" href="#'+l+'" role="tab" aria-controls="'+l+'" aria-selected="false">'+e+"</a></li>";n.default(me).append(unescape(escape(r)));var d='<div class="tab-pane fade" id="'+l+'" role="tabpanel" aria-labelledby="'+s+'"><iframe src="'+t+'"></iframe></div>';if(n.default(be).append(unescape(escape(d))),i)if(this._config.loadingScreen){var f=n.default(we);f.fadeIn(),n.default(l+" iframe").ready((function(){"number"==typeof o._config.loadingScreen?(o.switchTab("#"+s),setTimeout((function(){f.fadeOut()}),o._config.loadingScreen)):(o.switchTab("#"+s),f.fadeOut())}))}else this.switchTab("#"+s);this.onTabCreated(n.default("#"+s))},t.openTabSidebar=function(e,t){void 0===t&&(t=this._config.autoShowNewTab);var a=n.default(e).clone();void 0===a.attr("href")&&(a=n.default(e).parent("a").clone()),a.find(".right, .search-path").remove();var i=a.find("p").text();""===i&&(i=a.text());var o=a.attr("href");if("#"!==o&&""!==o&&void 0!==o){var l=o.replace("./","").replace(/["#&'./:=?[\]]/gi,"-").replace(/(--)/gi,""),s="tab-"+l;if(!this._config.allowDuplicates&&n.default("#"+s).length>0)return this.switchTab("#"+s,this._config.allowReload);(!this._config.allowDuplicates&&0===n.default("#"+s).length||this._config.allowDuplicates)&&this.createTab(i,o,l,t)}},t.switchTab=function(e,t){var a=this;void 0===t&&(t=!1);var i=n.default(e),o=i.attr("href");if(n.default(ye).hide(),t){var l=n.default(we);this._config.loadingScreen?l.show(0,(function(){n.default(o+" iframe").attr("src",n.default(o+" iframe").attr("src")).ready((function(){a._config.loadingScreen&&("number"==typeof a._config.loadingScreen?setTimeout((function(){l.fadeOut()}),a._config.loadingScreen):l.fadeOut())}))})):n.default(o+" iframe").attr("src",n.default(o+" iframe").attr("src"))}n.default(me+" .active").tab("dispose").removeClass("active"),this._fixHeight(),i.tab("show"),i.parents("li").addClass("active"),this.onTabChanged(i),this._config.autoItemActive&&this._setItemActive(n.default(o+" iframe").attr("src"))},t.removeActiveTab=function(e,t){if("all"==e)n.default(ve).remove(),n.default(Ce).remove(),n.default(ye).show();else if("all-other"==e)n.default(ve+":not(.active)").remove(),n.default(Ce+":not(.active)").remove();else if("only-this"==e){var a=n.default(t),i=a.parent(".nav-item"),o=i.parent(),l=i.index(),s=a.siblings(".nav-link").attr("aria-controls");if(i.remove(),n.default("#"+s).remove(),n.default(be).children().length==n.default(ye+", "+we).length)n.default(ye).show();else{var r=l-1;this.switchTab(o.children().eq(r).find("a.nav-link"))}}else{var d=n.default(ve+".active"),f=d.parent(),u=d.index();if(d.remove(),n.default(Ce+".active").remove(),n.default(be).children().length==n.default(ye+", "+we).length)n.default(ye).show();else{var c=u-1;this.switchTab(f.children().eq(c).find("a.nav-link"))}}},t.toggleFullscreen=function(){n.default("body").hasClass(je)?(n.default(ce+" i").removeClass(this._config.iconMinimize).addClass(this._config.iconMaximize),n.default("body").removeClass(je),n.default(ye+", "+we).height("100%"),n.default(he).height("100%"),n.default(ge).height("100%")):(n.default(ce+" i").removeClass(this._config.iconMaximize).addClass(this._config.iconMinimize),n.default("body").addClass(je)),n.default(window).trigger("resize"),this._fixHeight(!0)},t._init=function(){var e=n.default(be).children().length>2;if(this._setupListeners(),this._fixHeight(!0),e){var t=n.default(""+Ce).first();console.log(t);var a="#tab-"+t.attr("id").replace("panel-","");this.switchTab(a,!0)}},t._initFrameElement=function(){if(window.frameElement&&this._config.autoIframeMode){var e=n.default("body");e.addClass(Se),this._config.autoDarkMode&&e.addClass("dark-mode")}},t._navScroll=function(e){var t=n.default(me).scrollLeft();n.default(me).animate({scrollLeft:t+e},250,"linear")},t._setupListeners=function(){var e=this;n.default(window).on("resize",(function(){setTimeout((function(){e._fixHeight()}),1)})),n.default(he).hasClass(Se)&&(n.default(document).on("click",xe+", .sidebar-search-results .list-group-item",(function(t){t.preventDefault(),e.openTabSidebar(t.target)})),this._config.useNavbarItems&&n.default(document).on("click",Ie+", "+Te,(function(t){t.preventDefault(),e.openTabSidebar(t.target)}))),n.default(document).on("click",_e,(function(t){t.preventDefault(),e.onTabClick(t.target),e.switchTab(t.target)})),n.default(document).on("click",_e,(function(t){t.preventDefault(),e.onTabClick(t.target),e.switchTab(t.target)})),n.default(document).on("click",'[data-widget="iframe-close"]',(function(t){t.preventDefault();var a=t.target;"I"==a.nodeName&&(a=t.target.offsetParent),e.removeActiveTab(a.attributes["data-type"]?a.attributes["data-type"].nodeValue:null,a)})),n.default(document).on("click",ce,(function(t){t.preventDefault(),e.toggleFullscreen()}));var t=!1,a=null;n.default(document).on("mousedown",'[data-widget="iframe-scrollleft"]',(function(n){n.preventDefault(),clearInterval(a);var i=e._config.scrollOffset;e._config.scrollBehaviorSwap||(i=-i),t=!0,e._navScroll(i),a=setInterval((function(){e._navScroll(i)}),250)})),n.default(document).on("mousedown",'[data-widget="iframe-scrollright"]',(function(n){n.preventDefault(),clearInterval(a);var i=e._config.scrollOffset;e._config.scrollBehaviorSwap&&(i=-i),t=!0,e._navScroll(i),a=setInterval((function(){e._navScroll(i)}),250)})),n.default(document).on("mouseup",(function(){t&&(t=!1,clearInterval(a),a=null)}))},t._setItemActive=function(e){n.default(xe+", "+Te).removeClass("active"),n.default(Ie).parent().removeClass("active");var t=n.default(Ie+'[href$="'+e+'"]'),a=n.default('.main-header a.dropdown-item[href$="'+e+'"]'),i=n.default(xe+'[href$="'+e+'"]');t.each((function(e,t){n.default(t).parent().addClass("active")})),a.each((function(e,t){n.default(t).addClass("active")})),i.each((function(e,t){n.default(t).addClass("active"),n.default(t).parents(".nav-treeview").prevAll(".nav-link").addClass("active")}))},t._fixHeight=function(e){if(void 0===e&&(e=!1),n.default("body").hasClass(je)){var t=n.default(window).height(),a=n.default(pe).outerHeight();n.default(ye+", "+we+", "+ge).height(t-a),n.default(he).height(t)}else{var i=parseFloat(n.default(he).css("height")),o=n.default(pe).outerHeight();1==e?setTimeout((function(){n.default(ye+", "+we).height(i-o)}),50):n.default(ge).height(i-o)}},e._jQueryInterface=function(t){if(n.default(ue).length>0){var a=n.default(this).data(de);a||(a=n.default(this).data());var i=n.default.extend({},ke,"object"==typeof t?t:a);localStorage.setItem("AdminLTE:IFrame:Options",JSON.stringify(i));var o=new e(n.default(this),i);n.default(this).data(de,"object"==typeof t?t:a),"string"==typeof t&&/createTab|openTabSidebar|switchTab|removeActiveTab/.test(t)&&o[t]()}else new e(n.default(this),JSON.parse(localStorage.getItem("AdminLTE:IFrame:Options")))._initFrameElement()},e}();n.default(window).on("load",(function(){Qe._jQueryInterface.call(n.default(ue))})),n.default.fn.IFrame=Qe._jQueryInterface,n.default.fn.IFrame.Constructor=Qe,n.default.fn.IFrame.noConflict=function(){return n.default.fn.IFrame=fe,Qe._jQueryInterface};var He="lte.layout",ze=n.default.fn.Layout,Fe=".main-header",Ee=".main-sidebar",Le=".main-sidebar .sidebar",De=".main-footer",Re="sidebar-focused",Ae={scrollbarTheme:"os-theme-light",scrollbarAutoHide:"l",panelAutoHeight:!0,panelAutoHeightMode:"min-height",preloadDuration:200,loginRegisterAutoHeight:!0},Me=function(){function e(e,t){this._config=t,this._element=e}var t=e.prototype;return t.fixLayoutHeight=function(e){void 0===e&&(e=null);var t=n.default("body"),a=0;(t.hasClass("control-sidebar-slide-open")||t.hasClass("control-sidebar-open")||"control_sidebar"===e)&&(a=n.default(".control-sidebar-content").outerHeight());var i={window:n.default(window).height(),header:n.default(Fe).length>0&&!n.default("body").hasClass("layout-navbar-fixed")?n.default(Fe).outerHeight():0,footer:n.default(De).length>0?n.default(De).outerHeight():0,sidebar:n.default(Le).length>0?n.default(Le).height():0,controlSidebar:a},o=this._max(i),l=this._config.panelAutoHeight;!0===l&&(l=0);var s=n.default(".content-wrapper");!1!==l&&(o===i.controlSidebar?s.css(this._config.panelAutoHeightMode,o+l):o===i.window?s.css(this._config.panelAutoHeightMode,o+l-i.header-i.footer):s.css(this._config.panelAutoHeightMode,o+l-i.header),this._isFooterFixed()&&s.css(this._config.panelAutoHeightMode,parseFloat(s.css(this._config.panelAutoHeightMode))+i.footer)),t.hasClass("layout-fixed")&&("undefined"!=typeof n.default.fn.overlayScrollbars?n.default(Le).overlayScrollbars({className:this._config.scrollbarTheme,sizeAutoCapable:!0,scrollbars:{autoHide:this._config.scrollbarAutoHide,clickScrolling:!0}}):n.default(Le).css("overflow-y","auto"))},t.fixLoginRegisterHeight=function(){var e=n.default("body"),t=n.default(".login-box, .register-box");if(e.hasClass("iframe-mode"))e.css("height","100%"),n.default(".wrapper").css("height","100%"),n.default("html").css("height","100%");else if(0===t.length)e.css("height","auto"),n.default("html").css("height","auto");else{var a=t.height();e.css(this._config.panelAutoHeightMode)!==a&&e.css(this._config.panelAutoHeightMode,a)}},t._init=function(){var e=this;this.fixLayoutHeight(),!0===this._config.loginRegisterAutoHeight?this.fixLoginRegisterHeight():this._config.loginRegisterAutoHeight===parseInt(this._config.loginRegisterAutoHeight,10)&&setInterval(this.fixLoginRegisterHeight,this._config.loginRegisterAutoHeight),n.default(Le).on("collapsed.lte.treeview expanded.lte.treeview",(function(){e.fixLayoutHeight()})),n.default(Ee).on("mouseenter mouseleave",(function(){n.default("body").hasClass("sidebar-collapse")&&e.fixLayoutHeight()})),n.default('[data-widget="pushmenu"]').on("collapsed.lte.pushmenu shown.lte.pushmenu",(function(){setTimeout((function(){e.fixLayoutHeight()}),300)})),n.default('[data-widget="control-sidebar"]').on("collapsed.lte.controlsidebar",(function(){e.fixLayoutHeight()})).on("expanded.lte.controlsidebar",(function(){e.fixLayoutHeight("control_sidebar")})),n.default(window).resize((function(){e.fixLayoutHeight()})),setTimeout((function(){n.default("body.hold-transition").removeClass("hold-transition")}),50),setTimeout((function(){var e=n.default(".preloader");e&&(e.css("height",0),setTimeout((function(){e.children().hide()}),200))}),this._config.preloadDuration)},t._max=function(e){var t=0;return Object.keys(e).forEach((function(a){e[a]>t&&(t=e[a])})),t},t._isFooterFixed=function(){return"fixed"===n.default(De).css("position")},e._jQueryInterface=function(t){return void 0===t&&(t=""),this.each((function(){var a=n.default(this).data(He),i=n.default.extend({},Ae,n.default(this).data());a||(a=new e(n.default(this),i),n.default(this).data(He,a)),"init"===t||""===t?a._init():"fixLayoutHeight"!==t&&"fixLoginRegisterHeight"!==t||a[t]()}))},e}();n.default(window).on("load",(function(){Me._jQueryInterface.call(n.default("body"))})),n.default(Le+" a").on("focusin",(function(){n.default(Ee).addClass(Re)})).on("focusout",(function(){n.default(Ee).removeClass(Re)})),n.default.fn.Layout=Me._jQueryInterface,n.default.fn.Layout.Constructor=Me,n.default.fn.Layout.noConflict=function(){return n.default.fn.Layout=ze,Me._jQueryInterface};var qe="PushMenu",Oe="lte.pushmenu",Ne="."+Oe,Pe=n.default.fn[qe],Ue='[data-widget="pushmenu"]',Be="body",$e="sidebar-collapse",Je="sidebar-open",We="sidebar-is-opening",Ve="sidebar-closed",Ge={autoCollapseSize:992,enableRemember:!1,noTransitionAfterReload:!0,animationSpeed:300},Ke=function(){function e(e,t){this._element=e,this._options=n.default.extend({},Ge,t),0===n.default("#sidebar-overlay").length&&this._addOverlay(),this._init()}var t=e.prototype;return t.expand=function(){var e=n.default(Be);this._options.autoCollapseSize&&n.default(window).width()<=this._options.autoCollapseSize&&e.addClass(Je),e.addClass(We).removeClass("sidebar-collapse sidebar-closed").delay(50).queue((function(){e.removeClass(We),n.default(this).dequeue()})),this._options.enableRemember&&localStorage.setItem("remember"+Ne,Je),n.default(this._element).trigger(n.default.Event("shown.lte.pushmenu"))},t.collapse=function(){var e=this,t=n.default(Be);this._options.autoCollapseSize&&n.default(window).width()<=this._options.autoCollapseSize&&t.removeClass(Je).addClass(Ve),t.addClass($e),this._options.enableRemember&&localStorage.setItem("remember"+Ne,$e),n.default(this._element).trigger(n.default.Event("collapsed.lte.pushmenu")),setTimeout((function(){n.default(e._element).trigger(n.default.Event("collapsed-done.lte.pushmenu"))}),this._options.animationSpeed)},t.toggle=function(){n.default(Be).hasClass($e)?this.expand():this.collapse()},t.autoCollapse=function(e){if(void 0===e&&(e=!1),this._options.autoCollapseSize){var t=n.default(Be);n.default(window).width()<=this._options.autoCollapseSize?t.hasClass(Je)||this.collapse():!0===e&&(t.hasClass(Je)?t.removeClass(Je):t.hasClass(Ve)&&this.expand())}},t.remember=function(){if(this._options.enableRemember){var e=n.default("body");localStorage.getItem("remember"+Ne)===$e?this._options.noTransitionAfterReload?e.addClass("hold-transition").addClass($e).delay(50).queue((function(){n.default(this).removeClass("hold-transition"),n.default(this).dequeue()})):e.addClass($e):this._options.noTransitionAfterReload?e.addClass("hold-transition").removeClass($e).delay(50).queue((function(){n.default(this).removeClass("hold-transition"),n.default(this).dequeue()})):e.removeClass($e)}},t._init=function(){var e=this;this.remember(),this.autoCollapse(),n.default(window).resize((function(){e.autoCollapse(!0)}))},t._addOverlay=function(){var e=this,t=n.default("<div />",{id:"sidebar-overlay"});t.on("click",(function(){e.collapse()})),n.default(".wrapper").append(t)},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(Oe),i=n.default.extend({},Ge,n.default(this).data());a||(a=new e(this,i),n.default(this).data(Oe,a)),"string"==typeof t&&/collapse|expand|toggle/.test(t)&&a[t]()}))},e}();n.default(document).on("click",Ue,(function(e){e.preventDefault();var t=e.currentTarget;"pushmenu"!==n.default(t).data("widget")&&(t=n.default(t).closest(Ue)),Ke._jQueryInterface.call(n.default(t),"toggle")})),n.default(window).on("load",(function(){Ke._jQueryInterface.call(n.default(Ue))})),n.default.fn[qe]=Ke._jQueryInterface,n.default.fn[qe].Constructor=Ke,n.default.fn[qe].noConflict=function(){return n.default.fn[qe]=Pe,Ke._jQueryInterface};var Xe="SidebarSearch",Ye="lte.sidebar-search",Ze=n.default.fn[Xe],et="sidebar-search-open",tt="fa-search",at="fa-times",nt="sidebar-search-results",it="list-group",ot='[data-widget="sidebar-search"]',lt=ot+" .form-control",st=ot+" .btn",rt=st+" i",dt=".sidebar-search-results",ft=".sidebar-search-results .list-group",ut={arrowSign:"->",minLength:3,maxResults:7,highlightName:!0,highlightPath:!1,highlightClass:"text-light",notFoundText:"No element found!"},ct=[],ht=function(){function e(e,t){this.element=e,this.options=n.default.extend({},ut,t),this.items=[]}var a=e.prototype;return a.init=function(){var e=this;0!==n.default(ot).length&&(0===n.default(ot).next(dt).length&&n.default(ot).after(n.default("<div />",{class:nt})),0===n.default(dt).children(".list-group").length&&n.default(dt).append(n.default("<div />",{class:it})),this._addNotFound(),n.default(".main-sidebar .nav-sidebar").children().each((function(t,a){e._parseItem(a)})))},a.search=function(){var e=this,t=n.default(lt).val().toLowerCase();if(t.length<this.options.minLength)return n.default(ft).empty(),this._addNotFound(),void this.close();var a=ct.filter((function(e){return e.name.toLowerCase().includes(t)})),i=n.default(a.slice(0,this.options.maxResults));n.default(ft).empty(),0===i.length?this._addNotFound():i.each((function(t,a){n.default(ft).append(e._renderItem(escape(a.name),encodeURI(a.link),a.path))})),this.open()},a.open=function(){n.default(ot).parent().addClass(et),n.default(rt).removeClass(tt).addClass(at)},a.close=function(){n.default(ot).parent().removeClass(et),n.default(rt).removeClass(at).addClass(tt)},a.toggle=function(){n.default(ot).parent().hasClass(et)?this.close():this.open()},a._parseItem=function(e,t){var a=this;if(void 0===t&&(t=[]),!n.default(e).hasClass("nav-header")){var i={},o=n.default(e).clone().find("> .nav-link"),l=n.default(e).clone().find("> .nav-treeview"),s=o.attr("href"),r=o.find("p").children().remove().end().text();if(i.name=this._trimText(r),i.link=s,i.path=t,0===l.length)ct.push(i);else{var d=i.path.concat([i.name]);l.children().each((function(e,t){a._parseItem(t,d)}))}}},a._trimText=function(e){return t.trim(e.replace(/(\r\n|\n|\r)/gm," "))},a._renderItem=function(e,t,a){var i=this;if(a=a.join(" "+this.options.arrowSign+" "),e=unescape(e),t=decodeURI(t),this.options.highlightName||this.options.highlightPath){var o=n.default(lt).val().toLowerCase(),l=new RegExp(o,"gi");this.options.highlightName&&(e=e.replace(l,(function(e){return'<strong class="'+i.options.highlightClass+'">'+e+"</strong>"}))),this.options.highlightPath&&(a=a.replace(l,(function(e){return'<strong class="'+i.options.highlightClass+'">'+e+"</strong>"})))}var s=n.default("<a/>",{href:t,class:"list-group-item"}),r=n.default("<div/>",{class:"search-title"}).html(e),d=n.default("<div/>",{class:"search-path"}).html(a);return s.append(r).append(d),s},a._addNotFound=function(){n.default(ft).append(this._renderItem(this.options.notFoundText,"#",[]))},e._jQueryInterface=function(t){var a=n.default(this).data(Ye);a||(a=n.default(this).data());var i=n.default.extend({},ut,"object"==typeof t?t:a),o=new e(n.default(this),i);n.default(this).data(Ye,"object"==typeof t?t:a),"string"==typeof t&&/init|toggle|close|open|search/.test(t)?o[t]():o.init()},e}();n.default(document).on("click",st,(function(e){e.preventDefault(),ht._jQueryInterface.call(n.default(ot),"toggle")})),n.default(document).on("keyup",lt,(function(e){return 38==e.keyCode?(e.preventDefault(),void n.default(ft).children().last().focus()):40==e.keyCode?(e.preventDefault(),void n.default(ft).children().first().focus()):void setTimeout((function(){ht._jQueryInterface.call(n.default(ot),"search")}),100)})),n.default(document).on("keydown",ft,(function(e){var t=n.default(":focus");38==e.keyCode&&(e.preventDefault(),t.is(":first-child")?t.siblings().last().focus():t.prev().focus()),40==e.keyCode&&(e.preventDefault(),t.is(":last-child")?t.siblings().first().focus():t.next().focus())})),n.default(window).on("load",(function(){ht._jQueryInterface.call(n.default(ot),"init")})),n.default.fn[Xe]=ht._jQueryInterface,n.default.fn[Xe].Constructor=ht,n.default.fn[Xe].noConflict=function(){return n.default.fn[Xe]=Ze,ht._jQueryInterface};var gt="NavbarSearch",pt="lte.navbar-search",mt=n.default.fn[gt],vt='[data-widget="navbar-search"]',_t=".form-control",bt="navbar-search-open",yt={resetOnClose:!0,target:".navbar-search-block"},wt=function(){function e(e,t){this._element=e,this._config=n.default.extend({},yt,t)}var t=e.prototype;return t.open=function(){n.default(this._config.target).css("display","flex").hide().fadeIn().addClass(bt),n.default(this._config.target+" "+_t).focus()},t.close=function(){n.default(this._config.target).fadeOut().removeClass(bt),this._config.resetOnClose&&n.default(this._config.target+" "+_t).val("")},t.toggle=function(){n.default(this._config.target).hasClass(bt)?this.close():this.open()},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(pt),i=n.default.extend({},yt,n.default(this).data());if(a||(a=new e(this,i),n.default(this).data(pt,a)),!/toggle|close|open/.test(t))throw new Error("Undefined method "+t);a[t]()}))},e}();n.default(document).on("click",vt,(function(e){e.preventDefault();var t=n.default(e.currentTarget);"navbar-search"!==t.data("widget")&&(t=t.closest(vt)),wt._jQueryInterface.call(t,"toggle")})),n.default.fn[gt]=wt._jQueryInterface,n.default.fn[gt].Constructor=wt,n.default.fn[gt].noConflict=function(){return n.default.fn[gt]=mt,wt._jQueryInterface};var Ct=n.default.fn.Toasts,xt="topRight",It="topLeft",Tt="bottomRight",St="bottomLeft",jt={position:xt,fixed:!0,autohide:!1,autoremove:!0,delay:1e3,fade:!0,icon:null,image:null,imageAlt:null,imageHeight:"25px",title:null,subtitle:null,close:!0,body:null,class:null},kt=function(){function e(e,t){this._config=t,this._prepareContainer(),n.default("body").trigger(n.default.Event("init.lte.toasts"))}var t=e.prototype;return t.create=function(){var e=n.default('<div class="toast" role="alert" aria-live="assertive" aria-atomic="true"/>');e.data("autohide",this._config.autohide),e.data("animation",this._config.fade),this._config.class&&e.addClass(this._config.class),this._config.delay&&500!=this._config.delay&&e.data("delay",this._config.delay);var t=n.default('<div class="toast-header">');if(null!=this._config.image){var a=n.default("<img />").addClass("rounded mr-2").attr("src",this._config.image).attr("alt",this._config.imageAlt);null!=this._config.imageHeight&&a.height(this._config.imageHeight).width("auto"),t.append(a)}if(null!=this._config.icon&&t.append(n.default("<i />").addClass("mr-2").addClass(this._config.icon)),null!=this._config.title&&t.append(n.default("<strong />").addClass("mr-auto").html(this._config.title)),null!=this._config.subtitle&&t.append(n.default("<small />").html(this._config.subtitle)),1==this._config.close){var i=n.default('<button data-dismiss="toast" />').attr("type","button").addClass("ml-2 mb-1 close").attr("aria-label","Close").append('<span aria-hidden="true">&times;</span>');null==this._config.title&&i.toggleClass("ml-2 ml-auto"),t.append(i)}e.append(t),null!=this._config.body&&e.append(n.default('<div class="toast-body" />').html(this._config.body)),n.default(this._getContainerId()).prepend(e);var o=n.default("body");o.trigger(n.default.Event("created.lte.toasts")),e.toast("show"),this._config.autoremove&&e.on("hidden.bs.toast",(function(){n.default(this).delay(200).remove(),o.trigger(n.default.Event("removed.lte.toasts"))}))},t._getContainerId=function(){return this._config.position==xt?"#toastsContainerTopRight":this._config.position==It?"#toastsContainerTopLeft":this._config.position==Tt?"#toastsContainerBottomRight":this._config.position==St?"#toastsContainerBottomLeft":void 0},t._prepareContainer=function(){if(0===n.default(this._getContainerId()).length){var e=n.default("<div />").attr("id",this._getContainerId().replace("#",""));this._config.position==xt?e.addClass("toasts-top-right"):this._config.position==It?e.addClass("toasts-top-left"):this._config.position==Tt?e.addClass("toasts-bottom-right"):this._config.position==St&&e.addClass("toasts-bottom-left"),n.default("body").append(e)}this._config.fixed?n.default(this._getContainerId()).addClass("fixed"):n.default(this._getContainerId()).removeClass("fixed")},e._jQueryInterface=function(t,a){return this.each((function(){var i=n.default.extend({},jt,a),o=new e(n.default(this),i);"create"===t&&o[t]()}))},e}();n.default.fn.Toasts=kt._jQueryInterface,n.default.fn.Toasts.Constructor=kt,n.default.fn.Toasts.noConflict=function(){return n.default.fn.Toasts=Ct,kt._jQueryInterface};var Qt="TodoList",Ht="lte.todolist",zt=n.default.fn[Qt],Ft="done",Et={onCheck:function(e){return e},onUnCheck:function(e){return e}},Lt=function(){function e(e,t){this._config=t,this._element=e,this._init()}var t=e.prototype;return t.toggle=function(e){e.parents("li").toggleClass(Ft),n.default(e).prop("checked")?this.check(e):this.unCheck(n.default(e))},t.check=function(e){this._config.onCheck.call(e)},t.unCheck=function(e){this._config.onUnCheck.call(e)},t._init=function(){var e=this,t=this._element;t.find("input:checkbox:checked").parents("li").toggleClass(Ft),t.on("change","input:checkbox",(function(t){e.toggle(n.default(t.target))}))},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(Ht);a||(a=n.default(this).data());var i=n.default.extend({},Et,"object"==typeof t?t:a),o=new e(n.default(this),i);n.default(this).data(Ht,"object"==typeof t?t:a),"init"===t&&o[t]()}))},e}();n.default(window).on("load",(function(){Lt._jQueryInterface.call(n.default('[data-widget="todo-list"]'))})),n.default.fn[Qt]=Lt._jQueryInterface,n.default.fn[Qt].Constructor=Lt,n.default.fn[Qt].noConflict=function(){return n.default.fn[Qt]=zt,Lt._jQueryInterface};var Dt="Treeview",Rt="lte.treeview",At=n.default.fn[Dt],Mt=".nav-item",qt=".nav-treeview",Ot=".menu-open",Nt='[data-widget="treeview"]',Pt="menu-open",Ut="menu-is-opening",Bt={trigger:Nt+" .nav-link",animationSpeed:300,accordion:!0,expandSidebar:!1,sidebarButtonSelector:'[data-widget="pushmenu"]'},$t=function(){function e(e,t){this._config=t,this._element=e}var t=e.prototype;return t.init=function(){n.default(".nav-item.menu-open .nav-treeview.menu-open").css("display","block"),this._setupListeners()},t.expand=function(e,t){var a=this,i=n.default.Event("expanded.lte.treeview");if(this._config.accordion){var o=t.siblings(Ot).first(),l=o.find(qt).first();this.collapse(l,o)}t.addClass(Ut),e.stop().slideDown(this._config.animationSpeed,(function(){t.addClass(Pt),n.default(a._element).trigger(i)})),this._config.expandSidebar&&this._expandSidebar()},t.collapse=function(e,t){var a=this,i=n.default.Event("collapsed.lte.treeview");t.removeClass("menu-is-opening menu-open"),e.stop().slideUp(this._config.animationSpeed,(function(){n.default(a._element).trigger(i),e.find(".menu-open > .nav-treeview").slideUp(),e.find(Ot).removeClass("menu-is-opening menu-open")}))},t.toggle=function(e){var t=n.default(e.currentTarget),a=t.parent(),i=a.find("> .nav-treeview");if(i.is(qt)||(a.is(Mt)||(i=a.parent().find("> .nav-treeview")),i.is(qt))){e.preventDefault();var o=t.parents(Mt).first();o.hasClass(Pt)?this.collapse(n.default(i),o):this.expand(n.default(i),o)}},t._setupListeners=function(){var e=this,t=void 0!==this._element.attr("id")?"#"+this._element.attr("id"):"";n.default(document).on("click",""+t+this._config.trigger,(function(t){e.toggle(t)}))},t._expandSidebar=function(){n.default("body").hasClass("sidebar-collapse")&&n.default(this._config.sidebarButtonSelector).PushMenu("expand")},e._jQueryInterface=function(t){return this.each((function(){var a=n.default(this).data(Rt),i=n.default.extend({},Bt,n.default(this).data());a||(a=new e(n.default(this),i),n.default(this).data(Rt,a)),"init"===t&&a[t]()}))},e}();n.default(window).on("load.lte.treeview",(function(){n.default(Nt).each((function(){$t._jQueryInterface.call(n.default(this),"init")}))})),n.default.fn[Dt]=$t._jQueryInterface,n.default.fn[Dt].Constructor=$t,n.default.fn[Dt].noConflict=function(){return n.default.fn[Dt]=At,$t._jQueryInterface},e.CardRefresh=f,e.CardWidget=I,e.ControlSidebar=M,e.DirectChat=P,e.Dropdown=V,e.ExpandableTable=te,e.Fullscreen=re,e.IFrame=Qe,e.Layout=Me,e.NavbarSearch=wt,e.PushMenu=Ke,e.SidebarSearch=ht,e.Toasts=kt,e.TodoList=Lt,e.Treeview=$t,Object.defineProperty(e,"__esModule",{value:!0})}));[m
[32m+[m[32m//# sourceMappingURL=adminlte.min.js.map[m
\ No newline at end of file[m
[1mdiff --git a/public/css/style.css b/public/css/style.css[m
[1mnew file mode 100644[m
[1mindex 0000000..93002d4[m
[1m--- /dev/null[m
[1m+++ b/public/css/style.css[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32m@import url('https://fonts.googleapis.com/css2?family=Montserrat+Alternates:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');[m
[32m+[m[32mbody {[m
[32m+[m[32m    font-family: 'Montserrat Alternates', sans-serif;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.navbar-nav > li > .dropdown-menu {[m
[32m+[m[32m    margin-top: 20px;[m
[32m+[m[32m    border-top-left-radius: 4px;[m
[32m+[m[32m    border-top-right-radius: 4px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.navbar-brand {[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    color: #000c19;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.navbar-default .navbar-nav > li > a {[m
[32m+[m[32m    width: 200px;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown {[m
[32m+[m[32m    position: static !important;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu {[m
[32m+[m[32m    padding: 20px 0px;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    box-shadow: none;[m
[32m+[m[32m    -webkit-box-shadow: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu > li > ul {[m
[32m+[m[32m    padding: 0;[m
[32m+[m[32m    margin: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu > li > ul > li {[m
[32m+[m[32m    list-style: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu > li > ul > li > a {[m
[32m+[m[32m    display: block;[m
[32m+[m[32m    padding: 3px 20px;[m
[32m+[m[32m    clear: both;[m
[32m+[m[32m    font-weight: normal;[m
[32m+[m[32m    line-height: 1.428571429;[m
[32m+[m[32m    color: #999;[m
[32m+[m[32m    white-space: normal;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu > li ul > li > a:hover,[m
[32m+[m[32m.mega-dropdown-menu > li ul > li > a:focus {[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m    color: #444;[m
[32m+[m[32m    background-color: #f5f5f5;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu .dropdown-header {[m
[32m+[m[32m    color: #428bca;[m
[32m+[m[32m    text-transform: uppercase;[m
[32m+[m[32m    letter-spacing: 1px;[m
[32m+[m[32m    font-size: 12px;[m
[32m+[m[32m    font-family: "Segoe UI", sans-serif;[m
[32m+[m[32m    font-weight: normal;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu form {[m
[32m+[m[32m    margin: 3px 20px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mega-dropdown-menu .form-group {[m
[32m+[m[32m    margin-bottom: 3px;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/public/errors/404.php b/public/errors/404.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c0f5db9[m
[1m--- /dev/null[m
[1m+++ b/public/errors/404.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <title>404 Ошибка</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[41m    [m
[32m+[m[32m<h1>Произошла Ошибка 404</h1>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/public/errors/dev.php b/public/errors/dev.php[m
[1mnew file mode 100644[m
[1mindex 0000000..52653ee[m
[1m--- /dev/null[m
[1m+++ b/public/errors/dev.php[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <title>Ошибка</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[41m    [m
[32m+[m[32m<h1>Произошла Ошибка Сервера</h1>[m
[32m+[m[32m<p><b>Код ошибки:</b> <?php echo $errno ?></p>[m
[32m+[m[32m<p><b>Текст ошибки:</b> <?php echo $errstr ?></p>[m
[32m+[m[32m<p><b>Файл, в котором произошла ошибка:</b> <?php echo $errfile ?></p>[m
[32m+[m[32m<p><b>Строка, в котором произошла ошибка:</b> <?php echo $errline ?></p>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/public/errors/prod.php b/public/errors/prod.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9631c57[m
[1m--- /dev/null[m
[1m+++ b/public/errors/prod.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m<head>[m
[32m+[m[32m    <meta charset="UTF-8">[m
[32m+[m[32m    <title>Ошибка</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[41m    [m
[32m+[m[32m<h1>Произошла Ошибка Сервера</h1>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/public/images/bg.png b/public/images/bg.png[m
[1mnew file mode 100644[m
[1mindex 0000000..deffbf5[m
Binary files /dev/null and b/public/images/bg.png differ
[1mdiff --git a/public/index.php b/public/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1b06861[m
[1m--- /dev/null[m
[1m+++ b/public/index.php[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32muse framework\core\Router;[m
[32m+[m
[32m+[m[32m$query = rtrim($_SERVER['QUERY_STRING'], '/');[m
[32m+[m
[32m+[m[32mdefine('DEBUG', 1);[m
[32m+[m[32mdefine('WWW', __DIR__);[m
[32m+[m[32mdefine('CORE', dirname(__DIR__) . '/vendor/framework/core');[m
[32m+[m[32mdefine('ROOT', dirname(__DIR__));[m
[32m+[m[32mdefine('LIBS', dirname(__DIR__) . '/vendor/framework/libs');[m
[32m+[m[32mdefine('APP', dirname(__DIR__) . '/app');[m
[32m+[m[32mdefine('CACHE', dirname(__DIR__) . '/tmp/cache');[m
[32m+[m[32mdefine('LAYOUT', 'def');[m
[32m+[m[32mdefine('ADMIN', 'http://med.loc/admin');[m
[32m+[m
[32m+[m[32mrequire '../vendor/framework/libs/functions.php';[m
[32m+[m[32mrequire __DIR__ . '/../vendor/autoload.php';[m
[32m+[m
[32m+[m[32m// spl_autoload_register(function($class) {[m
[32m+[m[32m//     $file = ROOT . '/' . str_replace('\\', '/', $class) . '.php';[m
[32m+[m[32m//     if (is_file($file)) {[m
[32m+[m[32m//         require_once $file;[m
[32m+[m[32m//     }[m
[32m+[m[32m// });[m
[32m+[m
[32m+[m[32mnew \framework\core\App;[m
[32m+[m
[32m+[m[32mdebug(ROOT);[m
[32m+[m
[32m+[m[32mRouter::add('^blog/(?P<action>[a-z-]+)/(?P<alias>[a-z-1-9-]+)$', ['controller' => 'Blog']);[m
[32m+[m[32mRouter::add('^blog/(?P<alias>[a-z-1-9-]+)$', ['controller' => 'Blog', 'action' => 'show']);[m
[32m+[m
[32m+[m[32mRouter::add('^product/(?P<action>[a-z-]+)/(?P<alias>[a-z-1-9-]+)$', ['controller' => 'Product']);[m
[32m+[m[32mRouter::add('^product/(?P<alias>[a-z-1-9-]+)$', ['controller' => 'Product', 'action' => 'show']);[m
[32m+[m
[32m+[m[32mRouter::add('^admin$', ['controller' => 'Main', 'action' => 'index', 'prefix' => 'admin']);[m
[32m+[m[32mRouter::add('^admin/?(?P<controller>[a-z-]+)/?(?P<action>[a-z-]+)?$', ['prefix' => 'admin']);[m
[32m+[m
[32m+[m[32mRouter::add('^$', ['controller' => 'Main', 'action' => 'index']);[m
[32m+[m[32mRouter::add('^(?P<controller>[a-z-]+)/?(?P<action>[a-z-]+)?$');[m
[32m+[m
[32m+[m[32mRouter::dispatch($query);[m
[32m+[m
[32m+[m[32mif (isset($_SESSION['user'])) {[m
[32m+[m[32m    if ($_SESSION['user']['role'] != 'admin') {[m
[32m+[m[32m        if ($_SESSION['user']['role'] != 'user') {[m
[32m+[m[32m            if (Router::getRoute()['controller'] != ucfirst($_SESSION['user']['role'])) {[m
[32m+[m[32m                if (Router::getRoute()['controller'] != 'User') {[m
[32m+[m[32m                    redirect('/' . $_SESSION['user']['role']);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/public/js/main.js b/public/js/main.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1499716[m
[1m--- /dev/null[m
[1m+++ b/public/js/main.js[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m$(function() {[m
[32m+[m[32m    $('#lang').change(function() {[m
[32m+[m[32m        window.location = '/language/change?lang=' + $(this).val();[m
[32m+[m[32m    });[m
[32m+[m[32m});[m
\ No newline at end of file[m
[1mdiff --git a/public/lang/ar.php b/public/lang/ar.php[m
[1mnew file mode 100644[m
[1mindex 0000000..533ccab[m
[1m--- /dev/null[m
[1m+++ b/public/lang/ar.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "مطلوب",[m
[32m+[m[32m    'equals'        => "يجب أن يكون مساوي لي '%s'",[m
[32m+[m[32m    'different'     => "يجب ان يكون غير '%s'",[m
[32m+[m[32m    'accepted'      => "يجب ان يكون نعم",[m
[32m+[m[32m    'numeric'       => "يجب ان يكون رقم",[m
[32m+[m[32m    'integer'       => "يجب ان يكون رقم (0-9)",[m
[32m+[m[32m    'length'        => "يجب ان يكون أطول من %d",[m
[32m+[m[32m    'min'           => "يجب ان يكون اعلي من  %s",[m
[32m+[m[32m    'max'           => "يجب ان يكون اقل من %s",[m
[32m+[m[32m    'in'            => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'listContains'  => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'notIn'         => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'ip'            => "رقم الإتصال غير صحيح",[m
[32m+[m[32m    'email'         => "البريد الألكتروني غير صحيح",[m
[32m+[m[32m    'url'           => "الرابط غير صحيح",[m
[32m+[m[32m    'urlActive'     => "يجب أن يكون نطاق فعال",[m
[32m+[m[32m    'alpha'         => "يجب أن يحتوي فقط علي a-z",[m
[32m+[m[32m    'alphaNum'      => "يجب ان يحتوي فقط a-z او ارقام 0-9",[m
[32m+[m[32m    'slug'          => "يجب ان يحتوي فقط علي a-z, و ارقام 0-9, شرطات و  خط سفلي",[m
[32m+[m[32m    'regex'         => "خطا بالصيغة",[m
[32m+[m[32m    'date'          => "خطا بالتاريخ",[m
[32m+[m[32m    'dateFormat'    => "يجب ان يكون تاريخ بهذه الصيغة '%s'",[m
[32m+[m[32m    'dateBefore'    => "التاريخ يجب ان يكون قبل '%s'",[m
[32m+[m[32m    'dateAfter'     => "التاريخ يجب ان يكون بعد '%s'",[m
[32m+[m[32m    'contains'      => "يجب ان يحتوي %s"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/az.php b/public/lang/az.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0cb3c03[m
[1m--- /dev/null[m
[1m+++ b/public/lang/az.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "mütləqdir",[m
[32m+[m[32m    'equals'        => "'%s' olmalıdır",[m
[32m+[m[32m    'different'     => "'%s'-dən fərqli olmalıdır",[m
[32m+[m[32m    'accepted'      => "Qeyd dilməlidir",[m
[32m+[m[32m    'numeric'       => "rəqəm olmalıdır",[m
[32m+[m[32m    'integer'       => "tam ədəd olmalıdır",[m
[32m+[m[32m    'length'        => "%d qədər uzunluğu olmalıdır",[m
[32m+[m[32m    'min'           => "minimum %s qədər olmalıdır",[m
[32m+[m[32m    'max'           => "maksimum %s qədər olmalıdır",[m
[32m+[m[32m    'listContains'  => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'in'            => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'notIn'         => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'ip'            => "düzgün IP ünvanı deyil",[m
[32m+[m[32m    'email'         => "düzgün email ünvanı deyil",[m
[32m+[m[32m    'url'           => "URL deyil",[m
[32m+[m[32m    'urlActive'     => "aktiv domain olmalıdır",[m
[32m+[m[32m    'alpha'         => "ancaq latın hərfləri ehtiva etməlidir",[m
[32m+[m[32m    'alphaNum'      => "ancaq latın hərfləri və(və ya) rəqəmlər ehtiva etməlidir",[m
[32m+[m[32m    'slug'          => "ancaq latın hərfləri,rəqəmlər,tire və altdan xət ehtiva etməlidir",[m
[32m+[m[32m    'regex'         => "etiabrsız sinvollar ehtiva edir",[m
[32m+[m[32m    'date'          => "tarix deyil",[m
[32m+[m[32m    'dateFormat'    => "tarix formatı bu cür olmalıdır: %s",[m
[32m+[m[32m    'dateBefore'    => "tarix %s -dən əvvəl olmamalıdır",[m
[32m+[m[32m    'dateAfter'     => "tarix %s -dən sonra olmamalıdır",[m
[32m+[m[32m    'contains'      => "%s ehtiva etməlidir",[m
[32m+[m[32m    'boolean'       => "boolen olmalıdır",[m
[32m+[m[32m    'lengthBetween' => "%d - %d sinvolları arası ehtiva etməlidir",[m
[32m+[m[32m    'creditCard'    => "kredir kart nömrəsi olmalıdır",[m
[32m+[m[32m    "lengthMin"     => "%d -dən çox sinvol olmalıdır",[m
[32m+[m[32m    "lengthMax"     => "%d -dən az sinvol olmalıdır",[m
[32m+[m	[32m"instanceOf"    => "'%s' əvəzinə olmalıdır"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/bg.php b/public/lang/bg.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2166b11[m
[1m--- /dev/null[m
[1m+++ b/public/lang/bg.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "е задължително",[m
[32m+[m[32m    'equals'        => "трябва да бъде същото като '%s'",[m
[32m+[m[32m    'different'     => "трябва да бъде различно от '%s'",[m
[32m+[m[32m    'accepted'      => "трабва да бъде прието",[m
[32m+[m[32m    'numeric'       => "трябва да бъде число",[m
[32m+[m[32m    'integer'       => "трябва да бъде цифра (0-9)",[m
[32m+[m[32m    'length'        => "трябва да бъде %d символа дълго",[m
[32m+[m[32m    'min'           => "трябвя да бъде поне %s",[m
[32m+[m[32m    'max'           => "трябва да бъде не повече от %s",[m
[32m+[m[32m    'listContains'  => "съдържа невалидна стойност",[m
[32m+[m[32m    'in'            => "съдържа невалидна стойност",[m
[32m+[m[32m    'notIn'         => "съдържа невалидна стойност",[m
[32m+[m[32m    'ip'            => "е невалиден IP адрес",[m
[32m+[m[32m    'email'         => "е невалиден имейл адрес",[m
[32m+[m[32m    'url'           => "е невалиден URL адрес",[m
[32m+[m[32m    'urlActive'     => "трябва да бъде активен домейн",[m
[32m+[m[32m    'alpha'         => "трябва да съдържа само букви a-z",[m
[32m+[m[32m    'alphaNum'      => "трябва да съдържа само букви a-z и/или цифри 0-9",[m
[32m+[m[32m    'slug'          => "трябва да съдържа само букви a-z, цифри 0-9, тирета и долни черти",[m
[32m+[m[32m    'regex'         => "съдържа невалидни символи",[m
[32m+[m[32m    'date'          => "е невалидна дата",[m
[32m+[m[32m    'dateFormat'    => "трябва да бъде дата с формат '%s'",[m
[32m+[m[32m    'dateBefore'    => "трябва да бъде дата преди '%s'",[m
[32m+[m[32m    'dateAfter'     => "трябва да бъде дата след '%s'",[m
[32m+[m[32m    'contains'      => "трябв да съдържа %s",[m
[32m+[m[32m    'boolean'       => "трябва да бъде истина или лъжа",[m
[32m+[m[32m    'lengthBetween' => "трябва да бъде между %d и %d символа",[m
[32m+[m[32m    'creditCard'    => "трябва да бъде валиден номер на кредитна карта",[m
[32m+[m[32m    'lengthMin'     => "трябва да бъде поне %d символа дълго",[m
[32m+[m[32m    'lengthMax'     => "не трябва да надвишава %d символа",[m
[32m+[m[32m    'instanceOf'    => "трябва да бъде инстанция от '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/de.php b/public/lang/de.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4e7ae07[m
[1m--- /dev/null[m
[1m+++ b/public/lang/de.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "ist erforderlich",[m
[32m+[m[32m    'equals'        => "muss identisch mit '%s' sein",[m
[32m+[m[32m    'different'     => "muss sich von '%s' unterscheiden",[m
[32m+[m[32m    'accepted'      => "muss markiert sein",[m
[32m+[m[32m    'numeric'       => "muss eine Zahl sein",[m
[32m+[m[32m    'integer'       => "muss eine ganze Zahl sein",[m
[32m+[m[32m    'length'        => "kann nicht länger als %d sein",[m
[32m+[m[32m    'min'           => "muss größer als %s sein",[m
[32m+[m[32m    'max'           => "muss kleiner als %s sein",[m
[32m+[m[32m    'listContains'  => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'in'            => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'notIn'         => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'ip'            => "enthält keine gültige IP-Addresse",[m
[32m+[m[32m    'email'         => "enthält keine gültige E-Mail-Adresse",[m
[32m+[m[32m    'url'           => "enthält keine gültige URL",[m
[32m+[m[32m    'urlActive'     => "muss eine aktive Domain sein",[m
[32m+[m[32m    'alpha'         => "darf nur Buchstaben enthalten",[m
[32m+[m[32m    'alphaNum'      => "darf nur Buchstaben und Ganzzahlen enthalten",[m
[32m+[m[32m    'slug'          => "darf nur Buchstaben, Ganzzahlen, Schrägstriche und Grundstriche enthalten",[m
[32m+[m[32m    'regex'         => "enthält ungültige Zeichen",[m
[32m+[m[32m    'date'          => "enthält kein gültiges Datum",[m
[32m+[m[32m    'dateFormat'    => "benötigt ein Datum im Format '%s'",[m
[32m+[m[32m    'dateBefore'    => "benötigt ein Datum, das vor dem '%s' liegt",[m
[32m+[m[32m    'dateAfter'     => "benötigt ein Datum, das nach dem '%s' liegt",[m
[32m+[m[32m    'contains'      => "muss %s beinhalten",[m
[32m+[m[32m    'boolean'       => "muss ein Wahrheitswert sein",[m
[32m+[m[32m    'lengthBetween' => "benötigt zwischen %d und %d Zeichen",[m
[32m+[m[32m    'creditCard'    => "muss eine gültige Kreditkartennummer sein",[m
[32m+[m[32m    "lengthMin"     => "muss mindestens %d Zeichen enthalten",[m
[32m+[m[32m    "lengthMax"     => "kann nicht mehr als %d Zeichen enthalten"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/el.php b/public/lang/el.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ae35aaf[m
[1m--- /dev/null[m
[1m+++ b/public/lang/el.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "είναι απαραίτητο",[m
[32m+[m[32m    'equals'        => "πρέπει να είναι ίδιο με '%s'",[m
[32m+[m[32m    'different'     => "πρέπει να διαφέρει από '%s'",[m
[32m+[m[32m    'accepted'      => "πρέπει να έχει αποδεχτεί",[m
[32m+[m[32m    'numeric'       => "πρέπει να είναι αριθμός",[m
[32m+[m[32m    'integer'       => "πρέπει να είναι ακέραιος αριθμός",[m
[32m+[m[32m    'length'        => "πρέπει να είναι μεγαλύτερο από %d",[m
[32m+[m[32m    'min'           => "πρέπει να είναι τουλάχιστον %s",[m
[32m+[m[32m    'max'           => "δεν πρέπει να είναι περισσότερο από %s",[m
[32m+[m[32m    'listContains'  => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'in'            => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'notIn'         => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'ip'            => "δεν είναι έγκυρη διεύθυνση IP",[m
[32m+[m[32m    'email'         => "δεν είναι έγκυρη διεύθυνση email",[m
[32m+[m[32m    'url'           => "δεν είναι URL",[m
[32m+[m[32m    'urlActive'     => "πρέπει να είναι ενεργό domain",[m
[32m+[m[32m    'alpha'         => "πρέπει να περιέχει μόνο χαρακτήρες",[m
[32m+[m[32m    'alphaNum'      => "πρέπει να περιέχει μόνο χαρακτήρες και/ή αριθμούς",[m
[32m+[m[32m    'slug'          => "πρέπει να περιέχει μόνο χαρακτήρες, αριθμούς, παύλες και κάτω παύλες",[m
[32m+[m[32m    'regex'         => "περιέχει μη έγκυρους χαρακτήρες",[m
[32m+[m[32m    'date'          => "δεν είναι έγκυρη ημερομηνία",[m
[32m+[m[32m    'dateFormat'    => "πρέπει να είναι ημερομηνία της μορφής '%s'",[m
[32m+[m[32m    'dateBefore'    => "πρέπει να είναι ημερομηνία πριν από '%s'",[m
[32m+[m[32m    'dateAfter'     => "πρέπει να είναι ημερομηνία μετά από '%s'",[m
[32m+[m[32m    'contains'      => "πρέπει να περιέχει %s",[m
[32m+[m[32m    'boolean'       => "πρέπει να είναι boolean",[m
[32m+[m[32m    'lengthBetween' => "πρέπει να είναι μεταξύ %d και %d χαρακτήρων",[m
[32m+[m[32m    'creditCard'    => "πρέπει να είναι ένα έγκυρο νούμερο πιστωτικής κάρτας",[m
[32m+[m[32m    "lengthMin"     => "πρέπει να περιέχει περισσότερους από %d χαρακτήρες",[m
[32m+[m[32m    "lengthMax"     => "πρέπει να περιέχει λιγότερους από %d χαρακτήρες",[m
[32m+[m[32m    "instanceOf"    => "πρέπει να είναι αντικείμενο της '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/en.php b/public/lang/en.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8e66cb5[m
[1m--- /dev/null[m
[1m+++ b/public/lang/en.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "is required",[m
[32m+[m[32m    'equals'         => "must be the same as '%s'",[m
[32m+[m[32m    'different'      => "must be different than '%s'",[m
[32m+[m[32m    'accepted'       => "must be accepted",[m
[32m+[m[32m    'numeric'        => "must be numeric",[m
[32m+[m[32m    'integer'        => "must be an integer",[m
[32m+[m[32m    'length'         => "must be %d characters long",[m
[32m+[m[32m    'min'            => "must be at least %s",[m
[32m+[m[32m    'max'            => "must be no more than %s",[m
[32m+[m[32m    'listContains'   => "contains invalid value",[m
[32m+[m[32m    'in'             => "contains invalid value",[m
[32m+[m[32m    'notIn'          => "contains invalid value",[m
[32m+[m[32m    'ip'             => "is not a valid IP address",[m
[32m+[m[32m    'ipv4'           => "is not a valid IPv4 address",[m
[32m+[m[32m    'ipv6'           => "is not a valid IPv6 address",[m
[32m+[m[32m    'email'          => "is not a valid email address",[m
[32m+[m[32m    'url'            => "is not a valid URL",[m
[32m+[m[32m    'urlActive'      => "must be an active domain",[m
[32m+[m[32m    'alpha'          => "must contain only letters a-z",[m
[32m+[m[32m    'alphaNum'       => "must contain only letters a-z and/or numbers 0-9",[m
[32m+[m[32m    'slug'           => "must contain only letters a-z, numbers 0-9, dashes and underscores",[m
[32m+[m[32m    'regex'          => "contains invalid characters",[m
[32m+[m[32m    'date'           => "is not a valid date",[m
[32m+[m[32m    'dateFormat'     => "must be date with format '%s'",[m
[32m+[m[32m    'dateBefore'     => "must be date before '%s'",[m
[32m+[m[32m    'dateAfter'      => "must be date after '%s'",[m
[32m+[m[32m    'contains'       => "must contain %s",[m
[32m+[m[32m    'boolean'        => "must be a boolean",[m
[32m+[m[32m    'lengthBetween'  => "must be between %d and %d characters",[m
[32m+[m[32m    'creditCard'     => "must be a valid credit card number",[m
[32m+[m[32m    'lengthMin'      => "must be at least %d characters long",[m
[32m+[m[32m    'lengthMax'      => "must not exceed %d characters",[m
[32m+[m[32m    'instanceOf'     => "must be an instance of '%s'",[m
[32m+[m[32m    'containsUnique' => "must contain unique elements only",[m
[32m+[m[32m    'requiredWith'   => "is required",[m
[32m+[m[32m    'requiredWithout'=> "is required",[m
[32m+[m[32m    'subset'         => "contains an item that is not in the list",[m
[32m+[m[32m    'arrayHasKeys'   => "does not contain all required keys",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/es.php b/public/lang/es.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1f3bf8b[m
[1m--- /dev/null[m
[1m+++ b/public/lang/es.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "es obligatorio",[m
[32m+[m[32m    'equals'         => "debe ser igual a '%s'",[m
[32m+[m[32m    'different'      => "debe ser diferente a '%s'",[m
[32m+[m[32m    'accepted'       => "debe ser aceptado",[m
[32m+[m[32m    'numeric'        => "debe ser numérico",[m
[32m+[m[32m    'integer'        => "debe ser un entero",[m
[32m+[m[32m    'length'         => "debe ser mas largo de %d",[m
[32m+[m[32m    'min'            => "debe ser mayor de %s",[m
[32m+[m[32m    'max'            => "debe ser menor de %s",[m
[32m+[m[32m    'in'             => "contiene un valor inválido",[m
[32m+[m[32m    'notIn'          => "contiene un valor inválido",[m
[32m+[m[32m    'ip'             => "no es una dirección IP",[m
[32m+[m[32m    'email'          => "no es un correo electrónico válido",[m
[32m+[m[32m    'url'            => "no es una URL",[m
[32m+[m[32m    'urlActive'      => "debe ser un dominio activo",[m
[32m+[m[32m    'alpha'          => "debe contener solo letras a-z",[m
[32m+[m[32m    'alphaNum'       => "debe contener solo letras a-z o números 0-9",[m
[32m+[m[32m    'slug'           => "debe contener solo letras a-z, números 0-9, barras y guiones bajos",[m
[32m+[m[32m    'regex'          => "contiene caracteres inválidos",[m
[32m+[m[32m    'date'           => "no es una fecha válida",[m
[32m+[m[32m    'dateFormat'     => "debe ser una fecha con formato '%s'",[m
[32m+[m[32m    'dateBefore'     => "debe ser una fecha antes de '%s'",[m
[32m+[m[32m    'dateAfter'      => "debe ser una fecha después de '%s'",[m
[32m+[m[32m    'contains'       => "debe contener %s",[m
[32m+[m[32m    'boolean'        => "debe ser booleano",[m
[32m+[m[32m    'lengthBetween'  => "debe tener entre %d y %d caracteres",[m
[32m+[m[32m    'creditCard'     => "debe ser un numero de tarjeta de crédito válido",[m
[32m+[m[32m    "lengthMin"      => "debe tener al menos %d caracteres",[m
[32m+[m[32m    "lengthMax"      => "debe tener menos de %d caracteres",[m
[32m+[m[32m    "instanceOf"     => "debe ser una instancia de '%s'",[m
[32m+[m[32m    'containsUnique' => "debe contener solo valores únicos",[m
[32m+[m[32m    'subset'         => "contiene un elemento que no está en la lista",[m
[32m+[m[32m    'arrayHasKeys'   => "no contiene todas las claves requeridas"[m[41m    [m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/fi.php b/public/lang/fi.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ea2d25b[m
[1m--- /dev/null[m
[1m+++ b/public/lang/fi.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "vaaditaan",[m
[32m+[m[32m    'equals'        => "ei ole sama kuin '%s'",[m
[32m+[m[32m    'different'     => "on sama kuin '%s'",[m
[32m+[m[32m    'accepted'      => "ei ole hyväksytty",[m
[32m+[m[32m    'numeric'       => "ei ole numeerinen",[m
[32m+[m[32m    'integer'       => "ei ole kokonaisluku",[m
[32m+[m[32m    'length'        => "on lyhyempi kuin %d",[m
[32m+[m[32m    'min'           => "ei ole vähintään %s",[m
[32m+[m[32m    'max'           => "ei ole enintään %s",[m
[32m+[m[32m    'listContains'  => "sisältää virheellisen arvon",[m
[32m+[m[32m    'in'            => "sisältää virheellisen arvon",[m
[32m+[m[32m    'notIn'         => "sisältää virheellisen arvon",[m
[32m+[m[32m    'ip'            => "ei ole oikeanmuotoinen IP-osoite",[m
[32m+[m[32m    'email'         => "ei ole oikeanmuotoinen sähköpostiosoite",[m
[32m+[m[32m    'url'           => "ei ole URL",[m
[32m+[m[32m    'urlActive'     => "ei ole aktiivinen verkkotunnus",[m
[32m+[m[32m    'alpha'         => "sisältää muita merkkejä kuin a-z",[m
[32m+[m[32m    'alphaNum'      => "sisältää muita merkkejä kuin a-z ja 0-9",[m
[32m+[m[32m    'slug'          => "sisältää muita merkkejä kuin a-z, 0-9, - ja _",[m
[32m+[m[32m    'regex'         => "sisältää virheellisiä merkkejä",[m
[32m+[m[32m    'date'          => "ei ole oikeanmuotoinen päivämäärä",[m
[32m+[m[32m    'dateFormat'    => "ei ole päivämäärä muotoa '%s'",[m
[32m+[m[32m    'dateBefore'    => "ei ole päivämäärä ennen '%s'",[m
[32m+[m[32m    'dateAfter'     => "ei ole päivämäärä '%s' jälkeen",[m
[32m+[m[32m    'contains'      => "ei sisällä merkkijonoa %s",[m
[32m+[m[32m    'boolean'       => "ei ole totuusarvo",[m
[32m+[m[32m    'lengthBetween' => "ei ole %d-%d merkkiä pitkä",[m
[32m+[m[32m    'creditCard'    => "ei ole pätevä luottokortin numero",[m
[32m+[m[32m    "lengthMin"     => "ei ole vähintään %d merkkiä pitkä",[m
[32m+[m[32m    "lengthMax"     => "ei ole enintään %d merkkiä pitkä",[m
[32m+[m[32m    "instanceOf"    => "ei ole luokan '%s' ilmentymä"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/fr.php b/public/lang/fr.php[m
[1mnew file mode 100644[m
[1mindex 0000000..124cdac[m
[1m--- /dev/null[m
[1m+++ b/public/lang/fr.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m[41m   [m
[32m+[m[32m    'required'          => "est obligatoire",[m
[32m+[m[32m    'equals'            => "doit être identique à '%s'",[m
[32m+[m[32m    'different'         => "doit être différent de '%s'",[m
[32m+[m[32m    'accepted'          => "doit être accepté",[m
[32m+[m[32m    'numeric'           => "doit être numérique",[m
[32m+[m[32m    'integer'           => "doit être un entier",[m
[32m+[m[32m    'length'            => "doit être plus long que %d",[m
[32m+[m[32m    'min'               => "doit être plus grand que %s",[m
[32m+[m[32m    'max'               => "doit être plus petit que %s",[m
[32m+[m[32m    'listContains'      => "contient une valeur non valide",[m
[32m+[m[32m    'in'                => "contient une valeur non valide",[m
[32m+[m[32m    'notIn'             => "contient une valeur non valide",[m
[32m+[m[32m    'ip'                => "n'est pas une adresse IP valide",[m
[32m+[m[32m    'email'             => "n'est pas une adresse email valide",[m
[32m+[m[32m    'url'               => "n'est pas une URL",[m
[32m+[m[32m    'urlActive'         => "doit être un domaine actif",[m
[32m+[m[32m    'alpha'             => "doit contenir uniquement les lettres a-z",[m
[32m+[m[32m    'alphaNum'          => "doit contenir uniquement des lettres de a-z et/ou des chiffres 0-9",[m
[32m+[m[32m    'slug'              => "doit contenir uniquement des lettres de a-z, des chiffres 0-9, des tirets et des traits soulignés",[m
[32m+[m[32m    'regex'             => "contient des caractères invalides",[m
[32m+[m[32m    'date'              => "n'est pas une date valide",[m
[32m+[m[32m    'dateFormat'        => "doit être une date avec le format '%s'",[m
[32m+[m[32m    'dateBefore'        => "doit être une date avant '%s'",[m
[32m+[m[32m    'dateAfter'         => "doit être une date après '%s'",[m
[32m+[m[32m    'contains'          => "doit contenir %s",[m
[32m+[m[32m    'boolean'           => "doit être un booléen",[m
[32m+[m[32m    'lengthBetween'     => "doit être entre %d et %d caractères",[m
[32m+[m[32m    'creditCard'        => "doit être un numéro de carte de crédit valide",[m
[32m+[m[32m    'lengthMin'         => "doit avoir au moins %d caractères",[m
[32m+[m[32m    'lengthMax'         => "ne doit pas dépasser %d caractères",[m
[32m+[m[32m    'instanceOf'        => "doit être une instance de '%s'",[m
[32m+[m[32m    "containsUnique"    => "doit contenir des élements unique",[m
[32m+[m[32m    "requiredWith"      => "est requis",[m
[32m+[m[32m    "requiredWithout"   => "est requis",[m
[32m+[m[32m    "subset"            => "contient un élement qui n'est pas dans la liste",[m
[32m+[m[32m    "arrayHasKeys"      => "ne contient pas toutes les clés requises"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/id.php b/public/lang/id.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2df9a61[m
[1m--- /dev/null[m
[1m+++ b/public/lang/id.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "harus diisi",[m
[32m+[m[32m    'equals'        => "harus sama dengan '%s'",[m
[32m+[m[32m    'different'     => "harus berbeda dengan '%s'",[m
[32m+[m[32m    'accepted'      => "harus diterima (accepted)",[m
[32m+[m[32m    'numeric'       => "harus berupa nomor/angka",[m
[32m+[m[32m    'integer'       => "harus berupa nilai integer",[m
[32m+[m[32m    'length'        => "harus lebih panjang dari %d",[m
[32m+[m[32m    'min'           => "harus lebih besar dari %s",[m
[32m+[m[32m    'max'           => "harus kurang dari %s",[m
[32m+[m[32m    'listContains'  => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'in'            => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'notIn'         => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'ip'            => "format alamat IP tidak benar",[m
[32m+[m[32m    'email'         => "format alamat email tidak benar",[m
[32m+[m[32m    'url'           => "bukan format URL yang benar",[m
[32m+[m[32m    'urlActive'     => "harus berupa domain aktif",[m
[32m+[m[32m    'alpha'         => "hanya boleh menggunakan huruf a-z",[m
[32m+[m[32m    'alphaNum'      => "hanya boleh menggunakan huruf a-z dan atau nomor 0-9",[m
[32m+[m[32m    'slug'          => "hanya boleh menggunakan huruf a-z, nomor 0-9, tanda minus (-), dan uderscore atau strip bawah (_)",[m
[32m+[m[32m    'regex'         => "berisi karakter yang tidak valid",[m
[32m+[m[32m    'date'          => "format tanggal tidak valid",[m
[32m+[m[32m    'dateFormat'    => "harus berupa tanggal dengan format '%s'",[m
[32m+[m[32m    'dateBefore'    => "tanggal harus sebelum tanggal '%s'",[m
[32m+[m[32m    'dateAfter'     => "tanggal harus sesudah tanggal '%s'",[m
[32m+[m[32m    'contains'      => "harus berisi %s",[m
[32m+[m[32m    'boolean'       => "harus berupa nilai boolean",[m
[32m+[m[32m    'lengthBetween' => "harus diantara karakter %d dan %d",[m
[32m+[m[32m    'creditCard'    => "nomor kartu kredit harus valid",[m
[32m+[m[32m    "lengthMin"     => "minimal berisi %d karakter",[m
[32m+[m[32m    "lengthMax"     => "maksimal berisi %d karakter"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/it.php b/public/lang/it.php[m
[1mnew file mode 100644[m
[1mindex 0000000..467746b[m
[1m--- /dev/null[m
[1m+++ b/public/lang/it.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "è obbligatorio",[m
[32m+[m[32m    'equals'        => "deve essere uguale a '%s'",[m
[32m+[m[32m    'different'     => "deve essere differente da '%s'",[m
[32m+[m[32m    'accepted'      => "deve essere accettato",[m
[32m+[m[32m    'numeric'       => "deve essere numerico",[m
[32m+[m[32m    'integer'       => "deve essere un intero",[m
[32m+[m[32m    'length'        => "deve avere una lunghezza di %d",[m
[32m+[m[32m    'min'           => "deve essere superiore a %s",[m
[32m+[m[32m    'max'           => "deve essere inferiore a %s",[m
[32m+[m[32m    'listContains'  => "contiene un valore non valido",[m
[32m+[m[32m    'in'            => "contiene un valore non valido",[m
[32m+[m[32m    'notIn'         => "contiene un valore non valido",[m
[32m+[m[32m    'ip'            => "non è un indirizzo IP valido",[m
[32m+[m[32m    'email'         => "non è un indirizzo email valido",[m
[32m+[m[32m    'url'           => "non è una URL",[m
[32m+[m[32m    'urlActive'     => "deve essere un dominio attivo",[m
[32m+[m[32m    'alpha'         => "deve contenere solamente lettere (a-z)",[m
[32m+[m[32m    'alphaNum'      => "deve contenere solamente lettere (a-z) e/o numeri (0-9)",[m
[32m+[m[32m    'slug'          => "deve contenere solamente lettere (a-z), numeri (0-9), trattini (-) e trattini bassi (_)",[m
[32m+[m[32m    'regex'         => "contiene caratteri non validi",[m
[32m+[m[32m    'date'          => "non è una data valida",[m
[32m+[m[32m    'dateFormat'    => "deve essere una data nel formato '%s'",[m
[32m+[m[32m    'dateBefore'    => "deve essere una data precedente al '%s'",[m
[32m+[m[32m    'dateAfter'     => "deve essere una data successiva al '%s'",[m
[32m+[m[32m    'contains'      => "deve contenere %s",[m
[32m+[m[32m    'boolean'       => "deve essere un booleano",[m
[32m+[m[32m    'lengthBetween' => "deve essere compreso tra %d e %d caratteri",[m
[32m+[m[32m    'creditCard'    => "deve essere un numero di carta di credito valido",[m
[32m+[m[32m    'lengthMin'     => "deve essere lungo almeno %d caratteri",[m
[32m+[m[32m    'lengthMax'     => "non deve superare %d caratteri",[m
[32m+[m[32m    'instanceOf'    => "deve essere un'istanza di '%s'",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/ja.php b/public/lang/ja.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3eaf6d1[m
[1m--- /dev/null[m
[1m+++ b/public/lang/ja.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "を入力してください",[m
[32m+[m[32m    'equals'        => "は「%s」と同じ内容を入力してください",[m
[32m+[m[32m    'different'     => "は「%s」と異なる内容を入力してください",[m
[32m+[m[32m    'accepted'      => "に同意してください",[m
[32m+[m[32m    'numeric'       => "は数値を入力してください",[m
[32m+[m[32m    'integer'       => "は半角数字で入力してください",[m
[32m+[m[32m    'length'        => "は%d文字で入力してください",[m
[32m+[m[32m    'min'           => "には%sより大きな値を入力してください",[m
[32m+[m[32m    'max'           => "には%sより小さな値を入力してください",[m
[32m+[m[32m    'listContains'  => "には選択できない値が含まれています",[m
[32m+[m[32m    'in'            => "には選択できない値が含まれています",[m
[32m+[m[32m    'notIn'         => "には選択できない値が含まれています",[m
[32m+[m[32m    'ip'            => "はIPアドレスの書式として正しくありません",[m
[32m+[m[32m    'email'         => "はメールアドレスの書式として正しくありません",[m
[32m+[m[32m    'url'           => "はURLの書式として正しくありません",[m
[32m+[m[32m    'urlActive'     => "はアクティブなドメインではありません",[m
[32m+[m[32m    'alpha'         => "は半角英字で入力してください",[m
[32m+[m[32m    'alphaNum'      => "は半角英数字で入力してください",[m
[32m+[m[32m    'slug'          => "は半角英数字、もしくは「-」「_」の文字で入力してください",[m
[32m+[m[32m    'regex'         => "の書式が正しくありません",[m
[32m+[m[32m    'date'          => "は日付の書式として正しくありません",[m
[32m+[m[32m    'dateFormat'    => "は「%s」の書式で日付を入力してください",[m
[32m+[m[32m    'dateBefore'    => "は「%s」以前の日付を入力してください",[m
[32m+[m[32m    'dateAfter'     => "は「%s」以後の日付を入力してください",[m
[32m+[m[32m    'contains'      => "は「%s」を含んでいなければいけません",[m
[32m+[m[32m    'boolean'       => "は真偽値である必要があります",[m
[32m+[m[32m    'lengthBetween' => "は%d〜%d文字で入力してください",[m
[32m+[m[32m    'creditCard'    => "はクレジットカード番号の書式として正しくありません",[m
[32m+[m[32m    'lengthMin'     => "は%d文字以上入力してください",[m
[32m+[m[32m    'lengthMax'     => "は%d文字以内で入力してください",[m
[32m+[m[32m    'instanceOf'    => "は「%s」のインスタンスではありません",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/ko.php b/public/lang/ko.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c4d42bf[m
[1m--- /dev/null[m
[1m+++ b/public/lang/ko.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "을(를) 입력해야 합니다.",[m
[32m+[m[32m    'equals'        => "은(는) '%s'와(과) 같아야 합니다.",[m
[32m+[m[32m    'different'     => "은(는) '%s'와(과) 달라야 합니다.",[m
[32m+[m[32m    'accepted'      => "을(를) 동의해야 합니다.",[m
[32m+[m[32m    'numeric'       => "은(는) 숫자여야 합니다.",[m
[32m+[m[32m    'integer'       => "은(는) 정수여야 합니다.",[m
[32m+[m[32m    'length'        => "의 길이는 %d 이어야 합니다.",[m
[32m+[m[32m    'min'           => "은(는) %s 이상이어야 합니다.",[m
[32m+[m[32m    'max'           => "은(는) %s 이하여야 합니다.",[m
[32m+[m[32m    'listContains'  => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'in'            => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'notIn'         => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'ip'            => "은(는) 올바르지 않은 IP입니다.",[m
[32m+[m[32m    'email'         => "은(는) 올바르지 않은 email입니다.",[m
[32m+[m[32m    'url'           => "은(는) 올바르지 않은 URL입니다.",[m
[32m+[m[32m    'urlActive'     => "은(는) 접속 가능한 도메인이어야 합니다.",[m
[32m+[m[32m    'alpha'         => "은(는) 영문자(a-z)로만 이루어져야 합니다.",[m
[32m+[m[32m    'alphaNum'      => "은(는) 영문자(a-z)와 숫자(0-9)로만 이루어져야 합니다.",[m
[32m+[m[32m    'slug'          => "은(는) 영문자(a-z)와 숫자(0-9), 특수문자 -와 _로만 이루어져야 합니다.",[m
[32m+[m[32m    'regex'         => "은(는) 올바르지 않은 문자를 포함하고 있습니다.",[m
[32m+[m[32m    'date'          => "은(는) 올바르지 않은 날짜입니다.",[m
[32m+[m[32m    'dateFormat'    => "은(는) '%s' 형태의 날짜여야 합니다.",[m
[32m+[m[32m    'dateBefore'    => "은(는) '%s' 보다 이전이어야 합니다.",[m
[32m+[m[32m    'dateAfter'     => "은(는) '%s' 보다 이후여야 합니다.",[m
[32m+[m[32m    'contains'      => "은(는) '%s'을(를) 포함해야 합니다.",[m
[32m+[m[32m    'boolean'       => "은(는) boolean이어야 합니다.",[m
[32m+[m[32m    'lengthBetween' => "의 길이는 %d에서 %d 사이여야 합니다.",[m
[32m+[m[32m    'creditCard'    => "은(는) 올바른 신용카드 번호가 아닙니다.",[m
[32m+[m[32m    'lengthMin'     => "의 길이는 %d 이상이어야 합니다.",[m
[32m+[m[32m    'lengthMax'     => "의 길이는 %d을(를) 넘을 수 없습니다.",[m
[32m+[m[32m    'instanceOf'    => "는 '%s'의 객체여야 합니다."[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/lt.php b/public/lang/lt.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4404311[m
[1m--- /dev/null[m
[1m+++ b/public/lang/lt.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "yra privalomas",[m
[32m+[m[32m    'equals'        => "reikšmė turi būti tokia pati, kaip „%s“",[m
[32m+[m[32m    'different'     => "turi būti kitokia, nei „%s“",[m
[32m+[m[32m    'accepted'      => "turi būti priimta",[m
[32m+[m[32m    'numeric'       => "turi būti sveikasis skaičius",[m
[32m+[m[32m    'integer'       => "turi būti skaičius",[m
[32m+[m[32m    'length'        => "turi būti %d ženklų ilgio",[m
[32m+[m[32m    'min'           => "turi būti bent %s",[m
[32m+[m[32m    'max'           => "turi būti ne daugiau kaip %s",[m
[32m+[m[32m    'listContains'  => "turi neteisingą vertę",[m
[32m+[m[32m    'in'            => "turi neteisingą vertę",[m
[32m+[m[32m    'notIn'         => "turi neteisingą vertę",[m
[32m+[m[32m    'ip'            => "nėra teisingas IP adresas",[m
[32m+[m[32m    'ipv4'          => "nėra teisingas IPv4 adresas",[m
[32m+[m[32m    'ipv6'          => "nėra teisingas IPv6 adresas",[m
[32m+[m[32m    'email'         => "nėra teisingas el. pašto adresas",[m
[32m+[m[32m    'url'           => "nėra teisingas URL",[m
[32m+[m[32m    'urlActive'     => "turi būti aktyvus domenas",[m
[32m+[m[32m    'alpha'         => "turi turėti tik raides a-ž",[m
[32m+[m[32m    'alphaNum'      => "turi turėti tik raides a-ž ir/ar skaičius 0-9",[m
[32m+[m[32m    'slug'          => "turi turėti tik raides a-ž, skaičius 0-9, brukšnelius ir apatinius brukšnelius",[m
[32m+[m[32m    'regex'         => "yra neteisingų ženklų",[m
[32m+[m[32m    'date'          => "nėra teisinga data",[m
[32m+[m[32m    'dateFormat'    => "turi būti „%s“ formato data",[m
[32m+[m[32m    'dateBefore'    => "turi būti data, ankstesnė nei „%s“",[m
[32m+[m[32m    'dateAfter'     => "turi būti data, vėlesnė nei „%s“",[m
[32m+[m[32m    'contains'      => "turi turėti %s",[m
[32m+[m[32m    'boolean'       => "turi būti būlio (taip/ne) tipo",[m
[32m+[m[32m    'lengthBetween' => "turi būti nuo %d iki %d ilgio",[m
[32m+[m[32m    'creditCard'    => "turi būti teisingas kreditinės kortelės numeris",[m
[32m+[m[32m    'lengthMin'     => "turi būti bent %d ženklų ilgio",[m
[32m+[m[32m    'lengthMax'     => "turi būti ne ilgesnis nei %d ženklų",[m
[32m+[m[32m    'instanceOf'    => "turi būti „%s“ atvejis",[m
[32m+[m[32m    'containsUnique' => "turi turėti tik unikalius elementus",[m
[32m+[m[32m    'subset'         => "turi elementą, kurio nėra sąraše"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/lv.php b/public/lang/lv.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fef222a[m
[1m--- /dev/null[m
[1m+++ b/public/lang/lv.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "ir obligāts lauks",[m
[32m+[m[32m    'equals'        => "jāsakrīt ar '%s'",[m
[32m+[m[32m    'different'     => "nedrīkst sakrist ar '%s' lauku",[m
[32m+[m[32m    'accepted'      => "laukam jābūt apstiprinātam",[m
[32m+[m[32m    'numeric'       => "jābūt skaitliskai vērtībai",[m
[32m+[m[32m    'integer'       => "jābūt ciparam (0-9)",[m
[32m+[m[32m    'length'        => "nedrīkst būt garāks par %d simboliem",[m
[32m+[m[32m    'min'           => "jābūt garākam par %s simboliem",[m
[32m+[m[32m    'max'           => "jābūt īsākam par %s simboliem",[m
[32m+[m[32m    'listContains'  => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'in'            => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'notIn'         => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'ip'            => " lauks nav derīga IP adrese",[m
[32m+[m[32m    'email'         => "lauks nav norādīta derīga epasta adrese",[m
[32m+[m[32m    'url'           => "lauks nav tīmekļa saite",[m
[32m+[m[32m    'urlActive'     => "saite neatrodas esošajā domēna vārdā",[m
[32m+[m[32m    'alpha'         => "lauks var saturēt tikai alfabēta burtus a-z",[m
[32m+[m[32m    'alphaNum'      => "lauks var saturēt tikai alfabēta burtus un/vai ciparus 0-9",[m
[32m+[m[32m    'slug'          => "lauks var saturēt tikai alfabēta burtus un/vai ciparus 0-9, domuzīmes and zemsvītras",[m
[32m+[m[32m    'regex'         => "lauks satur nederīgus simbolus",[m
[32m+[m[32m    'date'          => "lauks ir nederīgā datuma formātā",[m
[32m+[m[32m    'dateFormat'    => "laukam jābūt datuma formātā '%s'",[m
[32m+[m[32m    'dateBefore'    => "lauka datumam jābūt pirms '%s'",[m
[32m+[m[32m    'dateAfter'     => "lauka datumam jābūt pēc '%s'",[m
[32m+[m[32m    'contains'      => "laukam jāsatur %s",[m
[32m+[m[32m    'boolean'       => "laukam jābūt ir/nav vērtībai",[m
[32m+[m[32m    'lengthBetween' => "lauka garumam jābūt no %d līdz %d simbolu garam",[m
[32m+[m[32m    'creditCard'    => "laukam jābūt derīgam kredītkartes numuram"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/nb.php b/public/lang/nb.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d5d2d5e[m
[1m--- /dev/null[m
[1m+++ b/public/lang/nb.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m// Norwegian Bokmål (nb)[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "er påkrevd",[m
[32m+[m[32m    'equals'        => "må være lik '%s'",[m
[32m+[m[32m    'different'     => "må være annerledes enn '%s'",[m
[32m+[m[32m    'accepted'      => "må aksepteres",[m
[32m+[m[32m    'numeric'       => "må være numerisk",[m
[32m+[m[32m    'integer'       => "må være et heltall",[m
[32m+[m[32m    'length'        => "må være %d tegn langt",[m
[32m+[m[32m    'min'           => "må være minst %s",[m
[32m+[m[32m    'max'           => "må ikke være mer enn %s",[m
[32m+[m[32m    'listContains'  => "inneholder ugyldig verdi",[m
[32m+[m[32m    'in'            => "inneholder ugyldig verdi",[m
[32m+[m[32m    'notIn'         => "inneholder ugyldig verdi",[m
[32m+[m[32m    'ip'            => "er ikke en gyldig IP adresse",[m
[32m+[m[32m    'ipv4'          => "er ikke en gyldig IPv4 adresse",[m
[32m+[m[32m    'ipv6'          => "er ikke en gyldig IPv6 adresse",[m
[32m+[m[32m    'email'         => "er ikke en gyldig e-postadresse",[m
[32m+[m[32m    'url'           => "er ikke en gyldig URL",[m
[32m+[m[32m    'urlActive'     => "må være et aktivt domene",[m
[32m+[m[32m    'alpha'         => "må bare innholde bokstaver a-z",[m
[32m+[m[32m    'alphaNum'      => "må bare innholde bokstaver a-z og/eller tall 0-9",[m
[32m+[m[32m    'slug'          => "må bare innholde bokstaver a-z og/eller tall 0-9, bindestreker og understreker",[m
[32m+[m[32m    'regex'         => "inneholder ulovlige tegn",[m
[32m+[m[32m    'date'          => "er ikke en gyldig dato",[m
[32m+[m[32m    'dateFormat'    => "må være en dato med format '%s'",[m
[32m+[m[32m    'dateBefore'    => "må være en dato før '%s'",[m
[32m+[m[32m    'dateAfter'     => "må være en dato etter '%s'",[m
[32m+[m[32m    'contains'      => "må inneholde %s",[m
[32m+[m[32m    'boolean'       => "må være en boolsk verdi",[m
[32m+[m[32m    'lengthBetween' => "må være mellom %d og %d tegn",[m
[32m+[m[32m    'creditCard'    => "må være et gyldig kredittkortnummer",[m
[32m+[m[32m    'lengthMin'     => "må være minst %d tegn langt",[m
[32m+[m[32m    'lengthMax'     => "må ikke overstige %d tegn",[m
[32m+[m[32m    'instanceOf'    => "må være en instans av '%s'",[m
[32m+[m[32m    'containsUnique'=> "må inneholde kun unike elementer",[m
[32m+[m[32m    'subset'        => "inneholder et element som ikke er i listen"[m
[32m+[m[32m);[m
\ No newline at end of file[m
[1mdiff --git a/public/lang/nl.php b/public/lang/nl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7d7fa8f[m
[1m--- /dev/null[m
[1m+++ b/public/lang/nl.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "is verplicht",[m
[32m+[m[32m    'equals'        => "moet gelijk zijn aan '%s'",[m
[32m+[m[32m    'different'     => "moet verschillend zijn van '%s'",[m
[32m+[m[32m    'accepted'      => "moet aanvaard worden",[m
[32m+[m[32m    'numeric'       => "moet numeriek zijn",[m
[32m+[m[32m    'integer'       => "moet een cijfer zijn",[m
[32m+[m[32m    'length'        => "moet minstens %d karakters lang zijn",[m
[32m+[m[32m    'min'           => "moet minstens %s zijn",[m
[32m+[m[32m    'max'           => "mag niet meer zijn dan %s",[m
[32m+[m[32m    'listContains'  => "bevat een ongeldige waarde",[m
[32m+[m[32m    'in'            => "bevat een ongeldige waarde",[m
[32m+[m[32m    'notIn'         => "bevat een ongeldige waarde",[m
[32m+[m[32m    'ip'            => "is geen geldig IP-adres",[m
[32m+[m[32m    'email'         => "is geen geldig e-mailadres",[m
[32m+[m[32m    'url'           => "is geen geldige URL",[m
[32m+[m[32m    'urlActive'     => "moet een actief domein zijn",[m
[32m+[m[32m    'alpha'         => "mag enkel letters (a-z) bevatten",[m
[32m+[m[32m    'alphaNum'      => "mag enkel letters (a-z) en/of cijfers (0-9) bevatten",[m
[32m+[m[32m    'slug'          => "mag enkel letters (a-z), cijfers (0-9) en liggende streepjes (_,-) bevatten",[m
[32m+[m[32m    'regex'         => "bevat ongeldige karakters",[m
[32m+[m[32m    'date'          => "is geen geldige datum",[m
[32m+[m[32m    'dateFormat'    => "moet een datum zijn in het formaat '%s'",[m
[32m+[m[32m    'dateBefore'    => "moet een datum voor '%s' zijn",[m
[32m+[m[32m    'dateAfter'     => "moet een datum na '%s' zijn",[m
[32m+[m[32m    'contains'      => "moet '%s' bevatten",[m
[32m+[m[32m    'boolean'       => "moet een booleaanse waarde zijn",[m
[32m+[m[32m    'lengthBetween' => "moet tussen %d en %d karakters lang zijn",[m
[32m+[m[32m    'creditCard'    => "moet een geldig kredietkaartnummer zijn",[m
[32m+[m[32m    "lengthMin"     => "moet meer dan %d karakters lang zijn",[m
[32m+[m[32m    "lengthMax"     => "mag niet meer dan %d karakters lang zijn",[m
[32m+[m[32m    "instanceOf"    => "moet een instantie zijn van '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/nn.php b/public/lang/nn.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1fa3b6b[m
[1m--- /dev/null[m
[1m+++ b/public/lang/nn.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "er nødvendig",[m
[32m+[m[32m    'equals'        => "må være de samme som '%s'",[m
[32m+[m[32m    'different'     => "må være annerledes enn '%s'",[m
[32m+[m[32m    'accepted'      => "må aksepteres",[m
[32m+[m[32m    'numeric'       => "må være numerisk",[m
[32m+[m[32m    'integer'       => "må være et heltall",[m
[32m+[m[32m    'length'        => "må være %d tegn",[m
[32m+[m[32m    'min'           => "må være minst %s",[m
[32m+[m[32m    'max'           => "må ikke være mer enn %s",[m
[32m+[m[32m    'listContains'  => "inneholder ugyldig verdi",[m
[32m+[m[32m    'in'            => "inneholder ugyldig verdi",[m
[32m+[m[32m    'notIn'         => "inneholder ugyldig verdi",[m
[32m+[m[32m    'ip'            => "er ikkje ein gyldig IP Adresse",[m
[32m+[m[32m    'email'         => "er ikkje ein gyldig E-post adresse",[m
[32m+[m[32m    'url'           => "er ikkje ein gyldig URL",[m
[32m+[m[32m    'urlActive'     => "må være eit aktivt domene",[m
[32m+[m[32m    'alpha'         => "må bare innholde bokstaver a-z",[m
[32m+[m[32m    'alphaNum'      => "må bare innholde bokstaver a-z og/eller tall 0-9",[m
[32m+[m[32m    'slug'          => "må bare innholde bokstaver a-z og/eller tall 0-9, bindestreker og understreker",[m
[32m+[m[32m    'regex'         => "inneholder ulovlige tegn",[m
[32m+[m[32m    'date'          => "er ikkje ein gylid dato",[m
[32m+[m[32m    'dateFormat'    => "må være ein dato med formatet '%s'",[m
[32m+[m[32m    'dateBefore'    => "må være ein dato før '%s'",[m
[32m+[m[32m    'dateAfter'     => "må være ein dato etter '%s'",[m
[32m+[m[32m    'contains'      => "må inneholde %s",[m
[32m+[m[32m    'boolean'       => "må være ein boolsk verdi",[m
[32m+[m[32m    'lengthBetween' => "må være imellom %d og %d tegn",[m
[32m+[m[32m    'creditCard'    => "må være et gyldig kredittkortnummer",[m
[32m+[m[32m    'lengthMin'     => "må være minst %d tegn",[m
[32m+[m[32m    'lengthMax'     => "må ikkje overstige %d tegn",[m
[32m+[m[32m    'instanceOf'    => "må være ein instans av '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/no.php b/public/lang/no.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6df91ba[m
[1m--- /dev/null[m
[1m+++ b/public/lang/no.php[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn include __DIR__ . '/nn.php';[m
[1mdiff --git a/public/lang/pl.php b/public/lang/pl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0f8f2e0[m
[1m--- /dev/null[m
[1m+++ b/public/lang/pl.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "jest wymagane",[m
[32m+[m[32m    'equals'        => "musi być takie same jak '%s'",[m
[32m+[m[32m    'different'     => "musi być różne od '%s'",[m
[32m+[m[32m    'accepted'      => "musi być zaakceptowane",[m
[32m+[m[32m    'numeric'       => "musi być liczbą",[m
[32m+[m[32m    'integer'       => "musi być liczbą całkowitą",[m
[32m+[m[32m    'length'        => "musi być dłuższe niż %d",[m
[32m+[m[32m    'min'           => "musi być przynajmniej %s",[m
[32m+[m[32m    'max'           => "nie może być większe niż %s",[m
[32m+[m[32m    'listContains'  => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'in'            => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'notIn'         => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'ip'            => "nie jest prawidłowym adresem IP",[m
[32m+[m[32m    'email'         => "nie jest prawidłowym adresem email",[m
[32m+[m[32m    'url'           => "nie jest URL",[m
[32m+[m[32m    'urlActive'     => "musi być aktywną domeną",[m
[32m+[m[32m    'alpha'         => "musi zawierać tylko litery a-z",[m
[32m+[m[32m    'alphaNum'      => "musi zawierać tylko litery a-z i/lub cyfry 0-9",[m
[32m+[m[32m    'slug'          => "musi zawierać tylko litery a-z i/lub cyfry 0-9, myślinik I podkreślnik",[m
[32m+[m[32m    'regex'         => "zawiera nieprawidłowe znaki",[m
[32m+[m[32m    'date'          => "nie jest prawidłową datą",[m
[32m+[m[32m    'dateFormat'    => "Data musi być w formacie '%s'",[m
[32m+[m[32m    'dateBefore'    => "Data musi występować przed '%s'",[m
[32m+[m[32m    'dateAfter'     => "Data musi następować po '%s'",[m
[32m+[m[32m    'contains'      => "Musi zawierać %s",[m
[32m+[m[32m    'boolean'       => "musi być wartością logiczną",[m
[32m+[m[32m    'lengthBetween' => "ilość znaków musi być między %d a %d",[m
[32m+[m[32m    'creditCard'    => "musi być prawidłowym numerem karty kredytowej",[m
[32m+[m[32m    "lengthMin"     => "musi zawierać więcej niż %d znaków",[m
[32m+[m[32m    "lengthMax"     => "musi zawierać mniej niż %d znaków",[m
[32m+[m[32m    "instanceOf"    => "musi być instancją '%s'",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/pt-br.php b/public/lang/pt-br.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e32afca[m
[1m--- /dev/null[m
[1m+++ b/public/lang/pt-br.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "é obrigatório",[m
[32m+[m[32m    'equals'         => "deve ser o mesmo que '%s'",[m
[32m+[m[32m    'different'      => "deve ser diferente de '%s'",[m
[32m+[m[32m    'accepted'       => "deve ser aceito",[m
[32m+[m[32m    'numeric'        => "deve ser um número",[m
[32m+[m[32m    'integer'        => "deve ser um inteiro",[m
[32m+[m[32m    'length'         => "deve ter %d caracteres",[m
[32m+[m[32m    'min'            => "deve ser maior que %s",[m
[32m+[m[32m    'max'            => "deve ser menor que %s",[m
[32m+[m[32m    'in'             => "contém um valor inválido",[m
[32m+[m[32m    'notIn'          => "contém um valor inválido",[m
[32m+[m[32m    'ip'             => "não é um IP válido",[m
[32m+[m[32m    'email'          => "não é um email válido",[m
[32m+[m[32m    'url'            => "não é uma URL válida",[m
[32m+[m[32m    'urlActive'      => "deve ser um domínio ativo",[m
[32m+[m[32m    'alpha'          => "deve conter as letras a-z",[m
[32m+[m[32m    'alphaNum'       => "deve conter apenas letras a-z e/ou números 0-9",[m
[32m+[m[32m    'slug'           => "deve conter apenas letras a-z, números 0-9, ou os caracteres - ou _",[m
[32m+[m[32m    'regex'          => "contém caracteres inválidos",[m
[32m+[m[32m    'date'           => "não é uma data válida",[m
[32m+[m[32m    'dateFormat'     => "deve ser uma data no formato '%s'",[m
[32m+[m[32m    'dateBefore'     => "deve ser uma data anterior a '%s'",[m
[32m+[m[32m    'dateAfter'      => "deve ser uma data posterior a '%s'",[m
[32m+[m[32m    'contains'       => "deve conter %s",[m
[32m+[m[32m    'boolean'        => "deve ser um booleano",[m
[32m+[m[32m    'lengthBetween'  => "deve estar entre %d e %d caracteres",[m
[32m+[m[32m    'creditCard'     => "deve ser um numero de cartão de credito válido",[m
[32m+[m[32m    'lengthMin'      => "deve ter ao menos %d caracteres",[m
[32m+[m[32m    'lengthMax'      => "não deve exceder %d caracteres",[m
[32m+[m[32m    'instanceOf'     => "deve ser uma instância de '%s'",[m
[32m+[m[32m    'containsUnique' => "deve conter apenas valores únicos",[m
[32m+[m[32m    'subset'         => "contém um item que não está na lista",[m
[32m+[m[32m    'arrayHasKeys'   => "não contém todas as chaves requeridas"[m
[32m+[m[32m);[m
\ No newline at end of file[m
[1mdiff --git a/public/lang/ro.php b/public/lang/ro.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5efa2fa[m
[1m--- /dev/null[m
[1m+++ b/public/lang/ro.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "se cere",[m
[32m+[m[32m    'equals'        => "trebuie sa fie la fel ca '%s'",[m
[32m+[m[32m    'different'     => "trebuie sa fie diferit de '%s'",[m
[32m+[m[32m    'accepted'      => "trebuie sa fie acceptat",[m
[32m+[m[32m    'numeric'       => "trebuie sa fie numeric",[m
[32m+[m[32m    'integer'       => "trebuie sa fie intreg",[m
[32m+[m[32m    'length'        => "trebuie sa fie mai lung decat %d",[m
[32m+[m[32m    'min'           => "trebuie sa fie cel putin %s",[m
[32m+[m[32m    'max'           => "nu trebuie sa fie mai mult de %s",[m
[32m+[m[32m    'listContains'  => "contine caractere invalide",[m
[32m+[m[32m    'in'            => "contine caractere invalide",[m
[32m+[m[32m    'notIn'         => "contine o valoare invalida",[m
[32m+[m[32m    'ip'            => "nu este o adresa IP valida",[m
[32m+[m[32m    'email'         => "nu este o adresa de email valida",[m
[32m+[m[32m    'url'           => "nu este un URL",[m
[32m+[m[32m    'urlActive'     => "trebuie sa fie un domeniu activ",[m
[32m+[m[32m    'alpha'         => "trebuie sa contina doar litere de la a-z",[m
[32m+[m[32m    'alphaNum'      => "trebuie sa contina doar numere de la a-z si/sau numere 0-9",[m
[32m+[m[32m    'slug'          => "trebuie sa contina doar litere de la a-z, numere de la 0-9, cratime si underline '_'",[m
[32m+[m[32m    'regex'         => "contine caractere invalide",[m
[32m+[m[32m    'date'          => "nu este o data valida",[m
[32m+[m[32m    'dateFormat'    => "trebuie sa fie o data care sa aiba forma '%s'",[m
[32m+[m[32m    'dateBefore'    => "trebuie sa fie o data inainte de '%s'",[m
[32m+[m[32m    'dateAfter'     => "trebuie sa fie o data dupa '%s'",[m
[32m+[m[32m    'contains'      => "trebuie sa contina %s",[m
[32m+[m[32m    'boolean'       => "trebuie sa fie o constructie logica",[m
[32m+[m[32m    'lengthBetween' => "trebuie sa contina intre  %d si %d caractere",[m
[32m+[m[32m    'creditCard'    => "trebuie sa fie nu numar de card de credit valid",[m
[32m+[m[32m    "lengthMin"     => "trebuie sa contina caractere mai multe decat %d",[m
[32m+[m[32m    "lengthMax"     => "trebuie sa contina mai putin de  %d caractere",[m
[32m+[m[32m    "instanceOf"    => "trebuie sa fie un exemplu de '%s’",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/ru.php b/public/lang/ru.php[m
[1mnew file mode 100644[m
[1mindex 0000000..acf3268[m
[1m--- /dev/null[m
[1m+++ b/public/lang/ru.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "обязательно для заполнения",[m
[32m+[m[32m    'equals'         => "должно совпадать со значением '%s'",[m
[32m+[m[32m    'different'      => "должно отличаться от '%s'",[m
[32m+[m[32m    'accepted'       => "должно быть указано",[m
[32m+[m[32m    'numeric'        => "должно содержать числовое значение",[m
[32m+[m[32m    'integer'        => "должно быть числом",[m
[32m+[m[32m    'length'         => "должно быть длиннее, чем %d",[m
[32m+[m[32m    'min'            => "должно быть не менее, чем %s",[m
[32m+[m[32m    'max'            => "должно быть не более, чем %s",[m
[32m+[m[32m    'listContains'   => "содержит неверное значение",[m
[32m+[m[32m    'in'             => "содержит неверное значение",[m
[32m+[m[32m    'notIn'          => "содержит неверное значение",[m
[32m+[m[32m    'ip'             => "не является валидным IP адресом",[m
[32m+[m[32m    'ipv4'           => "не является валидным IPv4 адресом",[m
[32m+[m[32m    'ipv6'           => "не является валидным IPv6 адресом",[m
[32m+[m[32m    'email'          => "не является валидным email адресом",[m
[32m+[m[32m    'url'            => "не является валидной ссылкой",[m
[32m+[m[32m    'urlActive'      => "содержит не активную ссылку",[m
[32m+[m[32m    'alpha'          => "должно содержать только латинские символы",[m
[32m+[m[32m    'alphaNum'       => "должно содержать только латинские символы и/или цифры",[m
[32m+[m[32m    'slug'           => "должно содержать только латинские символы, цифры, тире и подчёркивания",[m
[32m+[m[32m    'regex'          => "содержит недопустимые символы",[m
[32m+[m[32m    'date'           => "не является датой",[m
[32m+[m[32m    'dateFormat'     => "должно содержать дату следующего формата: %s",[m
[32m+[m[32m    'dateBefore'     => "должно содержать дату не позднее, чем %s",[m
[32m+[m[32m    'dateAfter'      => "должно содержать дату не ранее, чем %s",[m
[32m+[m[32m    'contains'       => "должно содержать %s",[m
[32m+[m[32m    'boolean'        => "должно содержать логическое значение",[m
[32m+[m[32m    'lengthBetween'  => "должно содержать от %d до %d символов",[m
[32m+[m[32m    'creditCard'     => "должно быть номером кредитной карты",[m
[32m+[m[32m    'lengthMin'      => "должно содержать не менее %d символов",[m
[32m+[m[32m    'lengthMax'      => "должно содержать менее %d символов",[m
[32m+[m[32m    'instanceOf'     => "должно быть объектом класса '%s'",[m
[32m+[m[32m    'containsUnique' => "должно содержать только уникальные элементы",[m
[32m+[m[32m    'subset'         => "содержит элемент, не указанный в списке",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/sk.php b/public/lang/sk.php[m
[1mnew file mode 100644[m
[1mindex 0000000..859e53e[m
[1m--- /dev/null[m
[1m+++ b/public/lang/sk.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "je povinná položka",[m
[32m+[m[32m    'equals'        => "musí byť rovnaký ako '%s'",[m
[32m+[m[32m    'different'     => "musí byť rôzny od '%s'",[m
[32m+[m[32m    'accepted'      => "musí byť akceptovaný",[m
[32m+[m[32m    'numeric'       => "musí byť číslo",[m
[32m+[m[32m    'integer'       => "musí byť celé číslo",[m
[32m+[m[32m    'length'        => "musí byť dlhý aspoň %d",[m
[32m+[m[32m    'min'           => "musí byť dlhý minimálne %s",[m
[32m+[m[32m    'max'           => "musí byť maximálne %s",[m
[32m+[m[32m    'listContains'  => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'in'            => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'notIn'         => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'ip'            => "nie je korektná IP adresa",[m
[32m+[m[32m    'email'         => "nie je korektný e-mail",[m
[32m+[m[32m    'url'           => "nie je URL",[m
[32m+[m[32m    'urlActive'     => "musí byť aktívna URL",[m
[32m+[m[32m    'alpha'         => "musí obsahovať len písmená a-z",[m
[32m+[m[32m    'alphaNum'      => "musí obsahovať len písmená a-z a/alebo čísla 0-9",[m
[32m+[m[32m    'slug'          => "musí obsahovať len písmená a-z, čísla 0-9, pomlčky alebo podtržítka",[m
[32m+[m[32m    'regex'         => "obsahuje nepovolené znaky",[m
[32m+[m[32m    'date'          => "nie je korektný formáť",[m
[32m+[m[32m    'dateFormat'    => "musí byť dátum formátu '%s'",[m
[32m+[m[32m    'dateBefore'    => "musí byť dátum pred '%s'",[m
[32m+[m[32m    'dateAfter'     => "musí byť dátum po '%s'",[m
[32m+[m[32m    'contains'      => "musí obsahovať %s",[m
[32m+[m[32m    'boolean'       => "musí byť pravdivostná hodnota (boolean)",[m
[32m+[m[32m    'lengthBetween' => "musí byť %d až %d znakov dlhý",[m
[32m+[m[32m    'creditCard'    => "musí byť korektné číslo kreditnej karty",[m
[32m+[m[32m    "lengthMin"     => "musí byť aspoň %d znakov dlhý",[m
[32m+[m[32m    "lengthMax"     => "musí byť najviac %d znakov dlhý",[m
[32m+[m[32m    "instanceOf"    => "musí byť inštanciou '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/sl.php b/public/lang/sl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ecc46dc[m
[1m--- /dev/null[m
[1m+++ b/public/lang/sl.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "potrebno",[m
[32m+[m[32m    'equals'         => "mora biti enak '% s'",[m
[32m+[m[32m    'different'      => "mora biti drugačen od '% s'",[m
[32m+[m[32m    'accepted'       => "mora biti označeno",[m
[32m+[m[32m    'numeric'        => "mora biti številka",[m
[32m+[m[32m    'integer'        => "mora biti celo število",[m
[32m+[m[32m    'length'         => "ne sme biti daljši od% d",[m
[32m+[m[32m    'min'            => "mora biti večji od% s",[m
[32m+[m[32m    'max'            => "mora biti manjši od% s",[m
[32m+[m[32m    'listContains'   => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'in'             => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'notIn'          => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'ip'             => "ni veljaven naslov IP",[m
[32m+[m[32m    'ipv4'           => "ni veljaven naslov IPv4",[m
[32m+[m[32m    'ipv6'           => "ni veljaven naslov IPv6",[m
[32m+[m[32m    'email'          => "ni veljaven e-poštni naslov",[m
[32m+[m[32m    'url'            => "ni veljaven URL",[m
[32m+[m[32m    'urlActive'      => "mora biti aktivna domena",[m
[32m+[m[32m    'alpha'          => "mora vsebovati samo črke a-z",[m
[32m+[m[32m    'alphaNum'       => "mora vsebovati samo črke a-z in / ali številke 0-9",[m
[32m+[m[32m    'slug'           => "mora vsebovati samo črke a-z, številke 0-9, črtice in podčrtaje",[m
[32m+[m[32m    'regex'          => "vsebuje neveljavne znake",[m
[32m+[m[32m    'date'           => "ni veljaven datum",[m
[32m+[m[32m    'dateFormat'     => "mora biti datum s formatom '% s'",[m
[32m+[m[32m    'dateBefore'     => "mora biti datum pred '% s'",[m
[32m+[m[32m    'dateAfter'      => "mora biti datum za '% s'",[m
[32m+[m[32m    'contains'       => "mora vsebovati% s",[m
[32m+[m[32m    'boolean'        => "mora biti boolean",[m
[32m+[m[32m    'lengthBetween'  => "mora biti med% d in% d znaki",[m
[32m+[m[32m    'creditCard'     => "mora biti veljavna številka kreditne kartice",[m
[32m+[m[32m    'lengthMin'      => "mora biti dolg vsaj% d znakov",[m
[32m+[m[32m    'lengthMax'      => "ne sme presegati% d znakov",[m
[32m+[m[32m    'instanceOf'     => "mora biti primerek '% s'",[m
[32m+[m[32m    'containsUnique' => "mora vsebovati samo edinstvene elemente",[m
[32m+[m[32m    'requiredWith'   => "je potrebno",[m
[32m+[m[32m    'requiredWithout'=> "je potrebno",[m
[32m+[m[32m    'subset'         => "vsebuje element, ki ga ni na seznamu",[m
[32m+[m[32m    'arrayHasKeys'   => "ne vsebuje vseh potrebnih tipk",[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/sv.php b/public/lang/sv.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5e29669[m
[1m--- /dev/null[m
[1m+++ b/public/lang/sv.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m	[32m'required'      => "är obligatorisk",[m
[32m+[m	[32m'equals'        => "måste vara samma som '%s'",[m
[32m+[m	[32m'different'     => "får inte vara samma som '%s'",[m
[32m+[m	[32m'accepted'      => "måste accepteras",[m
[32m+[m	[32m'numeric'       => "måste vara numerisk",[m
[32m+[m	[32m'integer'       => "måste vara ett heltal",[m
[32m+[m	[32m'length'        => "måste vara %d tecken långt",[m
[32m+[m	[32m'min'           => "måste vara minst %s",[m
[32m+[m	[32m'max'           => "får inte vara mer än %s",[m
[32m+[m	[32m'listContains'  => "innehåller ogiltigt värde",[m
[32m+[m	[32m'in'            => "innehåller ogiltigt värde",[m
[32m+[m	[32m'notIn'         => "innehåller ogiltigt värde",[m
[32m+[m	[32m'ip'            => "är inte en giltlig IP-adress",[m
[32m+[m	[32m'email'         => "är inte en giltlig e-postadress",[m
[32m+[m	[32m'url'           => "är inte en giltlig URL",[m
[32m+[m	[32m'urlActive'     => "måste vara ett aktivt domännamn",[m
[32m+[m	[32m'alpha'         => "får bara inehålla bokstäver a-z",[m
[32m+[m	[32m'alphaNum'      => "får bara inehålla bokstäver a-z och/eller siffror 0-9",[m
[32m+[m	[32m'slug'          => "får bara inehålla bokstäver a-z och/eller siffror 0-9, bindesträck og understräck",[m
[32m+[m	[32m'regex'         => "inehåller ogiltliga tecken",[m
[32m+[m	[32m'date'          => "är inte ett giltligt datum",[m
[32m+[m	[32m'dateFormat'    => "måste vara ett datum med formatet '%s'",[m
[32m+[m	[32m'dateBefore'    => "måste vara ett datum före '%s'",[m
[32m+[m	[32m'dateAfter'     => "måste vara ett datum efter '%s'",[m
[32m+[m	[32m'contains'      => "måste innehålla %s",[m
[32m+[m	[32m'boolean'       => "måste vara ett booleskt värde",[m
[32m+[m	[32m'lengthBetween' => "måste vara mellan %d och %d tecken långt",[m
[32m+[m	[32m'creditCard'    => "måste vara et gyldig kredittkortnummer",[m
[32m+[m	[32m'lengthMin'     => "måste vara minst %d tecken långt",[m
[32m+[m	[32m'lengthMax'     => "får itne överstiga %d tecken",[m
[32m+[m	[32m'instanceOf'    => "måste vara en instans av '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/th.php b/public/lang/th.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6f4af40[m
[1m--- /dev/null[m
[1m+++ b/public/lang/th.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "นั้นจำเป็นต้องมี",[m
[32m+[m[32m    'equals'        => "ต้องเหมือนกับ '%s'",[m
[32m+[m[32m    'different'     => "ต้องแตกต่างจาก '%s'",[m
[32m+[m[32m    'accepted'      => "ต้องถูกยอมรับ",[m
[32m+[m[32m    'numeric'       => "ต้องเป็นตัวเลข",[m
[32m+[m[32m    'integer'       => "ต้องเป็นตัวเลข integer",[m
[32m+[m[32m    'length'        => "ต้องมีความยาวมากกว่า %d",[m
[32m+[m[32m    'min'           => "ต้องมีอย่างน้อย %s",[m
[32m+[m[32m    'max'           => "ต้องไม่มากเกิน %s",[m
[32m+[m[32m    'listContains'  => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'in'            => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'notIn'         => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'ip'            => "ไม่ใช่ IP ที่ถูกต้อง",[m
[32m+[m[32m    'email'         => "ไม่ใช่อีเมลที่ถูกต้อง",[m
[32m+[m[32m    'url'           => "ไม่ใช่ลิงก์",[m
[32m+[m[32m    'urlActive'     => "ต้องไม่ใช่โดเมนที่ใช้งานอยู่",[m
[32m+[m[32m    'alpha'         => "ต้องมีแค่ตัวอักษร a-z",[m
[32m+[m[32m    'alphaNum'      => "ต้องมีแค่ตัวอักษร a-z และ/หรือ ตัวเลข 0-9",[m
[32m+[m[32m    'slug'          => "ต้องมีแค่ตัวอักษร a-z ตัวเลข 0-9 / และ _",[m
[32m+[m[32m    'regex'         => "มีตัวอักษรที่ไม่ถูกต้อง",[m
[32m+[m[32m    'date'          => "ไม่ใช่วันที่ที่ถูกต้อง",[m
[32m+[m[32m    'dateFormat'    => "ต้องเป็นวันที่ในรูปแบบ '%s'",[m
[32m+[m[32m    'dateBefore'    => "ต้องเป็นวันที่ก่อน '%s'",[m
[32m+[m[32m    'dateAfter'     => "ต้องเป็นวันที่หลัง '%s'",[m
[32m+[m[32m    'contains'      => "ต้องมี %s",[m
[32m+[m[32m    'boolean'       => "ต้องเป็น boolean",[m
[32m+[m[32m    'lengthBetween' => "ต้องอยู่ระหว่าง %d ถึง %d ตัวอักษร",[m
[32m+[m[32m    'creditCard'    => "ต้องเป็นหมายเลขบัตรเครดิตที่ถูกต้อง",[m
[32m+[m[32m    "lengthMin"     => "ต้องมีมากกว่า %d ตัวอักษร",[m
[32m+[m[32m    "lengthMax"     => "ต้องมีน้อยกว่า %d ตัวอักษร",[m
[32m+[m[32m    "instanceOf"    => "ต้องเป็นส่วนหนึ่งของ '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/tr.php b/public/lang/tr.php[m
[1mnew file mode 100644[m
[1mindex 0000000..11fa708[m
[1m--- /dev/null[m
[1m+++ b/public/lang/tr.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "gerekli ",[m
[32m+[m[32m    'equals'        => "bununla aynı olmalı '%s'",[m
[32m+[m[32m    'different'     => "bundan değişik olmalı '%s'",[m
[32m+[m[32m    'accepted'      => "kabul edilebilir olmalı",[m
[32m+[m[32m    'numeric'       => "numerik olmalı",[m
[32m+[m[32m    'integer'       => "sayı olmalı",[m
[32m+[m[32m    'length'        => "en az %d adet uzunluğunda olmalı",[m
[32m+[m[32m    'min'           => "en az böyle olmalı %s",[m
[32m+[m[32m    'max'           => "bundan daha fazla olmalı %s",[m
[32m+[m[32m    'listContains'  => "geçersiz değer içeriyor",[m
[32m+[m[32m    'in'            => "geçersiz değer içeriyor",[m
[32m+[m[32m    'notIn'         => "geçersiz değer içeriyor",[m
[32m+[m[32m    'ip'            => "geçerli bir IP adresi değil",[m
[32m+[m[32m    'email'         => "geçerli bir eposta adresi değil",[m
[32m+[m[32m    'url'           => "bir URL değil",[m
[32m+[m[32m    'urlActive'     => "aktif bir alan adı olmalı",[m
[32m+[m[32m    'alpha'         => "sadece harf içermeli a-z",[m
[32m+[m[32m    'alphaNum'      => "sadece harf (a-z) ve/veya sayılar (0-9) içermeli",[m
[32m+[m[32m    'slug'          => "sadece harf (a-z), numbers sayılar (0-9), tire ve alt tire içermeli",[m
[32m+[m[32m    'regex'         => "geçersiz karakterler içeriyor",[m
[32m+[m[32m    'date'          => "geçerli bir karakter değil",[m
[32m+[m[32m    'dateFormat'    => "bu biçimde bir tarih olmalı '%s'",[m
[32m+[m[32m    'dateBefore'    => "bu tarihden önce olmalı '%s'",[m
[32m+[m[32m    'dateAfter'     => "bu tarihden sonra olmalı '%s'",[m
[32m+[m[32m    'contains'      => "bunu içermeli %s",[m
[32m+[m[32m    'boolean'       => "boolean olmalı",[m
[32m+[m[32m    'lengthBetween' => "%d ve %d karakter arasında olmalı",[m
[32m+[m[32m    'creditCard'    => "geçerli bir kredi kartı numarası olmalı",[m
[32m+[m[32m    "lengthMin"     => "%d katakterden fazla içermeli",[m
[32m+[m[32m    "lengthMax"     => "%d karakterden az içermeli",[m
[32m+[m[32m    "instanceOf"    => "bunun bir örneği olmalı '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/uk.php b/public/lang/uk.php[m
[1mnew file mode 100644[m
[1mindex 0000000..65df219[m
[1m--- /dev/null[m
[1m+++ b/public/lang/uk.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "обов'язкове для заповнення",[m
[32m+[m[32m    'equals'        => "має містити '%s'",[m
[32m+[m[32m    'different'     => "має відрізнятися від '%s'",[m
[32m+[m[32m    'accepted'      => "має бути вказаним",[m
[32m+[m[32m    'numeric'       => "має містити числове значення",[m
[32m+[m[32m    'integer'       => "має бути числом",[m
[32m+[m[32m    'length'        => "має бути довшим, ніж %d",[m
[32m+[m[32m    'min'           => "має бути більше, ніж %s",[m
[32m+[m[32m    'max'           => "повинно бути менше, ніж %s",[m
[32m+[m[32m    'listContains'  => "містить невірне значення",[m
[32m+[m[32m    'in'            => "містить невірне значення",[m
[32m+[m[32m    'notIn'         => "містить невірне значення",[m
[32m+[m[32m    'ip'            => "не є валідною IP адресою",[m
[32m+[m[32m    'email'         => "не є валідною email адресою",[m
[32m+[m[32m    'url'           => "не є посиланням",[m
[32m+[m[32m    'urlActive'     => "містить не активне посилання",[m
[32m+[m[32m    'alpha'         => "повинно містити тільки латинські символи",[m
[32m+[m[32m    'alphaNum'      => "повинно містити тільки латинські символи та/або цифри",[m
[32m+[m[32m    'slug'          => "повинно містити тільки латинські символи, цифри, тире і підкреслення",[m
[32m+[m[32m    'regex'         => "містить неприпустимі символи",[m
[32m+[m[32m    'date'          => "не є датою",[m
[32m+[m[32m    'dateFormat'    => "має містити дату наступного формату:%s",[m
[32m+[m[32m    'dateBefore'    => "має містити дату не пізнішу, ніж %s",[m
[32m+[m[32m    'dateAfter'     => "має містити дату не ранішу, ніж %s",[m
[32m+[m[32m    'contains'      => "має містити %s",[m
[32m+[m[32m    'boolean'       => "має містити логічне значення",[m
[32m+[m[32m    'lengthBetween' => "має містити від %d в до %d символів",[m
[32m+[m[32m    'creditCard'    => "має бути номером кредитної картки",[m
[32m+[m[32m    "lengthMin"     => "має містити більше %d символів",[m
[32m+[m[32m    "lengthMax"     => "має містити менше %d символів"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/vi.php b/public/lang/vi.php[m
[1mnew file mode 100644[m
[1mindex 0000000..de7d91d[m
[1m--- /dev/null[m
[1m+++ b/public/lang/vi.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "là bắt buộc",[m
[32m+[m[32m    'equals'        => "phải giống '%s'",[m
[32m+[m[32m    'different'     => "phải khác '%s'",[m
[32m+[m[32m    'accepted'      => "được chấp nhận",[m
[32m+[m[32m    'numeric'       => "phải là số",[m
[32m+[m[32m    'integer'       => "phải là số nguyên",[m
[32m+[m[32m    'length'        => "phải dài hơn %d",[m
[32m+[m[32m    'min'           => "ít nhất %s",[m
[32m+[m[32m    'max'           => "tối đa %s",[m
[32m+[m[32m    'listContains'  => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'in'            => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'notIn'         => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'ip'            => "địa chỉ IP không hợp lệ",[m
[32m+[m[32m    'email'         => "địa chỉ email không hợp lệ",[m
[32m+[m[32m    'url'           => "không phải là URL",[m
[32m+[m[32m    'urlActive'     => "Domain chưa được kích hoạt",[m
[32m+[m[32m    'alpha'         => "chỉ chứa các kí tự a-z",[m
[32m+[m[32m    'alphaNum'      => "chỉ chứa các kí tự a-z hoặc số 0-9",[m
[32m+[m[32m    'slug'          => "chỉ chứa các kí tự a-z, số 0-9, gạch nối và gạch dưới",[m
[32m+[m[32m    'regex'         => "chứa kí tự không hợp lệ",[m
[32m+[m[32m    'date'          => "thời gian hợp lệ",[m
[32m+[m[32m    'dateFormat'    => "thời gian nên được định dạng '%s'",[m
[32m+[m[32m    'dateBefore'    => "thời gian nên trước '%s'",[m
[32m+[m[32m    'dateAfter'     => "thời gian nên sau '%s'",[m
[32m+[m[32m    'contains'      => "phải chứa %s",[m
[32m+[m[32m    'boolean'       => "phải là boolean",[m
[32m+[m[32m    'lengthBetween' => "phải từ %d đến %d kí tự",[m
[32m+[m[32m    'creditCard'    => "credit card không hợp lệ",[m
[32m+[m[32m    "lengthMin"     => "ít nhất %d kí tự",[m
[32m+[m[32m    "lengthMax"     => "tối đa %d kí tự",[m
[32m+[m[32m    "instanceOf"    => "phải là instance của '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/zh-cn.php b/public/lang/zh-cn.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d0c8015[m
[1m--- /dev/null[m
[1m+++ b/public/lang/zh-cn.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "不能为空",[m
[32m+[m[32m    'equals'        => "必须和 '%s' 一致",[m
[32m+[m[32m    'different'     => "必须和 '%s' 不一致",[m
[32m+[m[32m    'accepted'      => "必须接受",[m
[32m+[m[32m    'numeric'       => "只能是数字",[m
[32m+[m[32m    'integer'       => "只能是整数",[m
[32m+[m[32m    'length'        => "长度必须等于 %d",[m
[32m+[m[32m    'min'           => "必须大于 %s",[m
[32m+[m[32m    'max'           => "必须小于 %s",[m
[32m+[m[32m    'listContains'  => "无效的值",[m
[32m+[m[32m    'in'            => "无效的值",[m
[32m+[m[32m    'notIn'         => "无效的值",[m
[32m+[m[32m    'ip'            => "无效IP地址",[m
[32m+[m[32m    'email'         => "无效邮箱地址",[m
[32m+[m[32m    'url'           => "无效的URL",[m
[32m+[m[32m    'urlActive'     => "必须是可用的域名",[m
[32m+[m[32m    'alpha'         => "只能包括英文字母(a-z)",[m
[32m+[m[32m    'alphaNum'      => "只能包括英文字母(a-z)和数字(0-9)",[m
[32m+[m[32m    'slug'          => "只能包括英文字母(a-z)、数字(0-9)、破折号和下划线",[m
[32m+[m[32m    'regex'         => "无效格式",[m
[32m+[m[32m    'date'          => "无效的日期",[m
[32m+[m[32m    'dateFormat'    => "日期的格式应该为 '%s'",[m
[32m+[m[32m    'dateBefore'    => "日期必须在 '%s' 之前",[m
[32m+[m[32m    'dateAfter'     => "日期必须在 '%s' 之后",[m
[32m+[m[32m    'contains'      => "必须包含 %s",[m
[32m+[m[32m    'boolean'       => "必须是真或假",[m
[32m+[m[32m    'lengthBetween' => "长度只能介于 %d 和 %d 之间",[m
[32m+[m[32m    'creditCard'    => "信用卡号码不正确",[m
[32m+[m[32m    'lengthMin'     => "长度必须大于 %d",[m
[32m+[m[32m    'lengthMax'     => "长度必须小于 %d"[m
[32m+[m[32m);[m
[1mdiff --git a/public/lang/zh-tw.php b/public/lang/zh-tw.php[m
[1mnew file mode 100644[m
[1mindex 0000000..70fb664[m
[1m--- /dev/null[m
[1m+++ b/public/lang/zh-tw.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "不能為空",[m
[32m+[m[32m    'equals'        => "必須和 '%s' 一致",[m
[32m+[m[32m    'different'     => "必須和 '%s' 不一致",[m
[32m+[m[32m    'accepted'      => "必須接受",[m
[32m+[m[32m    'numeric'       => "只能是數字",[m
[32m+[m[32m    'integer'       => "只能是整數",[m
[32m+[m[32m    'length'        => "長度必須大於 %d",[m
[32m+[m[32m    'min'           => "必須大於 %s",[m
[32m+[m[32m    'max'           => "必須小於 %s",[m
[32m+[m[32m    'listContains'  => "無效的值",[m
[32m+[m[32m    'in'            => "無效的值",[m
[32m+[m[32m    'notIn'         => "無效的值",[m
[32m+[m[32m    'ip'            => "無效IP地址",[m
[32m+[m[32m    'email'         => "無效郵箱地址",[m
[32m+[m[32m    'url'           => "無效的URL",[m
[32m+[m[32m    'urlActive'     => "必須是可用的域名",[m
[32m+[m[32m    'alpha'         => "只能包括英文字母(a-z)",[m
[32m+[m[32m    'alphaNum'      => "只能包括英文字母(a-z)和數字(0-9)",[m
[32m+[m[32m    'slug'          => "只能包括英文字母(a-z)、數字(0-9)、破折號和下劃線",[m
[32m+[m[32m    'regex'         => "無效格式",[m
[32m+[m[32m    'date'          => "無效的日期",[m
[32m+[m[32m    'dateFormat'    => "日期的格式應該為 '%s'",[m
[32m+[m[32m    'dateBefore'    => "日期必須在 '%s' 之前",[m
[32m+[m[32m    'dateAfter'     => "日期必須在 '%s' 之後",[m
[32m+[m[32m    'contains'  => "必須包含 %s"[m
[32m+[m[32m);[m
[1mdiff --git a/public/menu/menu.php b/public/menu/menu.php[m
[1mnew file mode 100644[m
[1mindex 0000000..45c581e[m
[1m--- /dev/null[m
[1m+++ b/public/menu/menu.php[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<li>[m
[32m+[m[32m    <a href="?id=<?php echo $id; ?>"><?php echo $menu['name']; ?></a>[m
[32m+[m[32m    <?php if (isset($menu['childs'])): ?>[m
[32m+[m[32m        <ul>[m
[32m+[m[32m            <?php echo $this->getMenuHtml($menu['childs']); ?>[m
[32m+[m[32m        </ul>[m
[32m+[m[32m    <?php endif; ?>[m
[32m+[m[32m</li>[m
\ No newline at end of file[m
[1mdiff --git a/public/menu/select.php b/public/menu/select.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ce639d9[m
[1m--- /dev/null[m
[1m+++ b/public/menu/select.php[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m<option value="<?php echo $id; ?>"><?php echo $tab . $menu['name']; ?></option>[m
[32m+[m
[32m+[m[32m<?php if (isset($menu['childs'])): ?>[m
[32m+[m[32m    <?php echo $this->getMenuHtml($menu['childs'], '&nbsp;' . $tab . '-'); ?>[m
[32m+[m[32m<?php endif; ?>[m
\ No newline at end of file[m
[1mdiff --git a/tmp/cache/8d6ab84ca2af9fccd4e4048694176ebf.txt b/tmp/cache/8d6ab84ca2af9fccd4e4048694176ebf.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..23ec83e[m
[1m--- /dev/null[m
[1m+++ b/tmp/cache/8d6ab84ca2af9fccd4e4048694176ebf.txt[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32ma:2:{s:4:"data";s:1137:"<li>[m
[32m+[m[32m    <a href="?id=1">Samsung</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=6">Galaxy Phone</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=17">Galaxy A70</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=18">Galaxy S20</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=7">Smart TV</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=8">Smart Watch</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=2">Apple</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=9">iPhone</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=10">iPad</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=11">iPod</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=3">LG</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=12">Phone</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=13">TV</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=4">Lenovo</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=14">Laptop</a>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=15">Computer</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li><li>[m
[32m+[m[32m    <a href="?id=5">Nokia</a>[m
[32m+[m[32m            <ul>[m
[32m+[m[32m            <li>[m
[32m+[m[32m    <a href="?id=16">Nokia G50</a>[m
[32m+[m[32m    </li>        </ul>[m
[32m+[m[32m    </li>";s:8:"end_time";i:1639040741;}[m
\ No newline at end of file[m
[1mdiff --git a/tmp/errors.log b/tmp/errors.log[m
[1mnew file mode 100644[m
[1mindex 0000000..d3898c3[m
[1m--- /dev/null[m
[1m+++ b/tmp/errors.log[m
[36m@@ -0,0 +1,1924 @@[m
[32m+[m[32m[2021-12-09 12:04:48] Текст ошибки: Метод <b>app\controllers\UserController::logoutAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:04:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:06:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:14:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:16:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:22:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:40:27] Текст ошибки: syntax error, unexpected '{' | Файл: C:\OpenServer\domains\school.loc\app\controllers\UserController.php, | Строка: 9[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:40:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 12:44:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 13:11:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 13:41:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 13:46:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:09:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:09:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:09:17] Текст ошибки: Метод <b>app\controllers\UserController::indexAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:31:49] Текст ошибки: Метод <b>app\controllers\UserController::rAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:39:57] Текст ошибки: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'Java' for key 'login' | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 15:46:18] Текст ошибки: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'Java' for key 'login' | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:02:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:30:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:49:02] Текст ошибки: syntax error, unexpected '}' | Файл: C:\OpenServer\domains\school.loc\app\controllers\UserController.php, | Строка: 36[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:49:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:49:03] Текст ошибки: syntax error, unexpected '}' | Файл: C:\OpenServer\domains\school.loc\app\controllers\UserController.php, | Строка: 36[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:49:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 17:53:58] Текст ошибки: Метод <b>app\controllers\UserController::logoutAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 20:17:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 20:45:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 21:01:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:04:25] Текст ошибки: ob_start(): function 'compressPage' not found or invalid function name | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 56[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:04:36] Текст ошибки: ob_start(): function 'compressPage' not found or invalid function name | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 56[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:04:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:04:36] Текст ошибки: ob_start(): function 'compressPage' not found or invalid function name | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 56[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:04:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:15:51] Текст ошибки: explode() expects parameter 2 to be string, array given | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\Pagination.php, | Строка: 84[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:16:13] Текст ошибки: explode() expects parameter 2 to be string, array given | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\Pagination.php, | Строка: 84[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:16:55] Текст ошибки: Class 'framework\libs\Pagination' not found | Файл: C:\OpenServer\domains\school.loc\app\controllers\MainController.php, | Строка: 24[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:16:56] Текст ошибки: Class 'framework\libs\Pagination' not found | Файл: C:\OpenServer\domains\school.loc\app\controllers\MainController.php, | Строка: 24[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:25:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:26:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:38:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:40:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 22:40:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 23:04:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 23:11:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 23:13:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 23:13:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-09 23:13:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 09:55:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 10:25:23] Текст ошибки: Class 'app\controllers\App' not found | Файл: C:\OpenServer\domains\school.loc\app\controllers\AppController.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 10:25:51] Текст ошибки: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'title' in 'field list' | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 10:47:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 10:52:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 10:55:04] Текст ошибки: SQLSTATE[42S02]: Base table or view not found: 1146 Table 'myschool.languages' doesn't exist | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 11:00:09] Текст ошибки: Illegal string offset 'name' | Файл: C:\OpenServer\domains\school.loc\vendor\framework\widgets\language\lang.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 14:54:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:23:00] Текст ошибки: Class 'Expection' not found | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 61[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:30:12] Текст ошибки: Class 'framework\core\base\Expection' not found | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 61[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:30:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:31:00] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\school.loc/app/views/Language/change.php</b> | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 61[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:38:50] Текст ошибки: Class 'app\controllers\App' not found | Файл: C:\OpenServer\domains\school.loc\app\controllers\LanguageController.php, | Строка: 9[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 15:38:57] Текст ошибки: Class 'app\controllers\App' not found | Файл: C:\OpenServer\domains\school.loc\app\controllers\LanguageController.php, | Строка: 9[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:24:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:25:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:27:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:28:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:38:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:43:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 19:46:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 20:08:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 20:08:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 20:33:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 20:56:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:01:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:01:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:01:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:01:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:01:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:02:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:02:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:02:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:02:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:02:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:03:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:04:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:05:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:06:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:07:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:08:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:09:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:09:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:09:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:10:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:11:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:12:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:13:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:13:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:13:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:14:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:15:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:16:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:16:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:16:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:16:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:17:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:18:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:18:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:18:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:19:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:20:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:20:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:20:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:22:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:22:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:22:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:23:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:24:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:24:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:24:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:25:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:26:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:26:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 21:26:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:00:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:14:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:19:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:19:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:19:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:19:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:20:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:20:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:27:14] Текст ошибки: Too few arguments to function debug(), 1 passed in C:\OpenServer\domains\school.loc\app\views\layouts\def.php on line 82 and exactly 2 expected | Файл: C:\OpenServer\domains\school.loc\vendor\framework\libs\functions.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:38:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:38:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 22:38:54] Текст ошибки: Undefined index: error | Файл: C:\OpenServer\domains\school.loc\app\views\admin\User\login.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:22:48] Текст ошибки: Метод <b>app\controllers\PageController::indexAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:33:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:36:53] Текст ошибки: Метод <b>app\controllers\UserController::indexAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:38:40] Текст ошибки: Метод <b>app\controllers\UserController::indexAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:38:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:42:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:43:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:48:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:49:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:49:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:51:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:52:32] Текст ошибки: Метод <b>app\controllers\BlogController::4Action</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:54:10] Текст ошибки: Метод <b>app\controllers\BlogController::showAction</b> не найден | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-10 23:54:23] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\school.loc/app/views/Blog/show.php</b> | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 64[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 00:30:30] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\school.loc/app/views/Blog/show.php</b> | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\base\View.php, | Строка: 64[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 00:30:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\school.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 00:43:38] Текст ошибки:  | Файл: C:\OpenServer\domains\school.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 05:45:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:08:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:08:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:09:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:12:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:25:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:26:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:26:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:26:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:27:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:27:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:27:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:27:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:29:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:29:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:30:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:30:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:30:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:30:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:31:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:35:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 06:35:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:18:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:26:20] Текст ошибки: Метод <b>app\controllers\admin\BlogController::createAction</b> не найден | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:38:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:39:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:47:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:47:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:48:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:50:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:50:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:50:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 13:53:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:00:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:01:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:02:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:03:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:03:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:13:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:17:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:19:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:20:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:20:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:21:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:22:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:23:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:23:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:24:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:30:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:32:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:34:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:35:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:35:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:39:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:39:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:40:22] Текст ошибки: Пост | Файл: C:\OpenServer\domains\goodly.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:41:45] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\goodly.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:41:46] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\goodly.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:41:54] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\goodly.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:42:21] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\goodly.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:42:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:45:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:45:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:45:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:47:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:47:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:48:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:51:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 14:51:23] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:02:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:03:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:03:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:03:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:03:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:03:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:04:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:04:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:04:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:25:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:53:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:58:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:58:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:59:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:59:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 15:59:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\goodly.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:00:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:04:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:04:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:05:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:05:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:06:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:07:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:08:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:09:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:10:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:16:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:36:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:40:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:41:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:41:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:41:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:50:19] Текст ошибки: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ORDER BY id DESC  -- keep-cache' at line 1 | Файл: C:\OpenServer\domains\med.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:50:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:35] Текст ошибки: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'DESC  -- keep-cache' at line 1 | Файл: C:\OpenServer\domains\med.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:44] Текст ошибки: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ORDER BY id  -- keep-cache' at line 1 | Файл: C:\OpenServer\domains\med.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:45] Текст ошибки: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ORDER BY id  -- keep-cache' at line 1 | Файл: C:\OpenServer\domains\med.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 16:52:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:05:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:12:52] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:02] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:03] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:04] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:04] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:07] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:12] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:44] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:45] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:45] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:46] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Blog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:13:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:14:58] Текст ошибки: Контроллер <b>app\controllers\admin\BlogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:14:59] Текст ошибки: Контроллер <b>app\controllers\admin\BlogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:15:04] Текст ошибки: Контроллер <b>app\controllers\admin\CatalogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:15:24] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\app\views\admin\Catalog\create.php, | Строка: 16[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 17:20:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 18:07:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 18:08:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 18:19:09] Текст ошибки: Контроллер <b>app\controllers\CatalogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 18:29:47] Текст ошибки: Контроллер <b>app\controllers\admin\BlogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-11 18:36:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 14:59:11] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 14:59:41] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:09] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:41] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:42] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:50] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:51] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:00:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:01:03] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:01:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:01:04] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:01:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:01:05] Текст ошибки: Invalid argument supplied for foreach() | Файл: C:\OpenServer\domains\med.loc\vendor\framework\widgets\language\lang.php, | Строка: 3[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:02:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:03:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:03:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:03:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:03:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:03:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:04:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:04:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:05:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:05:40] Текст ошибки: Контроллер <b>app\controllers\admin\BlogController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:18:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:19:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:19:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:27:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:27:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:28:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:29:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:29:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:49:17] Текст ошибки: Call to undefined function app\controllers\admin\Validator() | Файл: C:\OpenServer\domains\med.loc\app\controllers\admin\BlogController.php, | Строка: 23[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:49:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:00] Текст ошибки: syntax error, unexpected '}', expecting end of file | Файл: C:\OpenServer\domains\med.loc\app\controllers\admin\BlogController.php, | Строка: 38[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:06] Текст ошибки: Call to undefined function app\controllers\admin\Validator() | Файл: C:\OpenServer\domains\med.loc\app\controllers\admin\BlogController.php, | Строка: 23[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:50:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:54:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:55:21] Текст ошибки: Class 'app\controllers\admin\Validator' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\admin\CatalogController.php, | Строка: 19[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:55:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 15:56:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 16:03:46] Текст ошибки: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'Головоломки' for key 'name' | Файл: C:\OpenServer\domains\med.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 19:26:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 21:52:28] Текст ошибки: Контроллер <b>app\controllers\ProductController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:01:13] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:08] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:09] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:10] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Class 'app\controllers\Pagination' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 18[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:20] Текст ошибки: Undefined variable: total | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 19[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:21] Текст ошибки: Undefined variable: total | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 19[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:02:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:02] Текст ошибки: Undefined property: app\controllers\ProductController::$menu | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 44[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:03] Текст ошибки: Undefined property: app\controllers\ProductController::$menu | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 44[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:19] Текст ошибки: Class 'app\controllers\View' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 46[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:20] Текст ошибки: Class 'app\controllers\View' not found | Файл: C:\OpenServer\domains\med.loc\app\controllers\ProductController.php, | Строка: 46[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:05:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:10:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:10:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:12:21] Текст ошибки: Метод <b>app\controllers\ProductController::indexAction</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:14:44] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:15:12] Текст ошибки: Undefined variable: cats | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:04] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:05] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:16] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:16] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 5[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:25] Текст ошибки: Array to string conversion | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 2[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:26] Текст ошибки: Array to string conversion | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 2[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:52] Текст ошибки: Illegal string offset 'name' | Файл: C:\OpenServer\domains\med.loc\app\views\Product\show.php, | Строка: 6[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:17:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:18:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:18:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:18:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:30:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:31:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:32:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 22:33:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:30:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:30:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:31:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:32:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:32:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:32:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:34:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:34:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:36:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:36:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:40:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:40:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:42:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:42:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:44:23] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:44:23] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:47:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:47:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:47:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:47:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:47:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:51:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:52:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:53:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:53:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-12 23:58:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:00:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:01:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:26:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:37:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:37:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 00:48:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 02:48:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 02:50:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 02:50:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:38:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:38:48] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:39:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:55:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:55:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:55:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:57:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 09:57:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:02:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:03:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:03:55] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:04:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:04:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:04:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:05:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:05:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:05:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:05:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:05:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:09:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:09:40] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:09:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:10:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:10:22] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:10:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:10:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:27] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:28] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:29] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:29] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:29] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:29] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:29] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:11:34] Текст ошибки: Пост не найден | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 26[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:13:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:16:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:16:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:16:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:16:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:16:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:19:53] Текст ошибки: setcookie() expects parameter 2 to be string, array given | Файл: C:\OpenServer\domains\med.loc\app\controllers\BlogController.php, | Строка: 34[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:19:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:20:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:44:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:45:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:45:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:45:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:45:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:46:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:46:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:47:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:47:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:48:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:49:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:49:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:49:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:49:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:49:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:50:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:50:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:50:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:50:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:51:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:51:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:51:27] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:52:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:52:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 10:52:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 15:12:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 15:22:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:19:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:19:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:19:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:20:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:20:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:20:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:21:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:21:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:21:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:21:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:33:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:34:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:40:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:40:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:40:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:41:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:41:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:45:27] Текст ошибки: Undefined variable: format | Файл: C:\OpenServer\domains\med.loc\app\views\Blog\show.php, | Строка: 25[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:46:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:49:07] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:51:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:53:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:53:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:53:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:54:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:54:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 17:54:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:02:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:02:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:02:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:03:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:04:28] Текст ошибки: Контроллер <b>app\controllers\CodeController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:07:09] Текст ошибки: Контроллер <b>app\controllers\CodeController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:07:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:12:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:15:55] Текст ошибки: Контроллер <b>app\controllers\ManagerController</b> не найден | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:32:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:34:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:40:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:43:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:44:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:45:53] Текст ошибки: Array to string conversion | Файл: C:\OpenServer\domains\med.loc\app\views\User\index.php, | Строка: 4[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:46:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:46:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:46:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:46:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:46:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:47:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:48:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:48:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:48:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:48:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:49:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:49:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:49:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:51:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:51:06] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:51:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:51:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:58:55] Текст ошибки: Undefined index: photo | Файл: C:\OpenServer\domains\med.loc\app\views\User\index.php, | Строка: 6[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 18:58:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:10:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:10:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:11:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:11:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:12:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:12:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:12:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:13:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:13:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:14:19] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:14:30] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:15:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:16:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:16:54] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:17:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:17:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:17:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:18:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:18:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:19:01] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:19:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:20:23] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:22:01] Текст ошибки: Undefined index: photo | Файл: C:\OpenServer\domains\med.loc\app\views\User\index.php, | Строка: 7[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:22:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:22:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:23:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:23:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:23:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:23:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:23:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-13 19:24:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\med.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 11:56:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 11:57:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:01:31] Текст ошибки: Контроллер <b>app\controllers\KassaController</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:04:36] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:04:38] Текст ошибки: syntax error, unexpected ')' | Файл: C:\OpenServer\domains\kassa.loc\app\controllers\KassaController.php, | Строка: 8[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:11:08] Текст ошибки: Call to undefined method app\controllers\KassaController::getView() | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 55[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:11:20] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:19:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:20:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:21:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:21:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:21:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:29:56] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\kassa.loc/app/views/Recorder/index.php</b> | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\base\View.php, | Строка: 64[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 12:46:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:16:18] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:30:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:33:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:33:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:33:33] Текст ошибки: SQLSTATE[42S02]: Base table or view not found: 1146 Table 'kassa.users' doesn't exist | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:39:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:39:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:39:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:41:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:42:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:42:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:42:51] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:43:03] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:43:11] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:43:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:46:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:46:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:47:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:47:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:47:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:47:52] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:47:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:52:37] Текст ошибки: Using $this when not in object context | Файл: C:\OpenServer\domains\kassa.loc\public\index.php, | Строка: 45[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:52:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:52:38] Текст ошибки: Using $this when not in object context | Файл: C:\OpenServer\domains\kassa.loc\public\index.php, | Строка: 45[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:52:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:54:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:55:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:55:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:55:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:56:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:56:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 19:59:34] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:01:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:01:41] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:02:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:03:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:04:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:04:06] Текст ошибки: Метод <b>app\controllers\PageController::indexAction</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:04:14] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\kassa.loc/app/views/Java/index.php</b> | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\base\View.php, | Строка: 64[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:04:33] Текст ошибки: Контроллер <b>app\controllers\JabaController</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:04:36] Текст ошибки: Не найден вид <b>C:\OpenServer\domains\kassa.loc/app/views/Java/index.php</b> | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\base\View.php, | Строка: 64[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:05:19] Текст ошибки: Метод <b>app\controllers\KassaController::blogAction</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:50:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 20:57:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:00:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:02:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:03:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:03:38] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:03:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:35:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:36:13] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 21:38:19] Текст ошибки: SQLSTATE[HY000]: General error: 1364 Field 'address' doesn't have a default value | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:06:19] Текст ошибки: syntax error, unexpected '}' | Файл: C:\OpenServer\domains\kassa.loc\app\controllers\KassaController.php, | Строка: 11[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:08:12] Текст ошибки: syntax error, unexpected '}' | Файл: C:\OpenServer\domains\kassa.loc\app\controllers\KassaController.php, | Строка: 11[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:08:38] Текст ошибки: syntax error, unexpected '}' | Файл: C:\OpenServer\domains\kassa.loc\app\controllers\KassaController.php, | Строка: 11[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:33:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:34:56] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\kassa.loc\app\views\Kassa\index.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:34:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:34:57] Текст ошибки: Undefined index: name | Файл: C:\OpenServer\domains\kassa.loc\app\views\Kassa\index.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:34:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:15] Текст ошибки: Undefined index: login | Файл: C:\OpenServer\domains\kassa.loc\app\views\Kassa\index.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:15] Текст ошибки: Undefined index: login | Файл: C:\OpenServer\domains\kassa.loc\app\views\Kassa\index.php, | Строка: 13[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:23] Текст ошибки: Undefined index: login | Файл: C:\OpenServer\domains\kassa.loc\app\views\Kassa\index.php, | Строка: 14[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:23] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:35:53] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:36:08] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:36:10] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:36:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:37:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:38:45] Текст ошибки: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'status' in 'where clause' | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:38:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:39:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:40:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:40:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:41:14] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:41:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:42:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:43:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:44:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:45:21] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:45:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:45:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:46:02] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:46:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:46:47] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:47:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:49:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:50:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:51:44] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 22:53:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 23:29:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 23:37:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-14 23:38:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:19:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:22:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:00] Текст ошибки: Метод <b>app\controllers\KassaController::checkAction</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:00] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:47] Текст ошибки: Метод <b>app\controllers\KassaController::checkAction</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 57[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:49] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:52] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:23:58] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:26:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:26:12] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:26:50] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:27:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:27:06] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:29:28] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:29:28] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:29:32] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:29:36] Текст ошибки: Контроллер <b>app\controllers\KassController</b> не найден | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 60[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:30:17] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 00:30:31] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 03:29:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 11:04:33] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-15 11:05:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 06:11:09] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 06:11:25] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 07:18:19] Текст ошибки: OODB Store requires a bean, got: array | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 10226[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 07:26:15] Текст ошибки: SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect date value: '15.03.1983' for column 'birth_date' at row 1 | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 08:26:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 08:26:58] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 08:27:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 08:27:00] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:39:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:39:42] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:39:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:39:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:47:28] Текст ошибки: SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect date value: '12/04/2021' for column 'birth_date' at row 1 | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:47:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:47:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:01] Текст ошибки: SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect date value: '12/04/2021' for column 'birth_date' at row 1 | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:05] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:17] Текст ошибки: SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect date value: '12/04/2021' for column 'birth_date' at row 1 | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:48:24] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:57:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:57:04] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:57:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 09:57:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:00:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:00:37] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:00:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:00:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:00:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:02:12] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:03:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:03:35] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:03:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:03:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:06:36] Текст ошибки: SQLSTATE[42S02]: Base table or view not found: 1146 Table 'kassa.roles' doesn't exist | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\libs\rb.php, | Строка: 838[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:08:29] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:08:43] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:08:56] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:10:59] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:11:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:11:39] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:11:40] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:11:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 10:11:57] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 12:58:15] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-16 12:58:16] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-17 15:41:32] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:22] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:45] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:31:46] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:38:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:38:25] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[32m+[m[32m[2021-12-18 11:38:26] Текст ошибки: Страница не найдена | Файл: C:\OpenServer\domains\kassa.loc\vendor\framework\core\Router.php, | Строка: 63[m[41m [m
[32m+[m[32m///////////////////////////[m
[1mdiff --git a/vendor/autoload.php b/vendor/autoload.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ff4f037[m
[1m--- /dev/null[m
[1m+++ b/vendor/autoload.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload.php @generated by Composer[m
[32m+[m
[32m+[m[32mrequire_once __DIR__ . '/composer/autoload_real.php';[m
[32m+[m
[32m+[m[32mreturn ComposerAutoloaderInit4a285b3b44b78a9e03d1425eb66fe433::getLoader();[m
[1mdiff --git a/vendor/composer/ClassLoader.php b/vendor/composer/ClassLoader.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fce8549[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/ClassLoader.php[m
[36m@@ -0,0 +1,445 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * This file is part of Composer.[m
[32m+[m[32m *[m
[32m+[m[32m * (c) Nils Adermann <naderman@naderman.de>[m
[32m+[m[32m *     Jordi Boggiano <j.boggiano@seld.be>[m
[32m+[m[32m *[m
[32m+[m[32m * For the full copyright and license information, please view the LICENSE[m
[32m+[m[32m * file that was distributed with this source code.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mnamespace Composer\Autoload;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.[m
[32m+[m[32m *[m
[32m+[m[32m *     $loader = new \Composer\Autoload\ClassLoader();[m
[32m+[m[32m *[m
[32m+[m[32m *     // register classes with namespaces[m
[32m+[m[32m *     $loader->add('Symfony\Component', __DIR__.'/component');[m
[32m+[m[32m *     $loader->add('Symfony',           __DIR__.'/framework');[m
[32m+[m[32m *[m
[32m+[m[32m *     // activate the autoloader[m
[32m+[m[32m *     $loader->register();[m
[32m+[m[32m *[m
[32m+[m[32m *     // to enable searching the include path (eg. for PEAR packages)[m
[32m+[m[32m *     $loader->setUseIncludePath(true);[m
[32m+[m[32m *[m
[32m+[m[32m * In this example, if you try to use a class in the Symfony\Component[m
[32m+[m[32m * namespace or one of its children (Symfony\Component\Console for instance),[m
[32m+[m[32m * the autoloader will first look for the class under the component/[m
[32m+[m[32m * directory, and it will then fallback to the framework/ directory if not[m
[32m+[m[32m * found before giving up.[m
[32m+[m[32m *[m
[32m+[m[32m * This class is loosely based on the Symfony UniversalClassLoader.[m
[32m+[m[32m *[m
[32m+[m[32m * @author Fabien Potencier <fabien@symfony.com>[m
[32m+[m[32m * @author Jordi Boggiano <j.boggiano@seld.be>[m
[32m+[m[32m * @see    http://www.php-fig.org/psr/psr-0/[m
[32m+[m[32m * @see    http://www.php-fig.org/psr/psr-4/[m
[32m+[m[32m */[m
[32m+[m[32mclass ClassLoader[m
[32m+[m[32m{[m
[32m+[m[32m    // PSR-4[m
[32m+[m[32m    private $prefixLengthsPsr4 = array();[m
[32m+[m[32m    private $prefixDirsPsr4 = array();[m
[32m+[m[32m    private $fallbackDirsPsr4 = array();[m
[32m+[m
[32m+[m[32m    // PSR-0[m
[32m+[m[32m    private $prefixesPsr0 = array();[m
[32m+[m[32m    private $fallbackDirsPsr0 = array();[m
[32m+[m
[32m+[m[32m    private $useIncludePath = false;[m
[32m+[m[32m    private $classMap = array();[m
[32m+[m[32m    private $classMapAuthoritative = false;[m
[32m+[m[32m    private $missingClasses = array();[m
[32m+[m[32m    private $apcuPrefix;[m
[32m+[m
[32m+[m[32m    public function getPrefixes()[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!empty($this->prefixesPsr0)) {[m
[32m+[m[32m            return call_user_func_array('array_merge', $this->prefixesPsr0);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return array();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getPrefixesPsr4()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->prefixDirsPsr4;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getFallbackDirs()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->fallbackDirsPsr0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getFallbackDirsPsr4()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->fallbackDirsPsr4;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getClassMap()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->classMap;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param array $classMap Class to filename map[m
[32m+[m[32m     */[m
[32m+[m[32m    public function addClassMap(array $classMap)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($this->classMap) {[m
[32m+[m[32m            $this->classMap = array_merge($this->classMap, $classMap);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $this->classMap = $classMap;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers a set of PSR-0 directories for a given prefix, either[m
[32m+[m[32m     * appending or prepending to the ones previously set for this prefix.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string       $prefix  The prefix[m
[32m+[m[32m     * @param array|string $paths   The PSR-0 root directories[m
[32m+[m[32m     * @param bool         $prepend Whether to prepend the directories[m
[32m+[m[32m     */[m
[32m+[m[32m    public function add($prefix, $paths, $prepend = false)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!$prefix) {[m
[32m+[m[32m            if ($prepend) {[m
[32m+[m[32m                $this->fallbackDirsPsr0 = array_merge([m
[32m+[m[32m                    (array) $paths,[m
[32m+[m[32m                    $this->fallbackDirsPsr0[m
[32m+[m[32m                );[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $this->fallbackDirsPsr0 = array_merge([m
[32m+[m[32m                    $this->fallbackDirsPsr0,[m
[32m+[m[32m                    (array) $paths[m
[32m+[m[32m                );[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $first = $prefix[0];[m
[32m+[m[32m        if (!isset($this->prefixesPsr0[$first][$prefix])) {[m
[32m+[m[32m            $this->prefixesPsr0[$first][$prefix] = (array) $paths;[m
[32m+[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($prepend) {[m
[32m+[m[32m            $this->prefixesPsr0[$first][$prefix] = array_merge([m
[32m+[m[32m                (array) $paths,[m
[32m+[m[32m                $this->prefixesPsr0[$first][$prefix][m
[32m+[m[32m            );[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $this->prefixesPsr0[$first][$prefix] = array_merge([m
[32m+[m[32m                $this->prefixesPsr0[$first][$prefix],[m
[32m+[m[32m                (array) $paths[m
[32m+[m[32m            );[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers a set of PSR-4 directories for a given namespace, either[m
[32m+[m[32m     * appending or prepending to the ones previously set for this namespace.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string       $prefix  The prefix/namespace, with trailing '\\'[m
[32m+[m[32m     * @param array|string $paths   The PSR-4 base directories[m
[32m+[m[32m     * @param bool         $prepend Whether to prepend the directories[m
[32m+[m[32m     *[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public function addPsr4($prefix, $paths, $prepend = false)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!$prefix) {[m
[32m+[m[32m            // Register directories for the root namespace.[m
[32m+[m[32m            if ($prepend) {[m
[32m+[m[32m                $this->fallbackDirsPsr4 = array_merge([m
[32m+[m[32m                    (array) $paths,[m
[32m+[m[32m                    $this->fallbackDirsPsr4[m
[32m+[m[32m                );[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $this->fallbackDirsPsr4 = array_merge([m
[32m+[m[32m                    $this->fallbackDirsPsr4,[m
[32m+[m[32m                    (array) $paths[m
[32m+[m[32m                );[m
[32m+[m[32m            }[m
[32m+[m[32m        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {[m
[32m+[m[32m            // Register directories for a new namespace.[m
[32m+[m[32m            $length = strlen($prefix);[m
[32m+[m[32m            if ('\\' !== $prefix[$length - 1]) {[m
[32m+[m[32m                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");[m
[32m+[m[32m            }[m
[32m+[m[32m            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;[m
[32m+[m[32m            $this->prefixDirsPsr4[$prefix] = (array) $paths;[m
[32m+[m[32m        } elseif ($prepend) {[m
[32m+[m[32m            // Prepend directories for an already registered namespace.[m
[32m+[m[32m            $this->prefixDirsPsr4[$prefix] = array_merge([m
[32m+[m[32m                (array) $paths,[m
[32m+[m[32m                $this->prefixDirsPsr4[$prefix][m
[32m+[m[32m            );[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // Append directories for an already registered namespace.[m
[32m+[m[32m            $this->prefixDirsPsr4[$prefix] = array_merge([m
[32m+[m[32m                $this->prefixDirsPsr4[$prefix],[m
[32m+[m[32m                (array) $paths[m
[32m+[m[32m            );[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers a set of PSR-0 directories for a given prefix,[m
[32m+[m[32m     * replacing any others previously set for this prefix.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string       $prefix The prefix[m
[32m+[m[32m     * @param array|string $paths  The PSR-0 base directories[m
[32m+[m[32m     */[m
[32m+[m[32m    public function set($prefix, $paths)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!$prefix) {[m
[32m+[m[32m            $this->fallbackDirsPsr0 = (array) $paths;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers a set of PSR-4 directories for a given namespace,[m
[32m+[m[32m     * replacing any others previously set for this namespace.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string       $prefix The prefix/namespace, with trailing '\\'[m
[32m+[m[32m     * @param array|string $paths  The PSR-4 base directories[m
[32m+[m[32m     *[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setPsr4($prefix, $paths)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!$prefix) {[m
[32m+[m[32m            $this->fallbackDirsPsr4 = (array) $paths;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $length = strlen($prefix);[m
[32m+[m[32m            if ('\\' !== $prefix[$length - 1]) {[m
[32m+[m[32m                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");[m
[32m+[m[32m            }[m
[32m+[m[32m            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;[m
[32m+[m[32m            $this->prefixDirsPsr4[$prefix] = (array) $paths;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Turns on searching the include path for class files.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param bool $useIncludePath[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setUseIncludePath($useIncludePath)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->useIncludePath = $useIncludePath;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Can be used to check if the autoloader uses the include path to check[m
[32m+[m[32m     * for classes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public function getUseIncludePath()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->useIncludePath;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Turns off searching the prefix and fallback directories for classes[m
[32m+[m[32m     * that have not been registered with the class map.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param bool $classMapAuthoritative[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setClassMapAuthoritative($classMapAuthoritative)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->classMapAuthoritative = $classMapAuthoritative;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Should class lookup fail if not found in the current class map?[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public function isClassMapAuthoritative()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->classMapAuthoritative;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string|null $apcuPrefix[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setApcuPrefix($apcuPrefix)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The APCu prefix in use, or null if APCu caching is not enabled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    public function getApcuPrefix()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->apcuPrefix;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers this instance as an autoloader.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param bool $prepend Whether to prepend the autoloader or not[m
[32m+[m[32m     */[m
[32m+[m[32m    public function register($prepend = false)[m
[32m+[m[32m    {[m
[32m+[m[32m        spl_autoload_register(array($this, 'loadClass'), true, $prepend);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Unregisters this instance as an autoloader.[m
[32m+[m[32m     */[m
[32m+[m[32m    public function unregister()[m
[32m+[m[32m    {[m
[32m+[m[32m        spl_autoload_unregister(array($this, 'loadClass'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Loads the given class or interface.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string    $class The name of the class[m
[32m+[m[32m     * @return bool|null True if loaded, null otherwise[m
[32m+[m[32m     */[m
[32m+[m[32m    public function loadClass($class)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($file = $this->findFile($class)) {[m
[32m+[m[32m            includeFile($file);[m
[32m+[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds the path to the file where the class is defined.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $class The name of the class[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return string|false The path if found, false otherwise[m
[32m+[m[32m     */[m
[32m+[m[32m    public function findFile($class)[m
[32m+[m[32m    {[m
[32m+[m[32m        // class map lookup[m
[32m+[m[32m        if (isset($this->classMap[$class])) {[m
[32m+[m[32m            return $this->classMap[$class];[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (null !== $this->apcuPrefix) {[m
[32m+[m[32m            $file = apcu_fetch($this->apcuPrefix.$class, $hit);[m
[32m+[m[32m            if ($hit) {[m
[32m+[m[32m                return $file;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $file = $this->findFileWithExtension($class, '.php');[m
[32m+[m
[32m+[m[32m        // Search for Hack files if we are running on HHVM[m
[32m+[m[32m        if (false === $file && defined('HHVM_VERSION')) {[m
[32m+[m[32m            $file = $this->findFileWithExtension($class, '.hh');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (null !== $this->apcuPrefix) {[m
[32m+[m[32m            apcu_add($this->apcuPrefix.$class, $file);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (false === $file) {[m
[32m+[m[32m            // Remember that this class does not exist.[m
[32m+[m[32m            $this->missingClasses[$class] = true;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $file;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private function findFileWithExtension($class, $ext)[m
[32m+[m[32m    {[m
[32m+[m[32m        // PSR-4 lookup[m
[32m+[m[32m        $logicalPathPsr4 = strtr($class, '\\', DIRECTORY_SEPARATOR) . $ext;[m
[32m+[m
[32m+[m[32m        $first = $class[0];[m
[32m+[m[32m        if (isset($this->prefixLengthsPsr4[$first])) {[m
[32m+[m[32m            $subPath = $class;[m
[32m+[m[32m            while (false !== $lastPos = strrpos($subPath, '\\')) {[m
[32m+[m[32m                $subPath = substr($subPath, 0, $lastPos);[m
[32m+[m[32m                $search = $subPath . '\\';[m
[32m+[m[32m                if (isset($this->prefixDirsPsr4[$search])) {[m
[32m+[m[32m                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);[m
[32m+[m[32m                    foreach ($this->prefixDirsPsr4[$search] as $dir) {[m
[32m+[m[32m                        if (file_exists($file = $dir . $pathEnd)) {[m
[32m+[m[32m                            return $file;[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // PSR-4 fallback dirs[m
[32m+[m[32m        foreach ($this->fallbackDirsPsr4 as $dir) {[m
[32m+[m[32m            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {[m
[32m+[m[32m                return $file;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // PSR-0 lookup[m
[32m+[m[32m        if (false !== $pos = strrpos($class, '\\')) {[m
[32m+[m[32m            // namespaced class name[m
[32m+[m[32m            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)[m
[32m+[m[32m                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // PEAR-like class name[m
[32m+[m[32m            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (isset($this->prefixesPsr0[$first])) {[m
[32m+[m[32m            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {[m
[32m+[m[32m                if (0 === strpos($class, $prefix)) {[m
[32m+[m[32m                    foreach ($dirs as $dir) {[m
[32m+[m[32m                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {[m
[32m+[m[32m                            return $file;[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // PSR-0 fallback dirs[m
[32m+[m[32m        foreach ($this->fallbackDirsPsr0 as $dir) {[m
[32m+[m[32m            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {[m
[32m+[m[32m                return $file;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // PSR-0 include paths.[m
[32m+[m[32m        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {[m
[32m+[m[32m            return $file;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Scope isolated include.[m
[32m+[m[32m *[m
[32m+[m[32m * Prevents access to $this/self from included files.[m
[32m+[m[32m */[m
[32m+[m[32mfunction includeFile($file)[m
[32m+[m[32m{[m
[32m+[m[32m    include $file;[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/composer/LICENSE b/vendor/composer/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..f27399a[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m
[32m+[m[32mCopyright (c) Nils Adermann, Jordi Boggiano[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is furnished[m
[32m+[m[32mto do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN[m
[32m+[m[32mTHE SOFTWARE.[m
[32m+[m
[1mdiff --git a/vendor/composer/autoload_classmap.php b/vendor/composer/autoload_classmap.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7a91153[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/autoload_classmap.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload_classmap.php @generated by Composer[m
[32m+[m
[32m+[m[32m$vendorDir = dirname(dirname(__FILE__));[m
[32m+[m[32m$baseDir = dirname($vendorDir);[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m);[m
[1mdiff --git a/vendor/composer/autoload_namespaces.php b/vendor/composer/autoload_namespaces.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b7fc012[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/autoload_namespaces.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload_namespaces.php @generated by Composer[m
[32m+[m
[32m+[m[32m$vendorDir = dirname(dirname(__FILE__));[m
[32m+[m[32m$baseDir = dirname($vendorDir);[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m);[m
[1mdiff --git a/vendor/composer/autoload_psr4.php b/vendor/composer/autoload_psr4.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2fb7ef3[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/autoload_psr4.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload_psr4.php @generated by Composer[m
[32m+[m
[32m+[m[32m$vendorDir = dirname(dirname(__FILE__));[m
[32m+[m[32m$baseDir = dirname($vendorDir);[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'framework\\' => array($vendorDir . '/framework'),[m
[32m+[m[32m    'app\\' => array($baseDir . '/app'),[m
[32m+[m[32m    'Valitron\\' => array($vendorDir . '/vlucas/valitron/src/Valitron'),[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/composer/autoload_real.php b/vendor/composer/autoload_real.php[m
[1mnew file mode 100644[m
[1mindex 0000000..95571f7[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/autoload_real.php[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload_real.php @generated by Composer[m
[32m+[m
[32m+[m[32mclass ComposerAutoloaderInit4a285b3b44b78a9e03d1425eb66fe433[m
[32m+[m[32m{[m
[32m+[m[32m    private static $loader;[m
[32m+[m
[32m+[m[32m    public static function loadClassLoader($class)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ('Composer\Autoload\ClassLoader' === $class) {[m
[32m+[m[32m            require __DIR__ . '/ClassLoader.php';[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @return \Composer\Autoload\ClassLoader[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function getLoader()[m
[32m+[m[32m    {[m
[32m+[m[32m        if (null !== self::$loader) {[m
[32m+[m[32m            return self::$loader;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        spl_autoload_register(array('ComposerAutoloaderInit4a285b3b44b78a9e03d1425eb66fe433', 'loadClassLoader'), true, true);[m
[32m+[m[32m        self::$loader = $loader = new \Composer\Autoload\ClassLoader();[m
[32m+[m[32m        spl_autoload_unregister(array('ComposerAutoloaderInit4a285b3b44b78a9e03d1425eb66fe433', 'loadClassLoader'));[m
[32m+[m
[32m+[m[32m        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());[m
[32m+[m[32m        if ($useStaticLoader) {[m
[32m+[m[32m            require_once __DIR__ . '/autoload_static.php';[m
[32m+[m
[32m+[m[32m            call_user_func(\Composer\Autoload\ComposerStaticInit4a285b3b44b78a9e03d1425eb66fe433::getInitializer($loader));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $map = require __DIR__ . '/autoload_namespaces.php';[m
[32m+[m[32m            foreach ($map as $namespace => $path) {[m
[32m+[m[32m                $loader->set($namespace, $path);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            $map = require __DIR__ . '/autoload_psr4.php';[m
[32m+[m[32m            foreach ($map as $namespace => $path) {[m
[32m+[m[32m                $loader->setPsr4($namespace, $path);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            $classMap = require __DIR__ . '/autoload_classmap.php';[m
[32m+[m[32m            if ($classMap) {[m
[32m+[m[32m                $loader->addClassMap($classMap);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $loader->register(true);[m
[32m+[m
[32m+[m[32m        return $loader;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/composer/autoload_static.php b/vendor/composer/autoload_static.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5c3254a[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/autoload_static.php[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// autoload_static.php @generated by Composer[m
[32m+[m
[32m+[m[32mnamespace Composer\Autoload;[m
[32m+[m
[32m+[m[32mclass ComposerStaticInit4a285b3b44b78a9e03d1425eb66fe433[m
[32m+[m[32m{[m
[32m+[m[32m    public static $prefixLengthsPsr4 = array ([m
[32m+[m[32m        'f' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            'framework\\' => 10,[m
[32m+[m[32m        ),[m
[32m+[m[32m        'a' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            'app\\' => 4,[m
[32m+[m[32m        ),[m
[32m+[m[32m        'V' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            'Valitron\\' => 9,[m
[32m+[m[32m        ),[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    public static $prefixDirsPsr4 = array ([m
[32m+[m[32m        'framework\\' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            0 => __DIR__ . '/..' . '/framework',[m
[32m+[m[32m        ),[m
[32m+[m[32m        'app\\' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            0 => __DIR__ . '/../..' . '/app',[m
[32m+[m[32m        ),[m
[32m+[m[32m        'Valitron\\' =>[m[41m [m
[32m+[m[32m        array ([m
[32m+[m[32m            0 => __DIR__ . '/..' . '/vlucas/valitron/src/Valitron',[m
[32m+[m[32m        ),[m
[32m+[m[32m    );[m
[32m+[m
[32m+[m[32m    public static function getInitializer(ClassLoader $loader)[m
[32m+[m[32m    {[m
[32m+[m[32m        return \Closure::bind(function () use ($loader) {[m
[32m+[m[32m            $loader->prefixLengthsPsr4 = ComposerStaticInit4a285b3b44b78a9e03d1425eb66fe433::$prefixLengthsPsr4;[m
[32m+[m[32m            $loader->prefixDirsPsr4 = ComposerStaticInit4a285b3b44b78a9e03d1425eb66fe433::$prefixDirsPsr4;[m
[32m+[m
[32m+[m[32m        }, null, ClassLoader::class);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/composer/installed.json b/vendor/composer/installed.json[m
[1mnew file mode 100644[m
[1mindex 0000000..e27302c[m
[1m--- /dev/null[m
[1m+++ b/vendor/composer/installed.json[m
[36m@@ -0,0 +1,59 @@[m
[32m+[m[32m[[m
[32m+[m[32m    {[m
[32m+[m[32m        "name": "vlucas/valitron",[m
[32m+[m[32m        "version": "v1.4.10",[m
[32m+[m[32m        "version_normalized": "1.4.10.0",[m
[32m+[m[32m        "source": {[m
[32m+[m[32m            "type": "git",[m
[32m+[m[32m            "url": "https://github.com/vlucas/valitron.git",[m
[32m+[m[32m            "reference": "5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb"[m
[32m+[m[32m        },[m
[32m+[m[32m        "dist": {[m
[32m+[m[32m            "type": "zip",[m
[32m+[m[32m            "url": "https://api.github.com/repos/vlucas/valitron/zipball/5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb",[m
[32m+[m[32m            "reference": "5ebd5d7af82cc0a9d798e816a2ecad63f1b59ceb",[m
[32m+[m[32m            "shasum": ""[m
[32m+[m[32m        },[m
[32m+[m[32m        "require": {[m
[32m+[m[32m            "php": ">=5.3.2"[m
[32m+[m[32m        },[m
[32m+[m[32m        "require-dev": {[m
[32m+[m[32m            "phpunit/phpunit": ">=4.8.35"[m
[32m+[m[32m        },[m
[32m+[m[32m        "suggest": {[m
[32m+[m[32m            "ext-mbstring": "It can support the multiple bytes string length."[m
[32m+[m[32m        },[m
[32m+[m[32m        "time": "2021-07-08T16:18:03+00:00",[m
[32m+[m[32m        "type": "library",[m
[32m+[m[32m        "installation-source": "dist",[m
[32m+[m[32m        "autoload": {[m
[32m+[m[32m            "psr-4": {[m
[32m+[m[32m                "Valitron\\": "src/Valitron"[m
[32m+[m[32m            }[m
[32m+[m[32m        },[m
[32m+[m[32m        "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m        "license": [[m
[32m+[m[32m            "BSD-3-Clause"[m
[32m+[m[32m        ],[m
[32m+[m[32m        "authors": [[m
[32m+[m[32m            {[m
[32m+[m[32m                "name": "Vance Lucas",[m
[32m+[m[32m                "email": "vance@vancelucas.com",[m
[32m+[m[32m                "homepage": "https://www.vancelucas.com"[m
[32m+[m[32m            }[m
[32m+[m[32m        ],[m
[32m+[m[32m        "description": "Simple, elegant, stand-alone validation library with NO dependencies",[m
[32m+[m[32m        "homepage": "https://github.com/vlucas/valitron",[m
[32m+[m[32m        "keywords": [[m
[32m+[m[32m            "valid",[m
[32m+[m[32m            "validation",[m
[32m+[m[32m            "validator"[m
[32m+[m[32m        ],[m
[32m+[m[32m        "funding": [[m
[32m+[m[32m            {[m
[32m+[m[32m                "url": "https://tidelift.com/funding/github/packagist/vlucas/valitron",[m
[32m+[m[32m                "type": "tidelift"[m
[32m+[m[32m            }[m
[32m+[m[32m        ][m
[32m+[m[32m    }[m
[32m+[m[32m][m
[1mdiff --git a/vendor/framework/core/App.php b/vendor/framework/core/App.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e9c7e88[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/App.php[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m
[32m+[m
[32m+[m[32muse framework\core\Router;[m
[32m+[m[32muse framework\core\ErrorHandler;[m
[32m+[m
[32m+[m[32mclass App {[m
[32m+[m[32m    public static $app;[m
[32m+[m
[32m+[m[32m    public function __construct() {[m
[32m+[m[32m        session_start();[m
[32m+[m[32m        self::$app = Registry::instance();[m
[32m+[m[32m        new ErrorHandler();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/Db.php b/vendor/framework/core/Db.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c425596[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/Db.php[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m
[32m+[m
[32m+[m[32mclass Db {[m
[32m+[m
[32m+[m[32m    use TSingleton;[m
[32m+[m
[32m+[m[32m    protected $pdo;[m
[32m+[m[32m    public static $countSql = 0;[m
[32m+[m[32m    public static $queries = [];[m
[32m+[m
[32m+[m[32m    protected function __construct() {[m
[32m+[m[32m        $db = require ROOT . '/config/config_db.php';[m
[32m+[m
[32m+[m[32m        require LIBS . '/rb.php';[m
[32m+[m[32m        \R::setup($db['dsn'], $db['user'], $db['pass']);[m
[32m+[m[32m        \R::freeze(true);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/ErrorHandler.php b/vendor/framework/core/ErrorHandler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ee54208[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/ErrorHandler.php[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m
[32m+[m
[32m+[m[32mclass ErrorHandler{[m
[32m+[m
[32m+[m[32m    public function __construct() {[m
[32m+[m[32m        if(DEBUG){[m
[32m+[m[32m            error_reporting(-1);[m
[32m+[m[32m        }else{[m
[32m+[m[32m            error_reporting(0);[m
[32m+[m[32m        }[m
[32m+[m[32m        set_error_handler([$this, 'errorHandler']);[m
[32m+[m[32m        ob_start();[m
[32m+[m[32m        register_shutdown_function([$this, 'fatalErrorHandler']);[m
[32m+[m[32m        set_exception_handler([$this, 'exceptionHandler']);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function errorHandler($errno, $errstr, $errfile, $errline) {[m
[32m+[m[32m        $this->logErrors($errstr, $errfile, $errline);[m
[32m+[m[32m        if (DEBUG || in_array($errno, [E_USER_ERROR, E_RECOVERABLE_ERROR])) {[m
[32m+[m[32m            $this->displayError($errno, $errstr, $errfile, $errline);[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function fatalErrorHandler(){[m
[32m+[m[32m        $error = error_get_last();[m
[32m+[m[32m        if(!empty($error) && $error['type'] & ( E_ERROR | E_PARSE | E_COMPILE_ERROR | E_CORE_ERROR)) {[m
[32m+[m[32m            $this->logErrors($error['message'], $error['file'], $error['line']);[m
[32m+[m[32m            ob_end_clean();[m
[32m+[m[32m            $this->displayError($error['type'], $error['message'], $error['file'], $error['line']);[m
[32m+[m[32m        }else{[m
[32m+[m[32m            ob_end_flush();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function exceptionHandler($e) {[m
[32m+[m[32m        $this->logErrors($e->getMessage(), $e->getFile(), $e->getLine());[m
[32m+[m[32m        $this->displayError('Исключение', $e->getMessage(), $e->getFile(), $e->getLine(), $e->getCode());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function logErrors($message = '', $file = '', $line = '') {[m
[32m+[m[32m        error_log("[" . date('Y-m-d H:i:s') . "] Текст ошибки: {$message} | Файл: {$file}, | Строка: {$line} \n///////////////////////////\n", 3, ROOT . '/tmp/errors.log');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function displayError($errno, $errstr, $errfile, $errline, $response = 500) {[m
[32m+[m[32m        http_response_code($response);[m
[32m+[m[32m        if ($response == 404 && !DEBUG) {[m
[32m+[m[32m            require WWW . '/errors/404.php';[m
[32m+[m[32m            die;[m
[32m+[m[32m        }[m
[32m+[m[32m        if(DEBUG){[m
[32m+[m[32m            require WWW . '/errors/dev.php';[m
[32m+[m[32m        }else{[m
[32m+[m[32m            require WWW . '/errors/prod.php';[m
[32m+[m[32m        }[m
[32m+[m[32m        die;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/Registry.php b/vendor/framework/core/Registry.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6f1ac56[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/Registry.php[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m[41m [m
[32m+[m
[32m+[m[32mclass Registry {[m
[32m+[m
[32m+[m[32m    use TSingleton;[m
[32m+[m
[32m+[m[32m    protected static $properties = [];[m
[32m+[m
[32m+[m[32m    public function setProperty($name, $value) {[m
[32m+[m[32m        self::$properties[$name] = $value;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getProperty($name) {[m
[32m+[m[32m        if (isset(self::$properties[$name])) {[m
[32m+[m[32m            return self::$properties[$name];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getProperties() {[m
[32m+[m[32m        return self::$properties;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/Router.php b/vendor/framework/core/Router.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0fb6574[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/Router.php[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m
[32m+[m
[32m+[m[32mclass Router {[m
[32m+[m
[32m+[m[32m    protected static $routes = [];[m
[32m+[m[32m    protected static $route = [];[m
[32m+[m
[32m+[m[32m    public static function add($regexp, $route = []) {[m
[32m+[m[32m        self::$routes[$regexp] = $route;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function getRoutes() {[m
[32m+[m[32m        return self::$routes;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function getRoute() {[m
[32m+[m[32m        return self::$route;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function matchRoute($url) {[m
[32m+[m[32m        foreach (self::$routes as $pattern => $route) {[m
[32m+[m[32m            if (preg_match("#$pattern#i", $url, $matches)) {[m
[32m+[m[32m                foreach ($matches as $k => $v) {[m
[32m+[m[32m                    if (is_string($k)) {[m
[32m+[m[32m                        $route[$k] = $v;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                if (!isset($route['action'])) {[m
[32m+[m[32m                    $route['action'] = 'index';[m
[32m+[m[32m                }[m
[32m+[m[32m                if (!isset($route['prefix'])) {[m
[32m+[m[32m                    $route['prefix'] = '';[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $route['prefix'] .= '\\';[m
[32m+[m[32m                }[m
[32m+[m[32m                $route['controller'] = self::upperCamelCase($route['controller']);[m
[32m+[m[32m                self::$route = $route;[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function dispatch($url) {[m
[32m+[m[32m        $url = self::removeQueryString($url);[m
[32m+[m[32m        if (self::matchRoute($url)) {[m
[32m+[m[32m            $controller = 'app\controllers\\' . self::$route['prefix'] . self::$route['controller'] . 'Controller';[m
[32m+[m[32m            if (class_exists($controller)) {[m
[32m+[m[32m                $cObj = new $controller(self::$route);[m
[32m+[m[32m                $action = self::lowerCamelCase(self::$route['action']) . 'Action';[m
[32m+[m[32m                if (method_exists($cObj, $action)) {[m
[32m+[m[32m                    $cObj->$action();[m
[32m+[m[32m                    $cObj->getView();[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    throw new \Exception("Метод <b>$controller::$action</b> не найден", 404);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                throw new \Exception("Контроллер <b>$controller</b> не найден", 404);[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            throw new \Exception("Страница не найдена", 404);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected static function upperCamelCase($name) {[m[41m   [m
[32m+[m[32m        return str_replace(' ', '', ucwords(str_replace('-', ' ', $name)));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected static function lowerCamelCase($name) {[m[41m   [m
[32m+[m[32m        return lcfirst(self::upperCamelCase($name));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected static function removeQueryString($url) {[m
[32m+[m[32m        if ($url) {[m
[32m+[m[32m            $params = explode('&', $url, 2);[m
[32m+[m[32m            if (false === strpos($params[0], '=')) {[m
[32m+[m[32m                return rtrim($params[0], '/');[m
[32m+[m[32m            } else {[m
[32m+[m[32m                return '';[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/TSingleton.php b/vendor/framework/core/TSingleton.php[m
[1mnew file mode 100644[m
[1mindex 0000000..80c7ed9[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/TSingleton.php[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core;[m
[32m+[m
[32m+[m[32mtrait TSingleton {[m
[32m+[m[32m    protected static $instance;[m
[32m+[m
[32m+[m[32m    public static function instance() {[m
[32m+[m[32m        if (self::$instance === null) {[m
[32m+[m[32m            self::$instance = new self;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return self::$instance;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/base/Controller.php b/vendor/framework/core/base/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3587574[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/base/Controller.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core\base;[m
[32m+[m
[32m+[m[32mabstract class Controller {[m
[32m+[m
[32m+[m[32m    public $route = [];[m
[32m+[m
[32m+[m[32m    public $view;[m
[32m+[m
[32m+[m[32m    public $layout;[m
[32m+[m
[32m+[m[32m    public $vars = [];[m
[32m+[m
[32m+[m[32m    public function __construct($route) {[m
[32m+[m[32m        $this->route = $route;[m
[32m+[m[32m        $this->view = $route['action'];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getView() {[m
[32m+[m[32m        $vObj = new View($this->route, $this->layout, $this->view);[m
[32m+[m[32m        $vObj->render($this->vars);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function set($vars) {[m
[32m+[m[32m        $this->vars = $vars;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function isAjax() {[m
[32m+[m[32m        return isset($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] === 'XMLHttpRequest';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function loadView($view, $vars = []) {[m
[32m+[m[32m        extract($vars);[m
[32m+[m[32m        require APP . "/views/{$this->route['controller']}/{$view}.php";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/base/Lang.php b/vendor/framework/core/base/Lang.php[m
[1mnew file mode 100644[m
[1mindex 0000000..96996e1[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/base/Lang.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core\base;[m
[32m+[m
[32m+[m[32mclass Lang {[m
[32m+[m
[32m+[m[32m    public static $langData = [];[m
[32m+[m[32m    public static $langLayout = [];[m
[32m+[m[32m    public static $langView = [];[m
[32m+[m
[32m+[m[32m    public static function load($code, $view) {[m
[32m+[m[32m        $langLayout = APP . "/langs/{$code['code']}.php";[m
[32m+[m[32m        $langView = APP . "/langs/{$code['code']}/{$view['controller']}/{$view['action']}.php";[m
[32m+[m
[32m+[m[32m        if (file_exists($langLayout)) {[m
[32m+[m[32m            self::$langLayout = require_once $langLayout;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (file_exists($langView)) {[m
[32m+[m[32m            self::$langView = require_once $langView;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        self::$langData = array_merge(self::$langLayout, self::$langView);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function get($key) {[m
[32m+[m[32m        return isset(self::$langData[$key]) ? self::$langData[$key] : $key;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/base/Model.php b/vendor/framework/core/base/Model.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e1e2b48[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/base/Model.php[m
[36m@@ -0,0 +1,89 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core\base;[m
[32m+[m
[32m+[m[32muse framework\core\Db;[m
[32m+[m[32muse Valitron\Validator;[m
[32m+[m
[32m+[m[32mabstract class Model {[m
[32m+[m
[32m+[m[32m    protected $pdo;[m
[32m+[m[32m    protected $table;[m
[32m+[m[32m    protected $pk = 'id';[m
[32m+[m[32m    protected $attributes = [];[m
[32m+[m[32m    protected $errors = [];[m
[32m+[m[32m    protected $rules = [];[m
[32m+[m
[32m+[m[32m    public function __construct() {[m
[32m+[m[32m        $this->pdo = Db::instance();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function load($data) {[m
[32m+[m[32m        foreach ($this->attributes as $name => $value) {[m
[32m+[m[32m            if (isset($data[$name])) {[m
[32m+[m[32m                $this->attributes[$name] = $data[$name];[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function validate($data) {[m
[32m+[m[32m        Validator::lang('ru');[m
[32m+[m[32m        Validator::langDir(WWW . '/lang');[m
[32m+[m[32m        $v = new Validator($data);[m
[32m+[m[32m        $v->rules($this->rules);[m
[32m+[m
[32m+[m[32m        if ($v->validate()) {[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->errors = $v->errors();[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function save($table) {[m
[32m+[m[32m        $tbl = \R::dispense($table);[m
[32m+[m
[32m+[m[32m        foreach ($this->attributes as $name => $value) {[m
[32m+[m[32m            $tbl->$name = $value;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return \R::store($tbl);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getErrors() {[m
[32m+[m[32m        $errors = '<ul>';[m
[32m+[m[32m        foreach ($this->errors as $error) {[m
[32m+[m[32m            foreach ($error as $item) {[m
[32m+[m[32m                $errors .= "<li>$item</li>";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        $errors .= '</ul>';[m
[32m+[m
[32m+[m[32m        $_SESSION['error'] = $errors;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function query($sql) {[m
[32m+[m[32m        return $this->pdo->execute($sql);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function findAll() {[m
[32m+[m[32m        $sql = "SELECT * FROM {$this->table}";[m
[32m+[m[32m        return $this->pdo->query($sql);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function findOne($id, $field = '') {[m
[32m+[m[32m        $field = $field ?: $this->pk;[m
[32m+[m[32m        $sql = "SELECT * FROM {$this->table} WHERE $field = ? LIMIT 1";[m
[32m+[m[32m        return $this->pdo->query($sql, [$id]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function findBySql($sql, $params = []) {[m
[32m+[m[32m        return $this->pdo->query($sql, $params);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function findLike($str, $field, $table = '') {[m
[32m+[m[32m        $table = $table ?: $this->table;[m
[32m+[m[32m        $sql = "SELECT * FROM $table WHERE $field LIKE ?";[m
[32m+[m[32m        return $this->pdo->query($sql, ['%' . $str . '%']);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/core/base/View.php b/vendor/framework/core/base/View.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fcfe885[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/core/base/View.php[m
[36m@@ -0,0 +1,118 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\core\base;[m
[32m+[m
[32m+[m[32muse framework\core\App;[m
[32m+[m
[32m+[m[32mclass View {[m
[32m+[m
[32m+[m[32m    public $route = [];[m
[32m+[m
[32m+[m[32m    public $view;[m
[32m+[m[41m    [m
[32m+[m[32m    public $layout;[m
[32m+[m
[32m+[m[32m    public $scripts = [];[m
[32m+[m
[32m+[m[32m    public static $meta = ['title' => '', 'desc' => '', 'keywords' => ''];[m
[32m+[m
[32m+[m[32m    public function __construct($route, $layout = '', $view = '') {[m
[32m+[m[32m        $this->route = $route;[m
[32m+[m[32m        if ($layout === false) {[m
[32m+[m[32m            $this->layout = false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $this->layout = $layout ?: LAYOUT;[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->view = $view;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function compressPage($buffer) {[m
[32m+[m[32m        $search = [[m
[32m+[m[32m            "/(\n)+/",[m
[32m+[m[32m            "/\r\n+/",[m
[32m+[m[32m            "/\n(\t)+/",[m
[32m+[m[32m            "/\n(\ )+/",[m
[32m+[m[32m            "/\>(\n)+</",[m
[32m+[m[32m            "/\>\r\n</",[m
[32m+[m[32m        ];[m
[32m+[m
[32m+[m[32m        $replace = [[m
[32m+[m[32m            "\n",[m
[32m+[m[32m            "\n",[m
[32m+[m[32m            "\n",[m
[32m+[m[32m            "\n",[m
[32m+[m[32m            "><",[m
[32m+[m[32m            "><",[m
[32m+[m[32m        ];[m
[32m+[m
[32m+[m[32m        return preg_replace($search, $replace, $buffer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function render($vars) {[m
[32m+[m[32m        Lang::load(App::$app->getProperty('lang'), $this->route);[m
[32m+[m[32m        $this->route['prefix'] = str_replace('\\', '/', $this->route['prefix']);[m
[32m+[m[32m        if (is_array($vars)) {[m
[32m+[m[32m            extract($vars);[m
[32m+[m[32m        }[m
[32m+[m[32m        $file_view = APP . "/views/{$this->route['prefix']}{$this->route['controller']}/{$this->view}.php";[m
[32m+[m
[32m+[m[32m        ob_start([$this, 'compressPage']);[m
[32m+[m[32m        {[m
[32m+[m[32m            if (is_file($file_view)) {[m
[32m+[m[32m                require $file_view;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                throw new \Exception("Не найден вид <b>$file_view</b>", 404);[m
[32m+[m[32m            }[m
[32m+[m[32m            $content = ob_get_contents();[m
[32m+[m[32m        }[m
[32m+[m[32m        ob_clean();[m
[32m+[m
[32m+[m[32m        if ($this->layout !== false) {[m
[32m+[m[32m            $file_layout = APP . "/views/layouts/{$this->layout}.php";[m
[32m+[m
[32m+[m[32m            if (is_file($file_layout)) {[m
[32m+[m[32m                $content = $this->getScript($content);[m
[32m+[m[32m                $scripts = [];[m
[32m+[m
[32m+[m[32m                if (!empty($this->scripts[0])) {[m
[32m+[m[32m                    $scripts = $this->scripts[0];[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                require $file_layout;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                throw new \Exception("Не найден шаблон <b>$file_layout</b>", 404);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getPart($file) {[m
[32m+[m[32m        $file = APP . "/views/{$file}.php";[m
[32m+[m
[32m+[m[32m        if (is_file($file)) {[m
[32m+[m[32m            require_once $file;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            echo "File {$file} not found...";[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getScript($content) {[m
[32m+[m[32m        $pattern = "#<script.*?>.*?</script>#si";[m
[32m+[m[32m        preg_match_all($pattern, $content, $this->scripts);[m
[32m+[m[32m        if (!empty($this->scripts)) {[m
[32m+[m[32m            $content = preg_replace($pattern, '', $content);[m
[32m+[m[32m        }[m
[32m+[m[32m        return $content;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function getMeta() {[m
[32m+[m[32m        echo '<title>' . self::$meta['title'] . '</title>';[m
[32m+[m[32m        echo '<meta name="description" content="' . self::$meta['desc'] . '">';[m
[32m+[m[32m        echo '<meta name="keywords" content="' . self::$meta['keywords'] . '">';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function setMeta($title = '', $desc = '', $keywords = ' ') {[m
[32m+[m[32m        self::$meta['title'] = $title;[m
[32m+[m[32m        self::$meta['desc'] = $desc;[m
[32m+[m[32m        self::$meta['keywords'] = $keywords;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/libs/Cache.php b/vendor/framework/libs/Cache.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b102f85[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/libs/Cache.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\libs;[m
[32m+[m
[32m+[m[32mclass Cache {[m
[32m+[m[41m    [m
[32m+[m[32m    public function __construct() {[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function set($key, $data, $seconds = 3600) {[m
[32m+[m[32m        $content['data'] = $data;[m
[32m+[m[32m        $content['end_time'] = time() + $seconds;[m
[32m+[m[32m        if (file_put_contents(CACHE . '/' . md5($key) . '.txt', serialize($content))) {[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function get($key) {[m
[32m+[m[32m        $file = CACHE . '/' . md5($key) . '.txt';[m
[32m+[m[32m        if (file_exists($file)) {[m
[32m+[m[32m            $content = unserialize(file_get_contents($file));[m
[32m+[m[32m            if (time() <= $content['end_time']) {[m
[32m+[m[32m                return $content['data'];[m
[32m+[m[32m            }[m
[32m+[m[32m            unlink($file);[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function delete($key) {[m
[32m+[m[32m        $file = CACHE . '/' . md5($key) . '.txt';[m
[32m+[m[32m        if (file_exists($file)) {[m
[32m+[m[32m            unlink($file);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/libs/Pagination.php b/vendor/framework/libs/Pagination.php[m
[1mnew file mode 100644[m
[1mindex 0000000..535309a[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/libs/Pagination.php[m
[36m@@ -0,0 +1,95 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\libs;[m
[32m+[m
[32m+[m
[32m+[m[32mclass Pagination[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    public $currentPage;[m
[32m+[m[32m    public $perpage;[m
[32m+[m[32m    public $total;[m
[32m+[m[32m    public $countPages;[m
[32m+[m[32m    public $uri;[m
[32m+[m
[32m+[m[32m    public function __construct($page, $perpage, $total)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->perpage = $perpage;[m
[32m+[m[32m        $this->total = $total;[m
[32m+[m[32m        $this->countPages = $this->getCountPages();[m
[32m+[m[32m        $this->currentPage = $this->getCurrentPage($page);[m
[32m+[m[32m        $this->uri = $this->getParams();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function __toString()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->getHtml();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getHtml() {[m
[32m+[m[32m        $back = null; // ссылка НАЗАД[m
[32m+[m[32m        $forward = null; // ссылка ВПЕРЕД[m
[32m+[m[32m        $startpage = null; // ссылка В НАЧАЛО[m
[32m+[m[32m        $endpage = null; // ссылка В КОНЕЦ[m
[32m+[m[32m        $page2left = null; // вторая страница слева[m
[32m+[m[32m        $page1left = null; // первая страница слева[m
[32m+[m[32m        $page2right = null; // вторая страница справа[m
[32m+[m[32m        $page1right = null; // первая страница справа[m
[32m+[m
[32m+[m[32m        if ($this->currentPage > 1) {[m
[32m+[m[32m            $back = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage - 1) . "'><i class='fas fa-angle-left'></i></a></li>";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ($this->currentPage < $this->countPages) {[m
[32m+[m[32m            $forward = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage + 1) . "'><i class='fas fa-angle-right'></i></a></li>";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ($this->currentPage > 3) {[m
[32m+[m[32m            $startpage = "<li><a class='nav-link' href='{$this->uri}page=1'><i class='fas fa-arrow-left'></i></a></li>";[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->currentPage < ($this->countPages - 2)) {[m
[32m+[m[32m            $endpage = "<li><a class='nav-link' href='{$this->uri}page={$this->countPages}'><i class='fas fa-arrow-right'></i></a></li>";[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->currentPage - 2 > 0) {[m
[32m+[m[32m            $page2left = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage - 2) . "'>" . ($this->currentPage - 2) . "</a></li>";[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->currentPage - 1 > 0) {[m
[32m+[m[32m            $page1left = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage - 1) . "'>" . ($this->currentPage - 1) . "</a></li>";[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->currentPage + 1 <= $this->countPages) {[m
[32m+[m[32m            $page1right = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage + 1) . "'>" . ($this->currentPage + 1) . "</a></li>";[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($this->currentPage + 2 <= $this->countPages) {[m
[32m+[m[32m            $page2right = "<li><a class='nav-link' href='{$this->uri}page=" . ($this->currentPage + 2) . "'>" . ($this->currentPage + 2) . "</a></li>";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return '<ul class="pagination">' . $startpage . $back . $page2left . $page1left . '<li class="active nav-active"><a>' . $this->currentPage . '</a></li>' . $page1right . $page2right . $forward . $endpage . '</ul>';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getCountPages() {[m
[32m+[m[32m        return ceil($this->total / $this->perpage) ?: 1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getCurrentPage($page) {[m
[32m+[m[32m        if (!$page || $page < 1) $page = 1;[m
[32m+[m[32m        if ($page > $this->countPages) $page = $this->countPages;[m
[32m+[m[32m        return $page;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getStart() {[m
[32m+[m[32m        return ($this->currentPage - 1) * $this->perpage;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getParams() {[m
[32m+[m[32m        $url = $_SERVER['REQUEST_URI'];[m
[32m+[m[32m        $url = explode('?', $url);[m
[32m+[m[32m        $uri = $url[0] . '?';[m
[32m+[m[32m        if (isset($url[1]) && $url[1] != '') {[m
[32m+[m[32m            $params = explode('&', $url[1]);[m
[32m+[m[32m            foreach ($params as $param) {[m
[32m+[m[32m                if (!preg_match("#page=#", $param)) $uri .= "{$param}&amp;";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return $uri;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/framework/libs/functions.php b/vendor/framework/libs/functions.php[m
[1mnew file mode 100644[m
[1mindex 0000000..55a82f1[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/libs/functions.php[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mfunction debug($arr, $die = false) {[m
[32m+[m[32m    echo '<pre>' . print_r($arr, true) . '</pre>';[m
[32m+[m
[32m+[m[32m    if ($die) die();[m
[32m+[m[32m}[m
[32m+[m[32mfunction redirect($http = false) {[m
[32m+[m[32m    if ($http) {[m
[32m+[m[32m        $redirect = $http;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        $redirect = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '/';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    header("Location: $redirect");[m
[32m+[m[32m    exit();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction h($str) {[m
[32m+[m[32m    return htmlspecialchars($str, ENT_QUOTES);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction __($key) {[m
[32m+[m[32m    echo \framework\core\base\Lang::get($key);[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/vendor/framework/libs/rb.php b/vendor/framework/libs/rb.php[m
[1mnew file mode 100644[m
[1mindex 0000000..566c238[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/libs/rb.php[m
[36m@@ -0,0 +1,18047 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean Logging interface.[m
[32m+[m[32m * Provides a uniform and convenient logging[m
[32m+[m[32m * interface throughout RedBeanPHP.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBean/Logging.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Logger[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A logger (for PDO or OCI driver) needs to implement the log method.[m
[32m+[m	[32m * The log method will receive logging data. Note that the number of parameters is 0, this means[m
[32m+[m	[32m * all parameters are optional and the number may vary. This way the logger can be used in a very[m
[32m+[m	[32m * flexible way. Sometimes the logger is used to log a simple error message and in other[m
[32m+[m	[32m * situations sql and bindings are passed.[m
[32m+[m	[32m * The log method should be able to accept all kinds of parameters and data by using[m
[32m+[m	[32m * functions like func_num_args/func_get_args.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $message, ...[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function log();[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Logger {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Logger as Logger;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Logger. Provides a basic logging function for RedBeanPHP.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Logger.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass RDefault implements Logger[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Logger modes[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_LOGGER_ECHO  = 0;[m
[32m+[m	[32mconst C_LOGGER_ARRAY = 1;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $mode = 0;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $logs = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Default logger method logging to STDOUT.[m
[32m+[m	[32m * This is the default/reference implementation of a logger.[m
[32m+[m	[32m * This method will write the message value to STDOUT (screen) unless[m
[32m+[m	[32m * you have changed the mode of operation to C_LOGGER_ARRAY.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param $message (optional) message to log (might also be data or output)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function log()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( func_num_args() < 1 ) return;[m
[32m+[m
[32m+[m		[32mforeach ( func_get_args() as $argument ) {[m
[32m+[m			[32mif ( is_array( $argument ) ) {[m
[32m+[m				[32m$log = var_export( $argument, TRUE );[m
[32m+[m				[32mif ( $this->mode === self::C_LOGGER_ECHO ) {[m
[32m+[m					[32mecho $log;[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$this->logs[] = $log;[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32mif ( $this->mode === self::C_LOGGER_ECHO ) {[m
[32m+[m					[32mecho $argument;[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$this->logs[] = $argument;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( $this->mode === self::C_LOGGER_ECHO ) echo "<br>" . PHP_EOL;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the internal log array.[m
[32m+[m	[32m * The internal log array is where all log messages are stored.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getLogs()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->logs;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Clears the internal log array, removing all[m
[32m+[m	[32m * previously stored entries.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function clear()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->logs = array();[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects a logging mode.[m
[32m+[m	[32m * There are several options available.[m
[32m+[m	[32m *[m
[32m+[m	[32m * * C_LOGGER_ARRAY - log silently, stores entries in internal log array only[m
[32m+[m	[32m * * C_LOGGER_ECHO  - also forward log messages directly to STDOUT[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer $mode mode of operation for logging object[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setMode( $mode )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($mode !== self::C_LOGGER_ARRAY && $mode !== self::C_LOGGER_ECHO ) {[m
[32m+[m			[32mthrow new RedException( 'Invalid mode selected for logger, use C_LOGGER_ARRAY or C_LOGGER_ECHO.' );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->mode = $mode;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Searches for all log entries in internal log array[m
[32m+[m	[32m * for $needle and returns those entries.[m
[32m+[m	[32m * This method will return an array containing all matches for your[m
[32m+[m	[32m * search query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $needle phrase to look for in internal log array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function grep( $needle )[m
[32m+[m	[32m{[m
[32m+[m		[32m$found = array();[m
[32m+[m		[32mforeach( $this->logs as $logEntry ) {[m
[32m+[m			[32mif ( strpos( $logEntry, $needle ) !== FALSE ) $found[] = $logEntry;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $found;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Logger\RDefault {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Logger as Logger;[m
[32m+[m[32muse RedBeanPHP\Logger\RDefault as RDefault;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Debug logger.[m
[32m+[m[32m * A special logger for debugging purposes.[m
[32m+[m[32m * Provides debugging logging functions for RedBeanPHP.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Logger/RDefault/Debug.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Debug extends RDefault implements Logger[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $strLen = 40;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $noCLI = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $flagUseStringOnlyBinding = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles CLI override. By default debugging functions will[m
[32m+[m	[32m * output differently based on PHP_SAPI values. This function[m
[32m+[m	[32m * allows you to override the PHP_SAPI setting. If you set[m
[32m+[m	[32m * this to TRUE, CLI output will be supressed in favour of[m
[32m+[m	[32m * HTML output. So, to get HTML on the command line use[m
[32m+[m	[32m * setOverrideCLIOutput( TRUE ).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo CLI-override setting flag[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setOverrideCLIOutput( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$noCLI = $yesNo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Writes a query for logging with all bindings / params filled[m
[32m+[m	[32m * in.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $newSql      the query[m
[32m+[m	[32m * @param array  $newBindings the bindings to process (key-value pairs)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function writeQuery( $newSql, $newBindings )[m
[32m+[m	[32m{[m
[32m+[m		[32m//avoid str_replace collisions: slot1 and slot10 (issue 407).[m
[32m+[m		[32muksort( $newBindings, function( $a, $b ) {[m
[32m+[m			[32mreturn ( strlen( $b ) - strlen( $a ) );[m
[32m+[m		[32m} );[m
[32m+[m
[32m+[m		[32m$newStr = $newSql;[m
[32m+[m		[32mforeach( $newBindings as $slot => $value ) {[m
[32m+[m			[32mif ( strpos( $slot, ':' ) === 0 ) {[m
[32m+[m				[32m$newStr = str_replace( $slot, $this->fillInValue( $value ), $newStr );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $newStr;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Fills in a value of a binding and truncates the[m
[32m+[m	[32m * resulting string if necessary.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param mixed $value bound value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function fillInValue( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $value ) && count( $value ) == 2 ) {[m
[32m+[m			[32m$paramType = end( $value );[m
[32m+[m			[32m$value = reset( $value );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$paramType = NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( is_null( $value ) ) $value = 'NULL';[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseStringOnlyBinding ) $paramType = \PDO::PARAM_STR;[m
[32m+[m
[32m+[m		[32mif ( $paramType != \PDO::PARAM_INT && $paramType != \PDO::PARAM_STR ) {[m
[32m+[m			[32mif ( \RedBeanPHP\QueryWriter\AQueryWriter::canBeTreatedAsInt( $value ) || $value === 'NULL') {[m
[32m+[m				[32m$paramType = \PDO::PARAM_INT;[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$paramType = \PDO::PARAM_STR;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( strlen( $value ) > ( $this->strLen ) ) {[m
[32m+[m			[32m$value = substr( $value, 0, ( $this->strLen ) ).'... ';[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ($paramType === \PDO::PARAM_STR) {[m
[32m+[m			[32m$value = '\''.$value.'\'';[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dependending on the current mode of operation,[m
[32m+[m	[32m * this method will either log and output to STDIN or[m
[32m+[m	[32m * just log.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Depending on the value of constant PHP_SAPI this function[m
[32m+[m	[32m * will format output for console or HTML.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $str string to log or output and log[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function output( $str )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->logs[] = $str;[m
[32m+[m		[32mif ( !$this->mode ) {[m
[32m+[m			[32m$highlight = FALSE;[m
[32m+[m			[32m/* just a quick heuritsic to highlight schema changes */[m
[32m+[m			[32mif ( strpos( $str, 'CREATE' ) === 0[m
[32m+[m			[32m|| strpos( $str, 'ALTER' ) === 0[m
[32m+[m			[32m|| strpos( $str, 'DROP' ) === 0) {[m
[32m+[m				[32m$highlight = TRUE;[m
[32m+[m			[32m}[m
[32m+[m			[32mif (PHP_SAPI === 'cli' && !self::$noCLI) {[m
[32m+[m				[32mif ($highlight) echo "\e[91m";[m
[32m+[m				[32mecho $str, PHP_EOL;[m
[32m+[m				[32mecho "\e[39m";[m
[32m+[m			[32m} else {[m
[32m+[m				[32mif ($highlight) {[m
[32m+[m					[32mecho "<b style=\"color:red\">{$str}</b>";[m
[32m+[m				[32m} else {[m
[32m+[m					[32mecho $str;[m
[32m+[m				[32m}[m
[32m+[m				[32mecho '<br />';[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Normalizes the slots in an SQL string.[m
[32m+[m	[32m * Replaces question mark slots with :slot1 :slot2 etc.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql sql to normalize[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function normalizeSlots( $sql )[m
[32m+[m	[32m{[m
[32m+[m		[32m$newSql = $sql;[m
[32m+[m		[32m$i = 0;[m
[32m+[m		[32mwhile(strpos($newSql, '?') !== FALSE ){[m
[32m+[m			[32m$pos   = strpos( $newSql, '?' );[m
[32m+[m			[32m$slot  = ':slot'.$i;[m
[32m+[m			[32m$begin = substr( $newSql, 0, $pos );[m
[32m+[m			[32m$end   = substr( $newSql, $pos+1 );[m
[32m+[m			[32mif (PHP_SAPI === 'cli' && !self::$noCLI) {[m
[32m+[m				[32m$newSql = "{$begin}\e[32m{$slot}\e[39m{$end}";[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$newSql = "{$begin}<b style=\"color:green\">$slot</b>{$end}";[m
[32m+[m			[32m}[m
[32m+[m			[32m$i ++;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $newSql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Normalizes the bindings.[m
[32m+[m	[32m * Replaces numeric binding keys with :slot1 :slot2 etc.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $bindings bindings to normalize[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function normalizeBindings( $bindings )[m
[32m+[m	[32m{[m
[32m+[m		[32m$i = 0;[m
[32m+[m		[32m$newBindings = array();[m
[32m+[m		[32mforeach( $bindings as $key => $value ) {[m
[32m+[m			[32mif ( is_numeric($key) ) {[m
[32m+[m				[32m$newKey = ':slot'.$i;[m
[32m+[m				[32m$newBindings[$newKey] = $value;[m
[32m+[m				[32m$i++;[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$newBindings[$key] = $value;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $newBindings;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Logger method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Takes a number of arguments tries to create[m
[32m+[m	[32m * a proper debug log based on the available data.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function log()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( func_num_args() < 1 ) return;[m
[32m+[m
[32m+[m		[32m$sql = func_get_arg( 0 );[m
[32m+[m
[32m+[m		[32mif ( func_num_args() < 2) {[m
[32m+[m			[32m$bindings = array();[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$bindings = func_get_arg( 1 );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !is_array( $bindings ) ) {[m
[32m+[m			[32mreturn $this->output( $sql );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$newSql = $this->normalizeSlots( $sql );[m
[32m+[m		[32m$newBindings = $this->normalizeBindings( $bindings );[m
[32m+[m		[32m$newStr = $this->writeQuery( $newSql, $newBindings );[m
[32m+[m		[32m$this->output( $newStr );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the max string length for the parameter output in[m
[32m+[m	[32m * SQL queries. Set this value to a reasonable number to[m
[32m+[m	[32m * keep you SQL queries readable.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer $len string length[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setParamStringLength( $len = 20 )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->strLen = max(0, $len);[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Whether to bind all parameters as strings.[m
[32m+[m	[32m * If set to TRUE this will cause all integers to be bound as STRINGS.[m
[32m+[m	[32m * This will NOT affect NULL values.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo pass TRUE to bind all parameters as strings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setUseStringOnlyBinding( $yesNo = false )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->flagUseStringOnlyBinding = (boolean) $yesNo;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Interface for database drivers.[m
[32m+[m[32m * The Driver API conforms to the ADODB pseudo standard[m
[32m+[m[32m * for database drivers.[m
[32m+[m[32m *[m
[32m+[m[32m * @file       RedBeanPHP/Driver.php[m
[32m+[m[32m * @author     Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license    BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Driver[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Runs a query and fetches results as a multi dimensional array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetAll( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Runs a query and fetches results as a column.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetCol( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Runs a query and returns results as a single cell.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetOne( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Runs a query and returns results as an associative array[m
[32m+[m	[32m * indexed by the first column.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetAssocRow( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Runs a query and returns a flat array containing the values of[m
[32m+[m	[32m * one row.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetRow( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes SQL code and allows key-value binding.[m
[32m+[m	[32m * This function allows you to provide an array with values to bind[m
[32m+[m	[32m * to query parameters. For instance you can bind values to question[m
[32m+[m	[32m * marks in the query. Each value in the array corresponds to the[m
[32m+[m	[32m * question mark in the query that matches the position of the value in the[m
[32m+[m	[32m * array. You can also bind values using explicit keys, for instance[m
[32m+[m	[32m * array(":key"=>123) will bind the integer 123 to the key :key in the[m
[32m+[m	[32m * SQL. This method has no return value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array Affected Rows[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function Execute( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the latest insert ID if driver does support this[m
[32m+[m	[32m * feature.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetInsertID();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of rows affected by the most recent query[m
[32m+[m	[32m * if the currently selected driver driver supports this feature.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function Affected_Rows();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a cursor-like object from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings list of values to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetCursor( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles debug mode. In debug mode the driver will print all[m
[32m+[m	[32m * SQL to the screen together with some information about the[m
[32m+[m	[32m * results.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method is for more fine-grained control. Normally[m
[32m+[m	[32m * you should use the facade to start the query debugger for[m
[32m+[m	[32m * you. The facade will manage the object wirings necessary[m
[32m+[m	[32m * to use the debugging functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage (through facade):[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::debug( TRUE );[m
[32m+[m	[32m * ...rest of program...[m
[32m+[m	[32m * R::debug( FALSE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to use the RedBeanPHP[m
[32m+[m	[32m * query debugger through the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $trueFalse turn on/off[m
[32m+[m	[32m * @param Logger  $logger    logger instance[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setDebugMode( $tf, $customLogger );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Starts a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function CommitTrans();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Commits a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function StartTrans();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Rolls back a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function FailTrans();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Resets the internal Query Counter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function resetCounter();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of SQL queries processed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getQueryCount();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets initialization code for connection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param callable $code code[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setInitCode( $code );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the version string from the database server.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function DatabaseServerVersion();[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Driver {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Driver as Driver;[m
[32m+[m[32muse RedBeanPHP\Logger as Logger;[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQL;[m
[32m+[m[32muse RedBeanPHP\Logger\RDefault as RDefault;[m
[32m+[m[32muse RedBeanPHP\PDOCompatible as PDOCompatible;[m
[32m+[m[32muse RedBeanPHP\Cursor\PDOCursor as PDOCursor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PDO Driver[m
[32m+[m[32m * This Driver implements the RedBean Driver API.[m
[32m+[m[32m * for RedBeanPHP. This is the standard / default database driver[m
[32m+[m[32m * for RedBeanPHP.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/PDO.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community, Desfrenes[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) Desfrenes & Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass RPDO implements Driver[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $max;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $dsn;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $loggingEnabled = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Logger[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $logger = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var PDO[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $pdo;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $affectedRows;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $resultArray;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $connectInfo = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $isConnected = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var bool[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $flagUseStringOnlyBinding = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $queryCounter = 0;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $mysqlCharset = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $mysqlCollate = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $stringifyFetches = TRUE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $initSQL = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var callable[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $initCode = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Binds parameters. This method binds parameters to a PDOStatement for[m
[32m+[m	[32m * Query Execution. This method binds parameters as NULL, INTEGER or STRING[m
[32m+[m	[32m * and supports both named keys and question mark keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param PDOStatement $statement PDO Statement instance[m
[32m+[m	[32m * @param array        $bindings  values that need to get bound to the statement[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function bindParams( $statement, $bindings )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $bindings as $key => &$value ) {[m
[32m+[m			[32m$k = is_integer( $key ) ? $key + 1 : $key;[m
[32m+[m
[32m+[m			[32mif ( is_array( $value ) && count( $value ) == 2 ) {[m
[32m+[m				[32m$paramType = end( $value );[m
[32m+[m				[32m$value = reset( $value );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$paramType = NULL;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( is_null( $value ) ) {[m
[32m+[m				[32m$statement->bindValue( $k, NULL, \PDO::PARAM_NULL );[m
[32m+[m				[32mcontinue;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( $paramType != \PDO::PARAM_INT && $paramType != \PDO::PARAM_STR ) {[m
[32m+[m				[32mif ( !$this->flagUseStringOnlyBinding && AQueryWriter::canBeTreatedAsInt( $value ) && abs( $value ) <= $this->max ) {[m
[32m+[m					[32m$paramType = \PDO::PARAM_INT;[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$paramType = \PDO::PARAM_STR;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$statement->bindParam( $k, $value, $paramType );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method runs the actual SQL query and binds a list of parameters to the query.[m
[32m+[m	[32m * slots. The result of the query will be stored in the protected property[m
[32m+[m	[32m * $rs (always array). The number of rows affected (result of rowcount, if supported by database)[m
[32m+[m	[32m * is stored in protected property $affectedRows. If the debug flag is set[m
[32m+[m	[32m * this function will send debugging output to screen buffer.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      the SQL string to be send to database server[m
[32m+[m	[32m * @param array  $bindings the values that need to get bound to the query slots[m
[32m+[m	[32m * @param array  $options[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m * @throws SQL[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function runQuery( $sql, $bindings, $options = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32mif ( $this->loggingEnabled && $this->logger ) {[m
[32m+[m			[32m$this->logger->log( $sql, $bindings );[m
[32m+[m		[32m}[m
[32m+[m		[32mtry {[m
[32m+[m			[32mif ( strpos( 'pgsql', $this->dsn ) === 0 ) {[m
[32m+[m				[32mif (defined('\\PDO::PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT')) {[m
[32m+[m[41m                 [m			[32m$statement = @$this->pdo->prepare($sql, array(\PDO::PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT => TRUE));[m
[32m+[m[41m             [m			[32m} else {[m
[32m+[m[41m                 [m			[32m$statement = $this->pdo->prepare($sql);[m
[32m+[m[41m             [m			[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$statement = $this->pdo->prepare( $sql );[m
[32m+[m			[32m}[m
[32m+[m			[32m$this->bindParams( $statement, $bindings );[m
[32m+[m			[32m$statement->execute();[m
[32m+[m			[32m$this->queryCounter ++;[m
[32m+[m			[32m$this->affectedRows = $statement->rowCount();[m
[32m+[m			[32mif ( $statement->columnCount() ) {[m
[32m+[m				[32m$fetchStyle = ( isset( $options['fetchStyle'] ) ) ? $options['fetchStyle'] : NULL;[m
[32m+[m				[32mif ( isset( $options['noFetch'] ) && $options['noFetch'] ) {[m
[32m+[m					[32m$this->resultArray = array();[m
[32m+[m					[32mreturn $statement;[m
[32m+[m				[32m}[m
[32m+[m				[32mif ( is_null( $fetchStyle) ) {[m
[32m+[m					[32m$this->resultArray = $statement->fetchAll();[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$this->resultArray = $statement->fetchAll( $fetchStyle );[m
[32m+[m				[32m}[m
[32m+[m				[32mif ( $this->loggingEnabled && $this->logger ) {[m
[32m+[m					[32m$this->logger->log( 'resultset: ' . count( $this->resultArray ) . ' rows' );[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$this->resultArray = array();[m
[32m+[m			[32m}[m
[32m+[m		[32m} catch ( \PDOException $e ) {[m
[32m+[m			[32m//Unfortunately the code field is supposed to be int by default (php)[m
[32m+[m			[32m//So we need a property to convey the SQL State code.[m
[32m+[m			[32m$err = $e->getMessage();[m
[32m+[m			[32mif ( $this->loggingEnabled && $this->logger ) $this->logger->log( 'An error occurred: ' . $err );[m
[32m+[m			[32m$exception = new SQL( $err, 0, $e );[m
[32m+[m			[32m$exception->setSQLState( $e->getCode() );[m
[32m+[m			[32m$exception->setDriverDetails( $e->errorInfo );[m
[32m+[m			[32mthrow $exception;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Try to fix MySQL character encoding problems.[m
[32m+[m	[32m * MySQL < 5.5.3 does not support proper 4 byte unicode but they[m
[32m+[m	[32m * seem to have added it with version 5.5.3 under a different label: utf8mb4.[m
[32m+[m	[32m * We try to select the best possible charset based on your version data.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function setEncoding()[m
[32m+[m	[32m{[m
[32m+[m		[32m$driver = $this->pdo->getAttribute( \PDO::ATTR_DRIVER_NAME );[m
[32m+[m		[32mif ($driver === 'mysql') {[m
[32m+[m			[32m$charset = $this->hasCap( 'utf8mb4' ) ? 'utf8mb4' : 'utf8';[m
[32m+[m			[32m$collate = $this->hasCap( 'utf8mb4_520' ) ? '_unicode_520_ci' : '_unicode_ci';[m
[32m+[m			[32m$this->pdo->setAttribute(\PDO::MYSQL_ATTR_INIT_COMMAND, 'SET NAMES '. $charset ); //on every re-connect[m
[32m+[m			[32m/* #624 removed space before SET NAMES because it causes trouble with ProxySQL */[m
[32m+[m			[32m$this->pdo->exec('SET NAMES '. $charset); //also for current connection[m
[32m+[m			[32m$this->mysqlCharset = $charset;[m
[32m+[m			[32m$this->mysqlCollate = $charset . $collate;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determine if a database supports a particular feature.[m
[32m+[m	[32m * Currently this function can be used to detect the following features:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - utf8mb4[m
[32m+[m	[32m * - utf8mb4 520[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $this->hasCap( 'utf8mb4_520' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * By default, RedBeanPHP uses this method under the hood to make sure[m
[32m+[m	[32m * you use the latest UTF8 encoding possible for your database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param $db_cap identifier of database capability[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return int|false Whether the database feature is supported, FALSE otherwise.[m
[32m+[m	[32m **/[m
[32m+[m	[32mprotected function hasCap( $db_cap )[m
[32m+[m	[32m{[m
[32m+[m		[32m$compare = FALSE;[m
[32m+[m		[32m$version = $this->pdo->getAttribute( \PDO::ATTR_SERVER_VERSION );[m
[32m+[m		[32mswitch ( strtolower( $db_cap ) ) {[m
[32m+[m			[32mcase 'utf8mb4':[m
[32m+[m				[32m//oneliner, to boost code coverage (coverage does not span versions)[m
[32m+[m				[32mif ( version_compare( $version, '5.5.3', '<' ) ) { return FALSE; }[m
[32m+[m				[32m$client_version = $this->pdo->getAttribute(\PDO::ATTR_CLIENT_VERSION );[m
[32m+[m				[32m/*[m
[32m+[m				[32m * libmysql has supported utf8mb4 since 5.5.3, same as the MySQL server.[m
[32m+[m				[32m * mysqlnd has supported utf8mb4 since 5.0.9.[m
[32m+[m				[32m */[m
[32m+[m				[32mif ( strpos( $client_version, 'mysqlnd' ) !== FALSE ) {[m
[32m+[m					[32m$client_version = preg_replace( '/^\D+([\d.]+).*/', '$1', $client_version );[m
[32m+[m					[32m$compare = version_compare( $client_version, '5.0.9', '>=' );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$compare = version_compare( $client_version, '5.5.3', '>=' );[m
[32m+[m				[32m}[m
[32m+[m			[32mbreak;[m
[32m+[m			[32mcase 'utf8mb4_520':[m
[32m+[m				[32m$compare = version_compare( $version, '5.6', '>=' );[m
[32m+[m			[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $compare;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor. You may either specify dsn, user and password or[m
[32m+[m	[32m * just give an existing PDO connection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $driver = new RPDO( $dsn, $user, $password );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to create a driver[m
[32m+[m	[32m * instance from a database connection string (dsn), a username[m
[32m+[m	[32m * and a password. It's also possible to pass a PDO object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $driver = new RPDO( $existingConnection );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The second example shows how to create an RPDO instance[m
[32m+[m	[32m * from an existing PDO object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|object $dsn  database connection string[m
[32m+[m	[32m * @param string        $user optional, usename to sign in[m
[32m+[m	[32m * @param string        $pass optional, password for connection login[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( $dsn, $user = NULL, $pass = NULL, $options = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_object( $dsn ) ) {[m
[32m+[m			[32m$this->pdo = $dsn;[m
[32m+[m			[32m$this->isConnected = TRUE;[m
[32m+[m			[32m$this->setEncoding();[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_ERRMODE,\PDO::ERRMODE_EXCEPTION );[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_DEFAULT_FETCH_MODE,\PDO::FETCH_ASSOC );[m
[32m+[m			[32m// make sure that the dsn at least contains the type[m
[32m+[m			[32m$this->dsn = $this->getDatabaseType();[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$this->dsn = $dsn;[m
[32m+[m			[32m$this->connectInfo = array( 'pass' => $pass, 'user' => $user );[m
[32m+[m			[32mif (is_array($options)) $this->connectInfo['options'] = $options;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m//PHP 5.3 PDO SQLite has a bug with large numbers:[m
[32m+[m		[32mif ( ( strpos( $this->dsn, 'sqlite' ) === 0 && PHP_MAJOR_VERSION === 5 && PHP_MINOR_VERSION === 3 ) ||  defined('HHVM_VERSION') || $this->dsn === 'test-sqlite-53' ) {[m
[32m+[m			[32m$this->max = 2147483647; //otherwise you get -2147483648 ?! demonstrated in build #603 on Travis.[m
[32m+[m		[32m} elseif ( strpos( $this->dsn, 'cubrid' ) === 0 ) {[m
[32m+[m			[32m$this->max = 2147483647; //bindParam in pdo_cubrid also fails...[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$this->max = PHP_INT_MAX; //the normal value of course (makes it possible to use large numbers in LIMIT clause)[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets PDO in stringify fetch mode.[m
[32m+[m	[32m * If set to TRUE, this method will make sure all data retrieved from[m
[32m+[m	[32m * the database will be fetched as a string. Default: TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To set it to FALSE...[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::getDatabaseAdapter()->getDatabase()->stringifyFetches( FALSE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Important![m
[32m+[m	[32m * Note, this method only works if you set the value BEFORE the connection[m
[32m+[m	[32m * has been establish. Also, this setting ONLY works with SOME drivers.[m
[32m+[m	[32m * It's up to the driver to honour this setting.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $bool[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function stringifyFetches( $bool ) {[m
[32m+[m		[32m$this->stringifyFetches = $bool;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the best possible encoding for MySQL based on version data.[m
[32m+[m	[32m * This method can be used to obtain the best character set parameters[m
[32m+[m	[32m * possible for your database when constructing a table creation query[m
[32m+[m	[32m * containing clauses like:  CHARSET=... COLLATE=...[m
[32m+[m	[32m * This is a MySQL-specific method and not part of the driver interface.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $charset_collate = $this->adapter->getDatabase()->getMysqlEncoding( TRUE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $retCol pass TRUE to return both charset/collate[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string|array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getMysqlEncoding( $retCol = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif( $retCol )[m
[32m+[m			[32mreturn array( 'charset' => $this->mysqlCharset, 'collate' => $this->mysqlCollate );[m
[32m+[m		[32mreturn $this->mysqlCharset;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Whether to bind all parameters as strings.[m
[32m+[m	[32m * If set to TRUE this will cause all integers to be bound as STRINGS.[m
[32m+[m	[32m * This will NOT affect NULL values.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo pass TRUE to bind all parameters as strings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setUseStringOnlyBinding( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->flagUseStringOnlyBinding = (boolean) $yesNo;[m
[32m+[m		[32mif ( $this->loggingEnabled && $this->logger && method_exists($this->logger,'setUseStringOnlyBinding')) {[m
[32m+[m			[32m$this->logger->setUseStringOnlyBinding( $this->flagUseStringOnlyBinding );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the maximum value to be bound as integer, normally[m
[32m+[m	[32m * this value equals PHP's MAX INT constant, however sometimes[m
[32m+[m	[32m * PDO driver bindings cannot bind large integers as integers.[m
[32m+[m	[32m * This method allows you to manually set the max integer binding[m
[32m+[m	[32m * value to manage portability/compatibility issues among different[m
[32m+[m	[32m * PHP builds. This method will return the old value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer $max maximum value for integer bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setMaxIntBind( $max )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_integer( $max ) ) throw new RedException( 'Parameter has to be integer.' );[m
[32m+[m		[32m$oldMax = $this->max;[m
[32m+[m		[32m$this->max = $max;[m
[32m+[m		[32mreturn $oldMax;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets initialization code to execute upon connecting.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param callable $code[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setInitCode($code)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->initCode= $code;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Establishes a connection to the database using PHP\PDO[m
[32m+[m	[32m * functionality. If a connection has already been established this[m
[32m+[m	[32m * method will simply return directly. This method also turns on[m
[32m+[m	[32m * UTF8 for the database and PDO-ERRMODE-EXCEPTION as well as[m
[32m+[m	[32m * PDO-FETCH-ASSOC.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function connect()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->isConnected ) return;[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$user = $this->connectInfo['user'];[m
[32m+[m			[32m$pass = $this->connectInfo['pass'];[m
[32m+[m			[32m$options = array();[m
[32m+[m			[32mif (isset($this->connectInfo['options']) && is_array($this->connectInfo['options'])) {[m
[32m+[m				[32m$options = $this->connectInfo['options'];[m
[32m+[m			[32m}[m
[32m+[m			[32m$this->pdo = new \PDO( $this->dsn, $user, $pass, $options );[m
[32m+[m			[32m$this->setEncoding();[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_STRINGIFY_FETCHES, $this->stringifyFetches );[m
[32m+[m			[32m//cant pass these as argument to constructor, CUBRID driver does not understand...[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION );[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_DEFAULT_FETCH_MODE, \PDO::FETCH_ASSOC );[m
[32m+[m			[32m$this->isConnected = TRUE;[m
[32m+[m			[32m/* run initialisation query if any */[m
[32m+[m			[32mif ( $this->initSQL !== NULL ) {[m
[32m+[m				[32m$this->Execute( $this->initSQL );[m
[32m+[m				[32m$this->initSQL = NULL;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( $this->initCode !== NULL ) {[m
[32m+[m				[32m$code = $this->initCode;[m
[32m+[m				[32m$code( $this->pdo->getAttribute( \PDO::ATTR_SERVER_VERSION ) );[m
[32m+[m			[32m}[m
[32m+[m		[32m} catch ( \PDOException $exception ) {[m
[32m+[m			[32m$matches = array();[m
[32m+[m			[32m$dbname  = ( preg_match( '/dbname=(\w+)/', $this->dsn, $matches ) ) ? $matches[1] : '?';[m
[32m+[m			[32mthrow new \PDOException( 'Could not connect to database (' . $dbname . ').', $exception->getCode() );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Directly sets PDO instance into driver.[m
[32m+[m	[32m * This method might improve performance, however since the driver does[m
[32m+[m	[32m * not configure this instance terrible things may happen... only use[m
[32m+[m	[32m * this method if you are an expert on RedBeanPHP, PDO and UTF8 connections and[m
[32m+[m	[32m * you know your database server VERY WELL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * - connected     TRUE|FALSE (treat this instance as connected, default: TRUE)[m
[32m+[m	[32m * - setEncoding   TRUE|FALSE (let RedBeanPHP set encoding for you, default: TRUE)[m
[32m+[m	[32m * - setAttributes TRUE|FALSE (let RedBeanPHP set attributes for you, default: TRUE)*[m
[32m+[m	[32m * - setDSNString  TRUE|FALSE (extract DSN string from PDO instance, default: TRUE)[m
[32m+[m	[32m * - stringFetch   TRUE|FALSE (whether you want to stringify fetches or not, default: TRUE)[m
[32m+[m	[32m * - runInitCode   TRUE|FALSE (run init code if any, default: TRUE)[m
[32m+[m	[32m *[m
[32m+[m	[32m * *attributes:[m
[32m+[m	[32m * - RedBeanPHP will ask database driver to throw Exceptions on errors (recommended for compatibility)[m
[32m+[m[32m         * - RedBeanPHP will ask database driver to use associative arrays when fetching (recommended for compatibility)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param PDO     $pdo       PDO instance[m
[32m+[m	[32m * @param array   $options   Options to apply[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setPDO( \PDO $pdo, $options = array() ) {[m
[32m+[m		[32m$this->pdo = $pdo;[m
[32m+[m
[32m+[m		[32m$connected     = TRUE;[m
[32m+[m		[32m$setEncoding   = TRUE;[m
[32m+[m		[32m$setAttributes = TRUE;[m
[32m+[m		[32m$setDSNString  = TRUE;[m
[32m+[m		[32m$runInitCode   = TRUE;[m
[32m+[m		[32m$stringFetch   = TRUE;[m
[32m+[m
[32m+[m		[32mif ( isset($options['connected']) )     $connected     = $options['connected'];[m
[32m+[m		[32mif ( isset($options['setEncoding']) )   $setEncoding   = $options['setEncoding'];[m
[32m+[m		[32mif ( isset($options['setAttributes']) ) $setAttributes = $options['setAttributes'];[m
[32m+[m		[32mif ( isset($options['setDSNString']) )  $setDSNString  = $options['setDSNString'];[m
[32m+[m		[32mif ( isset($options['runInitCode']) )   $runInitCode   = $options['runInitCode'];[m
[32m+[m		[32mif ( isset($options['stringFetch']) )   $stringFetch   = $options['stringFetch'];[m
[32m+[m
[32m+[m		[32mif ($connected) $this->isConnected = $connected;[m
[32m+[m		[32mif ($setEncoding) $this->setEncoding();[m
[32m+[m		[32mif ($setAttributes) {[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_ERRMODE,\PDO::ERRMODE_EXCEPTION );[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_DEFAULT_FETCH_MODE,\PDO::FETCH_ASSOC );[m
[32m+[m			[32m$this->pdo->setAttribute( \PDO::ATTR_STRINGIFY_FETCHES, $stringFetch );[m
[32m+[m		[32m}[m
[32m+[m		[32mif ($runInitCode) {[m
[32m+[m			[32m/* run initialisation query if any */[m
[32m+[m			[32mif ( $this->initSQL !== NULL ) {[m
[32m+[m				[32m$this->Execute( $this->initSQL );[m
[32m+[m				[32m$this->initSQL = NULL;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( $this->initCode !== NULL ) {[m
[32m+[m				[32m$code = $this->initCode;[m
[32m+[m				[32m$code( $this->pdo->getAttribute( \PDO::ATTR_SERVER_VERSION ) );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mif ($setDSNString) $this->dsn = $this->getDatabaseType();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetAll[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetAll( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->runQuery( $sql, $bindings );[m
[32m+[m		[32mreturn $this->resultArray;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetAssocRow[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetAssocRow( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->runQuery( $sql, $bindings, array([m
[32m+[m				[32m'fetchStyle' => \PDO::FETCH_ASSOC[m
[32m+[m			[32m)[m
[32m+[m		[32m);[m
[32m+[m		[32mreturn $this->resultArray;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetCol[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetCol( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$rows = $this->GetAll( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( empty( $rows ) || !is_array( $rows ) ) {[m
[32m+[m			[32mreturn array();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$cols = array();[m
[32m+[m		[32mforeach ( $rows as $row ) {[m
[32m+[m			[32m$cols[] = reset( $row );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $cols;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetOne[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetOne( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$arr = $this->GetAll( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( empty( $arr[0] ) || !is_array( $arr[0] ) ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn reset( $arr[0] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Alias for getOne().[m
[32m+[m	[32m * Backward compatibility.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL[m
[32m+[m	[32m * @param array  $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetCell( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->GetOne( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetRow[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetRow( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$arr = $this->GetAll( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( is_array( $arr ) && count( $arr ) ) {[m
[32m+[m			[32mreturn reset( $arr );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn array();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::Excecute[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function Execute( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->runQuery( $sql, $bindings );[m
[32m+[m		[32mreturn $this->affectedRows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetInsertID[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetInsertID()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m
[32m+[m		[32mreturn (int) $this->pdo->lastInsertId();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::GetCursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function GetCursor( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$statement = $this->runQuery( $sql, $bindings, array( 'noFetch' => TRUE ) );[m
[32m+[m		[32m$cursor = new PDOCursor( $statement, \PDO::FETCH_ASSOC );[m
[32m+[m		[32mreturn $cursor;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::Affected_Rows[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function Affected_Rows()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32mreturn (int) $this->affectedRows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::setDebugMode[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setDebugMode( $tf, $logger = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32m$this->loggingEnabled = (bool) $tf;[m
[32m+[m		[32mif ( $this->loggingEnabled and !$logger ) {[m
[32m+[m			[32m$logger = new RDefault();[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->setLogger( $logger );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Injects Logger object.[m
[32m+[m	[32m * Sets the logger instance you wish to use.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method is for more fine-grained control. Normally[m
[32m+[m	[32m * you should use the facade to start the query debugger for[m
[32m+[m	[32m * you. The facade will manage the object wirings necessary[m
[32m+[m	[32m * to use the debugging functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage (through facade):[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::debug( TRUE );[m
[32m+[m	[32m * ...rest of program...[m
[32m+[m	[32m * R::debug( FALSE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to use the RedBeanPHP[m
[32m+[m	[32m * query debugger through the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Logger $logger the logger instance to be used for logging[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setLogger( Logger $logger )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->logger = $logger;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gets Logger object.[m
[32m+[m	[32m * Returns the currently active Logger instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Logger[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getLogger()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->logger;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::StartTrans[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function StartTrans()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32m$this->pdo->beginTransaction();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::CommitTrans[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function CommitTrans()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32m$this->pdo->commit();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Driver::FailTrans[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function FailTrans()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32m$this->pdo->rollback();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the name of database driver for PDO.[m
[32m+[m	[32m * Uses the PDO attribute DRIVER NAME to obtain the name of the[m
[32m+[m	[32m * PDO driver. Use this method to identify the current PDO driver[m
[32m+[m	[32m * used to provide access to the database. Example of a database[m
[32m+[m	[32m * driver string:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * mysql[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::getDatabaseAdapter()->getDatabase()->getDatabaseType();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above prints the current database driver string to[m
[32m+[m	[32m * stdout.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that this is a driver-specific method, not part of the[m
[32m+[m	[32m * driver interface. This method might not be available in other[m
[32m+[m	[32m * drivers since it relies on PDO.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabaseType()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32mreturn $this->pdo->getAttribute(\PDO::ATTR_DRIVER_NAME );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the version identifier string of the database client.[m
[32m+[m	[32m * This method can be used to identify the currently installed[m
[32m+[m	[32m * database client. Note that this method will also establish a connection[m
[32m+[m	[32m * (because this is required to obtain the version information).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example of a version string:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * mysqlnd 5.0.12-dev - 20150407 - $Id: b5c5906d452ec590732a93b051f3827e02749b83 $[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::getDatabaseAdapter()->getDatabase()->getDatabaseVersion();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above will print the version string to stdout.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that this is a driver-specific method, not part of the[m
[32m+[m	[32m * driver interface. This method might not be available in other[m
[32m+[m	[32m * drivers since it relies on PDO.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To obtain the database server version, use getDatabaseServerVersion()[m
[32m+[m	[32m * instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabaseVersion()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32mreturn $this->pdo->getAttribute(\PDO::ATTR_CLIENT_VERSION );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the underlying PHP PDO instance.[m
[32m+[m	[32m * For some low-level database operations you'll need access to the PDO[m
[32m+[m	[32m * object. Not that this method is only available in RPDO and other[m
[32m+[m	[32m * PDO based database drivers for RedBeanPHP. Other drivers may not have[m
[32m+[m	[32m * a method like this. The following example demonstrates how to obtain[m
[32m+[m	[32m * a reference to the PDO instance from the facade:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $pdo = R::getDatabaseAdapter()->getDatabase()->getPDO();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return PDO[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getPDO()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->connect();[m
[32m+[m		[32mreturn $this->pdo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Closes the database connection.[m
[32m+[m	[32m * While database connections are closed automatically at the end of the PHP script,[m
[32m+[m	[32m * closing database connections is generally recommended to improve performance.[m
[32m+[m	[32m * Closing a database connection will immediately return the resources to PHP.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::setup( ... );[m
[32m+[m	[32m * ... do stuff ...[m
[32m+[m	[32m * R::close();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->pdo         = NULL;[m
[32m+[m		[32m$this->isConnected = FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns TRUE if the current PDO instance is connected.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isConnected()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->isConnected && $this->pdo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles logging, enables or disables logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $enable TRUE to enable logging[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setEnableLogging( $enable )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->loggingEnabled = (boolean) $enable;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Resets the query counter.[m
[32m+[m	[32m * The query counter can be used to monitor the number[m
[32m+[m	[32m * of database queries that have[m
[32m+[m	[32m * been processed according to the database driver. You can use this[m
[32m+[m	[32m * to monitor the number of queries required to render a page.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::resetQueryCount();[m
[32m+[m	[32m * echo R::getQueryCount() . ' queries processed.';[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function resetCounter()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->queryCounter = 0;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of SQL queries processed.[m
[32m+[m	[32m * This method returns the number of database queries that have[m
[32m+[m	[32m * been processed according to the database driver. You can use this[m
[32m+[m	[32m * to monitor the number of queries required to render a page.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::getQueryCount() . ' queries processed.';[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getQueryCount()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->queryCounter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the maximum value treated as integer parameter[m
[32m+[m	[32m * binding.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method is mainly for testing purposes but it can help[m
[32m+[m	[32m * you solve some issues relating to integer bindings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getIntegerBindingMax()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->max;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets a query to be executed upon connecting to the database.[m
[32m+[m	[32m * This method provides an opportunity to configure the connection[m
[32m+[m	[32m * to a database through an SQL-based interface. Objects can provide[m
[32m+[m	[32m * an SQL string to be executed upon establishing a connection to[m
[32m+[m	[32m * the database. This has been used to solve issues with default[m
[32m+[m	[32m * foreign key settings in SQLite3 for instance, see Github issues:[m
[32m+[m	[32m * #545 and #548.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql SQL query to run upon connecting to database[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setInitQuery( $sql ) {[m
[32m+[m		[32m$this->initSQL = $sql;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the version string from the database server.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function DatabaseServerVersion() {[m
[32m+[m		[32mreturn trim( strval( $this->pdo->getAttribute(\PDO::ATTR_SERVER_VERSION) ) );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PHP 5.3 compatibility[m
[32m+[m[32m * We extend JsonSerializable to avoid namespace conflicts,[m
[32m+[m[32m * can't define interface with special namespace in PHP[m
[32m+[m[32m */[m
[32m+[m[32mif (interface_exists('\JsonSerializable')) { interface Jsonable extends \JsonSerializable {}; } else { interface Jsonable {}; }[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * OODBBean (Object Oriented DataBase Bean).[m
[32m+[m[32m *[m
[32m+[m[32m * to exchange information with the database. A bean represents[m
[32m+[m[32m * a single table row and offers generic services for interaction[m
[32m+[m[32m * with databases systems as well as some meta-data.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/OODBBean.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m * @desc    OODBBean represents a bean. RedBeanPHP uses beans[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass OODBBean implements \IteratorAggregate,\ArrayAccess,\Countable,Jsonable[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * FUSE error modes.[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_ERR_IGNORE    = FALSE;[m
[32m+[m	[32mconst C_ERR_LOG       = 1;[m
[32m+[m	[32mconst C_ERR_NOTICE    = 2;[m
[32m+[m	[32mconst C_ERR_WARN      = 3;[m
[32m+[m	[32mconst C_ERR_EXCEPTION = 4;[m
[32m+[m	[32mconst C_ERR_FUNC      = 5;[m
[32m+[m	[32mconst C_ERR_FATAL     = 6;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $useFluidCount = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $convertArraysToJSON = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $errorHandlingFUSE = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var callable|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $errorHandler = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $aliases = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * If this is set to TRUE, the __toString function will[m
[32m+[m	[32m * encode all properties as UTF-8 to repair invalid UTF-8[m
[32m+[m	[32m * encodings and prevent exceptions (which are uncatchable from within[m
[32m+[m	[32m * a __toString-function).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $enforceUTF8encoding = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This is where the real properties of the bean live. They are stored and retrieved[m
[32m+[m	[32m * by the magic getter and setter (__get and __set).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array $properties[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $properties = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Here we keep the meta data of a bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $__info = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The BeanHelper allows the bean to access the toolbox objects to implement[m
[32m+[m	[32m * rich functionality, otherwise you would have to do everything with R or[m
[32m+[m	[32m * external objects.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var BeanHelper[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $beanHelper = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var null[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $fetchType = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $withSql = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $withParams = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $aliasName = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $via = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $noLoad = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $all = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * If fluid count is set to TRUE then $bean->ownCount() will[m
[32m+[m	[32m * return 0 if the table does not exists.[m
[32m+[m	[32m * Only for backward compatibility.[m
[32m+[m	[32m * Returns previouds value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $toggle toggle[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useFluidCount( $toggle )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = self::$useFluidCount;[m
[32m+[m		[32mself::$useFluidCount = $toggle;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * If this is set to TRUE, the __toString function will[m
[32m+[m	[32m * encode all properties as UTF-8 to repair invalid UTF-8[m
[32m+[m	[32m * encodings and prevent exceptions (which are uncatchable from within[m
[32m+[m	[32m * a __toString-function).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $toggle TRUE to enforce UTF-8 encoding (slower)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32m public static function setEnforceUTF8encoding( $toggle )[m
[32m+[m	[32m {[m
[32m+[m		[32m self::$enforceUTF8encoding = (boolean) $toggle;[m
[32m+[m	[32m }[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the error mode for FUSE.[m
[32m+[m	[32m * What to do if a FUSE model method does not exist?[m
[32m+[m	[32m * You can set the following options:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * OODBBean::C_ERR_IGNORE (default), ignores the call, returns NULL[m
[32m+[m	[32m * * OODBBean::C_ERR_LOG, logs the incident using error_log[m
[32m+[m	[32m * * OODBBean::C_ERR_NOTICE, triggers a E_USER_NOTICE[m
[32m+[m	[32m * * OODBBean::C_ERR_WARN, triggers a E_USER_WARNING[m
[32m+[m	[32m * * OODBBean::C_ERR_EXCEPTION, throws an exception[m
[32m+[m	[32m * * OODBBean::C_ERR_FUNC, allows you to specify a custom handler (function)[m
[32m+[m	[32m * * OODBBean::C_ERR_FATAL, triggers a E_USER_ERROR[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * Custom handler method signature: handler( array ([m
[32m+[m	[32m * 	'message' => string[m
[32m+[m	[32m * 	'bean' => OODBBean[m
[32m+[m	[32m * 	'method' => string[m
[32m+[m	[32m * ) )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method returns the old mode and handler as an array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer       $mode error handling mode[m
[32m+[m	[32m * @param callable|NULL $func custom handler[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setErrorHandlingFUSE($mode, $func = NULL) {[m
[32m+[m		[32mif ([m
[32m+[m			[32m   $mode !== self::C_ERR_IGNORE[m
[32m+[m			[32m&& $mode !== self::C_ERR_LOG[m
[32m+[m			[32m&& $mode !== self::C_ERR_NOTICE[m
[32m+[m			[32m&& $mode !== self::C_ERR_WARN[m
[32m+[m			[32m&& $mode !== self::C_ERR_EXCEPTION[m
[32m+[m			[32m&& $mode !== self::C_ERR_FUNC[m
[32m+[m			[32m&& $mode !== self::C_ERR_FATAL[m
[32m+[m		[32m) throw new \Exception( 'Invalid error mode selected' );[m
[32m+[m
[32m+[m		[32mif ( $mode === self::C_ERR_FUNC && !is_callable( $func ) ) {[m
[32m+[m			[32mthrow new \Exception( 'Invalid error handler' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$old = array( self::$errorHandlingFUSE, self::$errorHandler );[m
[32m+[m		[32mself::$errorHandlingFUSE = $mode;[m
[32m+[m		[32mif ( is_callable( $func ) ) {[m
[32m+[m			[32mself::$errorHandler = $func;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mself::$errorHandler = NULL;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles array to JSON conversion. If set to TRUE any array[m
[32m+[m	[32m * set to a bean property that's not a list will be turned into[m
[32m+[m	[32m * a JSON string. Used together with AQueryWriter::useJSONColumns this[m
[32m+[m	[32m * extends the data type support for JSON columns. Returns the previous[m
[32m+[m	[32m * value of the flag.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag flag[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function convertArraysToJSON( $flag )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = self::$convertArraysToJSON;[m
[32m+[m		[32mself::$convertArraysToJSON = $flag;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets global aliases.[m
[32m+[m	[32m * Registers a batch of aliases in one go. This works the same as[m
[32m+[m	[32m * fetchAs and setAutoResolve but explicitly. For instance if you register[m
[32m+[m	[32m * the alias 'cover' for 'page' a property containing a reference to a[m
[32m+[m	[32m * page bean called 'cover' will correctly return the page bean and not[m
[32m+[m	[32m * a (non-existant) cover bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::aliases( array( 'cover' => 'page' ) );[m
[32m+[m	[32m * $book = R::dispense( 'book' );[m
[32m+[m	[32m * $page = R::dispense( 'page' );[m
[32m+[m	[32m * $book->cover = $page;[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * $book = $book->fresh();[m
[32m+[m	[32m * $cover = $book->cover;[m
[32m+[m	[32m * echo $cover->getMeta( 'type' ); //page[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The format of the aliases registration array is:[m
[32m+[m	[32m *[m
[32m+[m	[32m * {alias} => {actual type}[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we use:[m
[32m+[m	[32m *[m
[32m+[m	[32m * cover => page[m
[32m+[m	[32m *[m
[32m+[m	[32m * From that point on, every bean reference to a cover[m
[32m+[m	[32m * will return a 'page' bean. Note that with autoResolve this[m
[32m+[m	[32m * feature along with fetchAs() is no longer very important, although[m
[32m+[m	[32m * relying on explicit aliases can be a bit faster.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $list list of global aliases to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function aliases( $list )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$aliases = $list;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Return list of global aliases[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getAliases()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$aliases;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets a meta property for all beans. This is a quicker way to set[m
[32m+[m	[32m * the meta properties for a collection of beans because this method[m
[32m+[m	[32m * can directly access the property arrays of the beans.[m
[32m+[m	[32m * This method returns the beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array  $beans    beans to set the meta property of[m
[32m+[m	[32m * @param string $property property to set[m
[32m+[m	[32m * @param mixed  $value    value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setMetaAll( $beans, $property, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach( $beans as $bean ) {[m
[32m+[m			[32mif ( $bean instanceof OODBBean ) $bean->__info[ $property ] = $value;[m
[32m+[m			[32mif ( $property == 'type' && !empty($bean->beanHelper)) {[m
[32m+[m				[32m$bean->__info['model'] = $bean->beanHelper->getModelForBean( $bean );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Accesses the shared list of a bean.[m
[32m+[m	[32m * To access beans that have been associated with the current bean[m
[32m+[m	[32m * using a many-to-many relationship use sharedXList where[m
[32m+[m	[32m * X is the type of beans in the list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $person = R::load( 'person', $id );[m
[32m+[m	[32m * $friends = $person->sharedFriendList;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The code snippet above demonstrates how to obtain all beans of[m
[32m+[m	[32m * type 'friend' that have associated using an N-M relation.[m
[32m+[m	[32m * This is a private method used by the magic getter / accessor.[m
[32m+[m	[32m * The example illustrates usage through these accessors.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type    the name of the list you want to retrieve[m
[32m+[m	[32m * @param OODB    $redbean instance of the RedBeanPHP OODB class[m
[32m+[m	[32m * @param ToolBox $toolbox instance of ToolBox (to get access to core objects)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getSharedList( $type, $redbean, $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$writer = $toolbox->getWriter();[m
[32m+[m		[32mif ( $this->via ) {[m
[32m+[m			[32m$oldName = $writer->getAssocTable( array( $this->__info['type'], $type ) );[m
[32m+[m			[32mif ( $oldName !== $this->via ) {[m
[32m+[m				[32m//set the new renaming rule[m
[32m+[m				[32m$writer->renameAssocTable( $oldName, $this->via );[m
[32m+[m			[32m}[m
[32m+[m			[32m$this->via = NULL;[m
[32m+[m		[32m}[m
[32m+[m		[32m$beans = array();[m
[32m+[m		[32mif ($this->getID()) {[m
[32m+[m			[32m$type             = $this->beau( $type );[m
[32m+[m			[32m$assocManager     = $redbean->getAssociationManager();[m
[32m+[m			[32m$beans            = $assocManager->related( $this, $type, $this->withSql, $this->withParams );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Accesses the ownList. The 'own' list contains beans[m
[32m+[m	[32m * associated using a one-to-many relation. The own-lists can[m
[32m+[m	[32m * be accessed through the magic getter/setter property[m
[32m+[m	[32m * ownXList where X is the type of beans in that list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book = R::load( 'book', $id );[m
[32m+[m	[32m * $pages = $book->ownPageList;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above demonstrates how to access the[m
[32m+[m	[32m * pages associated with the book. Since this is a private method[m
[32m+[m	[32m * meant to be used by the magic accessors, the example uses the[m
[32m+[m	[32m * magic getter instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string      $type   name of the list you want to retrieve[m
[32m+[m	[32m * @param OODB        $oodb   The RB OODB object database instance[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getOwnList( $type, $redbean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $this->beau( $type );[m
[32m+[m		[32mif ( $this->aliasName ) {[m
[32m+[m			[32m$parentField = $this->aliasName;[m
[32m+[m			[32m$myFieldLink = $parentField . '_id';[m
[32m+[m
[32m+[m			[32m$this->__info['sys.alias.' . $type] = $this->aliasName;[m
[32m+[m
[32m+[m			[32m$this->aliasName = NULL;[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$parentField = $this->__info['type'];[m
[32m+[m			[32m$myFieldLink = $parentField . '_id';[m
[32m+[m		[32m}[m
[32m+[m		[32m$beans = array();[m
[32m+[m		[32mif ( $this->getID() ) {[m
[32m+[m			[32mreset( $this->withParams );[m
[32m+[m			[32m$firstKey = count( $this->withParams ) > 0[m
[32m+[m				[32m? key( $this->withParams )[m
[32m+[m				[32m: 0;[m
[32m+[m			[32mif ( is_int( $firstKey ) ) {[m
[32m+[m				[32m$sql = "{$myFieldLink} = ? {$this->withSql}";[m
[32m+[m				[32m$bindings = array_merge( array( $this->getID() ), $this->withParams );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$sql = "{$myFieldLink} = :slot0 {$this->withSql}";[m
[32m+[m				[32m$bindings           = $this->withParams;[m
[32m+[m				[32m$bindings[':slot0'] = $this->getID();[m
[32m+[m			[32m}[m
[32m+[m			[32m$beans = $redbean->find( $type, array(), $sql, $bindings );[m
[32m+[m		[32m}[m
[32m+[m		[32mforeach ( $beans as $beanFromList ) {[m
[32m+[m			[32m$beanFromList->__info['sys.parentcache.' . $parentField] = $this;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Initializes a bean. Used by OODB for dispensing beans.[m
[32m+[m	[32m * It is not recommended to use this method to initialize beans. Instead[m
[32m+[m	[32m * use the OODB object to dispense new beans. You can use this method[m
[32m+[m	[32m * if you build your own bean dispensing mechanism.[m
[32m+[m	[32m * This is not recommended.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Unless you know what you are doing, do NOT use this method.[m
[32m+[m	[32m * This is for advanced users only![m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string     $type       type of the new bean[m
[32m+[m	[32m * @param BeanHelper $beanhelper bean helper to obtain a toolbox and a model[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function initializeForDispense( $type, $beanhelper = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->beanHelper         = $beanhelper;[m
[32m+[m		[32m$this->__info['type']     = $type;[m
[32m+[m		[32m$this->__info['sys.id']   = 'id';[m
[32m+[m		[32m$this->__info['sys.orig'] = array( 'id' => 0 );[m
[32m+[m		[32m$this->__info['tainted']  = TRUE;[m
[32m+[m		[32m$this->__info['changed']  = TRUE;[m
[32m+[m		[32m$this->__info['changelist'] = array();[m
[32m+[m		[32mif ( $beanhelper ) {[m
[32m+[m			[32m$this->__info['model'] = $this->beanHelper->getModelForBean( $this );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->properties['id']   = 0;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the Bean Helper. Normally the Bean Helper is set by OODB.[m
[32m+[m	[32m * Here you can change the Bean Helper. The Bean Helper is an object[m
[32m+[m	[32m * providing access to a toolbox for the bean necessary to retrieve[m
[32m+[m	[32m * nested beans (bean lists: ownBean, sharedBean) without the need to[m
[32m+[m	[32m * rely on static calls to the facade (or make this class dep. on OODB).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param BeanHelper $helper helper to use for this bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setBeanHelper( BeanHelper $helper )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->beanHelper = $helper;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an ArrayIterator so you can treat the bean like[m
[32m+[m	[32m * an array with the properties container as its contents.[m
[32m+[m	[32m * This method is meant for PHP and allows you to access beans as if[m
[32m+[m	[32m * they were arrays, i.e. using array notation:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean[$key] = $value;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that not all PHP functions work with the array interface.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ArrayIterator[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function getIterator()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn new \ArrayIterator( $this->properties );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Imports all values from an associative array $array. Chainable.[m
[32m+[m	[32m * This method imports the values in the first argument as bean[m
[32m+[m	[32m * propery and value pairs. Use the second parameter to provide a[m
[32m+[m	[32m * selection. If a selection array is passed, only the entries[m
[32m+[m	[32m * having keys mentioned in the selection array will be imported.[m
[32m+[m	[32m * Set the third parameter to TRUE to preserve spaces in selection keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array        $array     what you want to import[m
[32m+[m	[32m * @param string|array $selection selection of values[m
[32m+[m	[32m * @param boolean      $notrim    if TRUE selection keys will NOT be trimmed[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function import( $array, $selection = FALSE, $notrim = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_string( $selection ) ) {[m
[32m+[m			[32m$selection = explode( ',', $selection );[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( is_array( $selection ) ) {[m
[32m+[m			[32mif ( $notrim ) {[m
[32m+[m				[32m$selected = array_flip($selection);[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$selected = array();[m
[32m+[m				[32mforeach ( $selection as $key => $select ) {[m
[32m+[m					[32m$selected[trim( $select )] = TRUE;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$selected = FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mforeach ( $array as $key => $value ) {[m
[32m+[m			[32mif ( $key != '__info' ) {[m
[32m+[m				[32mif ( !$selected || isset( $selected[$key] ) ) {[m
[32m+[m					[32mif ( is_array($value ) ) {[m
[32m+[m						[32mif ( isset( $value['_type'] ) ) {[m
[32m+[m							[32m$bean = $this->beanHelper->getToolbox()->getRedBean()->dispense( $value['_type'] );[m
[32m+[m							[32munset( $value['_type'] );[m
[32m+[m							[32m$bean->import($value);[m
[32m+[m							[32m$this->$key = $bean;[m
[32m+[m						[32m} else {[m
[32m+[m							[32m$listBeans = array();[m
[32m+[m							[32mforeach( $value as $listKey => $listItem ) {[m
[32m+[m								[32m$bean = $this->beanHelper->getToolbox()->getRedBean()->dispense( $listItem['_type'] );[m
[32m+[m								[32munset( $listItem['_type'] );[m
[32m+[m								[32m$bean->import($listItem);[m
[32m+[m								[32m$list = &$this->$key;[m
[32m+[m								[32m$list[ $listKey ] = $bean;[m
[32m+[m							[32m}[m
[32m+[m						[32m}[m
[32m+[m					[32m} else {[m
[32m+[m						[32m$this->$key = $value;[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m* Imports an associative array directly into the[m
[32m+[m	[32m* internal property array of the bean as well as the[m
[32m+[m	[32m* meta property sys.orig and sets the changed flag to FALSE.[m
[32m+[m	[32m* This is used by the repository objects to inject database rows[m
[32m+[m	[32m* into the beans. It is not recommended to use this method outside[m
[32m+[m	[32m* of a bean repository.[m
[32m+[m	[32m*[m
[32m+[m	[32m* @param array $row a database row[m
[32m+[m	[32m*[m
[32m+[m	[32m* @return self[m
[32m+[m	[32m*/[m
[32m+[m	[32mpublic function importRow( $row )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->properties = $row;[m
[32m+[m		[32m$this->__info['sys.orig'] = $row;[m
[32m+[m		[32m$this->__info['changed'] = FALSE;[m
[32m+[m		[32m$this->__info['changelist'] = array();[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Imports data from another bean. Chainable.[m
[32m+[m	[32m * Copies the properties from the source bean to the internal[m
[32m+[m	[32m * property list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $copy->importFrom( $bean );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above demonstrates how to make a shallow copy[m
[32m+[m	[32m * of a bean using the importFrom() method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $sourceBean the source bean to take properties from[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function importFrom( OODBBean $sourceBean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__info['tainted'] = TRUE;[m
[32m+[m		[32m$this->__info['changed'] = TRUE;[m
[32m+[m		[32m$this->properties = $sourceBean->properties;[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Injects the properties of another bean but keeps the original ID.[m
[32m+[m	[32m * Just like import() but keeps the original ID.[m
[32m+[m	[32m * Chainable.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $otherBean the bean whose properties you would like to copy[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function inject( OODBBean $otherBean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$myID = $this->properties['id'];[m
[32m+[m		[32m$this->import( $otherBean->export( FALSE, FALSE, TRUE ) );[m
[32m+[m		[32m$this->id = $myID;[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exports the bean as an array.[m
[32m+[m	[32m * This function exports the contents of a bean to an array and returns[m
[32m+[m	[32m * the resulting array. Depending on the parameters you can also[m
[32m+[m	[32m * export an entire graph of beans, apply filters or exclude meta data.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bookData = $book->export( TRUE, TRUE, FALSE, [ 'author' ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above exports all bean properties to an array[m
[32m+[m	[32m * called $bookData including its meta data, parent objects but without[m
[32m+[m	[32m * any beans of type 'author'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $meta    set to TRUE if you want to export meta data as well[m
[32m+[m	[32m * @param boolean $parents set to TRUE if you want to export parents as well[m
[32m+[m	[32m * @param boolean $onlyMe  set to TRUE if you want to export only this bean[m
[32m+[m	[32m * @param array   $filters optional whitelist for export[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function export( $meta = FALSE, $parents = FALSE, $onlyMe = FALSE, $filters = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$arr = array();[m
[32m+[m		[32mif ( $parents ) {[m
[32m+[m			[32mforeach ( $this as $key => $value ) {[m
[32m+[m				[32mif ( substr( $key, -3 ) != '_id' ) continue;[m
[32m+[m
[32m+[m				[32m$prop = substr( $key, 0, strlen( $key ) - 3 );[m
[32m+[m				[32m$this->$prop;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$hasFilters = is_array( $filters ) && count( $filters );[m
[32m+[m		[32mforeach ( $this as $key => $value ) {[m
[32m+[m			[32mif ( !$onlyMe && is_array( $value ) ) {[m
[32m+[m				[32m$vn = array();[m
[32m+[m
[32m+[m				[32mforeach ( $value as $i => $b ) {[m
[32m+[m					[32mif ( !( $b instanceof OODBBean ) ) continue;[m
[32m+[m					[32m$vn[] = $b->export( $meta, FALSE, FALSE, $filters );[m
[32m+[m					[32m$value = $vn;[m
[32m+[m				[32m}[m
[32m+[m			[32m} elseif ( $value instanceof OODBBean ) { if ( $hasFilters ) { //has to be on one line, otherwise code coverage miscounts as miss[m
[32m+[m					[32mif ( !in_array( strtolower( $value->getMeta( 'type' ) ), $filters ) ) continue;[m
[32m+[m				[32m}[m
[32m+[m				[32m$value = $value->export( $meta, $parents, FALSE, $filters );[m
[32m+[m			[32m}[m
[32m+[m			[32m$arr[$key] = $value;[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( $meta ) {[m
[32m+[m			[32m$arr['__info'] = $this->__info;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $arr;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implements isset() function for use as an array.[m
[32m+[m	[32m * This allows you to use isset() on bean properties.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->title = 'my book';[m
[32m+[m	[32m * echo isset($book['title']); //TRUE[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example illustrates how one can apply the[m
[32m+[m	[32m * isset() function to a bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the property you want to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __isset( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$property = $this->beau( $property );[m
[32m+[m		[32mif ( strpos( $property, 'xown' ) === 0 && ctype_upper( substr( $property, 4, 1 ) ) ) {[m
[32m+[m			[32m$property = substr($property, 1);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn isset( $this->properties[$property] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a related bean exists.[m
[32m+[m	[32m * For instance if a post bean has a related author, this method[m
[32m+[m	[32m * can be used to check if the author is set without loading the author.[m
[32m+[m	[32m * This method works by checking the related ID-field.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the property you wish to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function exists( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$property = $this->beau( $property );[m
[32m+[m		[32m/* fixes issue #549, see Base/Bean test */[m
[32m+[m		[32m$hiddenRelationField = "{$property}_id";[m
[32m+[m		[32mif ( array_key_exists( $hiddenRelationField, $this->properties ) ) {[m
[32m+[m			[32mif ( !is_null( $this->properties[$hiddenRelationField] ) ) {[m
[32m+[m				[32mreturn TRUE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the ID of the bean.[m
[32m+[m	[32m * If for some reason the ID has not been set, this method will[m
[32m+[m	[32m * return NULL. This is actually the same as accessing the[m
[32m+[m	[32m * id property using $bean->id. The ID of a bean is it's primary[m
[32m+[m	[32m * key and should always correspond with a table column named[m
[32m+[m	[32m * 'id'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string|null[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( isset( $this->properties['id'] ) ) ? (string) $this->properties['id'] : NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Unsets a property of a bean.[m
[32m+[m	[32m * Magic method, gets called implicitly when[m
[32m+[m	[32m * performing the unset() operation[m
[32m+[m	[32m * on a bean property.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $property property to unset[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __unset( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$property = $this->beau( $property );[m
[32m+[m
[32m+[m		[32mif ( strpos( $property, 'xown' ) === 0 && ctype_upper( substr( $property, 4, 1 ) ) ) {[m
[32m+[m			[32m$property = substr($property, 1);[m
[32m+[m		[32m}[m
[32m+[m		[32munset( $this->properties[$property] );[m
[32m+[m		[32m$shadowKey = 'sys.shadow.'.$property;[m
[32m+[m		[32mif ( isset( $this->__info[ $shadowKey ] ) ) unset( $this->__info[$shadowKey] );[m
[32m+[m		[32m//also clear modifiers[m
[32m+[m		[32m$this->clearModifiers();[m
[32m+[m		[32mreturn;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Adds WHERE clause conditions to ownList retrieval.[m
[32m+[m	[32m * For instance to get the pages that belong to a book you would[m
[32m+[m	[32m * issue the following command: $book->ownPage[m
[32m+[m	[32m * However, to order these pages by number use:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->with(' ORDER BY `number` ASC ')->ownPage[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * the additional SQL snippet will be merged into the final[m
[32m+[m	[32m * query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL to be added to retrieval query.[m
[32m+[m	[32m * @param array  $bindings array with parameters to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function with( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->withSql    = $sql;[m
[32m+[m		[32m$this->withParams = $bindings;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Just like with(). Except that this method prepends the SQL query snippet[m
[32m+[m	[32m * with AND which makes it slightly more comfortable to use a conditional[m
[32m+[m	[32m * SQL snippet. For instance to filter an own-list with pages (belonging to[m
[32m+[m	[32m * a book) on specific chapters you can use:[m
[32m+[m	[32m *[m
[32m+[m	[32m * $book->withCondition(' chapter = 3 ')->ownPage[m
[32m+[m	[32m *[m
[32m+[m	[32m * This will return in the own list only the pages having 'chapter == 3'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL to be added to retrieval query (prefixed by AND)[m
[32m+[m	[32m * @param array  $bindings array with parameters to bind to SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function withCondition( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->withSql    = ' AND ' . $sql;[m
[32m+[m		[32m$this->withParams = $bindings;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tells the bean to (re)load the following list without any[m
[32m+[m	[32m * conditions. If you have an ownList or sharedList with a[m
[32m+[m	[32m * condition you can use this method to reload the entire list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean->with( ' LIMIT 3 ' )->ownPage; //Just 3[m
[32m+[m	[32m * $bean->all()->ownPage; //Reload all pages[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function all()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->all = TRUE;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tells the bean to only access the list but not load[m
[32m+[m	[32m * its contents. Use this if you only want to add something to a list[m
[32m+[m	[32m * and you have no interest in retrieving its contents from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->noLoad()->ownPage[] = $newPage;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we add the $newPage bean to the[m
[32m+[m	[32m * page list of book without loading all the pages first.[m
[32m+[m	[32m * If you know in advance that you are not going to use[m
[32m+[m	[32m * the contents of the list, you may use the noLoad() modifier[m
[32m+[m	[32m * to make sure the queries required to load the list will not[m
[32m+[m	[32m * be executed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function noLoad()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->noLoad = TRUE;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Prepares an own-list to use an alias. This is best explained using[m
[32m+[m	[32m * an example. Imagine a project and a person. The project always involves[m
[32m+[m	[32m * two persons: a teacher and a student. The person beans have been aliased in this[m
[32m+[m	[32m * case, so to the project has a teacher_id pointing to a person, and a student_id[m
[32m+[m	[32m * also pointing to a person. Given a project, we obtain the teacher like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $project->fetchAs('person')->teacher;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Now, if we want all projects of a teacher we cant say:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $teacher->ownProject[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * because the $teacher is a bean of type 'person' and no project has been[m
[32m+[m	[32m * assigned to a person. Instead we use the alias() method like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $teacher->alias('teacher')->ownProject[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * now we get the projects associated with the person bean aliased as[m
[32m+[m	[32m * a teacher.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $aliasName the alias name to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function alias( $aliasName )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->aliasName = $this->beau( $aliasName );[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns properties of bean as an array.[m
[32m+[m	[32m * This method returns the raw internal property list of the[m
[32m+[m	[32m * bean. Only use this method for optimization purposes. Otherwise[m
[32m+[m	[32m * use the export() method to export bean data to arrays.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getProperties()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->properties;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns properties of bean as an array.[m
[32m+[m	[32m * This method returns the raw internal property list of the[m
[32m+[m	[32m * bean. Only use this method for optimization purposes. Otherwise[m
[32m+[m	[32m * use the export() method to export bean data to arrays.[m
[32m+[m	[32m * This method returns an array with the properties array and[m
[32m+[m	[32m * the type (string).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getPropertiesAndType()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array( $this->properties, $this->__info['type'] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Turns a camelcase property name into an underscored property name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Examples:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - oneACLRoute -> one_acl_route[m
[32m+[m	[32m * - camelCase -> camel_case[m
[32m+[m	[32m *[m
[32m+[m	[32m * Also caches the result to improve performance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property property to un-beautify[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function beau( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32mstatic $beautifulColumns = array();[m
[32m+[m
[32m+[m		[32mif ( ctype_lower( $property ) ) return $property;[m
[32m+[m		[32mif ([m
[32m+[m			[32m( strpos( $property, 'own' ) === 0 && ctype_upper( substr( $property, 3, 1 ) ) )[m
[32m+[m			[32m|| ( strpos( $property, 'xown' ) === 0 && ctype_upper( substr( $property, 4, 1 ) ) )[m
[32m+[m			[32m|| ( strpos( $property, 'shared' ) === 0 && ctype_upper( substr( $property, 6, 1 ) ) )[m
[32m+[m		[32m) {[m
[32m+[m
[32m+[m			[32m$property = preg_replace( '/List$/', '', $property );[m
[32m+[m			[32mreturn $property;[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( !isset( $beautifulColumns[$property] ) ) {[m
[32m+[m			[32m$beautifulColumns[$property] = AQueryWriter::camelsSnake( $property );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beautifulColumns[$property];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Modifiers are a powerful concept in RedBeanPHP, they make it possible[m
[32m+[m	[32m * to change the way a property has to be loaded.[m
[32m+[m	[32m * RedBeanPHP uses property modifiers using a prefix notation like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->fetchAs('page')->cover;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Here, we load a bean of type page, identified by the cover property[m
[32m+[m	[32m * (or cover_id in the database). Because the modifier is called before[m
[32m+[m	[32m * the property is accessed, the modifier must be remembered somehow,[m
[32m+[m	[32m * this changes the state of the bean. Accessing a property causes the[m
[32m+[m	[32m * bean to clear its modifiers. To clear the modifiers manually you can[m
[32m+[m	[32m * use this method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->with( 'LIMIT 1' );[m
[32m+[m	[32m * $book->clearModifiers()->ownPageList;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, the 'LIMIT 1' clause is[m
[32m+[m	[32m * cleared before accessing the pages of the book, causing all pages[m
[32m+[m	[32m * to be loaded in the list instead of just one.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function clearModifiers()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->withSql    = '';[m
[32m+[m		[32m$this->withParams = array();[m
[32m+[m		[32m$this->aliasName  = NULL;[m
[32m+[m		[32m$this->fetchType  = NULL;[m
[32m+[m		[32m$this->noLoad     = FALSE;[m
[32m+[m		[32m$this->all        = FALSE;[m
[32m+[m		[32m$this->via        = NULL;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether a list is opened in exclusive mode or not.[m
[32m+[m	[32m * If a list has been opened in exclusive mode this method will return TRUE,[m
[32m+[m	[32m * othwerwise it will return FALSE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $listName name of the list to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isListInExclusiveMode( $listName )[m
[32m+[m	[32m{[m
[32m+[m		[32m$listName = $this->beau( $listName );[m
[32m+[m
[32m+[m		[32mif ( strpos( $listName, 'xown' ) === 0 && ctype_upper( substr( $listName, 4, 1 ) ) ) {[m
[32m+[m			[32m$listName = substr($listName, 1);[m
[32m+[m		[32m}[m
[32m+[m		[32m$listName = lcfirst( substr( $listName, 3 ) );[m
[32m+[m		[32mreturn ( isset( $this->__info['sys.exclusive-'.$listName] ) && $this->__info['sys.exclusive-'.$listName] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Magic Getter. Gets the value for a specific property in the bean.[m
[32m+[m	[32m * If the property does not exist this getter will make sure no error[m
[32m+[m	[32m * occurs. This is because RedBean allows you to query (probe) for[m
[32m+[m	[32m * properties. If the property can not be found this method will[m
[32m+[m	[32m * return NULL instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $title = $book->title;[m
[32m+[m	[32m * $pages = $book->ownPageList;[m
[32m+[m	[32m * $tags  = $book->sharedTagList;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example aboves lists several ways to invoke the magic getter.[m
[32m+[m	[32m * You can use the magic setter to access properties, own-lists,[m
[32m+[m	[32m * exclusive own-lists (xownLists) and shared-lists.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the property you wish to obtain the value of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function &__get( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$isEx          = FALSE;[m
[32m+[m		[32m$isOwn         = FALSE;[m
[32m+[m		[32m$isShared      = FALSE;[m
[32m+[m		[32mif ( !ctype_lower( $property ) ) {[m
[32m+[m			[32m$property = $this->beau( $property );[m
[32m+[m			[32mif ( strpos( $property, 'xown' ) === 0 && ctype_upper( substr( $property, 4, 1 ) ) ) {[m
[32m+[m				[32m$property = substr($property, 1);[m
[32m+[m				[32m$listName = lcfirst( substr( $property, 3 ) );[m
[32m+[m				[32m$isEx     = TRUE;[m
[32m+[m				[32m$isOwn    = TRUE;[m
[32m+[m				[32m$this->__info['sys.exclusive-'.$listName] = TRUE;[m
[32m+[m			[32m} elseif ( strpos( $property, 'own' ) === 0 && ctype_upper( substr( $property, 3, 1 ) ) )  {[m
[32m+[m				[32m$isOwn    = TRUE;[m
[32m+[m				[32m$listName = lcfirst( substr( $property, 3 ) );[m
[32m+[m			[32m} elseif ( strpos( $property, 'shared' ) === 0 && ctype_upper( substr( $property, 6, 1 ) ) ) {[m
[32m+[m				[32m$isShared = TRUE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$fieldLink      = $property . '_id';[m
[32m+[m		[32m$exists         = isset( $this->properties[$property] );[m
[32m+[m
[32m+[m		[32m//If not exists and no field link and no list, bail out.[m
[32m+[m		[32mif ( !$exists && !isset($this->$fieldLink) && (!$isOwn && !$isShared )) {[m
[32m+[m			[32m$this->clearModifiers();[m
[32m+[m			[32m/**[m
[32m+[m			[32m * Github issue:[m
[32m+[m			[32m * Remove $NULL to directly return NULL #625[m
[32m+[m			[32m * @@ -1097,8 +1097,7 @@ public function &__get( $property )[m
[32m+[m			[32m *		$this->all        = FALSE;[m
[32m+[m			[32m *		$this->via        = NULL;[m
[32m+[m			[32m *[m
[32m+[m			[32m * - $NULL = NULL;[m
[32m+[m			[32m * - return $NULL;[m
[32m+[m			[32m * + return NULL;[m
[32m+[m			[32m *[m
[32m+[m			[32m * leads to regression:[m
[32m+[m			[32m * PHP Stack trace:[m
[32m+[m			[32m * PHP 1. {main}() testje.php:0[m
[32m+[m			[32m * PHP 2. RedBeanPHP\OODBBean->__get() testje.php:22[m
[32m+[m			[32m * Notice: Only variable references should be returned by reference in rb.php on line 2529[m
[32m+[m			[32m */[m
[32m+[m			[32m$NULL = NULL;[m
[32m+[m			[32mreturn $NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$hasAlias       = (!is_null($this->aliasName));[m
[32m+[m		[32m$differentAlias = ($hasAlias && $isOwn && isset($this->__info['sys.alias.'.$listName])) ?[m
[32m+[m									[32m($this->__info['sys.alias.'.$listName] !== $this->aliasName) : FALSE;[m
[32m+[m		[32m$hasSQL         = ($this->withSql !== '' || $this->via !== NULL);[m
[32m+[m		[32m$hasAll         = (boolean) ($this->all);[m
[32m+[m
[32m+[m		[32m//If exists and no list or exits and list not changed, bail out.[m
[32m+[m		[32mif ( $exists && ((!$isOwn && !$isShared ) || (!$hasSQL && !$differentAlias && !$hasAll)) ) {[m
[32m+[m			[32m$this->clearModifiers();[m
[32m+[m			[32mreturn $this->properties[$property];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mlist( $redbean, , , $toolbox ) = $this->beanHelper->getExtractedToolbox();[m
[32m+[m
[32m+[m		[32m//If it's another bean, then we load it and return[m
[32m+[m		[32mif ( isset( $this->$fieldLink ) ) {[m
[32m+[m			[32m$this->__info['tainted'] = TRUE;[m
[32m+[m			[32mif ( isset( $this->__info["sys.parentcache.$property"] ) ) {[m
[32m+[m				[32m$bean = $this->__info["sys.parentcache.$property"];[m
[32m+[m			[32m} else {[m
[32m+[m				[32mif ( isset( self::$aliases[$property] ) ) {[m
[32m+[m					[32m$type = self::$aliases[$property];[m
[32m+[m				[32m} elseif ( $this->fetchType ) {[m
[32m+[m					[32m$type = $this->fetchType;[m
[32m+[m					[32m$this->fetchType = NULL;[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$type = $property;[m
[32m+[m				[32m}[m
[32m+[m				[32m$bean = NULL;[m
[32m+[m				[32mif ( !is_null( $this->properties[$fieldLink] ) ) {[m
[32m+[m					[32m$bean = $redbean->load( $type, $this->properties[$fieldLink] );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$this->properties[$property] = $bean;[m
[32m+[m			[32m$this->clearModifiers();[m
[32m+[m			[32mreturn $this->properties[$property];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m/* Implicit: elseif ( $isOwn || $isShared ) */[m
[32m+[m		[32mif ( $this->noLoad ) {[m
[32m+[m			[32m$beans = array();[m
[32m+[m		[32m} elseif ( $isOwn ) {[m
[32m+[m			[32m$beans = $this->getOwnList( $listName, $redbean );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$beans = $this->getSharedList( lcfirst( substr( $property, 6 ) ), $redbean, $toolbox );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->properties[$property]          = $beans;[m
[32m+[m		[32m$this->__info["sys.shadow.$property"] = $beans;[m
[32m+[m		[32m$this->__info['tainted']              = TRUE;[m
[32m+[m
[32m+[m		[32m$this->clearModifiers();[m
[32m+[m		[32mreturn $this->properties[$property];[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Magic Setter. Sets the value for a specific property.[m
[32m+[m	[32m * This setter acts as a hook for OODB to mark beans as tainted.[m
[32m+[m	[32m * The tainted meta property can be retrieved using getMeta("tainted").[m
[32m+[m	[32m * The tainted meta property indicates whether a bean has been modified and[m
[32m+[m	[32m * can be used in various caching mechanisms.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the property you wish to assign a value to[m
[32m+[m	[32m * @param  mixed $value    the value you want to assign[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __set( $property, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$isEx          = FALSE;[m
[32m+[m		[32m$isOwn         = FALSE;[m
[32m+[m		[32m$isShared      = FALSE;[m
[32m+[m
[32m+[m		[32mif ( !ctype_lower( $property ) ) {[m
[32m+[m			[32m$property = $this->beau( $property );[m
[32m+[m			[32mif ( strpos( $property, 'xown' ) === 0 && ctype_upper( substr( $property, 4, 1 ) ) ) {[m
[32m+[m				[32m$property = substr($property, 1);[m
[32m+[m				[32m$listName = lcfirst( substr( $property, 3 ) );[m
[32m+[m				[32m$isEx     = TRUE;[m
[32m+[m				[32m$isOwn    = TRUE;[m
[32m+[m				[32m$this->__info['sys.exclusive-'.$listName] = TRUE;[m
[32m+[m			[32m} elseif ( strpos( $property, 'own' ) === 0 && ctype_upper( substr( $property, 3, 1 ) ) )  {[m
[32m+[m				[32m$isOwn    = TRUE;[m
[32m+[m				[32m$listName = lcfirst( substr( $property, 3 ) );[m
[32m+[m			[32m} elseif ( strpos( $property, 'shared' ) === 0 && ctype_upper( substr( $property, 6, 1 ) ) ) {[m
[32m+[m				[32m$isShared = TRUE;[m
[32m+[m			[32m}[m
[32m+[m		[32m} elseif ( self::$convertArraysToJSON && is_array( $value ) ) {[m
[32m+[m			[32m$value = json_encode( $value );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$hasAlias       = (!is_null($this->aliasName));[m
[32m+[m		[32m$differentAlias = ($hasAlias && $isOwn && isset($this->__info['sys.alias.'.$listName])) ?[m
[32m+[m								[32m($this->__info['sys.alias.'.$listName] !== $this->aliasName) : FALSE;[m
[32m+[m		[32m$hasSQL         = ($this->withSql !== '' || $this->via !== NULL);[m
[32m+[m		[32m$exists         = isset( $this->properties[$property] );[m
[32m+[m		[32m$fieldLink      = $property . '_id';[m
[32m+[m		[32m$isFieldLink	= (($pos = strrpos($property, '_id')) !== FALSE) && array_key_exists( ($fieldName = substr($property, 0, $pos)), $this->properties );[m
[32m+[m
[32m+[m
[32m+[m		[32mif ( ($isOwn || $isShared) &&  (!$exists || $hasSQL || $differentAlias) ) {[m
[32m+[m
[32m+[m			[32mif ( !$this->noLoad ) {[m
[32m+[m				[32mlist( $redbean, , , $toolbox ) = $this->beanHelper->getExtractedToolbox();[m
[32m+[m				[32mif ( $isOwn ) {[m
[32m+[m					[32m$beans = $this->getOwnList( $listName, $redbean );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$beans = $this->getSharedList( lcfirst( substr( $property, 6 ) ), $redbean, $toolbox );[m
[32m+[m				[32m}[m
[32m+[m				[32m$this->__info["sys.shadow.$property"] = $beans;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->clearModifiers();[m
[32m+[m
[32m+[m		[32m$this->__info['tainted'] = TRUE;[m
[32m+[m		[32m$this->__info['changed'] = TRUE;[m
[32m+[m		[32marray_push( $this->__info['changelist'], $property );[m
[32m+[m
[32m+[m		[32mif ( array_key_exists( $fieldLink, $this->properties ) && !( $value instanceof OODBBean ) ) {[m
[32m+[m			[32mif ( is_null( $value ) || $value === FALSE ) {[m
[32m+[m
[32m+[m				[32munset( $this->properties[ $property ]);[m
[32m+[m				[32m$this->properties[ $fieldLink ] = NULL;[m
[32m+[m
[32m+[m				[32mreturn;[m
[32m+[m			[32m} else {[m
[32m+[m				[32mthrow new RedException( 'Cannot cast to bean.' );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $isFieldLink ){[m
[32m+[m			[32munset( $this->properties[ $fieldName ]);[m
[32m+[m			[32m$this->properties[ $property ] = NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m
[32m+[m		[32mif ( $value === FALSE ) {[m
[32m+[m			[32m$value = '0';[m
[32m+[m		[32m} elseif ( $value === TRUE ) {[m
[32m+[m			[32m$value = '1';[m
[32m+[m			[32m/* for some reason there is some kind of bug in xdebug so that it doesnt count this line otherwise... */[m
[32m+[m		[32m} elseif ( $value instanceof \DateTime ) { $value = $value->format( 'Y-m-d H:i:s' ); }[m
[32m+[m		[32m$this->properties[$property] = $value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated[m
[32m+[m	[32m *[m
[32m+[m	[32m * Sets a property of the bean allowing you to keep track of[m
[32m+[m	[32m * the state yourself. This method sets a property of the bean and[m
[32m+[m	[32m * allows you to control how the state of the bean will be affected.[m
[32m+[m	[32m *[m
[32m+[m	[32m * While there may be some circumstances where this method is needed,[m
[32m+[m	[32m * this method is considered to be extremely dangerous.[m
[32m+[m	[32m * This method is only for advanced users.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $property     property[m
[32m+[m	[32m * @param mixed   $value        value[m
[32m+[m	[32m * @param boolean $updateShadow whether you want to update the shadow[m
[32m+[m	[32m * @param boolean $taint        whether you want to mark the bean as tainted[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setProperty( $property, $value, $updateShadow = FALSE, $taint = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->properties[$property] = $value;[m
[32m+[m
[32m+[m		[32mif ( $updateShadow ) {[m
[32m+[m			[32m$this->__info['sys.shadow.' . $property] = $value;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $taint ) {[m
[32m+[m			[32m$this->__info['tainted'] = TRUE;[m
[32m+[m			[32m$this->__info['changed'] = TRUE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the value of a meta property. A meta property[m
[32m+[m	[32m * contains additional information about the bean object that will not[m
[32m+[m	[32m * be stored in the database. Meta information is used to instruct[m
[32m+[m	[32m * RedBeanPHP as well as other systems how to deal with the bean.[m
[32m+[m	[32m * If the property cannot be found this getter will return NULL instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean->setMeta( 'flush-cache', TRUE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * RedBeanPHP also stores meta data in beans, this meta data uses[m
[32m+[m	[32m * keys prefixed with 'sys.' (system).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $path    path to property in meta data[m
[32m+[m	[32m * @param mixed  $default default value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getMeta( $path, $default = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( isset( $this->__info[$path] ) ) ? $this->__info[$path] : $default;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a value from the data bundle.[m
[32m+[m	[32m * The data bundle might contain additional data send from an SQL query,[m
[32m+[m	[32m * for instance, the total number of rows. If the property cannot be[m
[32m+[m	[32m * found, the default value will be returned. If no default has[m
[32m+[m	[32m * been specified, this method returns NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $key     key[m
[32m+[m	[32m * @param mixed  $default default (defaults to NULL)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed;[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function info( $key, $default = NULL ) {[m
[32m+[m		[32mreturn ( isset( $this->__info['data.bundle'][$key] ) ) ? $this->__info['data.bundle'][$key] : $default;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gets and unsets a meta property.[m
[32m+[m	[32m * Moves a meta property out of the bean.[m
[32m+[m	[32m * This is a short-cut method that can be used instead[m
[32m+[m	[32m * of combining a get/unset.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $path    path to property in meta data[m
[32m+[m	[32m * @param mixed  $default default value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function moveMeta( $path, $value = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( isset( $this->__info[$path] ) ) {[m
[32m+[m			[32m$value = $this->__info[ $path ];[m
[32m+[m			[32munset( $this->__info[ $path ] );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a value in the specified Meta information property.[m
[32m+[m	[32m * The first argument should be the key to store the value under,[m
[32m+[m	[32m * the second argument should be the value. It is common to use[m
[32m+[m	[32m * a path-like notation for meta data in RedBeanPHP like:[m
[32m+[m	[32m * 'my.meta.data', however the dots are purely for readability, the[m
[32m+[m	[32m * meta data methods do not store nested structures or hierarchies.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $path  path / key to store value under[m
[32m+[m	[32m * @param mixed  $value value to store in bean (not in database) as meta data[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setMeta( $path, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__info[$path] = $value;[m
[32m+[m		[32mif ( $path == 'type' && !empty($this->beanHelper)) {[m
[32m+[m			[32m$this->__info['model'] = $this->beanHelper->getModelForBean( $this );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Copies the meta information of the specified bean[m
[32m+[m	[32m * This is a convenience method to enable you to[m
[32m+[m	[32m * exchange meta information easily.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to copy meta data of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function copyMetaFrom( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__info = $bean->__info;[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sends the call to the registered model.[m
[32m+[m	[32m * This method can also be used to override bean behaviour.[m
[32m+[m	[32m * In that case you don't want an error or exception to be triggered[m
[32m+[m	[32m * if the method does not exist in the model (because it's optional).[m
[32m+[m	[32m * Unfortunately we cannot add an extra argument to __call() for this[m
[32m+[m	[32m * because the signature is fixed. Another option would be to set[m
[32m+[m	[32m * a special flag ( i.e. $this->isOptionalCall ) but that would[m
[32m+[m	[32m * cause additional complexity because we have to deal with extra temporary state.[m
[32m+[m	[32m * So, instead I allowed the method name to be prefixed with '@', in practice[m
[32m+[m	[32m * nobody creates methods like that - however the '@' symbol in PHP is widely known[m
[32m+[m	[32m * to suppress error handling, so we can reuse the semantics of this symbol.[m
[32m+[m	[32m * If a method name gets passed starting with '@' the overrideDontFail variable[m
[32m+[m	[32m * will be set to TRUE and the '@' will be stripped from the function name before[m
[32m+[m	[32m * attempting to invoke the method on the model. This way, we have all the[m
[32m+[m	[32m * logic in one place.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $method name of the method[m
[32m+[m	[32m * @param array  $args   argument list[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __call( $method, $args )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( empty( $this->__info['model'] ) ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$overrideDontFail = FALSE;[m
[32m+[m		[32mif ( strpos( $method, '@' ) === 0 ) {[m
[32m+[m			[32m$method = substr( $method, 1 );[m
[32m+[m			[32m$overrideDontFail = TRUE;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !is_callable( array( $this->__info['model'], $method ) ) ) {[m
[32m+[m
[32m+[m			[32mif ( self::$errorHandlingFUSE === FALSE || $overrideDontFail ) {[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( in_array( $method, array( 'update', 'open', 'delete', 'after_delete', 'after_update', 'dispense' ), TRUE ) ) {[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$message = "FUSE: method does not exist in model: $method";[m
[32m+[m			[32mif ( self::$errorHandlingFUSE === self::C_ERR_LOG ) {[m
[32m+[m				[32merror_log( $message );[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m} elseif ( self::$errorHandlingFUSE === self::C_ERR_NOTICE ) {[m
[32m+[m				[32mtrigger_error( $message, E_USER_NOTICE );[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m} elseif ( self::$errorHandlingFUSE === self::C_ERR_WARN ) {[m
[32m+[m				[32mtrigger_error( $message, E_USER_WARNING );[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m} elseif ( self::$errorHandlingFUSE === self::C_ERR_EXCEPTION ) {[m
[32m+[m				[32mthrow new \Exception( $message );[m
[32m+[m			[32m} elseif ( self::$errorHandlingFUSE === self::C_ERR_FUNC ) {[m
[32m+[m				[32m$func = self::$errorHandler;[m
[32m+[m				[32mreturn $func(array([m
[32m+[m					[32m'message' => $message,[m
[32m+[m					[32m'method' => $method,[m
[32m+[m					[32m'args' => $args,[m
[32m+[m					[32m'bean' => $this[m
[32m+[m				[32m));[m
[32m+[m			[32m}[m
[32m+[m			[32mtrigger_error( $message, E_USER_ERROR );[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn call_user_func_array( array( $this->__info['model'], $method ), $args );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of __toString Method[m
[32m+[m	[32m * Routes call to Model. If the model implements a __toString() method this[m
[32m+[m	[32m * method will be called and the result will be returned. In case of an[m
[32m+[m	[32m * echo-statement this result will be printed. If the model does not[m
[32m+[m	[32m * implement a __toString method, this method will return a JSON[m
[32m+[m	[32m * representation of the current bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __toString()[m
[32m+[m	[32m{[m
[32m+[m		[32m$string = $this->__call( '@__toString', array() );[m
[32m+[m
[32m+[m		[32mif ( $string === NULL ) {[m
[32m+[m			[32m$list = array();[m
[32m+[m			[32mforeach($this->properties as $property => $value) {[m
[32m+[m				[32mif (is_scalar($value)) {[m
[32m+[m					[32mif ( self::$enforceUTF8encoding ) {[m
[32m+[m						[32m$list[$property] = mb_convert_encoding($value, 'UTF-8', 'UTF-8');[m
[32m+[m					[32m} else {[m
[32m+[m						[32m$list[$property] = $value;[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$data = json_encode( $list );[m
[32m+[m			[32mreturn $data;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mreturn $string;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of Array Access Interface, you can access bean objects[m
[32m+[m	[32m * like an array.[m
[32m+[m	[32m * Call gets routed to __set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  mixed $offset offset string[m
[32m+[m	[32m * @param  mixed $value  value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function offsetSet( $offset, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__set( $offset, $value );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of Array Access Interface, you can access bean objects[m
[32m+[m	[32m * like an array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Array functions do not reveal x-own-lists and list-alias because[m
[32m+[m	[32m * you dont want duplicate entries in foreach-loops.[m
[32m+[m	[32m * Also offers a slight performance improvement for array access.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  mixed $offset property[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function offsetExists( $offset )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->__isset( $offset );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of Array Access Interface, you can access bean objects[m
[32m+[m	[32m * like an array.[m
[32m+[m	[32m * Unsets a value from the array/bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Array functions do not reveal x-own-lists and list-alias because[m
[32m+[m	[32m * you dont want duplicate entries in foreach-loops.[m
[32m+[m	[32m * Also offers a slight performance improvement for array access.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  mixed $offset property[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function offsetUnset( $offset )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__unset( $offset );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of Array Access Interface, you can access bean objects[m
[32m+[m	[32m * like an array.[m
[32m+[m	[32m * Returns value of a property.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Array functions do not reveal x-own-lists and list-alias because[m
[32m+[m	[32m * you dont want duplicate entries in foreach-loops.[m
[32m+[m	[32m * Also offers a slight performance improvement for array access.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  mixed $offset property[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function &offsetGet( $offset )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->__get( $offset );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Chainable method to cast a certain ID to a bean; for instance:[m
[32m+[m	[32m * $person = $club->fetchAs('person')->member;[m
[32m+[m	[32m * This will load a bean of type person using member_id as ID.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type preferred fetch type[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function fetchAs( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->fetchType = $type;[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Prepares to load a bean using the bean type specified by[m
[32m+[m	[32m * another property.[m
[32m+[m	[32m * Similar to fetchAs but uses a column instead of a direct value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $car = R::load( 'car', $id );[m
[32m+[m	[32m * $engine = $car->poly('partType')->part;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, we have a bean of type car that[m
[32m+[m	[32m * may consists of several parts (i.e. chassis, wheels).[m
[32m+[m	[32m * To obtain the 'engine' we access the property 'part'[m
[32m+[m	[32m * using the type (i.e. engine) specified by the property[m
[32m+[m	[32m * indicated by the argument of poly().[m
[32m+[m	[32m * This essentially is a polymorph relation, hence the name.[m
[32m+[m	[32m * In database this relation might look like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * partType | part_id[m
[32m+[m	[32m * --------------------[m
[32m+[m	[32m * engine   | 1020300[m
[32m+[m	[32m * wheel    | 4820088[m
[32m+[m	[32m * chassis  | 7823122[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $field field name to use for mapping[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function poly( $field )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->fetchAs( $this->$field );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Traverses a bean property with the specified function.[m
[32m+[m	[32m * Recursively iterates through the property invoking the[m
[32m+[m	[32m * function for each bean along the way passing the bean to it.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Can be used together with with, withCondition, alias and fetchAs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $task[m
[32m+[m	[32m *    ->withCondition(' priority >= ? ', [ $priority ])[m
[32m+[m	[32m *    ->traverse('ownTaskList', function( $t ) use ( &$todo ) {[m
[32m+[m	[32m *       $todo[] = $t->descr;[m
[32m+[m	[32m *    } );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example, we create a to-do list by traversing a[m
[32m+[m	[32m * hierarchical list of tasks while filtering out all tasks[m
[32m+[m	[32m * having a low priority.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property property[m
[32m+[m	[32m * @param callable $function function[m
[32m+[m	[32m * @param integer $maxDepth maximum depth for traversal[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m * @throws RedException[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function traverse( $property, $function, $maxDepth = NULL, $depth = 1 )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->via = NULL;[m
[32m+[m		[32mif ( strpos( $property, 'shared' ) !== FALSE ) {[m
[32m+[m			[32mthrow new RedException( 'Traverse only works with (x)own-lists.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !is_null( $maxDepth ) ) {[m
[32m+[m			[32mif ( !$maxDepth-- ) return $this;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$oldFetchType = $this->fetchType;[m
[32m+[m		[32m$oldAliasName = $this->aliasName;[m
[32m+[m		[32m$oldWith      = $this->withSql;[m
[32m+[m		[32m$oldBindings  = $this->withParams;[m
[32m+[m
[32m+[m		[32m$beans = $this->$property;[m
[32m+[m
[32m+[m		[32mif ( $beans === NULL ) return $this;[m
[32m+[m
[32m+[m		[32mif ( !is_array( $beans ) ) $beans = array( $beans );[m
[32m+[m
[32m+[m		[32mforeach( $beans as $bean ) {[m
[32m+[m			[32m$function( $bean, $depth );[m
[32m+[m			[32m$bean->fetchType  = $oldFetchType;[m
[32m+[m			[32m$bean->aliasName  = $oldAliasName;[m
[32m+[m			[32m$bean->withSql    = $oldWith;[m
[32m+[m			[32m$bean->withParams = $oldBindings;[m
[32m+[m
[32m+[m			[32m$bean->traverse( $property, $function, $maxDepth, $depth + 1 );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of Countable interface. Makes it possible to use[m
[32m+[m	[32m * count() function on a bean. This method gets invoked if you use[m
[32m+[m	[32m * the count() function on a bean. The count() method will return[m
[32m+[m	[32m * the number of properties of the bean, this includes the id property.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean = R::dispense('bean');[m
[32m+[m	[32m * $bean->property1 = 1;[m
[32m+[m	[32m * $bean->property2 = 2;[m
[32m+[m	[32m * echo count($bean); //prints 3 (cause id is also a property)[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above will print the number 3 to stdout.[m
[32m+[m	[32m * Although we have assigned values to just two properties, the[m
[32m+[m	[32m * primary key id is also a property of the bean and together[m
[32m+[m	[32m * that makes 3. Besides using the count() function, you can also[m
[32m+[m	[32m * call this method using a method notation: $bean->count().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function count()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn count( $this->properties );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a bean is empty or not.[m
[32m+[m	[32m * A bean is empty if it has no other properties than the id field OR[m
[32m+[m	[32m * if all the other properties are 'empty()' (this might[m
[32m+[m	[32m * include NULL and FALSE values).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $newBean = R::dispense( 'bean' );[m
[32m+[m	[32m * $newBean->isEmpty(); // TRUE[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above demonstrates that newly dispensed beans are[m
[32m+[m	[32m * considered 'empty'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isEmpty()[m
[32m+[m	[32m{[m
[32m+[m		[32m$empty = TRUE;[m
[32m+[m		[32mforeach ( $this->properties as $key => $value ) {[m
[32m+[m			[32mif ( $key == 'id' ) {[m
[32m+[m				[32mcontinue;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( !empty( $value ) ) {[m
[32m+[m				[32m$empty = FALSE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $empty;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Chainable setter.[m
[32m+[m	[32m * This method is actually the same as just setting a value[m
[32m+[m	[32m * using a magic setter (->property = ...). The difference[m
[32m+[m	[32m * is that you can chain these setters like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->setAttr('title', 'mybook')->setAttr('author', 'me');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is the same as setting both properties $book->title and[m
[32m+[m	[32m * $book->author. Sometimes a chained notation can improve the[m
[32m+[m	[32m * readability of the code.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property the property of the bean[m
[32m+[m	[32m * @param mixed  $value    the value you want to set[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setAttr( $property, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->$property = $value;[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convience method.[m
[32m+[m	[32m * Unsets all properties in the internal properties array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean->property = 1;[m
[32m+[m	[32m * $bean->unsetAll( array( 'property' ) );[m
[32m+[m	[32m * $bean->property; //NULL[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above the 'property' of the bean will be[m
[32m+[m	[32m * unset, resulting in the getter returning NULL instead of 1.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $properties properties you want to unset.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function unsetAll( $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $properties as $prop ) {[m
[32m+[m			[32mif ( isset( $this->properties[$prop] ) ) {[m
[32m+[m				[32munset( $this->properties[$prop] );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns original (old) value of a property.[m
[32m+[m	[32m * You can use this method to see what has changed in a[m
[32m+[m	[32m * bean. The original value of a property is the value that[m
[32m+[m	[32m * this property has had since the bean has been retrieved[m
[32m+[m	[32m * from the databases.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->title = 'new title';[m
[32m+[m	[32m * $oldTitle = $book->old('title');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example shows how to use the old() method.[m
[32m+[m	[32m * Here we set the title property of the bean to 'new title', then[m
[32m+[m	[32m * we obtain the original value using old('title') and store it in[m
[32m+[m	[32m * a variable $oldTitle.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the property you want the old value of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function old( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = $this->getMeta( 'sys.orig', array() );[m
[32m+[m
[32m+[m		[32mif ( array_key_exists( $property, $old ) ) {[m
[32m+[m			[32mreturn $old[$property];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns TRUE if the bean has been changed, or FALSE otherwise.[m
[32m+[m	[32m * Same as $bean->getMeta('tainted');[m
[32m+[m	[32m * Note that a bean becomes tainted as soon as you retrieve a list from[m
[32m+[m	[32m * the bean. This is because the bean lists are arrays and the bean cannot[m
[32m+[m	[32m * determine whether you have made modifications to a list so RedBeanPHP[m
[32m+[m	[32m * will mark the whole bean as tainted.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isTainted()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->getMeta( 'tainted' );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns TRUE if the value of a certain property of the bean has been changed and[m
[32m+[m	[32m * FALSE otherwise.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that this method will return TRUE if applied to a loaded list.[m
[32m+[m	[32m * Also note that this method keeps track of the bean's history regardless whether[m
[32m+[m	[32m * it has been stored or not. Storing a bean does not undo it's history,[m
[32m+[m	[32m * to clean the history of a bean use: clearHistory().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $property name of the property you want the change-status of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function hasChanged( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( array_key_exists( $property, $this->properties ) ) ?[m
[32m+[m			[32m$this->old( $property ) != $this->properties[$property] : FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns TRUE if the specified list exists, has been loaded[m
[32m+[m	[32m * and has been changed:[m
[32m+[m	[32m * beans have been added or deleted.[m
[32m+[m	[32m * This method will not tell you anything about[m
[32m+[m	[32m * the state of the beans in the list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->hasListChanged( 'ownPage' ); // FALSE[m
[32m+[m	[32m * array_pop( $book->ownPageList );[m
[32m+[m	[32m * $book->hasListChanged( 'ownPage' ); // TRUE[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example, the first time we ask whether the[m
[32m+[m	[32m * own-page list has been changed we get FALSE. Then we pop[m
[32m+[m	[32m * a page from the list and the hasListChanged() method returns TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $property name of the list to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function hasListChanged( $property )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !array_key_exists( $property, $this->properties ) ) return FALSE;[m
[32m+[m		[32m$diffAdded = array_diff_assoc( $this->properties[$property], $this->__info['sys.shadow.'.$property] );[m
[32m+[m		[32mif ( count( $diffAdded ) ) return TRUE;[m
[32m+[m		[32m$diffMissing = array_diff_assoc( $this->__info['sys.shadow.'.$property], $this->properties[$property] );[m
[32m+[m		[32mif ( count( $diffMissing ) ) return TRUE;[m
[32m+[m		[32mreturn FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Clears (syncs) the history of the bean.[m
[32m+[m	[32m * Resets all shadow values of the bean to their current value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book->title = 'book';[m
[32m+[m	[32m * echo $book->hasChanged( 'title' ); //TRUE[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * echo $book->hasChanged( 'title' ); //TRUE[m
[32m+[m	[32m * $book->clearHistory();[m
[32m+[m	[32m * echo $book->hasChanged( 'title' ); //FALSE[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that even after store(), the history of the bean still[m
[32m+[m	[32m * contains the act of changing the title of the book.[m
[32m+[m	[32m * Only after invoking clearHistory() will the history of the bean[m
[32m+[m	[32m * be cleared and will hasChanged() return FALSE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function clearHistory()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->__info['sys.orig'] = array();[m
[32m+[m		[32mforeach( $this->properties as $key => $value ) {[m
[32m+[m			[32mif ( is_scalar($value) ) {[m
[32m+[m				[32m$this->__info['sys.orig'][$key] = $value;[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$this->__info['sys.shadow.'.$key] = $value;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->__info[ 'changelist' ] = array();[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Creates a N-M relation by linking an intermediate bean.[m
[32m+[m	[32m * This method can be used to quickly connect beans using indirect[m
[32m+[m	[32m * relations. For instance, given an album and a song you can connect the two[m
[32m+[m	[32m * using a track with a number like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $album->link('track', array('number'=>1))->song = $song;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * or:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $album->link($trackBean)->song = $song;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * What this method does is adding the link bean to the own-list, in this case[m
[32m+[m	[32m * ownTrack. If the first argument is a string and the second is an array or[m
[32m+[m	[32m * a JSON string then the linking bean gets dispensed on-the-fly as seen in[m
[32m+[m	[32m * example #1. After preparing the linking bean, the bean is returned thus[m
[32m+[m	[32m * allowing the chained setter: ->song = $song.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|OODBBean $typeOrBean    type of bean to dispense or the full bean[m
[32m+[m	[32m * @param string|array    $qualification JSON string or array (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function link( $typeOrBean, $qualification = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_string( $typeOrBean ) ) {[m
[32m+[m			[32m$typeOrBean = AQueryWriter::camelsSnake( $typeOrBean );[m
[32m+[m			[32m$bean = $this->beanHelper->getToolBox()->getRedBean()->dispense( $typeOrBean );[m
[32m+[m			[32mif ( is_string( $qualification ) ) {[m
[32m+[m				[32m$data = json_decode( $qualification, TRUE );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$data = $qualification;[m
[32m+[m			[32m}[m
[32m+[m			[32mforeach ( $data as $key => $value ) {[m
[32m+[m				[32m$bean->$key = $value;[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$bean = $typeOrBean;[m
[32m+[m		[32m}[m
[32m+[m		[32m$list = 'own' . ucfirst( $bean->getMeta( 'type' ) );[m
[32m+[m		[32marray_push( $this->$list, $bean );[m
[32m+[m		[32mreturn $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a bean of the given type with the same ID of as[m
[32m+[m	[32m * the current one. This only happens in a one-to-one relation.[m
[32m+[m	[32m * This is as far as support for 1-1 goes in RedBeanPHP. This[m
[32m+[m	[32m * method will only return a reference to the bean, changing it[m
[32m+[m	[32m * and storing the bean will not update the related one-bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $author = R::load( 'author', $id );[m
[32m+[m	[32m * $biography = $author->one( 'bio' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example loads the biography associated with the author[m
[32m+[m	[32m * using a one-to-one relation. These relations are generally not[m
[32m+[m	[32m * created (nor supported) by RedBeanPHP.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  $type type of bean to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function one( $type ) {[m
[32m+[m		[32mreturn $this->beanHelper[m
[32m+[m			[32m->getToolBox()[m
[32m+[m			[32m->getRedBean()[m
[32m+[m			[32m->load( $type, $this->id );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Reloads the bean.[m
[32m+[m	[32m * Returns the same bean freshly loaded from the database.[m
[32m+[m	[32m * This method is equal to the following code:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $id = $bean->id;[m
[32m+[m	[32m * $type = $bean->getMeta( 'type' );[m
[32m+[m	[32m * $bean = R::load( $type, $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is just a convenience method to reload beans[m
[32m+[m	[32m * quickly.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::exec( ...update query... );[m
[32m+[m	[32m * $book = $book->fresh();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The code snippet above illustrates how to obtain changes[m
[32m+[m	[32m * caused by an UPDATE query, simply by reloading the bean using[m
[32m+[m	[32m * the fresh() method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function fresh()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->beanHelper[m
[32m+[m			[32m->getToolbox()[m
[32m+[m			[32m->getRedBean()[m
[32m+[m			[32m->load( $this->getMeta( 'type' ), $this->properties['id'] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Registers a association renaming globally.[m
[32m+[m	[32m * Use via() and link() to associate shared beans using a[m
[32m+[m	[32m * 3rd bean that will act as an intermediate type. For instance[m
[32m+[m	[32m * consider an employee and a project. We could associate employees[m
[32m+[m	[32m * with projects using a sharedEmployeeList. But, maybe there is more[m
[32m+[m	[32m * to the relationship than just the association. Maybe we want[m
[32m+[m	[32m * to qualify the relation between a project and an employee with[m
[32m+[m	[32m * a role: 'developer', 'designer', 'tester' and so on. In that case,[m
[32m+[m	[32m * it might be better to introduce a new concept to reflect this:[m
[32m+[m	[32m * the participant. However, we still want the flexibility to[m
[32m+[m	[32m * query our employees in one go. This is where link() and via()[m
[32m+[m	[32m * can help. You can still introduce the more applicable[m
[32m+[m	[32m * concept (participant) and have your easy access to the shared beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $Anna = R::dispense( 'employee' );[m
[32m+[m	[32m * $Anna->badge   = 'Anna';[m
[32m+[m	[32m * $project = R::dispense( 'project' );[m
[32m+[m	[32m * $project->name = 'x';[m
[32m+[m	[32m * $Anna->link( 'participant', array([m
[32m+[m	[32m *	 'arole' => 'developer'[m
[32m+[m	[32m *	) )->project = $project;[m
[32m+[m	[32m * R::storeAll( array( $project,  $Anna )  );[m
[32m+[m	[32m * $employees = $project[m
[32m+[m	[32m *	->with(' ORDER BY badge ASC ')[m
[32m+[m	[32m *  ->via( 'participant' )[m
[32m+[m	[32m *  ->sharedEmployee;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This piece of code creates a project and an employee.[m
[32m+[m	[32m * It then associates the two using a via-relation called[m
[32m+[m	[32m * 'participant' ( employee <-> participant <-> project ).[m
[32m+[m	[32m * So, there will be a table named 'participant' instead of[m
[32m+[m	[32m * a table named 'employee_project'. Using the via() method, the[m
[32m+[m	[32m * employees associated with the project are retrieved 'via'[m
[32m+[m	[32m * the participant table (and an SQL snippet to order them by badge).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $via type you wish to use for shared lists[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function via( $via )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->via = AQueryWriter::camelsSnake( $via );[m
[32m+[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts all own beans of type $type.[m
[32m+[m	[32m * Also works with alias(), with() and withCondition().[m
[32m+[m	[32m * Own-beans or xOwn-beans (exclusively owned beans) are beans[m
[32m+[m	[32m * that have been associated using a one-to-many relation. They can[m
[32m+[m	[32m * be accessed through the ownXList where X is the type of the[m
[32m+[m	[32m * associated beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $Bill->alias( 'author' )[m
[32m+[m	[32m *      ->countOwn( 'book' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above counts all the books associated with 'author'[m
[32m+[m	[32m * $Bill.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type the type of bean you want to count[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countOwn( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $this->beau( $type );[m
[32m+[m		[32mif ( $this->aliasName ) {[m
[32m+[m			[32m$myFieldLink     = $this->aliasName . '_id';[m
[32m+[m			[32m$this->aliasName = NULL;[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$myFieldLink = $this->__info['type'] . '_id';[m
[32m+[m		[32m}[m
[32m+[m		[32m$count = 0;[m
[32m+[m		[32mif ( $this->getID() ) {[m
[32m+[m			[32mreset( $this->withParams );[m
[32m+[m			[32m$firstKey = count( $this->withParams ) > 0[m
[32m+[m				[32m? key( $this->withParams )[m
[32m+[m				[32m: 0;[m
[32m+[m			[32mif ( is_int( $firstKey ) ) {[m
[32m+[m				[32m$sql = "{$myFieldLink} = ? {$this->withSql}";[m
[32m+[m				[32m$bindings = array_merge( array( $this->getID() ), $this->withParams );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$sql = "{$myFieldLink} = :slot0 {$this->withSql}";[m
[32m+[m				[32m$bindings           = $this->withParams;[m
[32m+[m				[32m$bindings[':slot0'] = $this->getID();[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( !self::$useFluidCount ) {[m
[32m+[m				[32m$count = $this->beanHelper->getToolbox()->getWriter()->queryRecordCount( $type, array(), $sql, $bindings );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$count = $this->beanHelper->getToolbox()->getRedBean()->count( $type, $sql, $bindings );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->clearModifiers();[m
[32m+[m		[32mreturn (int) $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts all shared beans of type $type.[m
[32m+[m	[32m * Also works with via(), with() and withCondition().[m
[32m+[m	[32m * Shared beans are beans that have an many-to-many relation.[m
[32m+[m	[32m * They can be accessed using the sharedXList, where X the[m
[32m+[m	[32m * type of the shared bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book = R::dispense( 'book' );[m
[32m+[m	[32m * $book->sharedPageList = R::dispense( 'page', 5 );[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * echo $book->countShared( 'page' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The code snippet above will output '5', because there[m
[32m+[m	[32m * are 5 beans of type 'page' in the shared list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean you wish to count[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countShared( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$toolbox = $this->beanHelper->getToolbox();[m
[32m+[m		[32m$redbean = $toolbox->getRedBean();[m
[32m+[m		[32m$writer  = $toolbox->getWriter();[m
[32m+[m		[32mif ( $this->via ) {[m
[32m+[m			[32m$oldName = $writer->getAssocTable( array( $this->__info['type'], $type ) );[m
[32m+[m			[32mif ( $oldName !== $this->via ) {[m
[32m+[m				[32m//set the new renaming rule[m
[32m+[m				[32m$writer->renameAssocTable( $oldName, $this->via );[m
[32m+[m				[32m$this->via = NULL;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$type  = $this->beau( $type );[m
[32m+[m		[32m$count = 0;[m
[32m+[m		[32mif ( $this->getID() ) {[m
[32m+[m			[32m$count = $redbean->getAssociationManager()->relatedCount( $this, $type, $this->withSql, $this->withParams );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->clearModifiers();[m
[32m+[m		[32mreturn (integer) $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Iterates through the specified own-list and[m
[32m+[m	[32m * fetches all properties (with their type) and[m
[32m+[m	[32m * returns the references.[m
[32m+[m	[32m * Use this method to quickly load indirectly related[m
[32m+[m	[32m * beans in an own-list. Whenever you cannot use a[m
[32m+[m	[32m * shared-list this method offers the same convenience[m
[32m+[m	[32m * by aggregating the parent beans of all children in[m
[32m+[m	[32m * the specified own-list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $quest->aggr( 'xownQuestTarget', 'target', 'quest' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Loads (in batch) and returns references to all[m
[32m+[m	[32m * quest beans residing in the $questTarget->target properties[m
[32m+[m	[32m * of each element in the xownQuestTargetList.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $list     the list you wish to process[m
[32m+[m	[32m * @param string $property the property to load[m
[32m+[m	[32m * @param string $type     the type of bean residing in this property (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function &aggr( $list, $property, $type = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->via = NULL;[m
[32m+[m		[32m$ids = $beanIndex = $references = array();[m
[32m+[m
[32m+[m		[32mif ( strlen( $list ) < 4 ) throw new RedException('Invalid own-list.');[m
[32m+[m		[32mif ( strpos( $list, 'own') !== 0 ) throw new RedException('Only own-lists can be aggregated.');[m
[32m+[m		[32mif ( !ctype_upper( substr( $list, 3, 1 ) ) ) throw new RedException('Invalid own-list.');[m
[32m+[m
[32m+[m		[32mif ( is_null( $type ) ) $type = $property;[m
[32m+[m
[32m+[m		[32mforeach( $this->$list as $bean ) {[m
[32m+[m			[32m$field = $property . '_id';[m
[32m+[m			[32mif ( isset( $bean->$field)  ) {[m
[32m+[m				[32m$ids[] = $bean->$field;[m
[32m+[m				[32m$beanIndex[$bean->$field] = $bean;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$beans = $this->beanHelper->getToolBox()->getRedBean()->batch( $type, $ids );[m
[32m+[m
[32m+[m		[32m//now preload the beans as well[m
[32m+[m		[32mforeach( $beans as $bean ) {[m
[32m+[m			[32m$beanIndex[$bean->id]->setProperty( $property, $bean );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mforeach( $beanIndex as $indexedBean ) {[m
[32m+[m			[32m$references[] = $indexedBean->$property;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $references;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tests whether the database identities of two beans are equal.[m
[32m+[m	[32m * Two beans are considered 'equal' if:[m
[32m+[m	[32m *[m
[32m+[m	[32m * a. the types of the beans match[m
[32m+[m	[32m * b. the ids of the beans match[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns TRUE if the beans are considered equal according to this[m
[32m+[m	[32m * specification and FALSE otherwise.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $coffee->fetchAs( 'flavour' )->taste->equals([m
[32m+[m	[32m *    R::enum('flavour:mocca')[m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above compares the flavour label 'mocca' with[m
[32m+[m	[32m * the flavour label attachec to the $coffee bean. This illustrates[m
[32m+[m	[32m * how to use equals() with RedBeanPHP-style enums.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|null $bean other bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function equals(OODBBean $bean)[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_null($bean) ) return false;[m
[32m+[m
[32m+[m		[32mreturn (bool) ([m
[32m+[m			[32m   ( (string) $this->properties['id'] === (string) $bean->properties['id'] )[m
[32m+[m			[32m&& ( (string) $this->__info['type']   === (string) $bean->__info['type']   )[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Magic method jsonSerialize,[m
[32m+[m	[32m * implementation for the \JsonSerializable interface,[m
[32m+[m	[32m * this method gets called by json_encode and[m
[32m+[m	[32m * facilitates a better JSON representation[m
[32m+[m	[32m * of the bean. Exports the bean on JSON serialization,[m
[32m+[m	[32m * for the JSON fans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Models can override jsonSerialize (issue #651) by[m
[32m+[m	[32m * implementing a __jsonSerialize method which should return[m
[32m+[m	[32m * an array. The __jsonSerialize override gets called with[m
[32m+[m	[32m * the @ modifier to prevent errors or warnings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see  http://php.net/manual/en/class.jsonserializable.php[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32m #[\ReturnTypeWillChange][m
[32m+[m	[32mpublic function jsonSerialize()[m
[32m+[m	[32m{[m
[32m+[m		[32m$json = $this->__call( '@__jsonSerialize', array( ) );[m
[32m+[m
[32m+[m		[32mif ( $json !== NULL ) {[m
[32m+[m			[32mreturn $json;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this->export();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Observer as Observer;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Observable[m
[32m+[m[32m * Base class for Observables[m
[32m+[m[32m *[m
[32m+[m[32m * @file            RedBeanPHP/Observable.php[m
[32m+[m[32m * @author          Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license         BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Observable { //bracket must be here - otherwise coverage software does not understand.[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate $observers = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Implementation of the Observer Pattern.[m
[32m+[m	[32m * Adds an event listener to the observable object.[m
[32m+[m	[32m * First argument should be the name of the event you wish to listen for.[m
[32m+[m	[32m * Second argument should be the object that wants to be notified in case[m
[32m+[m	[32m * the event occurs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $eventname event identifier[m
[32m+[m	[32m * @param Observer $observer  observer instance[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addEventListener( $eventname, Observer $observer )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset( $this->observers[$eventname] ) ) {[m
[32m+[m			[32m$this->observers[$eventname] = array();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( in_array( $observer, $this->observers[$eventname] ) ) {[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->observers[$eventname][] = $observer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Notifies listeners.[m
[32m+[m	[32m * Sends the signal $eventname, the event identifier and a message object[m
[32m+[m	[32m * to all observers that have been registered to receive notification for[m
[32m+[m	[32m * this event. Part of the observer pattern implementation in RedBeanPHP.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $eventname event you want signal[m
[32m+[m	[32m * @param mixed  $info      message object to send along[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function signal( $eventname, $info )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset( $this->observers[$eventname] ) ) {[m
[32m+[m			[32m$this->observers[$eventname] = array();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mforeach ( $this->observers[$eventname] as $observer ) {[m
[32m+[m			[32m$observer->onEvent( $eventname, $info );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Observer.[m
[32m+[m[32m *[m
[32m+[m[32m * Interface for Observer object. Implementation of the[m
[32m+[m[32m * observer pattern.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Observer.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m * @desc    Part of the observer pattern in RedBean[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Observer[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * An observer object needs to be capable of receiving[m
[32m+[m	[32m * notifications. Therefore the observer needs to implement the[m
[32m+[m	[32m * onEvent method with two parameters: the event identifier specifying the[m
[32m+[m	[32m * current event and a message object (in RedBeanPHP this can also be a bean).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $eventname event identifier[m
[32m+[m	[32m * @param mixed  $bean      a message sent along with the notification[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function onEvent( $eventname, $bean );[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Adapter Interface.[m
[32m+[m[32m * Describes the API for a RedBeanPHP Database Adapter.[m
[32m+[m[32m * This interface defines the API contract for[m
[32m+[m[32m * a RedBeanPHP Database Adapter.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Adapter.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Adapter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Should returns a string containing the most recent SQL query[m
[32m+[m	[32m * that has been processed by the adapter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getSQL();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes an SQL Statement using an array of values to bind[m
[32m+[m	[32m * If $noevent is TRUE then this function will not signal its[m
[32m+[m	[32m * observers to notify about the SQL execution; this to prevent[m
[32m+[m	[32m * infinite recursion when using observers.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array   $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m * @param boolean $noevent  no event firing[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function exec( $sql, $bindings = array(), $noevent = FALSE );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes an SQL Query and returns a resultset.[m
[32m+[m	[32m * This method returns a multi dimensional resultset similar to getAll[m
[32m+[m	[32m * The values array can be used to bind values to the place holders in the[m
[32m+[m	[32m * SQL query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function get( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes an SQL Query and returns a resultset.[m
[32m+[m	[32m * This method returns a single row (one array) resultset.[m
[32m+[m	[32m * The values array can be used to bind values to the place holders in the[m
[32m+[m	[32m * SQL query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getRow( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes an SQL Query and returns a resultset.[m
[32m+[m	[32m * This method returns a single column (one array) resultset.[m
[32m+[m	[32m * The values array can be used to bind values to the place holders in the[m
[32m+[m	[32m * SQL query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCol( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes an SQL Query and returns a resultset.[m
[32m+[m	[32m * This method returns a single cell, a scalar value as the resultset.[m
[32m+[m	[32m * The values array can be used to bind values to the place holders in the[m
[32m+[m	[32m * SQL query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCell( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes the SQL query specified in $sql and indexes[m
[32m+[m	[32m * the row by the first column.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssoc( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Executes the SQL query specified in $sql and returns[m
[32m+[m	[32m * an associative array where the column names are the keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      Sstring containing SQL code for databaseQL[m
[32m+[m	[32m * @param array  $bindings values to bind[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssocRow( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the latest insert ID.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getInsertID();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of rows that have been[m
[32m+[m	[32m * affected by the last update statement.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAffectedRows();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a database agnostic Cursor object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      string containing SQL code for database[m
[32m+[m	[32m * @param array  $bindings array of values to bind to parameters in query string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Cursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCursor( $sql, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the original database resource. This is useful if you want to[m
[32m+[m	[32m * perform operations on the driver directly instead of working with the[m
[32m+[m	[32m * adapter. RedBean will only access the adapter and never to talk[m
[32m+[m	[32m * directly to the driver though.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabase();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method is part of the RedBean Transaction Management[m
[32m+[m	[32m * mechanisms.[m
[32m+[m	[32m * Starts a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function startTransaction();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method is part of the RedBean Transaction Management[m
[32m+[m	[32m * mechanisms.[m
[32m+[m	[32m * Commits the transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function commit();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method is part of the RedBean Transaction Management[m
[32m+[m	[32m * mechanisms.[m
[32m+[m	[32m * Rolls back the transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function rollback();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Closes database connection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets a driver specific option.[m
[32m+[m	[32m * Using this method you can access driver-specific functions.[m
[32m+[m	[32m * If the selected option exists the value will be passed and[m
[32m+[m	[32m * this method will return boolean TRUE, otherwise it will return[m
[32m+[m	[32m * boolean FALSE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $optionKey   option key[m
[32m+[m	[32m * @param string $optionValue option value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setOption( $optionKey, $optionValue );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the version string from the database server.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabaseServerVersion();[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Adapter {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Observable as Observable;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\Driver as Driver;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * DBAdapter (Database Adapter)[m
[32m+[m[32m *[m
[32m+[m[32m * An adapter class to connect various database systems to RedBean[m
[32m+[m[32m * Database Adapter Class. The task of the database adapter class is to[m
[32m+[m[32m * communicate with the database driver. You can use all sorts of database[m
[32m+[m[32m * drivers with RedBeanPHP. The default database drivers that ships with[m
[32m+[m[32m * the RedBeanPHP library is the RPDO driver ( which uses the PHP Data Objects[m
[32m+[m[32m * Architecture aka PDO ).[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Adapter/DBAdapter.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass DBAdapter extends Observable implements Adapter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Driver[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate $db = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate $sql = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Creates an instance of the RedBean Adapter Class.[m
[32m+[m	[32m * This class provides an interface for RedBean to work[m
[32m+[m	[32m * with ADO compatible DB instances.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Driver $database ADO Compatible DB Instance[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( $database )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->db = $database;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a string containing the most recent SQL query[m
[32m+[m	[32m * processed by the database adapter, thus conforming to the[m
[32m+[m	[32m * interface:[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Adapter::getSQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * Methods like get(), getRow() and exec() cause this SQL cache[m
[32m+[m	[32m * to get filled. If no SQL query has been processed yet this function[m
[32m+[m	[32m * will return an empty string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getSQL()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->sql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::exec[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function exec( $sql, $bindings = array(), $noevent = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !$noevent ) {[m
[32m+[m			[32m$this->sql = $sql;[m
[32m+[m			[32m$this->signal( 'sql_exec', $this );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this->db->Execute( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::get[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function get( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m		[32m$this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32mreturn $this->db->GetAll( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getRow[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getRow( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m		[32m$this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32mreturn $this->db->GetRow( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getCol[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCol( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m		[32m$this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32mreturn $this->db->GetCol( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getAssoc[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssoc( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m
[32m+[m		[32m$this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32m$rows  = $this->db->GetAll( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( !$rows ) return array();[m
[32m+[m
[32m+[m		[32m$assoc = array();[m
[32m+[m
[32m+[m		[32mforeach ( $rows as $row ) {[m
[32m+[m			[32mif ( empty( $row ) ) continue;[m
[32m+[m
[32m+[m			[32m$key   = array_shift( $row );[m
[32m+[m			[32mswitch ( count( $row ) ) {[m
[32m+[m				[32mcase 0:[m
[32m+[m					[32m$value = $key;[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mcase 1:[m
[32m+[m					[32m$value = reset( $row );[m
[32m+[m					[32mbreak;[m
[32m+[m				[32mdefault:[m
[32m+[m					[32m$value = $row;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$assoc[$key] = $value;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $assoc;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getAssocRow[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssocRow($sql, $bindings = array())[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m		[32m$this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32mreturn $this->db->GetAssocRow( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getCell[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCell( $sql, $bindings = array(), $noSignal = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sql = $sql;[m
[32m+[m
[32m+[m		[32mif ( !$noSignal ) $this->signal( 'sql_exec', $this );[m
[32m+[m
[32m+[m		[32mreturn $this->db->GetOne( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getCursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCursor( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->db->GetCursor( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getInsertID[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getInsertID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->db->getInsertID();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getAffectedRows[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAffectedRows()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->db->Affected_Rows();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getDatabase[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabase()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->db;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::startTransaction[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function startTransaction()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->db->StartTrans();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::commit[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function commit()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->db->CommitTrans();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::rollback[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function rollback()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->db->FailTrans();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::close.[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->db->close();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets initialization code for connection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param callable $code[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setInitCode($code) {[m
[32m+[m		[32m$this->db->setInitCode($code);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::setOption[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setOption( $optionKey, $optionValue ) {[m
[32m+[m		[32mif ( method_exists( $this->db, $optionKey ) ) {[m
[32m+[m			[32mcall_user_func( array( $this->db, $optionKey ), $optionValue );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Adapter::getDatabaseServerVersion[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabaseServerVersion()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->db->DatabaseServerVersion();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Database Cursor Interface.[m
[32m+[m[32m * A cursor is used by Query Writers to fetch Query Result rows[m
[32m+[m[32m * one row at a time. This is useful if you expect the result set to[m
[32m+[m[32m * be quite large. This interface dscribes the API of a database[m
[32m+[m[32m * cursor. There can be multiple implementations of the Cursor,[m
[32m+[m[32m * by default RedBeanPHP offers the PDOCursor for drivers shipping[m
[32m+[m[32m * with RedBeanPHP and the NULLCursor.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Cursor.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Cursor[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Should retrieve the next row of the result set.[m
[32m+[m	[32m * This method is used to iterate over the result set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getNextItem();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Resets the cursor by closing it and re-executing the statement.[m
[32m+[m	[32m * This reloads fresh data from the database for the whole collection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function reset();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Closes the database cursor.[m
[32m+[m	[32m * Some databases require a cursor to be closed before executing[m
[32m+[m	[32m * another statement/opening a new cursor.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close();[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Cursor {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Cursor as Cursor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * PDO Database Cursor[m
[32m+[m[32m * Implementation of PDO Database Cursor.[m
[32m+[m[32m * Used by the BeanCollection to fetch one bean at a time.[m
[32m+[m[32m * The PDO Cursor is used by Query Writers to support retrieval[m
[32m+[m[32m * of large bean collections. For instance, this class is used to[m
[32m+[m[32m * implement the findCollection()/BeanCollection functionality.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Cursor/PDOCursor.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass PDOCursor implements Cursor[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var PDOStatement[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $res;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $fetchStyle;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, creates a new instance of a PDO Database Cursor.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param PDOStatement $res        the PDO statement[m
[32m+[m	[32m * @param string       $fetchStyle fetch style constant to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( \PDOStatement $res, $fetchStyle )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->res = $res;[m
[32m+[m		[32m$this->fetchStyle = $fetchStyle;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::getNextItem[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getNextItem()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->res->fetch();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::reset[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function reset()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->close();[m
[32m+[m		[32m$this->res->execute();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::close[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->res->closeCursor();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Cursor {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Cursor as Cursor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * NULL Database Cursor[m
[32m+[m[32m * Implementation of the NULL Cursor.[m
[32m+[m[32m * Used for an empty BeanCollection. This Cursor[m
[32m+[m[32m * can be used for instance if a query fails but the interface[m
[32m+[m[32m * demands a cursor to be returned.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Cursor/NULLCursor.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass NullCursor implements Cursor[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::getNextItem[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getNextItem()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::reset[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function reset()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see Cursor::close[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Cursor as Cursor;[m
[32m+[m[32muse RedBeanPHP\Repository as Repository;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * BeanCollection.[m
[32m+[m[32m *[m
[32m+[m[32m * The BeanCollection represents a collection of beans and[m
[32m+[m[32m * makes it possible to use database cursors. The BeanCollection[m
[32m+[m[32m * has a method next() to obtain the first, next and last bean[m
[32m+[m[32m * in the collection. The BeanCollection does not implement the array[m
[32m+[m[32m * interface nor does it try to act like an array because it cannot go[m
[32m+[m[32m * backward or rewind itself.[m
[32m+[m[32m *[m
[32m+[m[32m * Use the BeanCollection for large datasets where skip/limit is not an[m
[32m+[m[32m * option. Keep in mind that ID-marking (querying a start ID) is a decent[m
[32m+[m[32m * alternative though.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/BeanCollection.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass BeanCollection[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Cursor[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $cursor = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Repository[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $repository = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $type = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $mask = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, creates a new instance of the BeanCollection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string     $type       type of beans in this collection[m
[32m+[m	[32m * @param Repository $repository repository to use to generate bean objects[m
[32m+[m	[32m * @param Cursor     $cursor     cursor object to use[m
[32m+[m	[32m * @param string     $mask       meta mask to apply (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( $type, Repository $repository, Cursor $cursor, $mask = '__meta' )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->type = $type;[m
[32m+[m		[32m$this->cursor = $cursor;[m
[32m+[m		[32m$this->repository = $repository;[m
[32m+[m		[32m$this->mask = $mask;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the next bean in the collection.[m
[32m+[m	[32m * If called the first time, this will return the first bean in the collection.[m
[32m+[m	[32m * If there are no more beans left in the collection, this method[m
[32m+[m	[32m * will return NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function next()[m
[32m+[m	[32m{[m
[32m+[m		[32m$row = $this->cursor->getNextItem();[m
[32m+[m		[32mif ( $row ) {[m
[32m+[m			[32m$beans = $this->repository->convertToBeans( $this->type, array( $row ), $this->mask );[m
[32m+[m			[32mreturn reset( $beans );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Resets the collection from the start, like a fresh() on a bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function reset()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->cursor->reset();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Closes the underlying cursor (needed for some databases).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function close()[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->cursor->close();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * QueryWriter[m
[32m+[m[32m * Interface for QueryWriters.[m
[32m+[m[32m * Describes the API for a QueryWriter.[m
[32m+[m[32m *[m
[32m+[m[32m * Terminology:[m
[32m+[m[32m *[m
[32m+[m[32m * - beautified property (a camelCased property, has to be converted first)[m
[32m+[m[32m * - beautified type (a camelCased type, has to be converted first)[m
[32m+[m[32m * - type (a bean type, corresponds directly to a table)[m
[32m+[m[32m * - property (a bean property, corresponds directly to a column)[m
[32m+[m[32m * - table (a checked and quoted type, ready for use in a query)[m
[32m+[m[32m * - column (a checked and quoted property, ready for use in query)[m
[32m+[m[32m * - tableNoQ (same as type, but in context of a database operation)[m
[32m+[m[32m * - columnNoQ (same as property, but in context of a database operation)[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface QueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * SQL filter constants[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_SQLFILTER_READ  = 'r';[m
[32m+[m	[32mconst C_SQLFILTER_WRITE = 'w';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Query Writer constants.[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_SQLSTATE_NO_SUCH_TABLE                  = 1;[m
[32m+[m	[32mconst C_SQLSTATE_NO_SUCH_COLUMN                 = 2;[m
[32m+[m	[32mconst C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION = 3;[m
[32m+[m	[32mconst C_SQLSTATE_LOCK_TIMEOUT                   = 4;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Define data type regions[m
[32m+[m	[32m *[m
[32m+[m	[32m * 00 - 80: normal data types[m
[32m+[m	[32m * 80 - 99: special data types, only scan/code if requested[m
[32m+[m	[32m * 99     : specified by user, don't change[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_DATATYPE_RANGE_SPECIAL   = 80;[m
[32m+[m	[32mconst C_DATATYPE_RANGE_SPECIFIED = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Define GLUE types for use with glueSQLCondition methods.[m
[32m+[m	[32m * Determines how to prefix a snippet of SQL before appending it[m
[32m+[m	[32m * to other SQL (or integrating it, mixing it otherwise).[m
[32m+[m	[32m *[m
[32m+[m	[32m * WHERE - glue as WHERE condition[m
[32m+[m	[32m * AND   - glue as AND condition[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_GLUE_WHERE = 1;[m
[32m+[m	[32mconst C_GLUE_AND   = 2;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * CTE Select Snippet[m
[32m+[m	[32m * Constants specifying select snippets for CTE queries[m
[32m+[m	[32m */[m
[32m+[m	[32m const C_CTE_SELECT_NORMAL = FALSE;[m
[32m+[m	[32m const C_CTE_SELECT_COUNT  = TRUE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Parses an sql string to create joins if needed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * For instance with $type = 'book' and $sql = ' @joined.author.name LIKE ? OR @joined.detail.title LIKE ? '[m
[32m+[m	[32m * parseJoin will return the following SQL:[m
[32m+[m	[32m * ' LEFT JOIN `author` ON `author`.id = `book`.author_id[m
[32m+[m	[32m *   LEFT JOIN `detail` ON `detail`.id = `book`.detail_id[m
[32m+[m	[32m *   WHERE author.name LIKE ? OR detail.title LIKE ? '[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this feature requires Narrow Field Mode to be activated (default).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note A default implementation is available in AQueryWriter[m
[32m+[m	[32m * unless a database uses very different SQL this should suffice.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string         $type the source type for the join[m
[32m+[m	[32m * @param string         $sql  the sql string to be parsed[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function parseJoin( $type, $sql );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Writes an SQL Snippet for a JOIN, returns the[m
[32m+[m	[32m * SQL snippet string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note A default implementation is available in AQueryWriter[m
[32m+[m	[32m * unless a database uses very different SQL this should suffice.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type         source type[m
[32m+[m	[32m * @param string  $targetType   target type (type to join)[m
[32m+[m	[32m * @param string  $leftRight    type of join (possible: 'LEFT', 'RIGHT' or 'INNER')[m
[32m+[m	[32m * @param string  $joinType     relation between joined tables (possible: 'parent', 'own', 'shared')[m
[32m+[m	[32m * @param boolean $firstOfChain is it the join of a chain (or the only join)[m
[32m+[m	[32m * @param string  $suffix       suffix to add for aliasing tables (for joining same table multiple times)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string $joinSQLSnippet[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function writeJoin( $type, $targetType, $leftRight, $joinType, $firstOfChain, $suffix );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Glues an SQL snippet to the beginning of a WHERE clause.[m
[32m+[m	[32m * This ensures users don't have to add WHERE to their query snippets.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The snippet gets prefixed with WHERE or AND[m
[32m+[m	[32m * if it starts with a condition.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the snippet does NOT start with a condition (or this function thinks so)[m
[32m+[m	[32m * the snippet is returned as-is.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The GLUE type determines the prefix:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * NONE  prefixes with WHERE[m
[32m+[m	[32m * * WHERE prefixes with WHERE and replaces AND if snippets starts with AND[m
[32m+[m	[32m * * AND   prefixes with AND[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method will never replace WHERE with AND since a snippet should never[m
[32m+[m	[32m * begin with WHERE in the first place. OR is not supported.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Only a limited set of clauses will be recognized as non-conditions.[m
[32m+[m	[32m * For instance beginning a snippet with complex statements like JOIN or UNION[m
[32m+[m	[32m * will not work. This is too complex for use in a snippet.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note A default implementation is available in AQueryWriter[m
[32m+[m	[32m * unless a database uses very different SQL this should suffice.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $sql  SQL Snippet[m
[32m+[m	[32m * @param integer $glue the GLUE type - how to glue (C_GLUE_WHERE or C_GLUE_AND)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function glueSQLCondition( $sql, $glue = NULL );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines if there is a LIMIT 1 clause in the SQL.[m
[32m+[m	[32m * If not, it will add a LIMIT 1. (used for findOne).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note A default implementation is available in AQueryWriter[m
[32m+[m	[32m * unless a database uses very different SQL this should suffice.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql query to scan and adjust[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function glueLimitOne( $sql );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the tables that are in the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTables();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will create a table for the bean.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean you want to create a table for[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function createTable( $type );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an array containing all the columns of the specified type.[m
[32m+[m	[32m * The format of the return array looks like this:[m
[32m+[m	[32m * $field => $type where $field is the name of the column and $type[m
[32m+[m	[32m * is a database specific description of the datatype.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean you want to obtain a column list of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getColumns( $type );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the Column Type Code (integer) that corresponds[m
[32m+[m	[32m * to the given value type. This method is used to determine the minimum[m
[32m+[m	[32m * column type required to represent the given value. There are two modes of[m
[32m+[m	[32m * operation: with or without special types. Scanning without special types[m
[32m+[m	[32m * requires the second parameter to be set to FALSE. This is useful when the[m
[32m+[m	[32m * column has already been created and prevents it from being modified to[m
[32m+[m	[32m * an incompatible type leading to data loss. Special types will be taken[m
[32m+[m	[32m * into account when a column does not exist yet (parameter is then set to TRUE).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Special column types are determines by the AQueryWriter constant[m
[32m+[m	[32m * C_DATA_TYPE_ONLY_IF_NOT_EXISTS (usually 80). Another 'very special' type is type[m
[32m+[m	[32m * C_DATA_TYPE_MANUAL (usually 99) which represents a user specified type. Although[m
[32m+[m	[32m * no special treatment has been associated with the latter for now.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $value                   value[m
[32m+[m	[32m * @param boolean $alsoScanSpecialForTypes take special types into account[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function scanType( $value, $alsoScanSpecialForTypes = FALSE );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will add a column to a table.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type   name of the table[m
[32m+[m	[32m * @param string  $column name of the column[m
[32m+[m	[32m * @param integer $field  data type for field[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addColumn( $type, $column, $field );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the Type Code for a Column Description.[m
[32m+[m	[32m * Given an SQL column description this method will return the corresponding[m
[32m+[m	[32m * code for the writer. If the include specials flag is set it will also[m
[32m+[m	[32m * return codes for special columns. Otherwise special columns will be identified[m
[32m+[m	[32m * as specified columns.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $typedescription description[m
[32m+[m	[32m * @param boolean $includeSpecials whether you want to get codes for special columns as well[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function code( $typedescription, $includeSpecials = FALSE );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will widen the column to the specified data type.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type     type / table that needs to be adjusted[m
[32m+[m	[32m * @param string  $column   column that needs to be altered[m
[32m+[m	[32m * @param integer $datatype target data type[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function widenColumn( $type, $column, $datatype );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects records from the database.[m
[32m+[m	[32m * This methods selects the records from the database that match the specified[m
[32m+[m	[32m * type, conditions (optional) and additional SQL snippet (optional).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       name of the table you want to query[m
[32m+[m	[32m * @param array  $conditions criteria ( $column => array( $values ) )[m
[32m+[m	[32m * @param string $addSql     additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings   bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecord( $type, $conditions = array(), $addSql = NULL, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects records from the database and returns a cursor.[m
[32m+[m	[32m * This methods selects the records from the database that match the specified[m
[32m+[m	[32m * type, conditions (optional) and additional SQL snippet (optional).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       name of the table you want to query[m
[32m+[m	[32m * @param array  $conditions criteria ( $column => array( $values ) )[m
[32m+[m	[32m * @param string $addSQL     additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings   bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Cursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordWithCursor( $type, $addSql = NULL, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns records through an intermediate type. This method is used to obtain records using a link table and[m
[32m+[m	[32m * allows the SQL snippets to reference columns in the link table for additional filtering or ordering.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sourceType source type, the reference type you want to use to fetch related items on the other side[m
[32m+[m	[32m * @param string $destType   destination type, the target type you want to get beans of[m
[32m+[m	[32m * @param mixed  $linkID     ID to use for the link table[m
[32m+[m	[32m * @param string $addSql     Additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings   Bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordRelated( $sourceType, $destType, $linkID, $addSql = '', $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the row that links $sourceType $sourcID to $destType $destID in an N-M relation.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sourceType source type, the first part of the link you're looking for[m
[32m+[m	[32m * @param string $destType   destination type, the second part of the link you're looking for[m
[32m+[m	[32m * @param string $sourceID   ID for the source[m
[32m+[m	[32m * @param string $destID     ID for the destination[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|null[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordLink( $sourceType, $destType, $sourceID, $destID );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts the number of records in the database that match the[m
[32m+[m	[32m * conditions and additional SQL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       name of the table you want to query[m
[32m+[m	[32m * @param array  $conditions criteria ( $column => array( $values ) )[m
[32m+[m	[32m * @param string $addSQL     additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings   bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordCount( $type, $conditions = array(), $addSql = NULL, $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of records linked through $linkType and satisfying the SQL in $addSQL/$bindings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sourceType source type[m
[32m+[m	[32m * @param string $targetType the thing you want to count[m
[32m+[m	[32m * @param mixed  $linkID     the of the source type[m
[32m+[m	[32m * @param string $addSQL     additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings   bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordCountRelated( $sourceType, $targetType, $linkID, $addSQL = '', $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all rows of specified type that have been tagged with one of the[m
[32m+[m	[32m * strings in the specified tag list array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that the additional SQL snippet can only be used for pagination,[m
[32m+[m	[32m * the SQL snippet will be appended to the end of the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type     the bean type you want to query[m
[32m+[m	[32m * @param array   $tagList  an array of strings, each string containing a tag title[m
[32m+[m	[32m * @param boolean $all      if TRUE only return records that have been associated with ALL the tags in the list[m
[32m+[m	[32m * @param string  $addSql   addition SQL snippet, for pagination[m
[32m+[m	[32m * @param array   $bindings parameter bindings for additional SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryTagged( $type, $tagList, $all = FALSE, $addSql = '', $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like queryTagged but only counts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type     the bean type you want to query[m
[32m+[m	[32m * @param array   $tagList  an array of strings, each string containing a tag title[m
[32m+[m	[32m * @param boolean $all      if TRUE only return records that have been associated with ALL the tags in the list[m
[32m+[m	[32m * @param string  $addSql   addition SQL snippet, for pagination[m
[32m+[m	[32m * @param array   $bindings parameter bindings for additional SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryCountTagged( $type, $tagList, $all = FALSE, $addSql = '', $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all parent rows or child rows of a specified row.[m
[32m+[m	[32m * Given a type specifier and a primary key id, this method returns either all child rows[m
[32m+[m	[32m * as defined by having <type>_id = id or all parent rows as defined per id = <type>_id[m
[32m+[m	[32m * taking into account an optional SQL snippet along with parameters.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The $select parameter can be used to adjust the select snippet of the query.[m
[32m+[m	[32m * Possible values are: C_CTE_SELECT_NORMAL (just select all columns, default), C_CTE_SELECT_COUNT[m
[32m+[m	[32m * (count rows) used for countParents and countChildren functions - or you can specify a[m
[32m+[m	[32m * string yourself like 'count(distinct brand)'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type     the bean type you want to query rows for[m
[32m+[m	[32m * @param integer $id       id of the reference row[m
[32m+[m	[32m * @param boolean $up       TRUE to query parent rows, FALSE to query child rows[m
[32m+[m	[32m * @param string  $addSql   optional SQL snippet to embed in the query[m
[32m+[m	[32m * @param array   $bindings parameter bindings for additional SQL snippet[m
[32m+[m	[32m * @param mixed   $select   Select Snippet to use when querying (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecursiveCommonTableExpression( $type, $id, $up = TRUE, $addSql = NULL, $bindings = array(), $select = QueryWriter::C_CTE_SELECT_NORMAL );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method should update (or insert a record), it takes[m
[32m+[m	[32m * a table name, a list of update values ( $field => $value ) and an[m
[32m+[m	[32m * primary key ID (optional). If no primary key ID is provided, an[m
[32m+[m	[32m * INSERT will take place.[m
[32m+[m	[32m * Returns the new ID.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type         name of the table to update[m
[32m+[m	[32m * @param array   $updatevalues list of update values[m
[32m+[m	[32m * @param integer $id           optional primary key ID value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function updateRecord( $type, $updatevalues, $id = NULL );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Deletes records from the database.[m
[32m+[m	[32m * @note $addSql is always prefixed with ' WHERE ' or ' AND .'[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       name of the table you want to query[m
[32m+[m	[32m * @param array  $conditions criteria ( $column => array( $values ) )[m
[32m+[m	[32m * @param string $addSql     additional SQL[m
[32m+[m	[32m * @param array  $bindings   bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function deleteRecord( $type, $conditions = array(), $addSql = '', $bindings = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Deletes all links between $sourceType and $destType in an N-M relation.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sourceType source type[m
[32m+[m	[32m * @param string $destType   destination type[m
[32m+[m	[32m * @param string $sourceID   source ID[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function deleteRelations( $sourceType, $destType, $sourceID );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueConstaint[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueIndex( $type, $columns );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will add a UNIQUE constraint index to a table on columns $columns.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type               target bean type[m
[32m+[m	[32m * @param array  $columnsPartOfIndex columns to include in index[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueConstraint( $type, $columns );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will check whether the SQL state is in the list of specified states[m
[32m+[m	[32m * and returns TRUE if it does appear in this list or FALSE if it[m
[32m+[m	[32m * does not. The purpose of this method is to translate the database specific state to[m
[32m+[m	[32m * a one of the constants defined in this class and then check whether it is in the list[m
[32m+[m	[32m * of standard states provided.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $state SQL state to consider[m
[32m+[m	[32m * @param array  $list  list of standardized SQL state constants to check against[m
[32m+[m	[32m * @param array  $extraDriverDetails Some databases communicate state information in a driver-specific format[m
[32m+[m	[32m *                                   rather than through the main sqlState code. For those databases, this extra[m
[32m+[m	[32m *                                   information can be used to determine the standardized state[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function sqlStateIn( $state, $list, $extraDriverDetails = array() );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will remove all beans of a certain type.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type bean type[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipe( $type );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will add a foreign key from type and field to[m
[32m+[m	[32m * target type and target field.[m
[32m+[m	[32m * The foreign key is created without an action. On delete/update[m
[32m+[m	[32m * no action will be triggered. The FK is only used to allow database[m
[32m+[m	[32m * tools to generate pretty diagrams and to make it easy to add actions[m
[32m+[m	[32m * later on.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type           type that will have a foreign key field[m
[32m+[m	[32m * @param  string $targetType     points to this type[m
[32m+[m	[32m * @param  string $property       field that contains the foreign key value[m
[32m+[m	[32m * @param  string $targetProperty field where the fk points to[m
[32m+[m	[32m * @param  string $isDep          whether target is dependent and should cascade on update/delete[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addFK( $type, $targetType, $property, $targetProperty, $isDep = FALSE );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method will add an index to a type and field with name[m
[32m+[m	[32m * $name.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type to add index to[m
[32m+[m	[32m * @param string $name     name of the new index[m
[32m+[m	[32m * @param string $property field to index[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addIndex( $type, $name, $property );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks and filters a database structure element like a table of column[m
[32m+[m	[32m * for safe use in a query. A database structure has to conform to the[m
[32m+[m	[32m * RedBeanPHP DB security policy which basically means only alphanumeric[m
[32m+[m	[32m * symbols are allowed. This security policy is more strict than conventional[m
[32m+[m	[32m * SQL policies and does therefore not require database specific escaping rules.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $databaseStructure name of the column/table to check[m
[32m+[m	[32m * @param boolean $noQuotes          TRUE to NOT put backticks or quotes around the string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function esc( $databaseStructure, $dontQuote = FALSE );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes all tables and views from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipeAll();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Renames an association. For instance if you would like to refer to[m
[32m+[m	[32m * album_song as: track you can specify this by calling this method like:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * renameAssociation('album_song','track')[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This allows:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $album->sharedSong[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * to add/retrieve beans from track instead of album_song.[m
[32m+[m	[32m * Also works for exportAll().[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method also accepts a single associative array as[m
[32m+[m	[32m * its first argument.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $fromType original type name, or array[m
[32m+[m	[32m * @param string       $toType   new type name (only if 1st argument is string)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function renameAssocTable( $fromType, $toType = NULL );[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the format for link tables.[m
[32m+[m	[32m * Given an array containing two type names this method returns the[m
[32m+[m	[32m * name of the link table to be used to store and retrieve[m
[32m+[m	[32m * association records. For instance, given two types: person and[m
[32m+[m	[32m * project, the corresponding link table might be: 'person_project'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  array $types two types array($type1, $type2)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssocTable( $types );[m
[32m+[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\QueryWriter {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP Abstract Query Writer.[m
[32m+[m[32m * Represents an abstract Database to RedBean[m
[32m+[m[32m * To write a driver for a different database for RedBean[m
[32m+[m[32m * Contains a number of functions all implementors can[m
[32m+[m[32m * inherit or override.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter/AQueryWriter.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mabstract class AQueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constant: Select Snippet 'FOR UPDATE'[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_SELECT_SNIPPET_FOR_UPDATE = 'FOR UPDATE';[m
[32m+[m	[32mconst C_DATA_TYPE_ONLY_IF_NOT_EXISTS = 80;[m
[32m+[m	[32mconst C_DATA_TYPE_MANUAL = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $sqlFilters = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $flagSQLFilterSafeMode = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $flagNarrowFieldMode = TRUE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $flagUseJSONColumns = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $enableISNULLConditions = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static $renames = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $defaultValue = 'NULL';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $quoteCharacter = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $flagUseCache = TRUE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $cache = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $maxCacheSizePerType = 20;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $sqlSelectSnippet = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic $typeno_sqltype = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var bool[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $noNuke = false;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets a data definition template to change the data[m
[32m+[m	[32m * creation statements per type.[m
[32m+[m	[32m *[m
[32m+[m	[32m * For instance to add  ROW_FORMAT=DYNAMIC to all MySQL tables[m
[32m+[m	[32m * upon creation:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $sql = $writer->getDDLTemplate( 'createTable', '*' );[m
[32m+[m	[32m * $writer->setDDLTemplate( 'createTable', '*', $sql . '  ROW_FORMAT=DYNAMIC ' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * For property-specific templates set $beanType to:[m
[32m+[m	[32m * account.username -- then the template will only be applied to SQL statements relating[m
[32m+[m	[32m * to that column/property.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     ( 'createTable' | 'widenColumn' | 'addColumn' )[m
[32m+[m	[32m * @param string $beanType ( type of bean or '*' to apply to all types )[m
[32m+[m	[32m * @param string $template SQL template, contains %s for slots[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setDDLTemplate( $type, $beanType, $template )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->DDLTemplates[ $type ][ $beanType ] = $template;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the specified data definition template.[m
[32m+[m	[32m * If no template can be found for the specified type, the template for[m
[32m+[m	[32m * '*' will be returned instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     ( 'createTable' | 'widenColumn' | 'addColumn' )[m
[32m+[m	[32m * @param string $beanType ( type of bean or '*' to apply to all types )[m
[32m+[m	[32m * @param string $property specify if you're looking for a property-specific template[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDDLTemplate( $type, $beanType = '*', $property = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$key = ( $property ) ? "{$beanType}.{$property}" : $beanType;[m
[32m+[m		[32mif ( isset( $this->DDLTemplates[ $type ][ $key ] ) ) {[m
[32m+[m			[32mreturn $this->DDLTemplates[ $type ][ $key ];[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( isset( $this->DDLTemplates[ $type ][ $beanType ] ) ) {[m
[32m+[m			[32mreturn $this->DDLTemplates[ $type ][ $beanType ];[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $this->DDLTemplates[ $type ][ '*' ];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles support for IS-NULL-conditions.[m
[32m+[m	[32m * If IS-NULL-conditions are enabled condition arrays[m
[32m+[m	[32m * for functions including findLike() are treated so that[m
[32m+[m	[32m * 'field' => NULL will be interpreted as field IS NULL[m
[32m+[m	[32m * instead of being skipped. Returns the previous[m
[32m+[m	[32m * value of the flag.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag TRUE or FALSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useISNULLConditions( $flag )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = self::$enableISNULLConditions;[m
[32m+[m		[32mself::$enableISNULLConditions = $flag;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles support for automatic generation of JSON columns.[m
[32m+[m	[32m * Using JSON columns means that strings containing JSON will[m
[32m+[m	[32m * cause the column to be created (not modified) as a JSON column.[m
[32m+[m	[32m * However it might also trigger exceptions if this means the DB attempts to[m
[32m+[m	[32m * convert a non-json column to a JSON column. Returns the previous[m
[32m+[m	[32m * value of the flag.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag TRUE or FALSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useJSONColumns( $flag )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = self::$flagUseJSONColumns;[m
[32m+[m		[32mself::$flagUseJSONColumns = $flag;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles support for nuke().[m
[32m+[m	[32m * Can be used to turn off the nuke() feature for security reasons.[m
[32m+[m	[32m * Returns the old flag value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag TRUE or FALSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function forbidNuke( $flag ) {[m
[32m+[m		[32m$old = self::$noNuke;[m
[32m+[m		[32mself::$noNuke = (bool) $flag;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a number can be treated like an int.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $value string representation of a certain value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function canBeTreatedAsInt( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn (bool) ( strval( $value ) === strval( intval( $value ) ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getAssocTableFormat[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getAssocTableFormat( $types )[m
[32m+[m	[32m{[m
[32m+[m		[32msort( $types );[m
[32m+[m
[32m+[m		[32m$assoc = implode( '_', $types );[m
[32m+[m
[32m+[m		[32mreturn ( isset( self::$renames[$assoc] ) ) ? self::$renames[$assoc] : $assoc;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::renameAssociation[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function renameAssociation( $from, $to = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $from ) ) {[m
[32m+[m			[32mforeach ( $from as $key => $value ) self::$renames[$key] = $value;[m
[32m+[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mself::$renames[$from] = $to;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Globally available service method for RedBeanPHP.[m
[32m+[m	[32m * Converts a camel cased string to a snake cased string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $camel camelCased string to convert to snake case[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function camelsSnake( $camel )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn strtolower( preg_replace( '/(?<=[a-z])([A-Z])|([A-Z])(?=[a-z])/', '_$1$2', $camel ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Globally available service method for RedBeanPHP.[m
[32m+[m	[32m * Converts a snake cased string to a camel cased string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $snake   snake_cased string to convert to camelCase[m
[32m+[m	[32m * @param boolean $dolphin exception for Ids - (bookId -> bookID)[m
[32m+[m	[32m *                         too complicated for the human mind, only dolphins can understand this[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function snakeCamel( $snake, $dolphinMode = false )[m
[32m+[m	[32m{[m
[32m+[m		[32m$camel = lcfirst( str_replace(' ', '', ucwords( str_replace('_', ' ', $snake ) ) ) );[m
[32m+[m		[32mif ( $dolphinMode ) {[m
[32m+[m			[32m$camel = preg_replace( '/(\w)Id$/', '$1ID', $camel );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $camel;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Clears renames.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function clearRenames()[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$renames = array();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles 'Narrow Field Mode'.[m
[32m+[m	[32m * In Narrow Field mode the queryRecord method will[m
[32m+[m	[32m * narrow its selection field to[m
[32m+[m	[32m *[m
[32m+[m	[32m * SELECT {table}.*[m
[32m+[m	[32m *[m
[32m+[m	[32m * instead of[m
[32m+[m	[32m *[m
[32m+[m	[32m * SELECT *[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is a better way of querying because it allows[m
[32m+[m	[32m * more flexibility (for instance joins). However if you need[m
[32m+[m	[32m * the wide selector for backward compatibility; use this method[m
[32m+[m	[32m * to turn OFF Narrow Field Mode by passing FALSE.[m
[32m+[m	[32m * Default is TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $narrowField TRUE = Narrow Field FALSE = Wide Field[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setNarrowFieldMode( $narrowField )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$flagNarrowFieldMode = (boolean) $narrowField;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets SQL filters.[m
[32m+[m	[32m * This is a lowlevel method to set the SQL filter array.[m
[32m+[m	[32m * The format of this array is:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 		'<MODE, i.e. 'r' for read, 'w' for write>' => array([m
[32m+[m	[32m * 			'<TABLE NAME>' => array([m
[32m+[m	[32m * 				'<COLUMN NAME>' => '<SQL>'[m
[32m+[m	[32m * 			)[m
[32m+[m	[32m * 		)[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m *   QueryWriter::C_SQLFILTER_READ => array([m
[32m+[m	[32m * 	'book' => array([m
[32m+[m	[32m * 		'title' => ' LOWER(book.title) '[m
[32m+[m	[32m * 	)[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that you can use constants instead of magical chars[m
[32m+[m	[32m * as keys for the uppermost array.[m
[32m+[m	[32m * This is a lowlevel method. For a more friendly method[m
[32m+[m	[32m * please take a look at the facade: R::bindFunc().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array list of filters to set[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setSQLFilters( $sqlFilters, $safeMode = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$flagSQLFilterSafeMode = (boolean) $safeMode;[m
[32m+[m		[32mself::$sqlFilters = $sqlFilters;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns current SQL Filters.[m
[32m+[m	[32m * This method returns the raw SQL filter array.[m
[32m+[m	[32m * This is a lowlevel method. For a more friendly method[m
[32m+[m	[32m * please take a look at the facade: R::bindFunc().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getSQLFilters()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$sqlFilters;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a cache key for the cache values passed.[m
[32m+[m	[32m * This method returns a fingerprint string to be used as a key to store[m
[32m+[m	[32m * data in the writer cache.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $keyValues key-value to generate key for[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getCacheKey( $keyValues )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn json_encode( $keyValues );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the values associated with the provided cache tag and key.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $cacheTag cache tag to use for lookup[m
[32m+[m	[32m * @param string $key      key to use for lookup[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getCached( $cacheTag, $key )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql = $this->adapter->getSQL();[m
[32m+[m		[32mif ($this->updateCache()) {[m
[32m+[m			[32mif ( isset( $this->cache[$cacheTag][$key] ) ) {[m
[32m+[m				[32mreturn $this->cache[$cacheTag][$key];[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks if the previous query had a keep-cache tag.[m
[32m+[m	[32m * If so, the cache will persist, otherwise the cache will be flushed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns TRUE if the cache will remain and FALSE if a flush has[m
[32m+[m	[32m * been performed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function updateCache()[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql = $this->adapter->getSQL();[m
[32m+[m		[32mif ( strpos( $sql, '-- keep-cache' ) !== strlen( $sql ) - 13 ) {[m
[32m+[m			[32m// If SQL has been taken place outside of this method then something else then[m
[32m+[m			[32m// a select query might have happened! (or instruct to keep cache)[m
[32m+[m			[32m$this->cache = array();[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores data from the writer in the cache under a specific key and cache tag.[m
[32m+[m	[32m * A cache tag is used to make sure the cache remains consistent. In most cases the cache tag[m
[32m+[m	[32m * will be the bean type, this makes sure queries associated with a certain reference type will[m
[32m+[m	[32m * never contain conflicting data.[m
[32m+[m	[32m * Why not use the cache tag as a key? Well[m
[32m+[m	[32m * we need to make sure the cache contents fits the key (and key is based on the cache values).[m
[32m+[m	[32m * Otherwise it would be possible to store two different result sets under the same key (the cache tag).[m
[32m+[m	[32m *[m
[32m+[m	[32m * In previous versions you could only store one key-entry, I have changed this to[m
[32m+[m	[32m * improve caching efficiency (issue #400).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $cacheTag cache tag (secondary key)[m
[32m+[m	[32m * @param string $key      key to store values under[m
[32m+[m	[32m * @param array  $values   content to be stored[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function putResultInCache( $cacheTag, $key, $values )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( isset( $this->cache[$cacheTag] ) ) {[m
[32m+[m			[32mif ( count( $this->cache[$cacheTag] ) > $this->maxCacheSizePerType ) array_shift( $this->cache[$cacheTag] );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$this->cache[$cacheTag] = array();[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->cache[$cacheTag][$key] = $values;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Creates an SQL snippet from a list of conditions of format:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m *    key => array([m
[32m+[m	[32m *           value1, value2, value3 ....[m
[32m+[m	[32m *        )[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array  $conditions list of conditions[m
[32m+[m	[32m * @param array  $bindings   parameter bindings for SQL snippet[m
[32m+[m	[32m * @param string $addSql     additional SQL snippet to append to result[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function makeSQLFromConditions( $conditions, &$bindings, $addSql = '' )[m
[32m+[m	[32m{[m
[32m+[m		[32mreset( $bindings );[m
[32m+[m		[32m$firstKey       = key( $bindings );[m
[32m+[m		[32m$paramTypeIsNum = ( is_numeric( $firstKey ) );[m
[32m+[m		[32m$counter        = 0;[m
[32m+[m
[32m+[m		[32m$sqlConditions = array();[m
[32m+[m		[32mforeach ( $conditions as $column => $values ) {[m
[32m+[m			[32mif ( $values === NULL ) {[m
[32m+[m				[32mif ( self::$enableISNULLConditions ) {[m
[32m+[m					[32m$sqlConditions[] = $this->esc( $column ) . ' IS NULL';[m
[32m+[m				[32m}[m
[32m+[m				[32mcontinue;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( is_array( $values ) ) {[m
[32m+[m				[32mif ( empty( $values ) ) continue;[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$values = array( $values );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$checkOODB = reset( $values );[m
[32m+[m			[32mif ( $checkOODB instanceof OODBBean && $checkOODB->getMeta( 'type' ) === $column && substr( $column, -3 ) != '_id' )[m
[32m+[m				[32m$column = $column . '_id';[m
[32m+[m
[32m+[m
[32m+[m			[32m$sql = $this->esc( $column );[m
[32m+[m			[32m$sql .= ' IN ( ';[m
[32m+[m
[32m+[m			[32mif ( $paramTypeIsNum ) {[m
[32m+[m				[32m$sql .= implode( ',', array_fill( 0, count( $values ), '?' ) ) . ' ) ';[m
[32m+[m
[32m+[m				[32marray_unshift($sqlConditions, $sql);[m
[32m+[m
[32m+[m				[32mforeach ( $values as $k => $v ) {[m
[32m+[m					[32mif ( $v instanceof OODBBean ) {[m
[32m+[m						[32m$v = $v->id;[m
[32m+[m					[32m}[m
[32m+[m					[32m$values[$k] = strval( $v );[m
[32m+[m
[32m+[m					[32marray_unshift( $bindings, $v );[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m
[32m+[m				[32m$slots = array();[m
[32m+[m
[32m+[m				[32mforeach( $values as $k => $v ) {[m
[32m+[m					[32mif ( $v instanceof OODBBean ) {[m
[32m+[m						[32m$v = $v->id;[m
[32m+[m					[32m}[m
[32m+[m					[32m$slot            = ':slot'.$counter++;[m
[32m+[m					[32m$slots[]         = $slot;[m
[32m+[m					[32m$bindings[$slot] = strval( $v );[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$sql .= implode( ',', $slots ).' ) ';[m
[32m+[m				[32m$sqlConditions[] = $sql;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql = '';[m
[32m+[m		[32mif ( !empty( $sqlConditions ) ) {[m
[32m+[m			[32m$sql .= " WHERE ( " . implode( ' AND ', $sqlConditions ) . ") ";[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$addSql = $this->glueSQLCondition( $addSql, !empty( $sqlConditions ) ? QueryWriter::C_GLUE_AND : NULL );[m
[32m+[m		[32mif ( $addSql ) $sql .= $addSql;[m
[32m+[m
[32m+[m		[32mreturn $sql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the table names and column names for a relational query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $sourceType type of the source bean[m
[32m+[m	[32m * @param string  $destType   type of the bean you want to obtain using the relation[m
[32m+[m	[32m * @param boolean $noQuote    TRUE if you want to omit quotes[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getRelationalTablesAndColumns( $sourceType, $destType, $noQuote = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$linkTable   = $this->esc( $this->getAssocTable( array( $sourceType, $destType ) ), $noQuote );[m
[32m+[m		[32m$sourceCol   = $this->esc( $sourceType . '_id', $noQuote );[m
[32m+[m
[32m+[m		[32mif ( $sourceType === $destType ) {[m
[32m+[m			[32m$destCol = $this->esc( $destType . '2_id', $noQuote );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$destCol = $this->esc( $destType . '_id', $noQuote );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sourceTable = $this->esc( $sourceType, $noQuote );[m
[32m+[m		[32m$destTable   = $this->esc( $destType, $noQuote );[m
[32m+[m
[32m+[m		[32mreturn array( $sourceTable, $destTable, $linkTable, $sourceCol, $destCol );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether a string can be considered JSON or not.[m
[32m+[m	[32m * This is used by writers that support JSON columns. However[m
[32m+[m	[32m * we dont want that code duplicated over all JSON supporting[m
[32m+[m	[32m * Query Writers.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $value value to determine 'JSONness' of.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function isJSON( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ([m
[32m+[m			[32mis_string($value) &&[m
[32m+[m			[32mis_array(json_decode($value, TRUE)) &&[m
[32m+[m			[32m(json_last_error() == JSON_ERROR_NONE)[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a type and a property name this method[m
[32m+[m	[32m * returns the foreign key map section associated with this pair.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     name of the type[m
[32m+[m	[32m * @param string $property name of the property[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getForeignKeyForTypeProperty( $type, $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$property = $this->esc( $property, TRUE );[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$map = $this->getKeyMapForType( $type );[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mforeach( $map as $key ) {[m
[32m+[m			[32mif ( $key['from'] === $property ) return $key;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the foreign key map (FKM) for a type.[m
[32m+[m	[32m * A foreign key map describes the foreign keys in a table.[m
[32m+[m	[32m * A FKM always has the same structure:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 	'name'      => <name of the foreign key>[m
[32m+[m	[32m *    'from'      => <name of the column on the source table>[m
[32m+[m	[32m *    'table'     => <name of the target table>[m
[32m+[m	[32m *    'to'        => <name of the target column> (most of the time 'id')[m
[32m+[m	[32m *    'on_update' => <update rule: 'SET NULL','CASCADE' or 'RESTRICT'>[m
[32m+[m	[32m *    'on_delete' => <delete rule: 'SET NULL','CASCADE' or 'RESTRICT'>[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note the keys in the result array are FKDLs, i.e. descriptive unique[m
[32m+[m	[32m * keys per source table. Also see: AQueryWriter::makeFKLabel for details.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type the bean type you wish to obtain a key map of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getKeyMapForType( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method makes a key for a foreign key description array.[m
[32m+[m	[32m * This key is a readable string unique for every source table.[m
[32m+[m	[32m * This uniform key is called the FKDL Foreign Key Description Label.[m
[32m+[m	[32m * Note that the source table is not part of the FKDL because[m
[32m+[m	[32m * this key is supposed to be 'per source table'. If you wish to[m
[32m+[m	[32m * include a source table, prefix the key with 'on_table_<SOURCE>_'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $from  the column of the key in the source table[m
[32m+[m	[32m * @param string $type  the type (table) where the key points to[m
[32m+[m	[32m * @param string $to    the target column of the foreign key (mostly just 'id')[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function makeFKLabel($from, $type, $to)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn "from_{$from}_to_table_{$type}_col_{$to}";[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an SQL Filter snippet for reading.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getSQLFilterSnippet( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$existingCols = array();[m
[32m+[m		[32mif (self::$flagSQLFilterSafeMode) {[m
[32m+[m			[32m$existingCols = $this->getColumns( $type );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sqlFilters = array();[m
[32m+[m		[32mif ( isset( self::$sqlFilters[QueryWriter::C_SQLFILTER_READ][$type] ) ) {[m
[32m+[m			[32mforeach( self::$sqlFilters[QueryWriter::C_SQLFILTER_READ][$type] as $property => $sqlFilter ) {[m
[32m+[m				[32mif ( !self::$flagSQLFilterSafeMode || isset( $existingCols[$property] ) ) {[m
[32m+[m					[32m$sqlFilters[] = $sqlFilter.' AS '.$property.' ';[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$sqlFilterStr = ( count($sqlFilters) ) ? ( ','.implode( ',', $sqlFilters ) ) : '';[m
[32m+[m		[32mreturn $sqlFilterStr;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Generates a list of parameters (slots) for an SQL snippet.[m
[32m+[m	[32m * This method calculates the correct number of slots to insert in the[m
[32m+[m	[32m * SQL snippet and determines the correct type of slot. If the bindings[m
[32m+[m	[32m * array contains named parameters this method will return named ones and[m
[32m+[m	[32m * update the keys in the value list accordingly (that's why we use the &).[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you pass an offset the bindings will be re-added to the value list.[m
[32m+[m	[32m * Some databases cant handle duplicate parameter names in queries.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array   &$valueList    list of values to generate slots for (gets modified if needed)[m
[32m+[m	[32m * @param array   $otherBindings list of additional bindings[m
[32m+[m	[32m * @param integer $offset        start counter at...[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getParametersForInClause( &$valueList, $otherBindings, $offset = 0 )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $otherBindings ) && count( $otherBindings ) > 0 ) {[m
[32m+[m			[32mreset( $otherBindings );[m
[32m+[m
[32m+[m			[32m$key = key( $otherBindings );[m
[32m+[m
[32m+[m			[32mif ( !is_numeric($key) ) {[m
[32m+[m				[32m$filler  = array();[m
[32m+[m				[32m$newList = (!$offset) ? array() : $valueList;[m
[32m+[m				[32m$counter = $offset;[m
[32m+[m
[32m+[m				[32mforeach( $valueList as $value ) {[m
[32m+[m					[32m$slot           = ':slot' . ( $counter++ );[m
[32m+[m					[32m$filler[]       = $slot;[m
[32m+[m					[32m$newList[$slot] = $value;[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m// Change the keys![m
[32m+[m				[32m$valueList = $newList;[m
[32m+[m
[32m+[m				[32mreturn implode( ',', $filler );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn implode( ',', array_fill( 0, count( $valueList ), '?' ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Adds a data type to the list of data types.[m
[32m+[m	[32m * Use this method to add a new column type definition to the writer.[m
[32m+[m	[32m * Used for UUID support.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer $dataTypeID    magic number constant assigned to this data type[m
[32m+[m	[32m * @param string  $SQLDefinition SQL column definition (i.e. INT(11))[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return self[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function addDataType( $dataTypeID, $SQLDefinition )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->typeno_sqltype[ $dataTypeID ] = $SQLDefinition;[m
[32m+[m		[32m$this->sqltype_typeno[ $SQLDefinition ] = $dataTypeID;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the sql that should follow an insert statement.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getInsertSuffix( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn '';[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a value starts with zeros. In this case[m
[32m+[m	[32m * the value should probably be stored using a text datatype instead of a[m
[32m+[m	[32m * numerical type in order to preserve the zeros.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $value value to be checked.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function startsWithZeros( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$value = strval( $value );[m
[32m+[m
[32m+[m		[32mif ( strlen( $value ) > 1 && strpos( $value, '0' ) === 0 && strpos( $value, '0.' ) !== 0 ) {[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Inserts a record into the database using a series of insert columns[m
[32m+[m	[32m * and corresponding insertvalues. Returns the insert id.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table         table to perform query on[m
[32m+[m	[32m * @param array  $insertcolumns columns to be inserted[m
[32m+[m	[32m * @param array  $insertvalues  values to be inserted[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function insertRecord( $type, $insertcolumns, $insertvalues )[m
[32m+[m	[32m{[m
[32m+[m		[32m$default = $this->defaultValue;[m
[32m+[m		[32m$suffix  = $this->getInsertSuffix( $type );[m
[32m+[m		[32m$table   = $this->esc( $type );[m
[32m+[m
[32m+[m		[32mif ( count( $insertvalues ) > 0 && is_array( $insertvalues[0] ) && count( $insertvalues[0] ) > 0 ) {[m
[32m+[m
[32m+[m			[32m$insertSlots = array();[m
[32m+[m			[32mforeach ( $insertcolumns as $k => $v ) {[m
[32m+[m				[32m$insertcolumns[$k] = $this->esc( $v );[m
[32m+[m
[32m+[m				[32mif (isset(self::$sqlFilters['w'][$type][$v])) {[m
[32m+[m					[32m$insertSlots[] = self::$sqlFilters['w'][$type][$v];[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$insertSlots[] = '?';[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$insertSQL = "INSERT INTO $table ( id, " . implode( ',', $insertcolumns ) . " ) VALUES[m
[32m+[m			[32m( $default, " . implode( ',', $insertSlots ) . " ) $suffix";[m
[32m+[m
[32m+[m			[32m$ids = array();[m
[32m+[m			[32mforeach ( $insertvalues as $i => $insertvalue ) {[m
[32m+[m				[32m$ids[] = $this->adapter->getCell( $insertSQL, $insertvalue, $i );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$result = count( $ids ) === 1 ? array_pop( $ids ) : $ids;[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$result = $this->adapter->getCell( "INSERT INTO $table (id) VALUES($default) $suffix" );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $suffix ) return $result;[m
[32m+[m
[32m+[m		[32m$last_id = $this->adapter->getInsertID();[m
[32m+[m
[32m+[m		[32mreturn $last_id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks table name or column name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table table string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function check( $struct )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_string( $struct ) || !preg_match( '/^[a-zA-Z0-9_]+$/', $struct ) ) {[m
[32m+[m			[32mthrow new RedException( 'Identifier does not conform to RedBeanPHP security policies.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $struct;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether the specified type (i.e. table) already exists in the database.[m
[32m+[m	[32m * Not part of the Object Database interface![m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table table name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function tableExists( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tables = $this->getTables();[m
[32m+[m
[32m+[m		[32mreturn in_array( $table, $tables );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::glueSQLCondition[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function glueSQLCondition( $sql, $glue = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mstatic $snippetCache = array();[m
[32m+[m
[32m+[m		[32mif ( trim( $sql ) === '' ) {[m
[32m+[m			[32mreturn $sql;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$key = $glue . '|' . $sql;[m
[32m+[m
[32m+[m		[32mif ( isset( $snippetCache[$key] ) ) {[m
[32m+[m			[32mreturn $snippetCache[$key];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$lsql = ltrim( $sql );[m
[32m+[m
[32m+[m		[32mif ( preg_match( '/^(INNER|LEFT|RIGHT|JOIN|AND|OR|WHERE|ORDER|GROUP|HAVING|LIMIT|OFFSET)\s+/i', $lsql ) ) {[m
[32m+[m			[32mif ( $glue === QueryWriter::C_GLUE_WHERE && stripos( $lsql, 'AND' ) === 0 ) {[m
[32m+[m				[32m$snippetCache[$key] = ' WHERE ' . substr( $lsql, 3 );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$snippetCache[$key] = $sql;[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$snippetCache[$key] = ( ( $glue === QueryWriter::C_GLUE_AND ) ? ' AND ' : ' WHERE ') . $sql;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $snippetCache[$key];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::glueLimitOne[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function glueLimitOne( $sql = '')[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( strpos( strtoupper( ' ' . $sql ), ' LIMIT ' ) === FALSE ) ? ( $sql . ' LIMIT 1 ' ) : $sql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::esc[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function esc( $dbStructure, $dontQuote = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->check( $dbStructure );[m
[32m+[m
[32m+[m		[32mreturn ( $dontQuote ) ? $dbStructure : $this->quoteCharacter . $dbStructure . $this->quoteCharacter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addColumn( $beanType, $column, $field )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table  = $beanType;[m
[32m+[m		[32m$type   = $field;[m
[32m+[m		[32m$table  = $this->esc( $table );[m
[32m+[m		[32m$column = $this->esc( $column );[m
[32m+[m
[32m+[m		[32m$type = ( isset( $this->typeno_sqltype[$type] ) ) ? $this->typeno_sqltype[$type] : '';[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( sprintf( $this->getDDLTemplate('addColumn', $beanType, $column ), $table, $column, $type ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::updateRecord[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function updateRecord( $type, $updatevalues, $id = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $type;[m
[32m+[m
[32m+[m		[32mif ( !$id ) {[m
[32m+[m			[32m$insertcolumns = $insertvalues = array();[m
[32m+[m
[32m+[m			[32mforeach ( $updatevalues as $pair ) {[m
[32m+[m				[32m$insertcolumns[] = $pair['property'];[m
[32m+[m				[32m$insertvalues[]  = $pair['value'];[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m//Otherwise psql returns string while MySQL/SQLite return numeric causing problems with additions (array_diff)[m
[32m+[m			[32mreturn (string) $this->insertRecord( $table, $insertcolumns, array( $insertvalues ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $id && !count( $updatevalues ) ) {[m
[32m+[m			[32mreturn $id;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$table = $this->esc( $table );[m
[32m+[m		[32m$sql   = "UPDATE $table SET ";[m
[32m+[m
[32m+[m		[32m$p = $v = array();[m
[32m+[m
[32m+[m		[32mforeach ( $updatevalues as $uv ) {[m
[32m+[m
[32m+[m			[32mif ( isset( self::$sqlFilters['w'][$type][$uv['property']] ) ) {[m
[32m+[m				[32m$p[] = " {$this->esc( $uv["property"] )} = ". self::$sqlFilters['w'][$type][$uv['property']];[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$p[] = " {$this->esc( $uv["property"] )} = ? ";[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$v[] = $uv['value'];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql .= implode( ',', $p ) . ' WHERE id = ? ';[m
[32m+[m
[32m+[m		[32m$v[] = $id;[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( $sql, $v );[m
[32m+[m
[32m+[m		[32mreturn $id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::parseJoin[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function parseJoin( $type, $sql, $cteType = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( strpos( $sql, '@' ) === FALSE ) {[m
[32m+[m			[32mreturn $sql;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql = ' ' . $sql;[m
[32m+[m		[32m$joins = array();[m
[32m+[m		[32m$joinSql = '';[m
[32m+[m
[32m+[m		[32mif ( !preg_match_all( '#@((shared|own|joined)\.[^\s(,=!?]+)#', $sql, $matches ) )[m
[32m+[m			[32mreturn $sql;[m
[32m+[m
[32m+[m		[32m$expressions = $matches[1];[m
[32m+[m		[32m// Sort to make the joins from the longest to the shortest[m
[32m+[m		[32muasort( $expressions, function($a, $b) {[m
[32m+[m			[32mreturn substr_count( $b, '.' ) - substr_count( $a, '.' );[m
[32m+[m		[32m});[m
[32m+[m
[32m+[m		[32m$nsuffix = 1;[m
[32m+[m		[32mforeach ( $expressions as $exp ) {[m
[32m+[m			[32m$explosion = explode( '.', $exp );[m
[32m+[m			[32m$joinTable = $type;[m
[32m+[m			[32m$joinType  = array_shift( $explosion );[m
[32m+[m			[32m$lastPart  = array_pop( $explosion );[m
[32m+[m			[32m$lastJoin  = end($explosion);[m
[32m+[m			[32mif ( ( $index = strpos( $lastJoin, '[' ) ) !== FALSE ) {[m
[32m+[m				[32m$lastJoin = substr( $lastJoin, 0, $index);[m
[32m+[m			[32m}[m
[32m+[m			[32mreset($explosion);[m
[32m+[m
[32m+[m			[32m// Let's check if we already joined that chain[m
[32m+[m			[32m// If that's the case we skip this[m
[32m+[m			[32m$joinKey  = implode( '.', $explosion );[m
[32m+[m			[32mforeach ( $joins as $chain => $suffix ) {[m
[32m+[m				[32mif ( strpos ( $chain, $joinKey ) === 0 ) {[m
[32m+[m					[32m$sql = str_replace( "@{$exp}", "{$lastJoin}__rb{$suffix}.{$lastPart}", $sql );[m
[32m+[m					[32mcontinue 2;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$sql = str_replace( "@{$exp}", "{$lastJoin}__rb{$nsuffix}.{$lastPart}", $sql );[m
[32m+[m			[32m$joins[$joinKey] = $nsuffix;[m
[32m+[m
[32m+[m			[32m// We loop on the elements of the join[m
[32m+[m			[32m$i = 0;[m
[32m+[m			[32mwhile ( TRUE ) {[m
[32m+[m				[32m$joinInfo = $explosion[$i];[m
[32m+[m				[32mif ( $i ) {[m
[32m+[m					[32m$joinType = $explosion[$i-1];[m
[32m+[m					[32m$joinTable = $explosion[$i-2];[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$aliases = array();[m
[32m+[m				[32mif ( ( $index = strpos( $joinInfo, '[' ) ) !== FALSE ) {[m
[32m+[m					[32mif ( preg_match_all( '#(([^\s:/\][]+)[/\]])#', $joinInfo, $matches ) ) {[m
[32m+[m						[32m$aliases = $matches[2];[m
[32m+[m						[32m$joinInfo = substr( $joinInfo, 0, $index);[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m				[32mif ( ( $index = strpos( $joinTable, '[' ) ) !== FALSE ) {[m
[32m+[m					[32m$joinTable = substr( $joinTable, 0, $index);[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32mif ( $i ) {[m
[32m+[m					[32m$joinSql .= $this->writeJoin( $joinTable, $joinInfo, 'INNER', $joinType, FALSE, "__rb{$nsuffix}", $aliases, NULL );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$joinSql .= $this->writeJoin( $joinTable, $joinInfo, 'LEFT', $joinType, TRUE, "__rb{$nsuffix}", $aliases, $cteType );[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$i += 2;[m
[32m+[m				[32mif ( !isset( $explosion[$i] ) ) {[m
[32m+[m					[32mbreak;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$nsuffix++;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql = str_ireplace( ' where ', ' WHERE ', $sql );[m
[32m+[m		[32mif ( strpos( $sql, ' WHERE ') === FALSE ) {[m
[32m+[m			[32mif ( preg_match( '/^(ORDER|GROUP|HAVING|LIMIT|OFFSET)\s+/i', trim($sql) ) ) {[m
[32m+[m				[32m$sql = "{$joinSql} {$sql}";[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$sql = "{$joinSql} WHERE {$sql}";[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sqlParts = explode( ' WHERE ', $sql, 2 );[m
[32m+[m			[32m$sql = "{$sqlParts[0]} {$joinSql} WHERE {$sqlParts[1]}";[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $sql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::writeJoin[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function writeJoin( $type, $targetType, $leftRight = 'LEFT', $joinType = 'parent', $firstOfChain = TRUE, $suffix = '', $aliases = array(), $cteType = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $leftRight !== 'LEFT' && $leftRight !== 'RIGHT' && $leftRight !== 'INNER' )[m
[32m+[m			[32mthrow new RedException( 'Invalid JOIN.' );[m
[32m+[m
[32m+[m		[32m$globalAliases = OODBBean::getAliases();[m
[32m+[m		[32mif ( isset( $globalAliases[$targetType] ) ) {[m
[32m+[m			[32m$destType      = $globalAliases[$targetType];[m
[32m+[m			[32m$asTargetTable = $this->esc( $targetType.$suffix );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$destType      = $targetType;[m
[32m+[m			[32m$asTargetTable = $this->esc( $destType.$suffix );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $firstOfChain ) {[m
[32m+[m			[32m$table = $this->esc( $type );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$table = $this->esc( $type.$suffix );[m
[32m+[m		[32m}[m
[32m+[m		[32m$targetTable = $this->esc( $destType );[m
[32m+[m
[32m+[m		[32mif ( $joinType == 'shared' ) {[m
[32m+[m
[32m+[m			[32mif ( isset( $globalAliases[$type] ) ) {[m
[32m+[m				[32m$field      = $this->esc( $globalAliases[$type], TRUE );[m
[32m+[m				[32mif ( $aliases && count( $aliases ) === 1 ) {[m
[32m+[m					[32m$assocTable = reset( $aliases );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$assocTable = $this->getAssocTable( array( $cteType ? $cteType : $globalAliases[$type], $destType ) );[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$field      = $this->esc( $type, TRUE );[m
[32m+[m				[32mif ( $aliases && count( $aliases ) === 1 ) {[m
[32m+[m					[32m$assocTable = reset( $aliases );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$assocTable = $this->getAssocTable( array( $cteType ? $cteType : $type, $destType ) );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$linkTable      = $this->esc( $assocTable );[m
[32m+[m			[32m$asLinkTable    = $this->esc( $assocTable.$suffix );[m
[32m+[m			[32m$leftField      = "id";[m
[32m+[m			[32m$rightField     = $cteType ? "{$cteType}_id" : "{$field}_id";[m
[32m+[m			[32m$linkField      = $this->esc( $destType, TRUE );[m
[32m+[m			[32m$linkLeftField  = "id";[m
[32m+[m			[32m$linkRightField = "{$linkField}_id";[m
[32m+[m
[32m+[m			[32m$joinSql = " {$leftRight} JOIN {$linkTable}";[m
[32m+[m			[32mif ( isset( $globalAliases[$targetType] ) || $suffix ) {[m
[32m+[m				[32m$joinSql .= " AS {$asLinkTable}";[m
[32m+[m			[32m}[m
[32m+[m			[32m$joinSql .= " ON {$table}.{$leftField} = {$asLinkTable}.{$rightField}";[m
[32m+[m			[32m$joinSql .= " {$leftRight} JOIN {$targetTable}";[m
[32m+[m			[32mif ( isset( $globalAliases[$targetType] ) || $suffix ) {[m
[32m+[m				[32m$joinSql .= " AS {$asTargetTable}";[m
[32m+[m			[32m}[m
[32m+[m			[32m$joinSql .= " ON {$asTargetTable}.{$linkLeftField} = {$asLinkTable}.{$linkRightField}";[m
[32m+[m
[32m+[m		[32m} elseif ( $joinType == 'own' ) {[m
[32m+[m
[32m+[m			[32m$field      = $this->esc( $type, TRUE );[m
[32m+[m			[32m$rightField = "id";[m
[32m+[m
[32m+[m			[32m$joinSql = " {$leftRight} JOIN {$targetTable}";[m
[32m+[m			[32mif ( isset( $globalAliases[$targetType] ) || $suffix ) {[m
[32m+[m				[32m$joinSql .= " AS {$asTargetTable}";[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( $aliases ) {[m
[32m+[m				[32m$conditions = array();[m
[32m+[m				[32mforeach ( $aliases as $alias ) {[m
[32m+[m					[32m$conditions[] = "{$asTargetTable}.{$alias}_id = {$table}.{$rightField}";[m
[32m+[m				[32m}[m
[32m+[m				[32m$joinSql .= " ON ( " . implode( ' OR ', $conditions ) . " ) ";[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$leftField  = $cteType ? "{$cteType}_id" : "{$field}_id";[m
[32m+[m				[32m$joinSql .= " ON {$asTargetTable}.{$leftField} = {$table}.{$rightField} ";[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m		[32m} else {[m
[32m+[m
[32m+[m			[32m$field      = $this->esc( $targetType, TRUE );[m
[32m+[m			[32m$leftField  = "id";[m
[32m+[m
[32m+[m			[32m$joinSql = " {$leftRight} JOIN {$targetTable}";[m
[32m+[m			[32mif ( isset( $globalAliases[$targetType] ) || $suffix ) {[m
[32m+[m				[32m$joinSql .= " AS {$asTargetTable}";[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( $aliases ) {[m
[32m+[m				[32m$conditions = array();[m
[32m+[m				[32mforeach ( $aliases as $alias ) {[m
[32m+[m					[32m$conditions[] = "{$asTargetTable}.{$leftField} = {$table}.{$alias}_id";[m
[32m+[m				[32m}[m
[32m+[m				[32m$joinSql .= " ON ( " . implode( ' OR ', $conditions ) . " ) ";[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$rightField = "{$field}_id";[m
[32m+[m				[32m$joinSql .= " ON {$asTargetTable}.{$leftField} = {$table}.{$rightField} ";[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $joinSql;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets an SQL snippet to be used for the next queryRecord() operation.[m
[32m+[m	[32m * A select snippet will be inserted at the end of the SQL select statement and[m
[32m+[m	[32m * can be used to modify SQL-select commands to enable locking, for instance[m
[32m+[m	[32m * using the 'FOR UPDATE' snippet (this will generate an SQL query like:[m
[32m+[m	[32m * 'SELECT * FROM ... FOR UPDATE'. After the query has been executed the[m
[32m+[m	[32m * SQL snippet will be erased. Note that only the first upcoming direct or[m
[32m+[m	[32m * indirect invocation of queryRecord() through batch(), find() or load()[m
[32m+[m	[32m * will be affected. The SQL snippet will be cached.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql SQL snippet to use in SELECT statement.[m
[32m+[m	[32m *[m
[32m+[m	[32m * return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setSQLSelectSnippet( $sqlSelectSnippet = '' ) {[m
[32m+[m		[32m$this->sqlSelectSnippet = $sqlSelectSnippet;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecord[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecord( $type, $conditions = array(), $addSql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->flagUseCache && $this->sqlSelectSnippet != self::C_SELECT_SNIPPET_FOR_UPDATE ) {[m
[32m+[m			[32m$key = $this->getCacheKey( array( $conditions, trim("$addSql {$this->sqlSelectSnippet}"), $bindings, 'select' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $type, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$sqlFilterStr = '';[m
[32m+[m		[32mif ( count( self::$sqlFilters ) ) {[m
[32m+[m			[32m$sqlFilterStr = $this->getSQLFilterSnippet( $type );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( is_array ( $conditions ) && !empty ( $conditions ) ) {[m
[32m+[m			[32m$sql = $this->makeSQLFromConditions( $conditions, $bindings, $addSql );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = $this->glueSQLCondition( $addSql );[m
[32m+[m		[32m}[m
[32m+[m		[32m$sql = $this->parseJoin( $type, $sql );[m
[32m+[m		[32m$fieldSelection = self::$flagNarrowFieldMode ? "{$table}.*" : '*';[m
[32m+[m		[32m$sql   = "SELECT {$fieldSelection} {$sqlFilterStr} FROM {$table} {$sql} {$this->sqlSelectSnippet} -- keep-cache";[m
[32m+[m		[32m$this->sqlSelectSnippet = '';[m
[32m+[m		[32m$rows  = $this->adapter->get( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache && !empty( $key ) ) {[m
[32m+[m			[32m$this->putResultInCache( $type, $key, $rows );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecordWithCursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordWithCursor( $type, $addSql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$sqlFilterStr = '';[m
[32m+[m		[32mif ( count( self::$sqlFilters ) ) {[m
[32m+[m			[32m$sqlFilterStr = $this->getSQLFilterSnippet( $type );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql = $this->glueSQLCondition( $addSql, NULL );[m
[32m+[m
[32m+[m		[32m$sql = $this->parseJoin( $type, $sql );[m
[32m+[m		[32m$fieldSelection = self::$flagNarrowFieldMode ? "{$table}.*" : '*';[m
[32m+[m
[32m+[m		[32m$sql = "SELECT {$fieldSelection} {$sqlFilterStr} FROM {$table} {$sql} -- keep-cache";[m
[32m+[m
[32m+[m		[32mreturn $this->adapter->getCursor( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecordRelated[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordRelated( $sourceType, $destType, $linkIDs, $addSql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $sourceTable, $destTable, $linkTable, $sourceCol, $destCol ) = $this->getRelationalTablesAndColumns( $sourceType, $destType );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$key = $this->getCacheKey( array( $sourceType, implode( ',', $linkIDs ), trim($addSql), $bindings, 'selectrelated' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $destType, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$addSql = $this->glueSQLCondition( $addSql, QueryWriter::C_GLUE_WHERE );[m
[32m+[m		[32m$inClause = $this->getParametersForInClause( $linkIDs, $bindings );[m
[32m+[m
[32m+[m		[32m$sqlFilterStr = '';[m
[32m+[m		[32mif ( count( self::$sqlFilters ) ) {[m
[32m+[m			[32m$sqlFilterStr = $this->getSQLFilterSnippet( $destType );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $sourceType === $destType ) {[m
[32m+[m			[32m$inClause2 = $this->getParametersForInClause( $linkIDs, $bindings, count( $bindings ) ); //for some databases[m
[32m+[m			[32m$sql = "[m
[32m+[m			[32mSELECT[m
[32m+[m				[32m{$destTable}.* {$sqlFilterStr} ,[m
[32m+[m				[32mCOALESCE([m
[32m+[m				[32mNULLIF({$linkTable}.{$sourceCol}, {$destTable}.id),[m
[32m+[m				[32mNULLIF({$linkTable}.{$destCol}, {$destTable}.id)) AS linked_by[m
[32m+[m			[32mFROM {$linkTable}[m
[32m+[m			[32mINNER JOIN {$destTable} ON[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$destCol} AND {$linkTable}.{$sourceCol} IN ($inClause) ) OR[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$sourceCol} AND {$linkTable}.{$destCol} IN ($inClause2) )[m
[32m+[m			[32m{$addSql}[m
[32m+[m			[32m-- keep-cache";[m
[32m+[m
[32m+[m			[32m$linkIDs = array_merge( $linkIDs, $linkIDs );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = "[m
[32m+[m			[32mSELECT[m
[32m+[m				[32m{$destTable}.* {$sqlFilterStr},[m
[32m+[m				[32m{$linkTable}.{$sourceCol} AS linked_by[m
[32m+[m			[32mFROM {$linkTable}[m
[32m+[m			[32mINNER JOIN {$destTable} ON[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$destCol} AND {$linkTable}.{$sourceCol} IN ($inClause) )[m
[32m+[m			[32m{$addSql}[m
[32m+[m			[32m-- keep-cache";[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$bindings = array_merge( $linkIDs, $bindings );[m
[32m+[m
[32m+[m		[32m$rows = $this->adapter->get( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$this->putResultInCache( $destType, $key, $rows );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecordLink[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordLink( $sourceType, $destType, $sourceID, $destID )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $sourceTable, $destTable, $linkTable, $sourceCol, $destCol ) = $this->getRelationalTablesAndColumns( $sourceType, $destType );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$key = $this->getCacheKey( array( $sourceType, $destType, $sourceID, $destID, 'selectlink' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $linkTable, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sqlFilterStr = '';[m
[32m+[m		[32mif ( count( self::$sqlFilters ) ) {[m
[32m+[m			[32m$linkType = $this->getAssocTable( array( $sourceType, $destType ) );[m
[32m+[m			[32m$sqlFilterStr = $this->getSQLFilterSnippet( "{$linkType}" );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $sourceTable === $destTable ) {[m
[32m+[m			[32m$sql = "SELECT {$linkTable}.* {$sqlFilterStr} FROM {$linkTable}[m
[32m+[m				[32mWHERE ( {$sourceCol} = ? AND {$destCol} = ? ) OR[m
[32m+[m				[32m ( {$destCol} = ? AND {$sourceCol} = ? ) -- keep-cache";[m
[32m+[m			[32m$row = $this->adapter->getRow( $sql, array( $sourceID, $destID, $sourceID, $destID ) );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = "SELECT {$linkTable}.* {$sqlFilterStr} FROM {$linkTable}[m
[32m+[m				[32mWHERE {$sourceCol} = ? AND {$destCol} = ? -- keep-cache";[m
[32m+[m			[32m$row = $this->adapter->getRow( $sql, array( $sourceID, $destID ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$this->putResultInCache( $linkTable, $key, $row );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $row;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns or counts all rows of specified type that have been tagged with one of the[m
[32m+[m	[32m * strings in the specified tag list array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that the additional SQL snippet can only be used for pagination,[m
[32m+[m	[32m * the SQL snippet will be appended to the end of the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type     the bean type you want to query[m
[32m+[m	[32m * @param array   $tagList  an array of strings, each string containing a tag title[m
[32m+[m	[32m * @param boolean $all      if TRUE only return records that have been associated with ALL the tags in the list[m
[32m+[m	[32m * @param string  $addSql   addition SQL snippet, for pagination[m
[32m+[m	[32m * @param array   $bindings parameter bindings for additional SQL snippet[m
[32m+[m	[32m * @param string  $wrap     SQL wrapper string (use %s for subquery)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function queryTaggedGeneric( $type, $tagList, $all = FALSE, $addSql = '', $bindings = array(), $wrap = '%s' )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$key = $this->getCacheKey( array( implode( ',', $tagList ), $all, trim($addSql), $bindings, 'selectTagged' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $type, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$assocType = $this->getAssocTable( array( $type, 'tag' ) );[m
[32m+[m		[32m$assocTable = $this->esc( $assocType );[m
[32m+[m		[32m$assocField = $type . '_id';[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32m$slots = implode( ',', array_fill( 0, count( $tagList ), '?' ) );[m
[32m+[m		[32m$score = ( $all ) ? count( $tagList ) : 1;[m
[32m+[m
[32m+[m		[32m$sql = "[m
[32m+[m			[32mSELECT {$table}.* FROM {$table}[m
[32m+[m			[32mINNER JOIN {$assocTable} ON {$assocField} = {$table}.id[m
[32m+[m			[32mINNER JOIN tag ON {$assocTable}.tag_id = tag.id[m
[32m+[m			[32mWHERE tag.title IN ({$slots})[m
[32m+[m			[32mGROUP BY {$table}.id[m
[32m+[m			[32mHAVING count({$table}.id) >= ?[m
[32m+[m			[32m{$addSql}[m
[32m+[m			[32m-- keep-cache[m
[32m+[m		[32m";[m
[32m+[m		[32m$sql = sprintf($wrap,$sql);[m
[32m+[m
[32m+[m		[32m$bindings = array_merge( $tagList, array( $score ), $bindings );[m
[32m+[m		[32m$rows = $this->adapter->get( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$this->putResultInCache( $type, $key, $rows );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryTagged[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryTagged( $type, $tagList, $all = FALSE, $addSql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->queryTaggedGeneric( $type, $tagList, $all, $addSql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryCountTagged[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryCountTagged( $type, $tagList, $all = FALSE, $addSql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$rows = $this->queryTaggedGeneric( $type, $tagList, $all, $addSql, $bindings, 'SELECT COUNT(*) AS counted FROM (%s) AS counting' );[m
[32m+[m		[32mreturn intval($rows[0]['counted']);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecordCount[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordCount( $type, $conditions = array(), $addSql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$key = $this->getCacheKey( array( $conditions, trim($addSql), $bindings, 'count' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $type, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$table  = $this->esc( $type );[m
[32m+[m
[32m+[m		[32mif ( is_array ( $conditions ) && !empty ( $conditions ) ) {[m
[32m+[m			[32m$sql = $this->makeSQLFromConditions( $conditions, $bindings, $addSql );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = $this->glueSQLCondition( $addSql );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql = $this->parseJoin( $type, $sql );[m
[32m+[m
[32m+[m		[32m$sql    = "SELECT COUNT(*) FROM {$table} {$sql} -- keep-cache";[m
[32m+[m		[32m$count  = (int) $this->adapter->getCell( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$this->putResultInCache( $type, $key, $count );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecordCountRelated[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecordCountRelated( $sourceType, $destType, $linkID, $addSql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $sourceTable, $destTable, $linkTable, $sourceCol, $destCol ) = $this->getRelationalTablesAndColumns( $sourceType, $destType );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$cacheType = "#{$sourceType}/{$destType}";[m
[32m+[m			[32m$key = $this->getCacheKey( array( $sourceType, $destType, $linkID, trim($addSql), $bindings, 'countrelated' ) );[m
[32m+[m			[32mif ( $cached = $this->getCached( $cacheType, $key ) ) {[m
[32m+[m				[32mreturn $cached;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $sourceType === $destType ) {[m
[32m+[m			[32m$sql = "[m
[32m+[m			[32mSELECT COUNT(*) FROM {$linkTable}[m
[32m+[m			[32mINNER JOIN {$destTable} ON[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$destCol} AND {$linkTable}.{$sourceCol} = ? ) OR[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$sourceCol} AND {$linkTable}.{$destCol} = ? )[m
[32m+[m			[32m{$addSql}[m
[32m+[m			[32m-- keep-cache";[m
[32m+[m
[32m+[m			[32m$bindings = array_merge( array( $linkID, $linkID ), $bindings );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = "[m
[32m+[m			[32mSELECT COUNT(*) FROM {$linkTable}[m
[32m+[m			[32mINNER JOIN {$destTable} ON[m
[32m+[m			[32m( {$destTable}.id = {$linkTable}.{$destCol} AND {$linkTable}.{$sourceCol} = ? )[m
[32m+[m			[32m{$addSql}[m
[32m+[m			[32m-- keep-cache";[m
[32m+[m
[32m+[m			[32m$bindings = array_merge( array( $linkID ), $bindings );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$count = (int) $this->adapter->getCell( $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( $this->flagUseCache ) {[m
[32m+[m			[32m$this->putResultInCache( $cacheType, $key, $count );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::queryRecursiveCommonTableExpression[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function queryRecursiveCommonTableExpression( $type, $id, $up = TRUE, $addSql = NULL, $bindings = array(), $selectForm = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($selectForm === QueryWriter::C_CTE_SELECT_COUNT) {[m
[32m+[m			[32m$selectForm = "count(redbeantree.*)";[m
[32m+[m		[32m} elseif ( $selectForm === QueryWriter::C_CTE_SELECT_NORMAL ) {[m
[32m+[m			[32m$selectForm = "redbeantree.*";[m
[32m+[m		[32m}[m
[32m+[m		[32m$alias     = $up ? 'parent' : 'child';[m
[32m+[m		[32m$direction = $up ? " {$alias}.{$type}_id = {$type}.id " : " {$alias}.id = {$type}.{$type}_id ";[m
[32m+[m		[32m/* allow numeric and named param bindings, if '0' exists then numeric */[m
[32m+[m		[32mif ( array_key_exists( 0,$bindings ) ) {[m
[32m+[m			[32marray_unshift( $bindings, $id );[m
[32m+[m			[32m$idSlot = '?';[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$idSlot = ':slot0';[m
[32m+[m			[32m$bindings[$idSlot] = $id;[m
[32m+[m		[32m}[m
[32m+[m		[32m$sql = $this->glueSQLCondition( $addSql, QueryWriter::C_GLUE_WHERE );[m
[32m+[m		[32m$sql = $this->parseJoin( 'redbeantree', $sql, $type );[m
[32m+[m		[32m$rows = $this->adapter->get("[m
[32m+[m			[32mWITH RECURSIVE redbeantree AS[m
[32m+[m			[32m([m
[32m+[m				[32mSELECT *[m
[32m+[m				[32mFROM {$type} WHERE {$type}.id = {$idSlot}[m
[32m+[m				[32mUNION ALL[m
[32m+[m				[32mSELECT {$type}.* FROM {$type}[m
[32m+[m				[32mINNER JOIN redbeantree {$alias} ON {$direction}[m
[32m+[m			[32m)[m
[32m+[m			[32mSELECT {$selectForm} FROM redbeantree {$sql};",[m
[32m+[m			[32m$bindings[m
[32m+[m		[32m);[m
[32m+[m		[32mreturn $rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::deleteRecord[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function deleteRecord( $type, $conditions = array(), $addSql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table  = $this->esc( $type );[m
[32m+[m
[32m+[m		[32mif ( is_array ( $conditions ) && !empty ( $conditions ) ) {[m
[32m+[m			[32m$sql = $this->makeSQLFromConditions( $conditions, $bindings, $addSql );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = $this->glueSQLCondition( $addSql );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$sql    = "DELETE FROM {$table} {$sql}";[m
[32m+[m
[32m+[m		[32mreturn $this->adapter->exec( $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::deleteRelations[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function deleteRelations( $sourceType, $destType, $sourceID )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $sourceTable, $destTable, $linkTable, $sourceCol, $destCol ) = $this->getRelationalTablesAndColumns( $sourceType, $destType );[m
[32m+[m
[32m+[m		[32mif ( $sourceTable === $destTable ) {[m
[32m+[m			[32m$sql = "DELETE FROM {$linkTable}[m
[32m+[m				[32mWHERE ( {$sourceCol} = ? ) OR[m
[32m+[m				[32m( {$destCol} = ?  )[m
[32m+[m			[32m";[m
[32m+[m
[32m+[m			[32m$this->adapter->exec( $sql, array( $sourceID, $sourceID ) );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$sql = "DELETE FROM {$linkTable}[m
[32m+[m				[32mWHERE {$sourceCol} = ? ";[m
[32m+[m
[32m+[m			[32m$this->adapter->exec( $sql, array( $sourceID ) );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::widenColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function widenColumn( $type, $property, $dataType )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset($this->typeno_sqltype[$dataType]) ) return FALSE;[m
[32m+[m
[32m+[m		[32m$table   = $this->esc( $type );[m
[32m+[m		[32m$column  = $this->esc( $property );[m
[32m+[m
[32m+[m		[32m$newType = $this->typeno_sqltype[$dataType];[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( sprintf( $this->getDDLTemplate( 'widenColumn', $type, $column ), $type, $column, $column, $newType ) );[m
[32m+[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipe[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipe( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( "TRUNCATE $table " );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::renameAssocTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function renameAssocTable( $from, $to = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::renameAssociation( $from, $to );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getAssocTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssocTable( $types )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::getAssocTableFormat( $types );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Turns caching on or off. Default: off.[m
[32m+[m	[32m * If caching is turned on retrieval queries fired after eachother will[m
[32m+[m	[32m * use a result row cache.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setUseCache( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->flushCache();[m
[32m+[m
[32m+[m		[32m$this->flagUseCache = (bool) $yesNo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Flushes the Query Writer Cache.[m
[32m+[m	[32m * Clears the internal query cache array and returns its overall[m
[32m+[m	[32m * size.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function flushCache( $newMaxCacheSizePerType = NULL, $countCache = TRUE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_null( $newMaxCacheSizePerType ) && $newMaxCacheSizePerType > 0 ) {[m
[32m+[m			[32m$this->maxCacheSizePerType = $newMaxCacheSizePerType;[m
[32m+[m		[32m}[m
[32m+[m		[32m$count = $countCache ? count( $this->cache, COUNT_RECURSIVE ) : NULL;[m
[32m+[m		[32m$this->cache = array();[m
[32m+[m		[32mreturn $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated Use esc() instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $column   column to be escaped[m
[32m+[m	[32m * @param boolean $noQuotes omit quotes[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function safeColumn( $column, $noQuotes = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->esc( $column, $noQuotes );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated Use esc() instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $table    table to be escaped[m
[32m+[m	[32m * @param boolean $noQuotes omit quotes[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function safeTable( $table, $noQuotes = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->esc( $table, $noQuotes );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueConstraint[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueIndex( $type, $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->addUniqueConstraint( $type, $properties );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\QueryWriter {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP MySQLWriter.[m
[32m+[m[32m * This is a QueryWriter class for RedBeanPHP.[m
[32m+[m[32m * This QueryWriter provides support for the MySQL/MariaDB database platform.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter/MySQL.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass MySQL extends AQueryWriter implements QueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Data types[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_DATATYPE_BOOL             = 0;[m
[32m+[m	[32mconst C_DATATYPE_UINT32           = 2;[m
[32m+[m	[32mconst C_DATATYPE_DOUBLE           = 3;[m
[32m+[m	[32mconst C_DATATYPE_TEXT7            = 4; //InnoDB cant index varchar(255) utf8mb4 - so keep 191 as long as possible[m
[32m+[m	[32mconst C_DATATYPE_TEXT8            = 5;[m
[32m+[m	[32mconst C_DATATYPE_TEXT16           = 6;[m
[32m+[m	[32mconst C_DATATYPE_TEXT32           = 7;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATE     = 80;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATETIME = 81;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_TIME     = 83;  //MySQL time column (only manual)[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_POINT    = 90;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_LINESTRING = 91;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_POLYGON    = 92;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_MONEY      = 93;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_JSON       = 94;  //JSON support (only manual)[m
[32m+[m
[32m+[m	[32mconst C_DATATYPE_SPECIFIED        = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $quoteCharacter = '`';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $DDLTemplates = array([m
[32m+[m		[32m'addColumn' => array([m
[32m+[m			[32m'*' => 'ALTER TABLE %s ADD %s %s '[m
[32m+[m		[32m),[m
[32m+[m		[32m'createTable' => array([m
[32m+[m			[32m'*' => 'CREATE TABLE %s (id INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT, PRIMARY KEY ( id )) ENGINE = InnoDB DEFAULT CHARSET=%s COLLATE=%s '[m
[32m+[m		[32m),[m
[32m+[m		[32m'widenColumn' => array([m
[32m+[m			[32m'*' => 'ALTER TABLE `%s` CHANGE %s %s %s '[m
[32m+[m		[32m)[m
[32m+[m	[32m);[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see AQueryWriter::getKeyMapForType[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getKeyMapForType( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$databaseName = $this->adapter->getCell('SELECT DATABASE()');[m
[32m+[m		[32m$table = $this->esc( $type, TRUE );[m
[32m+[m		[32m$keys = $this->adapter->get('[m
[32m+[m			[32mSELECT[m
[32m+[m				[32minformation_schema.key_column_usage.constraint_name AS `name`,[m
[32m+[m				[32minformation_schema.key_column_usage.referenced_table_name AS `table`,[m
[32m+[m				[32minformation_schema.key_column_usage.column_name AS `from`,[m
[32m+[m				[32minformation_schema.key_column_usage.referenced_column_name AS `to`,[m
[32m+[m				[32minformation_schema.referential_constraints.update_rule AS `on_update`,[m
[32m+[m				[32minformation_schema.referential_constraints.delete_rule AS `on_delete`[m
[32m+[m				[32mFROM information_schema.key_column_usage[m
[32m+[m				[32mINNER JOIN information_schema.referential_constraints[m
[32m+[m				[32mON information_schema.referential_constraints.constraint_name = information_schema.key_column_usage.constraint_name[m
[32m+[m			[32mWHERE[m
[32m+[m				[32minformation_schema.key_column_usage.table_schema = :database[m
[32m+[m				[32mAND information_schema.referential_constraints.constraint_schema  = :database[m
[32m+[m				[32mAND information_schema.key_column_usage.constraint_schema  = :database[m
[32m+[m				[32mAND information_schema.key_column_usage.table_name = :table[m
[32m+[m				[32mAND information_schema.key_column_usage.constraint_name != \'PRIMARY\'[m
[32m+[m				[32mAND information_schema.key_column_usage.referenced_table_name IS NOT NULL[m
[32m+[m		[32m', array( ':database' => $databaseName, ':table' => $table ) );[m
[32m+[m		[32m$keyInfoList = array();[m
[32m+[m		[32mforeach ( $keys as $k ) {[m
[32m+[m			[32m$label = $this->makeFKLabel( $k['from'], $k['table'], $k['to'] );[m
[32m+[m			[32m$keyInfoList[$label] = array([m
[32m+[m				[32m'name'          => $k['name'],[m
[32m+[m				[32m'from'          => $k['from'],[m
[32m+[m				[32m'table'         => $k['table'],[m
[32m+[m				[32m'to'            => $k['to'],[m
[32m+[m				[32m'on_update'     => $k['on_update'],[m
[32m+[m				[32m'on_delete'     => $k['on_delete'][m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $keyInfoList;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor[m
[32m+[m	[32m * Most of the time, you do not need to use this constructor,[m
[32m+[m	[32m * since the facade takes care of constructing and wiring the[m
[32m+[m	[32m * RedBeanPHP core objects. However if you would like to[m
[32m+[m	[32m * assemble an OODB instance yourself, this is how it works:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter $adapter Database Adapter[m
[32m+[m	[32m * @param array   $options options array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( Adapter $adapter, $options = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->typeno_sqltype = array([m
[32m+[m			[32mMySQL::C_DATATYPE_BOOL             => ' TINYINT(1) UNSIGNED ',[m
[32m+[m			[32mMySQL::C_DATATYPE_UINT32           => ' INT(11) UNSIGNED ',[m
[32m+[m			[32mMySQL::C_DATATYPE_DOUBLE           => ' DOUBLE ',[m
[32m+[m			[32mMySQL::C_DATATYPE_TEXT7            => ' VARCHAR(191) ',[m
[32m+[m			[32mMYSQL::C_DATATYPE_TEXT8	           => ' VARCHAR(255) ',[m
[32m+[m			[32mMySQL::C_DATATYPE_TEXT16           => ' TEXT ',[m
[32m+[m			[32mMySQL::C_DATATYPE_TEXT32           => ' LONGTEXT ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_DATE     => ' DATE ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_DATETIME => ' DATETIME ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_TIME     => ' TIME ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_POINT    => ' POINT ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_LINESTRING => ' LINESTRING ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_POLYGON => ' POLYGON ',[m
[32m+[m			[32mMySQL::C_DATATYPE_SPECIAL_MONEY    => ' DECIMAL(10,2) ',[m
[32m+[m			[32mMYSQL::C_DATATYPE_SPECIAL_JSON     => ' JSON '[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->sqltype_typeno = array();[m
[32m+[m
[32m+[m		[32mforeach ( $this->typeno_sqltype as $k => $v ) {[m
[32m+[m			[32m$this->sqltype_typeno[trim( strtolower( $v ) )] = $k;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter = $adapter;[m
[32m+[m		[32m$this->encoding = $this->adapter->getDatabase()->getMysqlEncoding();[m
[32m+[m		[32m$me = $this;[m
[32m+[m		[32mif (!isset($options['noInitcode']))[m
[32m+[m		[32m$this->adapter->setInitCode(function($version) use(&$me) {[m
[32m+[m			[32mtry {[m
[32m+[m				[32mif (strpos($version, 'maria')===FALSE && intval($version)>=8) {[m
[32m+[m						[32m$me->useFeature('ignoreDisplayWidth');[m
[32m+[m				[32m}[m
[32m+[m			[32m} catch( \Exception $e ){}[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Enables certain features/dialects.[m
[32m+[m	[32m *[m
[32m+[m	[32m * - ignoreDisplayWidth required for MySQL8+[m
[32m+[m	[32m *   (automatically set by setup() if you pass dsn instead of PDO object)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $name feature ID[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function useFeature($name) {[m
[32m+[m		[32mif ($name == 'ignoreDisplayWidth') {[m
[32m+[m			[32m$this->typeno_sqltype[MySQL::C_DATATYPE_BOOL] = ' TINYINT UNSIGNED ';[m
[32m+[m			[32m$this->typeno_sqltype[MySQL::C_DATATYPE_UINT32] = ' INT UNSIGNED ';[m
[32m+[m			[32mforeach ( $this->typeno_sqltype as $k => $v ) {[m
[32m+[m				[32m$this->sqltype_typeno[trim( strtolower( $v ) )] = $k;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method returns the datatype to be used for primary key IDS and[m
[32m+[m	[32m * foreign keys. Returns one if the data type constants.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTypeForID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::C_DATATYPE_UINT32;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getTables[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTables()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->adapter->getCol( 'show tables' );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::createTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function createTable( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$charset_collate = $this->adapter->getDatabase()->getMysqlEncoding( TRUE );[m
[32m+[m		[32m$charset = $charset_collate['charset'];[m
[32m+[m		[32m$collate = $charset_collate['collate'];[m
[32m+[m
[32m+[m		[32m$sql = sprintf( $this->getDDLTemplate( 'createTable', $type ), $table, $charset, $collate );[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( $sql );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getColumns[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getColumns( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$columnsRaw = $this->adapter->get( "DESCRIBE " . $this->esc( $table ) );[m
[32m+[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach ( $columnsRaw as $r ) {[m
[32m+[m			[32m$columns[$r['Field']] = $r['Type'];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::scanType[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function scanType( $value, $flagSpecial = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->svalue = $value;[m
[32m+[m
[32m+[m		[32mif ( is_null( $value ) ) return MySQL::C_DATATYPE_BOOL;[m
[32m+[m		[32mif ( $value === INF ) return MySQL::C_DATATYPE_TEXT7;[m
[32m+[m
[32m+[m		[32mif ( $flagSpecial ) {[m
[32m+[m			[32mif ( preg_match( '/^-?\d+\.\d{2}$/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_MONEY;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d$/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_DATE;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d\s\d\d:\d\d:\d\d$/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_DATETIME;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^POINT\(/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_POINT;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^LINESTRING\(/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_LINESTRING;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^POLYGON\(/', $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_SPECIAL_POLYGON;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( self::$flagUseJSONColumns && $this->isJSON( $value ) ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_SPECIAL_JSON;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m//setter turns TRUE FALSE into 0 and 1 because database has no real bools (TRUE and FALSE only for test?).[m
[32m+[m		[32mif ( $value === FALSE || $value === TRUE || $value === '0' || $value === '1' || $value === 0 || $value === 1 ) {[m
[32m+[m			[32mreturn MySQL::C_DATATYPE_BOOL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( is_float( $value ) ) return self::C_DATATYPE_DOUBLE;[m
[32m+[m
[32m+[m		[32mif ( !$this->startsWithZeros( $value ) ) {[m
[32m+[m
[32m+[m			[32mif ( is_numeric( $value ) && ( floor( $value ) == $value ) && $value >= 0 && $value <= 4294967295 ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_UINT32;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( is_numeric( $value ) ) {[m
[32m+[m				[32mreturn MySQL::C_DATATYPE_DOUBLE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( mb_strlen( $value, 'UTF-8' ) <= 191 ) {[m
[32m+[m			[32mreturn MySQL::C_DATATYPE_TEXT7;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( mb_strlen( $value, 'UTF-8' ) <= 255 ) {[m
[32m+[m			[32mreturn MySQL::C_DATATYPE_TEXT8;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( mb_strlen( $value, 'UTF-8' ) <= 65535 ) {[m
[32m+[m			[32mreturn MySQL::C_DATATYPE_TEXT16;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn MySQL::C_DATATYPE_TEXT32;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::code[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function code( $typedescription, $includeSpecials = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( isset( $this->sqltype_typeno[$typedescription] ) ) {[m
[32m+[m			[32m$r = $this->sqltype_typeno[$typedescription];[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$r = self::C_DATATYPE_SPECIFIED;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $includeSpecials ) {[m
[32m+[m			[32mreturn $r;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $r >= QueryWriter::C_DATATYPE_RANGE_SPECIAL ) {[m
[32m+[m			[32mreturn self::C_DATATYPE_SPECIFIED;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $r;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueConstraint( $type, $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach( $properties as $key => $column ) $columns[$key] = $this->esc( $column );[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32msort( $columns ); // Else we get multiple indexes due to order-effects[m
[32m+[m		[32m$name = 'UQ_' . sha1( implode( ',', $columns ) );[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$sql = "ALTER TABLE $table[m
[32m+[m						[32m ADD UNIQUE INDEX $name (" . implode( ',', $columns ) . ")";[m
[32m+[m			[32m$this->adapter->exec( $sql );[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32m//do nothing, dont use alter table ignore, this will delete duplicate records in 3-ways![m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addIndex( $type, $name, $property )[m
[32m+[m	[32m{[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$table  = $this->esc( $type );[m
[32m+[m			[32m$name   = preg_replace( '/\W/', '', $name );[m
[32m+[m			[32m$column = $this->esc( $property );[m
[32m+[m			[32m$this->adapter->exec( "CREATE INDEX $name ON $table ($column) " );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addFK[m
[32m+[m	[32m * @return bool[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addFK( $type, $targetType, $property, $targetProperty, $isDependent = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32m$targetTable = $this->esc( $targetType );[m
[32m+[m		[32m$targetTableNoQ = $this->esc( $targetType, TRUE );[m
[32m+[m		[32m$field = $this->esc( $property );[m
[32m+[m		[32m$fieldNoQ = $this->esc( $property, TRUE );[m
[32m+[m		[32m$targetField = $this->esc( $targetProperty );[m
[32m+[m		[32m$targetFieldNoQ = $this->esc( $targetProperty, TRUE );[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$fieldNoQ = $this->esc( $property, TRUE );[m
[32m+[m		[32mif ( !is_null( $this->getForeignKeyForTypeProperty( $tableNoQ, $fieldNoQ ) ) ) return FALSE;[m
[32m+[m
[32m+[m		[32m//Widen the column if it's incapable of representing a foreign key (at least INT).[m
[32m+[m		[32m$columns = $this->getColumns( $tableNoQ );[m
[32m+[m		[32m$idType = $this->getTypeForID();[m
[32m+[m		[32mif ( $this->code( $columns[$fieldNoQ] ) !==  $idType ) {[m
[32m+[m			[32m$this->widenColumn( $type, $property, $idType );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$fkName = 'fk_'.($tableNoQ.'_'.$fieldNoQ);[m
[32m+[m		[32m$cName = 'c_'.$fkName;[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->adapter->exec( "[m
[32m+[m				[32mALTER TABLE {$table}[m
[32m+[m				[32mADD CONSTRAINT $cName[m
[32m+[m				[32mFOREIGN KEY $fkName ( `{$fieldNoQ}` ) REFERENCES `{$targetTableNoQ}`[m
[32m+[m				[32m(`{$targetFieldNoQ}`) ON DELETE " . ( $isDependent ? 'CASCADE' : 'SET NULL' ) . ' ON UPDATE '.( $isDependent ? 'CASCADE' : 'SET NULL' ).';');[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32m// Failure of fk-constraints is not a problem[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::sqlStateIn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function sqlStateIn( $state, $list, $extraDriverDetails = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$stateMap = array([m
[32m+[m			[32m'42S02' => QueryWriter::C_SQLSTATE_NO_SUCH_TABLE,[m
[32m+[m			[32m'42S22' => QueryWriter::C_SQLSTATE_NO_SUCH_COLUMN,[m
[32m+[m			[32m'23000' => QueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION,[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32mif ( $state == 'HY000' && !empty( $extraDriverDetails[1] ) ) {[m
[32m+[m			[32m$driverCode = $extraDriverDetails[1];[m
[32m+[m
[32m+[m			[32mif ( $driverCode == '1205' && in_array( QueryWriter::C_SQLSTATE_LOCK_TIMEOUT, $list ) ) {[m
[32m+[m				[32mreturn TRUE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn in_array( ( isset( $stateMap[$state] ) ? $stateMap[$state] : '0' ), $list );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipeAll[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipeAll()[m
[32m+[m	[32m{[m
[32m+[m		[32mif (AQueryWriter::$noNuke) throw new \Exception('The nuke() command has been disabled using noNuke() or R::feature(novice/...).');[m
[32m+[m		[32m$this->adapter->exec( 'SET FOREIGN_KEY_CHECKS = 0;' );[m
[32m+[m
[32m+[m		[32mforeach ( $this->getTables() as $t ) {[m
[32m+[m			[32mtry { $this->adapter->exec( "DROP TABLE IF EXISTS `$t`" ); } catch ( SQLException $e ) { ; }[m
[32m+[m			[32mtry { $this->adapter->exec( "DROP VIEW IF EXISTS `$t`" ); } catch ( SQLException $e ) { ; }[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( 'SET FOREIGN_KEY_CHECKS = 1;' );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\QueryWriter {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP SQLiteWriter with support for SQLite types[m
[32m+[m[32m * This is a QueryWriter class for RedBeanPHP.[m
[32m+[m[32m * This QueryWriter provides support for the SQLite database platform.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter/SQLiteT.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass SQLiteT extends AQueryWriter implements QueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Data types[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_DATATYPE_INTEGER   = 0;[m
[32m+[m	[32mconst C_DATATYPE_NUMERIC   = 1;[m
[32m+[m	[32mconst C_DATATYPE_TEXT      = 2;[m
[32m+[m	[32mconst C_DATATYPE_SPECIFIED = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $quoteCharacter = '`';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $DDLTemplates = array([m
[32m+[m		[32m'addColumn' => array([m
[32m+[m			[32m'*' => 'ALTER TABLE `%s` ADD `%s` %s'[m
[32m+[m		[32m),[m
[32m+[m		[32m'createTable' => array([m
[32m+[m			[32m'*' => 'CREATE TABLE %s ( id INTEGER PRIMARY KEY AUTOINCREMENT )'[m
[32m+[m		[32m),[m
[32m+[m		[32m'widenColumn' => array([m
[32m+[m			[32m'*' => ',`%s` %s '[m
[32m+[m		[32m)[m
[32m+[m	[32m);[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gets all information about a table (from a type).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Format:[m
[32m+[m	[32m * array([m
[32m+[m	[32m *    name => name of the table[m
[32m+[m	[32m *    columns => array( name => datatype )[m
[32m+[m	[32m *    indexes => array() raw index information rows from PRAGMA query[m
[32m+[m	[32m *    keys => array() raw key information rows from PRAGMA query[m
[32m+[m	[32m * )[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type you want to get info of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getTable( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tableName = $this->esc( $type, TRUE );[m
[32m+[m		[32m$columns   = $this->getColumns( $type );[m
[32m+[m		[32m$indexes   = $this->getIndexes( $type );[m
[32m+[m		[32m$keys      = $this->getKeyMapForType( $type );[m
[32m+[m
[32m+[m		[32m$table = array([m
[32m+[m			[32m'columns' => $columns,[m
[32m+[m			[32m'indexes' => $indexes,[m
[32m+[m			[32m'keys' => $keys,[m
[32m+[m			[32m'name' => $tableName[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->tableArchive[$tableName] = $table;[m
[32m+[m
[32m+[m		[32mreturn $table;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Puts a table. Updates the table structure.[m
[32m+[m	[32m * In SQLite we can't change columns, drop columns, change or add foreign keys so we[m
[32m+[m	[32m * have a table-rebuild function. You simply load your table with getTable(), modify it and[m
[32m+[m	[32m * then store it with putTable()...[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $tableMap information array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function putTable( $tableMap )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $tableMap['name'];[m
[32m+[m		[32m$q     = array();[m
[32m+[m		[32m$q[]   = "DROP TABLE IF EXISTS tmp_backup;";[m
[32m+[m
[32m+[m		[32m$oldColumnNames = array_keys( $this->getColumns( $table ) );[m
[32m+[m
[32m+[m		[32mforeach ( $oldColumnNames as $k => $v ) $oldColumnNames[$k] = "`$v`";[m
[32m+[m
[32m+[m		[32m$q[] = "CREATE TEMPORARY TABLE tmp_backup(" . implode( ",", $oldColumnNames ) . ");";[m
[32m+[m		[32m$q[] = "INSERT INTO tmp_backup SELECT * FROM `$table`;";[m
[32m+[m		[32m$q[] = "PRAGMA foreign_keys = 0 ";[m
[32m+[m		[32m$q[] = "DROP TABLE `$table`;";[m
[32m+[m
[32m+[m		[32m$newTableDefStr = '';[m
[32m+[m		[32mforeach ( $tableMap['columns'] as $column => $type ) {[m
[32m+[m			[32mif ( $column != 'id' ) {[m
[32m+[m				[32m$newTableDefStr .= sprintf( $this->getDDLTemplate( 'widenColumn', $table, $column ), $column, $type );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$fkDef = '';[m
[32m+[m		[32mforeach ( $tableMap['keys'] as $key ) {[m
[32m+[m			[32m$fkDef .= ", FOREIGN KEY(`{$key['from']}`)[m
[32m+[m						[32m REFERENCES `{$key['table']}`(`{$key['to']}`)[m
[32m+[m						[32m ON DELETE {$key['on_delete']} ON UPDATE {$key['on_update']}";[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$q[] = "CREATE TABLE `$table` ( `id` INTEGER PRIMARY KEY AUTOINCREMENT  $newTableDefStr  $fkDef );";[m
[32m+[m
[32m+[m		[32mforeach ( $tableMap['indexes'] as $name => $index ) {[m
[32m+[m			[32mif ( strpos( $name, 'UQ_' ) === 0 ) {[m
[32m+[m				[32m$cols = explode( '__', substr( $name, strlen( 'UQ_' . $table ) ) );[m
[32m+[m				[32mforeach ( $cols as $k => $v ) $cols[$k] = "`$v`";[m
[32m+[m				[32m$q[] = "CREATE UNIQUE INDEX $name ON `$table` (" . implode( ',', $cols ) . ")";[m
[32m+[m			[32m} else $q[] = "CREATE INDEX $name ON `$table` ({$index['name']}) ";[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$q[] = "INSERT INTO `$table` SELECT * FROM tmp_backup;";[m
[32m+[m		[32m$q[] = "DROP TABLE tmp_backup;";[m
[32m+[m		[32m$q[] = "PRAGMA foreign_keys = 1 ";[m
[32m+[m
[32m+[m		[32mforeach ( $q as $sq ) $this->adapter->exec( $sq );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the an array describing the indexes for type $type.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type to describe indexes of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getIndexes( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table   = $this->esc( $type, TRUE );[m
[32m+[m		[32m$indexes = $this->adapter->get( "PRAGMA index_list('$table')" );[m
[32m+[m
[32m+[m		[32m$indexInfoList = array();[m
[32m+[m		[32mforeach ( $indexes as $i ) {[m
[32m+[m			[32m$indexInfoList[$i['name']] = $this->adapter->getRow( "PRAGMA index_info('{$i['name']}') " );[m
[32m+[m
[32m+[m			[32m$indexInfoList[$i['name']]['unique'] = $i['unique'];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $indexInfoList;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Adds a foreign key to a type.[m
[32m+[m	[32m * Note: cant put this in try-catch because that can hide the fact[m
[32m+[m	[32m * that database has been damaged.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string  $type        type you want to modify table of[m
[32m+[m	[32m * @param  string  $targetType  target type[m
[32m+[m	[32m * @param  string  $field       field of the type that needs to get the fk[m
[32m+[m	[32m * @param  string  $targetField field where the fk needs to point to[m
[32m+[m	[32m * @param  integer $buildopt    0 = NO ACTION, 1 = ON DELETE CASCADE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function buildFK( $type, $targetType, $property, $targetProperty, $constraint = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table           = $this->esc( $type, TRUE );[m
[32m+[m		[32m$targetTable     = $this->esc( $targetType, TRUE );[m
[32m+[m		[32m$column          = $this->esc( $property, TRUE );[m
[32m+[m		[32m$targetColumn    = $this->esc( $targetProperty, TRUE );[m
[32m+[m
[32m+[m		[32m$tables = $this->getTables();[m
[32m+[m		[32mif ( !in_array( $targetTable, $tables ) ) return FALSE;[m
[32m+[m
[32m+[m		[32mif ( !is_null( $this->getForeignKeyForTypeProperty( $table, $column ) ) ) return FALSE;[m
[32m+[m		[32m$t = $this->getTable( $table );[m
[32m+[m		[32m$consSQL = ( $constraint ? 'CASCADE' : 'SET NULL' );[m
[32m+[m		[32m$label   = 'from_' . $column . '_to_table_' . $targetTable . '_col_' . $targetColumn;[m
[32m+[m		[32m$t['keys'][$label] = array([m
[32m+[m			[32m'table'     => $targetTable,[m
[32m+[m			[32m'from'      => $column,[m
[32m+[m			[32m'to'        => $targetColumn,[m
[32m+[m			[32m'on_update' => $consSQL,[m
[32m+[m			[32m'on_delete' => $consSQL[m
[32m+[m		[32m);[m
[32m+[m		[32m$this->putTable( $t );[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see AQueryWriter::getKeyMapForType[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getKeyMapForType( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type, TRUE );[m
[32m+[m		[32m$keys  = $this->adapter->get( "PRAGMA foreign_key_list('$table')" );[m
[32m+[m		[32m$keyInfoList = array();[m
[32m+[m		[32mforeach ( $keys as $k ) {[m
[32m+[m			[32m$label = $this->makeFKLabel( $k['from'], $k['table'], $k['to'] );[m
[32m+[m			[32m$keyInfoList[$label] = array([m
[32m+[m				[32m'name'          => $label,[m
[32m+[m				[32m'from'          => $k['from'],[m
[32m+[m				[32m'table'         => $k['table'],[m
[32m+[m				[32m'to'            => $k['to'],[m
[32m+[m				[32m'on_update'     => $k['on_update'],[m
[32m+[m				[32m'on_delete'     => $k['on_delete'][m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $keyInfoList;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor[m
[32m+[m	[32m * Most of the time, you do not need to use this constructor,[m
[32m+[m	[32m * since the facade takes care of constructing and wiring the[m
[32m+[m	[32m * RedBeanPHP core objects. However if you would like to[m
[32m+[m	[32m * assemble an OODB instance yourself, this is how it works:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter $adapter Database Adapter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( Adapter $adapter )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->typeno_sqltype = array([m
[32m+[m			[32mSQLiteT::C_DATATYPE_INTEGER => 'INTEGER',[m
[32m+[m			[32mSQLiteT::C_DATATYPE_NUMERIC => 'NUMERIC',[m
[32m+[m			[32mSQLiteT::C_DATATYPE_TEXT    => 'TEXT',[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->sqltype_typeno = array();[m
[32m+[m
[32m+[m		[32mforeach ( $this->typeno_sqltype as $k => $v ) {[m
[32m+[m			[32m$this->sqltype_typeno[$v] = $k;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter = $adapter;[m
[32m+[m		[32m$this->adapter->setOption( 'setInitQuery', ' PRAGMA foreign_keys = 1 ' );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method returns the datatype to be used for primary key IDS and[m
[32m+[m	[32m * foreign keys. Returns one if the data type constants.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer $const data type to be used for IDS.[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTypeForID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::scanType[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function scanType( $value, $flagSpecial = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->svalue = $value;[m
[32m+[m
[32m+[m		[32mif ( $value === NULL ) return self::C_DATATYPE_INTEGER;[m
[32m+[m		[32mif ( $value === INF ) return self::C_DATATYPE_TEXT;[m
[32m+[m
[32m+[m		[32mif ( $this->startsWithZeros( $value ) ) return self::C_DATATYPE_TEXT;[m
[32m+[m
[32m+[m		[32mif ( $value === TRUE || $value === FALSE )  return self::C_DATATYPE_INTEGER;[m
[32m+[m
[32m+[m		[32mif ( is_numeric( $value ) && ( intval( $value ) == $value ) && $value < 2147483648 && $value > -2147483648 ) return self::C_DATATYPE_INTEGER;[m
[32m+[m
[32m+[m		[32mif ( ( is_numeric( $value ) && $value < 2147483648 && $value > -2147483648)[m
[32m+[m			[32m|| preg_match( '/\d{4}\-\d\d\-\d\d/', $value )[m
[32m+[m			[32m|| preg_match( '/\d{4}\-\d\d\-\d\d\s\d\d:\d\d:\d\d/', $value )[m
[32m+[m		[32m) {[m
[32m+[m			[32mreturn self::C_DATATYPE_NUMERIC;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn self::C_DATATYPE_TEXT;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addColumn( $table, $column, $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$column = $this->check( $column );[m
[32m+[m		[32m$table  = $this->check( $table );[m
[32m+[m		[32m$type   = $this->typeno_sqltype[$type];[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( sprintf( $this->getDDLTemplate( 'addColumn', $table, $column ), $table, $column, $type ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::code[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function code( $typedescription, $includeSpecials = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$r = ( ( isset( $this->sqltype_typeno[$typedescription] ) ) ? $this->sqltype_typeno[$typedescription] : 99 );[m
[32m+[m
[32m+[m		[32mreturn $r;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::widenColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function widenColumn( $type, $column, $datatype )[m
[32m+[m	[32m{[m
[32m+[m		[32m$t = $this->getTable( $type );[m
[32m+[m
[32m+[m		[32m$t['columns'][$column] = $this->typeno_sqltype[$datatype];[m
[32m+[m
[32m+[m		[32m$this->putTable( $t );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getTables();[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTables()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->adapter->getCol( "SELECT name FROM sqlite_master[m
[32m+[m			[32mWHERE type='table' AND name!='sqlite_sequence';" );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::createTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function createTable( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$sql = sprintf( $this->getDDLTemplate( 'createTable', $type ), $table );[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( $sql );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getColumns[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getColumns( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table      = $this->esc( $table, TRUE );[m
[32m+[m
[32m+[m		[32m$columnsRaw = $this->adapter->get( "PRAGMA table_info('$table')" );[m
[32m+[m
[32m+[m		[32m$columns    = array();[m
[32m+[m		[32mforeach ( $columnsRaw as $r ) $columns[$r['name']] = $r['type'];[m
[32m+[m
[32m+[m		[32mreturn $columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueConstraint( $type, $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$name  = 'UQ_' . $this->esc( $type, TRUE ) . implode( '__', $properties );[m
[32m+[m		[32m$t     = $this->getTable( $type );[m
[32m+[m		[32m$t['indexes'][$name] = array( 'name' => $name );[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->putTable( $t );[m
[32m+[m		[32m} catch( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::sqlStateIn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function sqlStateIn( $state, $list, $extraDriverDetails = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$stateMap = array([m
[32m+[m			[32m'23000' => QueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION[m
[32m+[m		[32m);[m
[32m+[m		[32mif ( $state == 'HY000'[m
[32m+[m		[32m&& isset($extraDriverDetails[1])[m
[32m+[m		[32m&& $extraDriverDetails[1] == 1[m
[32m+[m		[32m&& ( in_array( QueryWriter::C_SQLSTATE_NO_SUCH_TABLE, $list )[m
[32m+[m			[32m|| in_array( QueryWriter::C_SQLSTATE_NO_SUCH_COLUMN, $list )[m
[32m+[m		[32m)) {[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn in_array( ( isset( $stateMap[$state] ) ? $stateMap[$state] : '0' ), $list );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets an SQL snippet to be used for the next queryRecord() operation.[m
[32m+[m	[32m * SQLite has no SELECT-FOR-UPDATE and filters this.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql SQL snippet to use in SELECT statement.[m
[32m+[m	[32m *[m
[32m+[m	[32m * return self[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setSQLSelectSnippet( $sqlSelectSnippet = '' ) {[m
[32m+[m		[32mif ( $sqlSelectSnippet === AQueryWriter::C_SELECT_SNIPPET_FOR_UPDATE) $sqlSelectSnippet = '';[m
[32m+[m		[32m$this->sqlSelectSnippet = $sqlSelectSnippet;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addIndex( $type, $name, $column )[m
[32m+[m	[32m{[m
[32m+[m		[32m$columns = $this->getColumns( $type );[m
[32m+[m		[32mif ( !isset( $columns[$column] ) ) return FALSE;[m
[32m+[m
[32m+[m		[32m$table  = $this->esc( $type );[m
[32m+[m		[32m$name   = preg_replace( '/\W/', '', $name );[m
[32m+[m		[32m$column = $this->esc( $column, TRUE );[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$t = $this->getTable( $type );[m
[32m+[m			[32m$t['indexes'][$name] = array( 'name' => $column );[m
[32m+[m			[32m$this->putTable( $t );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch( SQLException $exception ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipe[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipe( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( "DELETE FROM $table " );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addFK[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addFK( $type, $targetType, $property, $targetProperty, $isDep = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->buildFK( $type, $targetType, $property, $targetProperty, $isDep );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipeAll[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipeAll()[m
[32m+[m	[32m{[m
[32m+[m		[32mif (AQueryWriter::$noNuke) throw new \Exception('The nuke() command has been disabled using noNuke() or R::feature(novice/...).');[m
[32m+[m		[32m$this->adapter->exec( 'PRAGMA foreign_keys = 0 ' );[m
[32m+[m
[32m+[m		[32mforeach ( $this->getTables() as $t ) {[m
[32m+[m			[32mtry { $this->adapter->exec( "DROP TABLE IF EXISTS `$t`" ); } catch ( SQLException $e ) { ; }[m
[32m+[m			[32mtry { $this->adapter->exec( "DROP TABLE IF EXISTS `$t`" ); } catch ( SQLException $e ) { ; }[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( 'PRAGMA foreign_keys = 1 ' );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\QueryWriter {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP PostgreSQL Query Writer.[m
[32m+[m[32m * This is a QueryWriter class for RedBeanPHP.[m
[32m+[m[32m * This QueryWriter provides support for the PostgreSQL database platform.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter/PostgreSQL.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass PostgreSQL extends AQueryWriter implements QueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Data types[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_DATATYPE_INTEGER          = 0;[m
[32m+[m	[32mconst C_DATATYPE_DOUBLE           = 1;[m
[32m+[m	[32mconst C_DATATYPE_TEXT             = 3;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATE     = 80;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATETIME = 81;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_TIME     = 82; //TIME (no zone) only manual[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_TIMEZ    = 83; //TIME (plus zone) only manual[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_POINT    = 90;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_LSEG     = 91;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_CIRCLE   = 92;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_MONEY    = 93;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_POLYGON  = 94;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_MONEY2   = 95; //Numbers only money, i.e. fixed point numeric[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_JSON     = 96; //JSON support (only manual)[m
[32m+[m	[32mconst C_DATATYPE_SPECIFIED        = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $quoteCharacter = '"';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $defaultValue = 'DEFAULT';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $DDLTemplates = array([m
[32m+[m		[32m'addColumn' => array([m
[32m+[m			[32m'*' => 'ALTER TABLE %s ADD %s %s '[m
[32m+[m		[32m),[m
[32m+[m		[32m'createTable' => array([m
[32m+[m			[32m'*' => 'CREATE TABLE %s (id SERIAL PRIMARY KEY) '[m
[32m+[m		[32m),[m
[32m+[m		[32m'widenColumn' => array([m
[32m+[m			[32m'*' => 'ALTER TABLE %s ALTER COLUMN %s TYPE %s'[m
[32m+[m		[32m)[m
[32m+[m	[32m);[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the insert suffix SQL Snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table table[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return  string $sql SQL Snippet[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getInsertSuffix( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn 'RETURNING id ';[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see AQueryWriter::getKeyMapForType[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getKeyMapForType( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type, TRUE );[m
[32m+[m		[32m$keys = $this->adapter->get( '[m
[32m+[m			[32mSELECT[m
[32m+[m			[32minformation_schema.key_column_usage.constraint_name AS "name",[m
[32m+[m			[32minformation_schema.key_column_usage.column_name AS "from",[m
[32m+[m			[32minformation_schema.constraint_table_usage.table_name AS "table",[m
[32m+[m			[32minformation_schema.constraint_column_usage.column_name AS "to",[m
[32m+[m			[32minformation_schema.referential_constraints.update_rule AS "on_update",[m
[32m+[m			[32minformation_schema.referential_constraints.delete_rule AS "on_delete"[m
[32m+[m				[32mFROM information_schema.key_column_usage[m
[32m+[m			[32mINNER JOIN information_schema.constraint_table_usage[m
[32m+[m				[32mON ([m
[32m+[m					[32minformation_schema.key_column_usage.constraint_name = information_schema.constraint_table_usage.constraint_name[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_schema = information_schema.constraint_table_usage.constraint_schema[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_catalog = information_schema.constraint_table_usage.constraint_catalog[m
[32m+[m				[32m)[m
[32m+[m			[32mINNER JOIN information_schema.constraint_column_usage[m
[32m+[m				[32mON ([m
[32m+[m					[32minformation_schema.key_column_usage.constraint_name = information_schema.constraint_column_usage.constraint_name[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_schema = information_schema.constraint_column_usage.constraint_schema[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_catalog = information_schema.constraint_column_usage.constraint_catalog[m
[32m+[m				[32m)[m
[32m+[m			[32mINNER JOIN information_schema.referential_constraints[m
[32m+[m				[32mON ([m
[32m+[m					[32minformation_schema.key_column_usage.constraint_name = information_schema.referential_constraints.constraint_name[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_schema = information_schema.referential_constraints.constraint_schema[m
[32m+[m					[32mAND information_schema.key_column_usage.constraint_catalog = information_schema.referential_constraints.constraint_catalog[m
[32m+[m				[32m)[m
[32m+[m			[32mWHERE[m
[32m+[m				[32minformation_schema.key_column_usage.table_catalog = current_database()[m
[32m+[m				[32mAND information_schema.key_column_usage.table_schema = ANY( current_schemas( FALSE ) )[m
[32m+[m				[32mAND information_schema.key_column_usage.table_name = ?[m
[32m+[m		[32m', array( $type ) );[m
[32m+[m		[32m$keyInfoList = array();[m
[32m+[m		[32mforeach ( $keys as $k ) {[m
[32m+[m			[32m$label = $this->makeFKLabel( $k['from'], $k['table'], $k['to'] );[m
[32m+[m			[32m$keyInfoList[$label] = array([m
[32m+[m				[32m'name'          => $k['name'],[m
[32m+[m				[32m'from'          => $k['from'],[m
[32m+[m				[32m'table'         => $k['table'],[m
[32m+[m				[32m'to'            => $k['to'],[m
[32m+[m				[32m'on_update'     => $k['on_update'],[m
[32m+[m				[32m'on_delete'     => $k['on_delete'][m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $keyInfoList;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor[m
[32m+[m	[32m * Most of the time, you do not need to use this constructor,[m
[32m+[m	[32m * since the facade takes care of constructing and wiring the[m
[32m+[m	[32m * RedBeanPHP core objects. However if you would like to[m
[32m+[m	[32m * assemble an OODB instance yourself, this is how it works:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter $adapter Database Adapter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( Adapter $adapter )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->typeno_sqltype = array([m
[32m+[m			[32mself::C_DATATYPE_INTEGER          => ' integer ',[m
[32m+[m			[32mself::C_DATATYPE_DOUBLE           => ' double precision ',[m
[32m+[m			[32mself::C_DATATYPE_TEXT             => ' text ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_DATE     => ' date ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_TIME     => ' time ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_TIMEZ    => ' time with time zone ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_DATETIME => ' timestamp without time zone ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_POINT    => ' point ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_LSEG     => ' lseg ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_CIRCLE   => ' circle ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_MONEY    => ' money ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_MONEY2   => ' numeric(10,2) ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_POLYGON  => ' polygon ',[m
[32m+[m			[32mself::C_DATATYPE_SPECIAL_JSON     => ' json ',[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->sqltype_typeno = array();[m
[32m+[m
[32m+[m		[32mforeach ( $this->typeno_sqltype as $k => $v ) {[m
[32m+[m			[32m$this->sqltype_typeno[trim( strtolower( $v ) )] = $k;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter = $adapter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method returns the datatype to be used for primary key IDS and[m
[32m+[m	[32m * foreign keys. Returns one if the data type constants.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTypeForID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getTables[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTables()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->adapter->getCol( 'SELECT table_name FROM information_schema.tables WHERE table_schema = ANY( current_schemas( FALSE ) )' );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::createTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function createTable( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( sprintf( $this->getDDLTemplate( 'createTable', $type ), $table ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getColumns[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getColumns( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table      = $this->esc( $table, TRUE );[m
[32m+[m
[32m+[m		[32m$columnsRaw = $this->adapter->get( "SELECT column_name, data_type FROM information_schema.columns WHERE table_name='$table' AND table_schema = ANY( current_schemas( FALSE ) )" );[m
[32m+[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach ( $columnsRaw as $r ) {[m
[32m+[m			[32m$columns[$r['column_name']] = $r['data_type'];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::scanType[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function scanType( $value, $flagSpecial = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->svalue = $value;[m
[32m+[m
[32m+[m		[32mif ( $value === INF ) return self::C_DATATYPE_TEXT;[m
[32m+[m
[32m+[m		[32mif ( $flagSpecial && $value ) {[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_DATE;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d\s\d\d:\d\d:\d\d(\.\d{1,6})?$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_DATETIME;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\([\d\.]+,[\d\.]+\)$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_POINT;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\[\([\d\.]+,[\d\.]+\),\([\d\.]+,[\d\.]+\)\]$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_LSEG;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\<\([\d\.]+,[\d\.]+\),[\d\.]+\>$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_CIRCLE;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\((\([\d\.]+,[\d\.]+\),?)+\)$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_POLYGON;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^\-?(\$|€|¥|£)[\d,\.]+$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_MONEY;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif ( preg_match( '/^-?\d+\.\d{2}$/', $value ) ) {[m
[32m+[m				[32mreturn PostgreSQL::C_DATATYPE_SPECIAL_MONEY2;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( self::$flagUseJSONColumns && $this->isJSON( $value ) ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_SPECIAL_JSON;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( is_float( $value ) ) return self::C_DATATYPE_DOUBLE;[m
[32m+[m
[32m+[m		[32mif ( $this->startsWithZeros( $value ) ) return self::C_DATATYPE_TEXT;[m
[32m+[m
[32m+[m		[32mif ( $value === FALSE || $value === TRUE || $value === NULL || ( is_numeric( $value )[m
[32m+[m				[32m&& AQueryWriter::canBeTreatedAsInt( $value )[m
[32m+[m				[32m&& $value < 2147483648[m
[32m+[m				[32m&& $value > -2147483648 )[m
[32m+[m		[32m) {[m
[32m+[m			[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m		[32m} elseif ( is_numeric( $value ) ) {[m
[32m+[m			[32mreturn self::C_DATATYPE_DOUBLE;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mreturn self::C_DATATYPE_TEXT;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::code[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function code( $typedescription, $includeSpecials = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$r = ( isset( $this->sqltype_typeno[$typedescription] ) ) ? $this->sqltype_typeno[$typedescription] : 99;[m
[32m+[m
[32m+[m		[32mif ( $includeSpecials ) return $r;[m
[32m+[m
[32m+[m		[32mif ( $r >= QueryWriter::C_DATATYPE_RANGE_SPECIAL ) {[m
[32m+[m			[32mreturn self::C_DATATYPE_SPECIFIED;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $r;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::widenColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function widenColumn( $beanType, $column, $datatype )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table   = $beanType;[m
[32m+[m		[32m$type    = $datatype;[m
[32m+[m
[32m+[m		[32m$table   = $this->esc( $table );[m
[32m+[m		[32m$column  = $this->esc( $column );[m
[32m+[m
[32m+[m		[32m$newtype = $this->typeno_sqltype[$type];[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( sprintf( $this->getDDLTemplate( 'widenColumn', $beanType, $column ), $table, $column, $newtype ) );[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueConstraint( $type, $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach( $properties as $key => $column ) $columns[$key] = $this->esc( $column );[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32msort( $columns ); //else we get multiple indexes due to order-effects[m
[32m+[m		[32m$name = "UQ_" . sha1( $table . implode( ',', $columns ) );[m
[32m+[m		[32m$sql = "ALTER TABLE {$table}[m
[32m+[m[32m                ADD CONSTRAINT $name UNIQUE (" . implode( ',', $columns ) . ")";[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->adapter->exec( $sql );[m
[32m+[m		[32m} catch( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::sqlStateIn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function sqlStateIn( $state, $list, $extraDriverDetails = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$stateMap = array([m
[32m+[m			[32m'42P01' => QueryWriter::C_SQLSTATE_NO_SUCH_TABLE,[m
[32m+[m			[32m'42703' => QueryWriter::C_SQLSTATE_NO_SUCH_COLUMN,[m
[32m+[m			[32m'23505' => QueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION,[m
[32m+[m			[32m'55P03' => QueryWriter::C_SQLSTATE_LOCK_TIMEOUT[m
[32m+[m		[32m);[m
[32m+[m		[32mreturn in_array( ( isset( $stateMap[$state] ) ? $stateMap[$state] : '0' ), $list );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addIndex( $type, $name, $property )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table  = $this->esc( $type );[m
[32m+[m		[32m$name   = preg_replace( '/\W/', '', $name );[m
[32m+[m		[32m$column = $this->esc( $property );[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->adapter->exec( "CREATE INDEX {$name} ON $table ({$column}) " );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addFK[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addFK( $type, $targetType, $property, $targetProperty, $isDep = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32m$targetTable = $this->esc( $targetType );[m
[32m+[m		[32m$field = $this->esc( $property );[m
[32m+[m		[32m$targetField = $this->esc( $targetProperty );[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$fieldNoQ = $this->esc( $property, TRUE );[m
[32m+[m		[32mif ( !is_null( $this->getForeignKeyForTypeProperty( $tableNoQ, $fieldNoQ ) ) ) return FALSE;[m
[32m+[m		[32mtry{[m
[32m+[m			[32m$delRule = ( $isDep ? 'CASCADE' : 'SET NULL' );[m
[32m+[m			[32m$this->adapter->exec( "ALTER TABLE {$table}[m
[32m+[m				[32mADD FOREIGN KEY ( {$field} ) REFERENCES  {$targetTable}[m
[32m+[m				[32m({$targetField}) ON DELETE {$delRule} ON UPDATE {$delRule} DEFERRABLE ;" );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipeAll[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipeAll()[m
[32m+[m	[32m{[m
[32m+[m		[32mif (AQueryWriter::$noNuke) throw new \Exception('The nuke() command has been disabled using noNuke() or R::feature(novice/...).');[m
[32m+[m		[32m$this->adapter->exec( 'SET CONSTRAINTS ALL DEFERRED' );[m
[32m+[m
[32m+[m		[32mforeach ( $this->getTables() as $t ) {[m
[32m+[m			[32m$t = $this->esc( $t );[m
[32m+[m			[32m//Some plugins (PostGIS have unremovable tables/views), avoid exceptions.[m
[32m+[m			[32mtry { $this->adapter->exec( "DROP TABLE IF EXISTS $t CASCADE " ); }catch( \Exception $e ) {}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( 'SET CONSTRAINTS ALL IMMEDIATE' );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\QueryWriter {[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP CUBRID Writer.[m
[32m+[m[32m * This is a QueryWriter class for RedBeanPHP.[m
[32m+[m[32m * This QueryWriter provides support for the CUBRID database platform.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/QueryWriter/CUBRID.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass CUBRID extends AQueryWriter implements QueryWriter[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Data types[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_DATATYPE_INTEGER          = 0;[m
[32m+[m	[32mconst C_DATATYPE_DOUBLE           = 1;[m
[32m+[m	[32mconst C_DATATYPE_STRING           = 2;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATE     = 80;[m
[32m+[m	[32mconst C_DATATYPE_SPECIAL_DATETIME = 81;[m
[32m+[m	[32mconst C_DATATYPE_SPECIFIED        = 99;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $quoteCharacter = '`';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method adds a foreign key from type and field to[m
[32m+[m	[32m * target type and target field.[m
[32m+[m	[32m * The foreign key is created without an action. On delete/update[m
[32m+[m	[32m * no action will be triggered. The FK is only used to allow database[m
[32m+[m	[32m * tools to generate pretty diagrams and to make it easy to add actions[m
[32m+[m	[32m * later on.[m
[32m+[m	[32m * This methods accepts a type and infers the corresponding table name.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string  $type           type that will have a foreign key field[m
[32m+[m	[32m * @param  string  $targetType     points to this type[m
[32m+[m	[32m * @param  string  $property       field that contains the foreign key value[m
[32m+[m	[32m * @param  string  $targetProperty field where the fk points to[m
[32m+[m	[32m * @param  boolean $isDep          is dependent[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return bool[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function buildFK( $type, $targetType, $property, $targetProperty, $isDep = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table           = $this->esc( $type );[m
[32m+[m		[32m$tableNoQ        = $this->esc( $type, TRUE );[m
[32m+[m		[32m$targetTable     = $this->esc( $targetType );[m
[32m+[m		[32m$targetTableNoQ  = $this->esc( $targetType, TRUE );[m
[32m+[m		[32m$column          = $this->esc( $property );[m
[32m+[m		[32m$columnNoQ       = $this->esc( $property, TRUE );[m
[32m+[m		[32m$targetColumn    = $this->esc( $targetProperty );[m
[32m+[m		[32mif ( !is_null( $this->getForeignKeyForTypeProperty( $tableNoQ, $columnNoQ ) ) ) return FALSE;[m
[32m+[m		[32m$needsToDropFK   = FALSE;[m
[32m+[m		[32m$casc = ( $isDep ? 'CASCADE' : 'SET NULL' );[m
[32m+[m		[32m$sql  = "ALTER TABLE $table ADD CONSTRAINT FOREIGN KEY($column) REFERENCES $targetTable($targetColumn) ON DELETE $casc ";[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->adapter->exec( $sql );[m
[32m+[m		[32m} catch( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see AQueryWriter::getKeyMapForType[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function getKeyMapForType( $type  )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sqlCode = $this->adapter->get("SHOW CREATE TABLE `{$type}`");[m
[32m+[m		[32mif (!isset($sqlCode[0])) return array();[m
[32m+[m		[32m$matches = array();[m
[32m+[m		[32mpreg_match_all( '/CONSTRAINT\s+\[([\w_]+)\]\s+FOREIGN\s+KEY\s+\(\[([\w_]+)\]\)\s+REFERENCES\s+\[([\w_]+)\](\s+ON\s+DELETE\s+(CASCADE|SET\sNULL|RESTRICT|NO\sACTION)\s+ON\s+UPDATE\s+(SET\sNULL|RESTRICT|NO\sACTION))?/', $sqlCode[0]['CREATE TABLE'], $matches );[m
[32m+[m		[32m$list = array();[m
[32m+[m		[32mif (!isset($matches[0])) return $list;[m
[32m+[m		[32m$max = count($matches[0]);[m
[32m+[m		[32mfor($i = 0; $i < $max; $i++) {[m
[32m+[m			[32m$label = $this->makeFKLabel( $matches[2][$i], $matches[3][$i], 'id' );[m
[32m+[m			[32m$list[ $label ] = array([m
[32m+[m				[32m'name' => $matches[1][$i],[m
[32m+[m				[32m'from' => $matches[2][$i],[m
[32m+[m				[32m'table' => $matches[3][$i],[m
[32m+[m				[32m'to' => 'id',[m
[32m+[m				[32m'on_update' => $matches[6][$i],[m
[32m+[m				[32m'on_delete' => $matches[5][$i][m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $list;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor[m
[32m+[m	[32m * Most of the time, you do not need to use this constructor,[m
[32m+[m	[32m * since the facade takes care of constructing and wiring the[m
[32m+[m	[32m * RedBeanPHP core objects. However if you would like to[m
[32m+[m	[32m * assemble an OODB instance yourself, this is how it works:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter $adapter Database Adapter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( Adapter $adapter )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->typeno_sqltype = array([m
[32m+[m			[32mCUBRID::C_DATATYPE_INTEGER          => ' INTEGER ',[m
[32m+[m			[32mCUBRID::C_DATATYPE_DOUBLE           => ' DOUBLE ',[m
[32m+[m			[32mCUBRID::C_DATATYPE_STRING           => ' STRING ',[m
[32m+[m			[32mCUBRID::C_DATATYPE_SPECIAL_DATE     => ' DATE ',[m
[32m+[m			[32mCUBRID::C_DATATYPE_SPECIAL_DATETIME => ' DATETIME ',[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$this->sqltype_typeno = array();[m
[32m+[m
[32m+[m		[32mforeach ( $this->typeno_sqltype as $k => $v ) {[m
[32m+[m			[32m$this->sqltype_typeno[trim( ( $v ) )] = $k;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->sqltype_typeno['STRING(1073741823)'] = self::C_DATATYPE_STRING;[m
[32m+[m
[32m+[m		[32m$this->adapter = $adapter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This method returns the datatype to be used for primary key IDS and[m
[32m+[m	[32m * foreign keys. Returns one if the data type constants.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTypeForID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getTables[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTables()[m
[32m+[m	[32m{[m
[32m+[m		[32m$rows = $this->adapter->getCol( "SELECT class_name FROM db_class WHERE is_system_class = 'NO';" );[m
[32m+[m
[32m+[m		[32mreturn $rows;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::createTable[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function createTable( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql  = 'CREATE TABLE '[m
[32m+[m			[32m. $this->esc( $table )[m
[32m+[m			[32m. ' ("id" integer AUTO_INCREMENT, CONSTRAINT "pk_'[m
[32m+[m			[32m. $this->esc( $table, TRUE )[m
[32m+[m			[32m. '_id" PRIMARY KEY("id"))';[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( $sql );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::getColumns[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getColumns( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table = $this->esc( $table );[m
[32m+[m
[32m+[m		[32m$columnsRaw = $this->adapter->get( "SHOW COLUMNS FROM $table" );[m
[32m+[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach ( $columnsRaw as $r ) {[m
[32m+[m			[32m$columns[$r['Field']] = $r['Type'];[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::scanType[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function scanType( $value, $flagSpecial = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->svalue = $value;[m
[32m+[m
[32m+[m		[32mif ( is_null( $value ) ) {[m
[32m+[m			[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $flagSpecial ) {[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d$/', $value ) ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_SPECIAL_DATE;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( preg_match( '/^\d{4}\-\d\d-\d\d\s\d\d:\d\d:\d\d$/', $value ) ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_SPECIAL_DATETIME;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$value = strval( $value );[m
[32m+[m
[32m+[m		[32mif ( !$this->startsWithZeros( $value ) ) {[m
[32m+[m			[32mif ( is_numeric( $value ) && ( floor( $value ) == $value ) && $value >= -2147483647 && $value <= 2147483647 ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_INTEGER;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( is_numeric( $value ) ) {[m
[32m+[m				[32mreturn self::C_DATATYPE_DOUBLE;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn self::C_DATATYPE_STRING;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::code[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function code( $typedescription, $includeSpecials = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$r = ( ( isset( $this->sqltype_typeno[$typedescription] ) ) ? $this->sqltype_typeno[$typedescription] : self::C_DATATYPE_SPECIFIED );[m
[32m+[m
[32m+[m		[32mif ( $includeSpecials ) {[m
[32m+[m			[32mreturn $r;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $r >= QueryWriter::C_DATATYPE_RANGE_SPECIAL ) {[m
[32m+[m			[32mreturn self::C_DATATYPE_SPECIFIED;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $r;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addColumn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addColumn( $type, $column, $field )[m
[32m+[m	[32m{[m
[32m+[m		[32m$table  = $type;[m
[32m+[m		[32m$type   = $field;[m
[32m+[m
[32m+[m		[32m$table  = $this->esc( $table );[m
[32m+[m		[32m$column = $this->esc( $column );[m
[32m+[m
[32m+[m		[32m$type   = array_key_exists( $type, $this->typeno_sqltype ) ? $this->typeno_sqltype[$type] : '';[m
[32m+[m
[32m+[m		[32m$this->adapter->exec( "ALTER TABLE $table ADD COLUMN $column $type " );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addUniqueIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addUniqueConstraint( $type, $properties )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tableNoQ = $this->esc( $type, TRUE );[m
[32m+[m		[32m$columns = array();[m
[32m+[m		[32mforeach( $properties as $key => $column ) $columns[$key] = $this->esc( $column );[m
[32m+[m		[32m$table = $this->esc( $type );[m
[32m+[m		[32msort( $columns ); // else we get multiple indexes due to order-effects[m
[32m+[m		[32m$name = 'UQ_' . sha1( implode( ',', $columns ) );[m
[32m+[m		[32m$sql = "ALTER TABLE $table ADD CONSTRAINT UNIQUE $name (" . implode( ',', $columns ) . ")";[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->adapter->exec( $sql );[m
[32m+[m		[32m} catch( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::sqlStateIn[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function sqlStateIn( $state, $list, $extraDriverDetails = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( $state == 'HY000' ) ? ( count( array_diff( array([m
[32m+[m				[32mQueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION,[m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_COLUMN,[m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_TABLE[m
[32m+[m			[32m), $list ) ) !== 3 ) : FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addIndex[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addIndex( $type, $name, $column )[m
[32m+[m	[32m{[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$table  = $this->esc( $type );[m
[32m+[m			[32m$name   = preg_replace( '/\W/', '', $name );[m
[32m+[m			[32m$column = $this->esc( $column );[m
[32m+[m			[32m$this->adapter->exec( "CREATE INDEX $name ON $table ($column) " );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::addFK[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addFK( $type, $targetType, $property, $targetProperty, $isDependent = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->buildFK( $type, $targetType, $property, $targetProperty, $isDependent );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::wipeAll[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipeAll()[m
[32m+[m	[32m{[m
[32m+[m		[32mif (AQueryWriter::$noNuke) throw new \Exception('The nuke() command has been disabled using noNuke() or R::feature(novice/...).');[m
[32m+[m		[32mforeach ( $this->getTables() as $t ) {[m
[32m+[m			[32mforeach ( $this->getKeyMapForType( $t ) as $k ) {[m
[32m+[m				[32m$this->adapter->exec( "ALTER TABLE \"$t\" DROP FOREIGN KEY \"{$k['name']}\"" );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mforeach ( $this->getTables() as $t ) {[m
[32m+[m			[32m$this->adapter->exec( "DROP TABLE \"$t\"" );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see QueryWriter::esc[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function esc( $dbStructure, $noQuotes = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn parent::esc( strtolower( $dbStructure ), $noQuotes );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean\Exception Base.[m
[32m+[m[32m * Represents the base class for RedBeanPHP\Exceptions.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Exception.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass RedException extends \Exception[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\RedException {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * SQL Exception.[m
[32m+[m[32m * Represents a generic database exception independent of the underlying driver.[m
[32m+[m[32m *[m
[32m+[m[32m * @file       RedBeanPHP/RedException/SQL.php[m
[32m+[m[32m * @author     Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license    BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass SQL extends RedException[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate $sqlState;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate $driverDetails = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDriverDetails()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->driverDetails;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @param array $driverDetails[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setDriverDetails($driverDetails)[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->driverDetails = $driverDetails;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an ANSI-92 compliant SQL state.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getSQLState()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->sqlState;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the raw SQL STATE, possibly compliant with[m
[32m+[m	[32m * ANSI SQL error codes - but this depends on database driver.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sqlState SQL state error code[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setSQLState( $sqlState )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->sqlState = $sqlState;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * To String prints both code and SQL state.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __toString()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn '[' . $this->getSQLState() . '] - ' . $this->getMessage()."\n".[m
[32m+[m				[32m'trace: ' . $this->getTraceAsString();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\Cursor as Cursor;[m
[32m+[m[32muse RedBeanPHP\Cursor\NullCursor as NullCursor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Abstract Repository.[m
[32m+[m[32m *[m
[32m+[m[32m * OODB manages two repositories, a fluid one that[m
[32m+[m[32m * adjust the database schema on-the-fly to accomodate for[m
[32m+[m[32m * new bean types (tables) and new properties (columns) and[m
[32m+[m[32m * a frozen one for use in a production environment. OODB[m
[32m+[m[32m * allows you to swap the repository instances using the freeze()[m
[32m+[m[32m * method.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Repository.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mabstract class Repository[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $stash = NULL;[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $nesting = 0;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $partialBeans = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles 'partial bean mode'. If this mode has been[m
[32m+[m	[32m * selected the repository will only update the fields of a bean that[m
[32m+[m	[32m * have been changed rather than the entire bean.[m
[32m+[m	[32m * Pass the value TRUE to select 'partial mode' for all beans.[m
[32m+[m	[32m * Pass the value FALSE to disable 'partial mode'.[m
[32m+[m	[32m * Pass an array of bean types if you wish to use partial mode only[m
[32m+[m	[32m * for some types.[m
[32m+[m	[32m * This method will return the previous value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean|array $yesNoBeans List of type names or 'all'[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function usePartialBeans( $yesNoBeans )[m
[32m+[m	[32m{[m
[32m+[m		[32m$oldValue = $this->partialBeans;[m
[32m+[m		[32m$this->partialBeans = $yesNoBeans;[m
[32m+[m		[32mreturn $oldValue;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Fully processes a bean and updates the associated records in the database.[m
[32m+[m	[32m * First the bean properties will be grouped as 'embedded' bean,[m
[32m+[m	[32m * addition, deleted 'trash can' or residue. Next, the different groups[m
[32m+[m	[32m * of beans will be processed accordingly and the reference bean (i.e.[m
[32m+[m	[32m * the one that was passed to the method as an argument) will be stored.[m
[32m+[m	[32m * Each type of list (own/shared) has 3 bean processors:[m[41m [m
[32m+[m	[32m *[m
[32m+[m	[32m * - trashCanProcessor : removes the bean or breaks its association with the current bean[m
[32m+[m	[32m * - additionProcessor : associates the bean with the current one[m
[32m+[m	[32m * - residueProcessor  : manages beans in lists that 'remain' but may need to be updated[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * This method first groups the beans and then calls the[m
[32m+[m	[32m * internal processing methods.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to process[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function storeBeanWithLists( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sharedAdditions = $sharedTrashcan = $sharedresidue = $sharedItems = $ownAdditions = $ownTrashcan = $ownresidue = $embeddedBeans = array(); //Define groups[m
[32m+[m		[32mforeach ( $bean as $property => $value ) {[m
[32m+[m			[32m$value = ( $value instanceof SimpleModel ) ? $value->unbox() : $value;[m
[32m+[m			[32mif ( $value instanceof OODBBean ) {[m
[32m+[m				[32m$this->processEmbeddedBean( $embeddedBeans, $bean, $property, $value );[m
[32m+[m				[32m$bean->setMeta("sys.typeof.{$property}", $value->getMeta('type'));[m
[32m+[m			[32m} elseif ( is_array( $value ) ) {[m
[32m+[m				[32mforeach($value as &$item) {[m
[32m+[m					[32m$item = ( $item instanceof SimpleModel ) ? $item->unbox() : $item;[m
[32m+[m				[32m}[m
[32m+[m				[32m$originals = $bean->moveMeta( 'sys.shadow.' . $property, array() );[m
[32m+[m				[32mif ( strpos( $property, 'own' ) === 0 ) {[m
[32m+[m					[32mlist( $ownAdditions, $ownTrashcan, $ownresidue ) = $this->processGroups( $originals, $value, $ownAdditions, $ownTrashcan, $ownresidue );[m
[32m+[m					[32m$listName = lcfirst( substr( $property, 3 ) );[m
[32m+[m					[32mif ($bean->moveMeta( 'sys.exclusive-'.  $listName ) ) {[m
[32m+[m						[32mOODBBean::setMetaAll( $ownTrashcan, 'sys.garbage', TRUE );[m
[32m+[m						[32mOODBBean::setMetaAll( $ownAdditions, 'sys.buildcommand.fkdependson', $bean->getMeta( 'type' ) );[m
[32m+[m					[32m}[m
[32m+[m					[32munset( $bean->$property );[m
[32m+[m				[32m} elseif ( strpos( $property, 'shared' ) === 0 ) {[m
[32m+[m					[32mlist( $sharedAdditions, $sharedTrashcan, $sharedresidue ) = $this->processGroups( $originals, $value, $sharedAdditions, $sharedTrashcan, $sharedresidue );[m
[32m+[m					[32munset( $bean->$property );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->storeBean( $bean );[m
[32m+[m		[32m$this->processTrashcan( $bean, $ownTrashcan );[m
[32m+[m		[32m$this->processAdditions( $bean, $ownAdditions );[m
[32m+[m		[32m$this->processResidue( $ownresidue );[m
[32m+[m		[32m$this->processSharedTrashcan( $bean, $sharedTrashcan );[m
[32m+[m		[32m$this->processSharedAdditions( $bean, $sharedAdditions );[m
[32m+[m		[32m$this->processSharedResidue( $bean, $sharedresidue );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Process groups. Internal function. Processes different kind of groups for[m
[32m+[m	[32m * storage function. Given a list of original beans and a list of current beans,[m
[32m+[m	[32m * this function calculates which beans remain in the list (residue), which[m
[32m+[m	[32m * have been deleted (are in the trashcan) and which beans have been added[m
[32m+[m	[32m * (additions).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  array $originals originals[m
[32m+[m	[32m * @param  array $current   the current beans[m
[32m+[m	[32m * @param  array $additions beans that have been added[m
[32m+[m	[32m * @param  array $trashcan  beans that have been deleted[m
[32m+[m	[32m * @param  array $residue   beans that have been left untouched[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processGroups( $originals, $current, $additions, $trashcan, $residue )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array([m
[32m+[m			[32marray_merge( $additions, array_diff( $current, $originals ) ),[m
[32m+[m			[32marray_merge( $trashcan, array_diff( $originals, $current ) ),[m
[32m+[m			[32marray_merge( $residue, array_intersect( $current, $originals ) )[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Processes a list of beans from a bean.[m
[32m+[m	[32m * A bean may contain lists. This[m
[32m+[m	[32m * method handles shared addition lists; i.e.[m
[32m+[m	[32m * the $bean->sharedObject properties.[m
[32m+[m	[32m * Shared beans will be associated with eachother using the[m
[32m+[m	[32m * Association Manager.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean            the bean[m
[32m+[m	[32m * @param array    $sharedAdditions list with shared additions[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processSharedAdditions( $bean, $sharedAdditions )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $sharedAdditions as $addition ) {[m
[32m+[m			[32mif ( $addition instanceof OODBBean ) {[m
[32m+[m				[32m$this->oodb->getAssociationManager()->associate( $addition, $bean );[m
[32m+[m			[32m} else {[m
[32m+[m				[32mthrow new RedException( 'Array may only contain OODBBeans' );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Processes a list of beans from a bean.[m
[32m+[m	[32m * A bean may contain lists. This[m
[32m+[m	[32m * method handles own lists; i.e.[m
[32m+[m	[32m * the $bean->ownObject properties.[m
[32m+[m	[32m * A residue is a bean in an own-list that stays[m
[32m+[m	[32m * where it is. This method checks if there have been any[m
[32m+[m	[32m * modification to this bean, in that case[m
[32m+[m	[32m * the bean is stored once again, otherwise the bean will be left untouched.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array    $ownresidue list to process[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processResidue( $ownresidue )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $ownresidue as $residue ) {[m
[32m+[m			[32mif ( $residue->getMeta( 'tainted' ) ) {[m
[32m+[m				[32m$this->store( $residue );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Processes a list of beans from a bean. A bean may contain lists. This[m
[32m+[m	[32m * method handles own lists; i.e. the $bean->ownObject properties.[m
[32m+[m	[32m * A trash can bean is a bean in an own-list that has been removed[m
[32m+[m	[32m * (when checked with the shadow). This method[m
[32m+[m	[32m * checks if the bean is also in the dependency list. If it is the bean will be removed.[m
[32m+[m	[32m * If not, the connection between the bean and the owner bean will be broken by[m
[32m+[m	[32m * setting the ID to NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean   to process[m
[32m+[m	[32m * @param array    $ownTrashcan list to process[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processTrashcan( $bean, $ownTrashcan )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $ownTrashcan as $trash ) {[m
[32m+[m
[32m+[m			[32m$myFieldLink = $bean->getMeta( 'type' ) . '_id';[m
[32m+[m			[32m$alias = $bean->getMeta( 'sys.alias.' . $trash->getMeta( 'type' ) );[m
[32m+[m			[32mif ( $alias ) $myFieldLink = $alias . '_id';[m
[32m+[m
[32m+[m			[32mif ( $trash->getMeta( 'sys.garbage' ) === TRUE ) {[m
[32m+[m				[32m$this->trash( $trash );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$trash->$myFieldLink = NULL;[m
[32m+[m				[32m$this->store( $trash );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Unassociates the list items in the trashcan.[m
[32m+[m	[32m * This bean processor processes the beans in the shared trash can.[m
[32m+[m	[32m * This group of beans has been deleted from a shared list.[m
[32m+[m	[32m * The affected beans will no longer be associated with the bean[m
[32m+[m	[32m * that contains the shared list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean           bean to process[m
[32m+[m	[32m * @param array    $sharedTrashcan list to process[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processSharedTrashcan( $bean, $sharedTrashcan )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $sharedTrashcan as $trash ) {[m
[32m+[m			[32m$this->oodb->getAssociationManager()->unassociate( $trash, $bean );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores all the beans in the residue group.[m
[32m+[m	[32m * This bean processor processes the beans in the shared residue[m
[32m+[m	[32m * group. This group of beans 'remains' in the list but might need[m
[32m+[m	[32m * to be updated or synced. The affected beans will be stored[m
[32m+[m	[32m * to perform the required database queries.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean          bean to process[m
[32m+[m	[32m * @param array    $sharedresidue list to process[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processSharedResidue( $bean, $sharedresidue )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $sharedresidue as $residue ) {[m
[32m+[m			[32m$this->store( $residue );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether the bean has 'loaded lists' or[m
[32m+[m	[32m * 'loaded embedded beans' that need to be processed[m
[32m+[m	[32m * by the store() method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to be examined[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function hasListsOrObjects( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$processLists = FALSE;[m
[32m+[m		[32mforeach ( $bean as $value ) {[m
[32m+[m			[32mif ( is_array( $value ) || is_object( $value ) ) {[m
[32m+[m				[32m$processLists = TRUE;[m
[32m+[m				[32mbreak;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $processLists;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Converts an embedded bean to an ID, removes the bean property and[m
[32m+[m	[32m * stores the bean in the embedded beans array. The id will be[m
[32m+[m	[32m * assigned to the link field property, i.e. 'bean_id'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array    $embeddedBeans destination array for embedded bean[m
[32m+[m	[32m * @param OODBBean $bean          target bean to process[m
[32m+[m	[32m * @param string   $property      property that contains the embedded bean[m
[32m+[m	[32m * @param OODBBean $value         embedded bean itself[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processEmbeddedBean( &$embeddedBeans, $bean, $property, OODBBean $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$linkField = $property . '_id';[m
[32m+[m		[32mif ( !$value->id || $value->getMeta( 'tainted' ) ) {[m
[32m+[m			[32m$this->store( $value );[m
[32m+[m		[32m}[m
[32m+[m		[32m$id = $value->id;[m
[32m+[m		[32mif ($bean->$linkField != $id) $bean->$linkField = $id;[m
[32m+[m		[32m$bean->setMeta( 'cast.' . $linkField, 'id' );[m
[32m+[m		[32m$embeddedBeans[$linkField] = $value;[m
[32m+[m		[32munset( $bean->$property );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, requires a query writer and OODB.[m
[32m+[m	[32m * Creates a new instance of the bean respository class.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODB        $oodb   instance of object database[m
[32m+[m	[32m * @param QueryWriter $writer the Query Writer to use for this repository[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( OODB $oodb, QueryWriter $writer )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->writer = $writer;[m
[32m+[m		[32m$this->oodb = $oodb;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a OODBBean bean is valid.[m
[32m+[m	[32m * If the type is not valid or the ID is not valid it will[m
[32m+[m	[32m * throw an exception: Security. To be valid a bean[m
[32m+[m	[32m * must abide to the following rules:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - It must have an primary key id property named: id[m
[32m+[m	[32m * - It must have a type[m
[32m+[m	[32m * - The type must conform to the RedBeanPHP naming policy[m
[32m+[m	[32m * - All properties must be valid[m
[32m+[m	[32m * - All values must be valid[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean the bean that needs to be checked[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function check( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m//Is all meta information present?[m
[32m+[m		[32mif ( !isset( $bean->id ) ) {[m
[32m+[m			[32mthrow new RedException( 'Bean has incomplete Meta Information id ' );[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( !( $bean->getMeta( 'type' ) ) ) {[m
[32m+[m			[32mthrow new RedException( 'Bean has incomplete Meta Information II' );[m
[32m+[m		[32m}[m
[32m+[m		[32m//Pattern of allowed characters[m
[32m+[m		[32m$pattern = '/[^a-z0-9_]/i';[m
[32m+[m		[32m//Does the type contain invalid characters?[m
[32m+[m		[32mif ( preg_match( $pattern, $bean->getMeta( 'type' ) ) ) {[m
[32m+[m			[32mthrow new RedException( 'Bean Type is invalid' );[m
[32m+[m		[32m}[m
[32m+[m		[32m//Are the properties and values valid?[m
[32m+[m		[32mforeach ( $bean as $prop => $value ) {[m
[32m+[m			[32mif ([m
[32m+[m				[32mis_array( $value )[m
[32m+[m				[32m|| ( is_object( $value ) )[m
[32m+[m			[32m) {[m
[32m+[m				[32mthrow new RedException( "Invalid Bean value: property $prop" );[m
[32m+[m			[32m} else if ([m
[32m+[m				[32mstrlen( $prop ) < 1[m
[32m+[m				[32m|| preg_match( $pattern, $prop )[m
[32m+[m			[32m) {[m
[32m+[m				[32mthrow new RedException( "Invalid Bean property: property $prop" );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dispenses a new bean (a OODBBean Bean Object)[m
[32m+[m	[32m * of the specified type. Always[m
[32m+[m	[32m * use this function to get an empty bean object. Never[m
[32m+[m	[32m * instantiate a OODBBean yourself because it needs[m
[32m+[m	[32m * to be configured before you can use it with RedBean. This[m
[32m+[m	[32m * function applies the appropriate initialization /[m
[32m+[m	[32m * configuration for you.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To use a different class for beans (instead of OODBBean) set:[m
[32m+[m	[32m * REDBEAN_OODBBEAN_CLASS to the name of the class to be used.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type              type of bean you want to dispense[m
[32m+[m	[32m * @param int     $number            number of beans you would like to get[m
[32m+[m	[32m * @param boolean $alwaysReturnArray if TRUE always returns the result as an array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function dispense( $type, $number = 1, $alwaysReturnArray = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$OODBBEAN = defined( 'REDBEAN_OODBBEAN_CLASS' ) ? REDBEAN_OODBBEAN_CLASS : '\RedBeanPHP\OODBBean';[m
[32m+[m		[32m$beans = array();[m
[32m+[m		[32mfor ( $i = 0; $i < $number; $i++ ) {[m
[32m+[m			[32m$bean = new $OODBBEAN;[m
[32m+[m			[32m$bean->initializeForDispense( $type, $this->oodb->getBeanHelper() );[m
[32m+[m			[32m$this->check( $bean );[m
[32m+[m			[32m$this->oodb->signal( 'dispense', $bean );[m
[32m+[m			[32m$beans[] = $bean;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn ( count( $beans ) === 1 && !$alwaysReturnArray ) ? array_pop( $beans ) : $beans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Searches the database for a bean that matches conditions $conditions and sql $addSQL[m
[32m+[m	[32m * and returns an array containing all the beans that have been found.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Conditions need to take form:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m *    'PROPERTY' => array( POSSIBLE VALUES... 'John', 'Steve' )[m
[32m+[m	[32m *    'PROPERTY' => array( POSSIBLE VALUES... )[m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * All conditions are glued together using the AND-operator, while all value lists[m
[32m+[m	[32m * are glued using IN-operators thus acting as OR-conditions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that you can use property names; the columns will be extracted using the[m
[32m+[m	[32m * appropriate bean formatter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       type of beans you are looking for[m
[32m+[m	[32m * @param array  $conditions list of conditions[m
[32m+[m	[32m * @param string $sql        SQL to be used in query[m
[32m+[m	[32m * @param array  $bindings   whether you prefer to use a WHERE clause or not (TRUE = not)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function find( $type, $conditions = array(), $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m//for backward compatibility, allow mismatch arguments:[m
[32m+[m		[32mif ( is_array( $sql ) ) {[m
[32m+[m			[32mif ( isset( $sql[1] ) ) {[m
[32m+[m				[32m$bindings = $sql[1];[m
[32m+[m			[32m}[m
[32m+[m			[32m$sql = $sql[0];[m
[32m+[m		[32m}[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$beans = $this->convertToBeans( $type, $this->writer->queryRecord( $type, $conditions, $sql, $bindings ) );[m
[32m+[m
[32m+[m			[32mreturn $beans;[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn array();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds a BeanCollection.[m
[32m+[m	[32m * Given a type, an SQL snippet and optionally some parameter bindings[m
[32m+[m	[32m * this methods returns a BeanCollection for your query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The BeanCollection represents a collection of beans and[m
[32m+[m	[32m * makes it possible to use database cursors. The BeanCollection[m
[32m+[m	[32m * has a method next() to obtain the first, next and last bean[m
[32m+[m	[32m * in the collection. The BeanCollection does not implement the array[m
[32m+[m	[32m * interface nor does it try to act like an array because it cannot go[m
[32m+[m	[32m * backward or rewind itself.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of beans you are looking for[m
[32m+[m	[32m * @param string $sql      SQL to be used in query[m
[32m+[m	[32m * @param array  $bindings whether you prefer to use a WHERE clause or not (TRUE = not)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return BeanCollection[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findCollection( $type, $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$cursor = $this->writer->queryRecordWithCursor( $type, $sql, $bindings );[m
[32m+[m			[32mreturn new BeanCollection( $type, $this, $cursor );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn new BeanCollection( $type, $this, new NullCursor );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a bean in the database. This method takes a[m
[32m+[m	[32m * OODBBean Bean Object $bean and stores it[m
[32m+[m	[32m * in the database. If the database schema is not compatible[m
[32m+[m	[32m * with this bean and RedBean runs in fluid mode the schema[m
[32m+[m	[32m * will be altered to store the bean correctly.[m
[32m+[m	[32m * If the database schema is not compatible with this bean and[m
[32m+[m	[32m * RedBean runs in frozen mode it will throw an exception.[m
[32m+[m	[32m * This function returns the primary key ID of the inserted[m
[32m+[m	[32m * bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The return value is an integer if possible. If it is not possible to[m
[32m+[m	[32m * represent the value as an integer a string will be returned. We use[m
[32m+[m	[32m * explicit casts instead of functions to preserve performance[m
[32m+[m	[32m * (0.13 vs 0.28 for 10000 iterations on Core i3).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|SimpleModel $bean bean to store[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer|string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function store( $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$processLists = $this->hasListsOrObjects( $bean );[m
[32m+[m		[32mif ( !$processLists && !$bean->getMeta( 'tainted' ) ) {[m
[32m+[m			[32mreturn $bean->getID(); //bail out![m
[32m+[m		[32m}[m
[32m+[m		[32m$this->oodb->signal( 'update', $bean );[m
[32m+[m		[32m$processLists = $this->hasListsOrObjects( $bean ); //check again, might have changed by model![m
[32m+[m		[32mif ( $processLists ) {[m
[32m+[m			[32m$this->storeBeanWithLists( $bean );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$this->storeBean( $bean );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->oodb->signal( 'after_update', $bean );[m
[32m+[m
[32m+[m		[32mreturn ( (string) $bean->id === (string) (int) $bean->id ) ? (int) $bean->id : (string) $bean->id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an array of beans. Pass a type and a series of ids and[m
[32m+[m	[32m * this method will bring you the corresponding beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * important note: Because this method loads beans using the load()[m
[32m+[m	[32m * function (but faster) it will return empty beans with ID 0 for[m
[32m+[m	[32m * every bean that could not be located. The resulting beans will have the[m
[32m+[m	[32m * passed IDs as their keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans[m
[32m+[m	[32m * @param array  $ids  ids to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function batch( $type, $ids )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !$ids ) {[m
[32m+[m			[32mreturn array();[m
[32m+[m		[32m}[m
[32m+[m		[32m$collection = array();[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$rows = $this->writer->queryRecord( $type, array( 'id' => $ids ) );[m
[32m+[m		[32m} catch ( SQLException $e ) {[m
[32m+[m			[32m$this->handleException( $e );[m
[32m+[m			[32m$rows = FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->stash[$this->nesting] = array();[m
[32m+[m		[32mif ( !$rows ) {[m
[32m+[m			[32mreturn array();[m
[32m+[m		[32m}[m
[32m+[m		[32mforeach ( $rows as $row ) {[m
[32m+[m			[32m$this->stash[$this->nesting][$row['id']] = $row;[m
[32m+[m		[32m}[m
[32m+[m		[32mforeach ( $ids as $id ) {[m
[32m+[m			[32m$collection[$id] = $this->load( $type, $id );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->stash[$this->nesting] = NULL;[m
[32m+[m
[32m+[m		[32mreturn $collection;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This is a convenience method; it converts database rows[m
[32m+[m	[32m * (arrays) into beans. Given a type and a set of rows this method[m
[32m+[m	[32m * will return an array of beans of the specified type loaded with[m
[32m+[m	[32m * the data fields provided by the result set from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * New in 4.3.2: meta mask. The meta mask is a special mask to send[m
[32m+[m	[32m * data from raw result rows to the meta store of the bean. This is[m
[32m+[m	[32m * useful for bundling additional information with custom queries.[m
[32m+[m	[32m * Values of every column whos name starts with $mask will be[m
[32m+[m	[32m * transferred to the meta section of the bean under key 'data.bundle'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans you would like to have[m
[32m+[m	[32m * @param array  $rows rows from the database result[m
[32m+[m	[32m * @param string $mask meta mask to apply (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function convertToBeans( $type, $rows, $mask = '__meta' )[m
[32m+[m	[32m{[m
[32m+[m		[32m$masktype = gettype( $mask );[m
[32m+[m		[32mswitch ( $masktype ) {[m
[32m+[m			[32mcase 'string':[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 'array':[m
[32m+[m				[32m$maskflip = array();[m
[32m+[m				[32mforeach ( $mask as $m ) {[m
[32m+[m					[32mif ( !is_string( $m ) ) {[m
[32m+[m						[32m$mask = NULL;[m
[32m+[m						[32m$masktype = 'NULL';[m
[32m+[m						[32mbreak 2;[m
[32m+[m					[32m}[m
[32m+[m					[32m$maskflip[$m] = TRUE;[m
[32m+[m				[32m}[m
[32m+[m				[32m$mask = $maskflip;[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mdefault:[m
[32m+[m				[32m$mask = NULL;[m
[32m+[m				[32m$masktype = 'NULL';[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$collection                  = array();[m
[32m+[m		[32m$this->stash[$this->nesting] = array();[m
[32m+[m		[32mforeach ( $rows as $row ) {[m
[32m+[m			[32mif ( $mask !== NULL ) {[m
[32m+[m				[32m$meta = array();[m
[32m+[m				[32mforeach( $row as $key => $value ) {[m
[32m+[m					[32mif ( $masktype === 'string' ) {[m
[32m+[m						[32mif ( strpos( $key, $mask ) === 0 ) {[m
[32m+[m							[32munset( $row[$key] );[m
[32m+[m							[32m$meta[$key] = $value;[m
[32m+[m						[32m}[m
[32m+[m					[32m} elseif ( $masktype === 'array' ) {[m
[32m+[m						[32mif ( isset( $mask[$key] ) ) {[m
[32m+[m							[32munset( $row[$key] );[m
[32m+[m							[32m$meta[$key] = $value;[m
[32m+[m						[32m}[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$id                               = $row['id'];[m
[32m+[m			[32m$this->stash[$this->nesting][$id] = $row;[m
[32m+[m			[32m$collection[$id]                  = $this->load( $type, $id );[m
[32m+[m
[32m+[m			[32mif ( $mask !== NULL ) {[m
[32m+[m				[32m$collection[$id]->setMeta( 'data.bundle', $meta );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->stash[$this->nesting] = NULL;[m
[32m+[m
[32m+[m		[32mreturn $collection;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts the number of beans of type $type.[m
[32m+[m	[32m * This method accepts a second argument to modify the count-query.[m
[32m+[m	[32m * A third argument can be used to provide bindings for the SQL snippet.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of bean we are looking for[m
[32m+[m	[32m * @param string $addSQL   additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings parameters to bind to SQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function count( $type, $addSQL = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = AQueryWriter::camelsSnake( $type );[m
[32m+[m		[32mif ( count( explode( '_', $type ) ) > 2 ) {[m
[32m+[m			[32mthrow new RedException( 'Invalid type for count.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$count = (int) $this->writer->queryRecordCount( $type, array(), $addSQL, $bindings );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m			[32m$count = 0;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $count;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes a bean from the database.[m
[32m+[m	[32m * This function will remove the specified OODBBean[m
[32m+[m	[32m * Bean Object from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|SimpleModel $bean bean you want to remove from database[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function trash( $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->oodb->signal( 'delete', $bean );[m
[32m+[m		[32mforeach ( $bean as $property => $value ) {[m
[32m+[m			[32mif ( $value instanceof OODBBean ) {[m
[32m+[m				[32munset( $bean->$property );[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( is_array( $value ) ) {[m
[32m+[m				[32mif ( strpos( $property, 'own' ) === 0 ) {[m
[32m+[m					[32munset( $bean->$property );[m
[32m+[m				[32m} elseif ( strpos( $property, 'shared' ) === 0 ) {[m
[32m+[m					[32munset( $bean->$property );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$deleted = $this->writer->deleteRecord( $bean->getMeta( 'type' ), array( 'id' => array( $bean->id ) ), NULL );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m		[32m}[m
[32m+[m		[32m$bean->id = 0;[m
[32m+[m		[32m$this->oodb->signal( 'after_delete', $bean );[m
[32m+[m		[32mreturn isset($deleted) ? $deleted : 0;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether the specified table already exists in the database.[m
[32m+[m	[32m * Not part of the Object Database interface![m
[32m+[m	[32m *[m
[32m+[m	[32m * @deprecated Use AQueryWriter::typeExists() instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table table name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function tableExists( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->writer->tableExists( $table );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Trash all beans of a given type.[m
[32m+[m	[32m * Wipes an entire type of bean. After this operation there[m
[32m+[m	[32m * will be no beans left of the specified type.[m
[32m+[m	[32m * This method will ignore exceptions caused by database[m
[32m+[m	[32m * tables that do not exist.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean you wish to delete all instances of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipe( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->writer->wipe( $type );[m
[32m+[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32mif ( !$this->writer->sqlStateIn( $exception->getSQLState(), array( QueryWriter::C_SQLSTATE_NO_SUCH_TABLE ), $exception->getDriverDetails() ) ) {[m
[32m+[m				[32mthrow $exception;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Repository {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m[32muse RedBeanPHP\Repository as Repository;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Fluid Repository.[m
[32m+[m[32m * OODB manages two repositories, a fluid one that[m
[32m+[m[32m * adjust the database schema on-the-fly to accomodate for[m
[32m+[m[32m * new bean types (tables) and new properties (columns) and[m
[32m+[m[32m * a frozen one for use in a production environment. OODB[m
[32m+[m[32m * allows you to swap the repository instances using the freeze()[m
[32m+[m[32m * method.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Repository/Fluid.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Fluid extends Repository[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Figures out the desired type given the cast string ID.[m
[32m+[m	[32m * Given a cast ID, this method will return the associated[m
[32m+[m	[32m * type (INT(10) or VARCHAR for instance). The returned type[m
[32m+[m	[32m * can be processed by the Query Writer to build the specified[m
[32m+[m	[32m * column for you in the database. The Cast ID is actually just[m
[32m+[m	[32m * a superset of the QueryWriter types. In addition to default[m
[32m+[m	[32m * Query Writer column types you can pass the following 'cast types':[m
[32m+[m	[32m * 'id' and 'string'. These will map to Query Writer specific[m
[32m+[m	[32m * column types (probably INT and VARCHAR).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $cast cast identifier[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getTypeFromCast( $cast )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $cast == 'string' ) {[m
[32m+[m			[32m$typeno = $this->writer->scanType( 'STRING' );[m
[32m+[m		[32m} elseif ( $cast == 'id' ) {[m
[32m+[m			[32m$typeno = $this->writer->getTypeForID();[m
[32m+[m		[32m} elseif ( isset( $this->writer->sqltype_typeno[$cast] ) ) {[m
[32m+[m			[32m$typeno = $this->writer->sqltype_typeno[$cast];[m
[32m+[m		[32m} else {[m
[32m+[m			[32mthrow new RedException( 'Invalid Cast' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $typeno;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Orders the Query Writer to create a table if it does not exist already and[m
[32m+[m	[32m * adds a note in the build report about the creation.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to update report of[m
[32m+[m	[32m * @param string         $table table to check and create if not exists[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function createTableIfNotExists( OODBBean $bean, $table )[m
[32m+[m	[32m{[m
[32m+[m		[32m//Does table exist? If not, create[m
[32m+[m		[32mif ( !$this->tableExists( $this->writer->esc( $table, TRUE ) ) ) {[m
[32m+[m			[32m$this->writer->createTable( $table );[m
[32m+[m			[32m$bean->setMeta( 'buildreport.flags.created', TRUE );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Modifies the table to fit the bean data.[m
[32m+[m	[32m * Given a property and a value and the bean, this method will[m
[32m+[m	[32m * adjust the table structure to fit the requirements of the property and value.[m
[32m+[m	[32m * This may include adding a new column or widening an existing column to hold a larger[m
[32m+[m	[32m * or different kind of value. This method employs the writer to adjust the table[m
[32m+[m	[32m * structure in the database. Schema updates are recorded in meta properties of the bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method will also apply indexes, unique constraints and foreign keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     bean to get cast data from and store meta in[m
[32m+[m	[32m * @param string   $property property to store[m
[32m+[m	[32m * @param mixed    $value    value to store[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function modifySchema( OODBBean $bean, $property, $value, &$columns = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$doFKStuff = FALSE;[m
[32m+[m		[32m$table   = $bean->getMeta( 'type' );[m
[32m+[m		[32mif ($columns === NULL) {[m
[32m+[m			[32m$columns = $this->writer->getColumns( $table );[m
[32m+[m		[32m}[m
[32m+[m		[32m$columnNoQ = $this->writer->esc( $property, TRUE );[m
[32m+[m		[32mif ( !$this->oodb->isChilled( $bean->getMeta( 'type' ) ) ) {[m
[32m+[m			[32mif ( $bean->getMeta( "cast.$property", -1 ) !== -1 ) { //check for explicitly specified types[m
[32m+[m				[32m$cast   = $bean->getMeta( "cast.$property" );[m
[32m+[m				[32m$typeno = $this->getTypeFromCast( $cast );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$cast   = FALSE;[m
[32m+[m				[32m$typeno = $this->writer->scanType( $value, TRUE );[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( isset( $columns[$this->writer->esc( $property, TRUE )] ) ) { //Is this property represented in the table ?[m
[32m+[m				[32mif ( !$cast ) { //rescan without taking into account special types >80[m
[32m+[m					[32m$typeno = $this->writer->scanType( $value, FALSE );[m
[32m+[m				[32m}[m
[32m+[m				[32m$sqlt = $this->writer->code( $columns[$this->writer->esc( $property, TRUE )] );[m
[32m+[m				[32mif ( $typeno > $sqlt ) { //no, we have to widen the database column type[m
[32m+[m					[32m$this->writer->widenColumn( $table, $property, $typeno );[m
[32m+[m					[32m$bean->setMeta( 'buildreport.flags.widen', TRUE );[m
[32m+[m					[32m$doFKStuff = TRUE;[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$this->writer->addColumn( $table, $property, $typeno );[m
[32m+[m				[32m$bean->setMeta( 'buildreport.flags.addcolumn', TRUE );[m
[32m+[m				[32m$doFKStuff = TRUE;[m
[32m+[m			[32m}[m
[32m+[m			[32mif ($doFKStuff) {[m
[32m+[m				[32mif (strrpos($columnNoQ, '_id')===(strlen($columnNoQ)-3)) {[m
[32m+[m					[32m$destinationColumnNoQ = substr($columnNoQ, 0, strlen($columnNoQ)-3);[m
[32m+[m					[32m$indexName = "index_foreignkey_{$table}_{$destinationColumnNoQ}";[m
[32m+[m					[32m$this->writer->addIndex($table, $indexName, $columnNoQ);[m
[32m+[m					[32m$typeof = $bean->getMeta("sys.typeof.{$destinationColumnNoQ}", $destinationColumnNoQ);[m
[32m+[m					[32m$isLink = $bean->getMeta( 'sys.buildcommand.unique', FALSE );[m
[32m+[m					[32m//Make FK CASCADING if part of exclusive list (dependson=typeof) or if link bean[m
[32m+[m					[32m$isDep = ( $bean->moveMeta( 'sys.buildcommand.fkdependson' ) === $typeof || is_array( $isLink ) );[m
[32m+[m					[32m$result = $this->writer->addFK( $table, $typeof, $columnNoQ, 'id', $isDep );[m
[32m+[m					[32m//If this is a link bean and all unique columns have been added already, then apply unique constraint[m
[32m+[m					[32mif ( is_array( $isLink ) && !count( array_diff( $isLink, array_keys( $this->writer->getColumns( $table ) ) ) ) ) {[m
[32m+[m						[32m$this->writer->addUniqueConstraint( $table, $bean->moveMeta('sys.buildcommand.unique') );[m
[32m+[m						[32m$bean->setMeta("sys.typeof.{$destinationColumnNoQ}", NULL);[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Part of the store() functionality.[m
[32m+[m	[32m * Handles all new additions after the bean has been saved.[m
[32m+[m	[32m * Stores addition bean in own-list, extracts the id and[m
[32m+[m	[32m * adds a foreign key. Also adds a constraint in case the type is[m
[32m+[m	[32m * in the dependent list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that this method raises a custom exception if the bean[m
[32m+[m	[32m * is not an instance of OODBBean. Therefore it does not use[m
[32m+[m	[32m * a type hint. This allows the user to take action in case[m
[32m+[m	[32m * invalid objects are passed in the list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean         bean to process[m
[32m+[m	[32m * @param array    $ownAdditions list of addition beans in own-list[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processAdditions( $bean, $ownAdditions )[m
[32m+[m	[32m{[m
[32m+[m		[32m$beanType = $bean->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32mforeach ( $ownAdditions as $addition ) {[m
[32m+[m			[32mif ( $addition instanceof OODBBean ) {[m
[32m+[m
[32m+[m				[32m$myFieldLink = $beanType . '_id';[m
[32m+[m				[32m$alias = $bean->getMeta( 'sys.alias.' . $addition->getMeta( 'type' ) );[m
[32m+[m				[32mif ( $alias ) $myFieldLink = $alias . '_id';[m
[32m+[m
[32m+[m				[32m$addition->$myFieldLink = $bean->id;[m
[32m+[m				[32m$addition->setMeta( 'cast.' . $myFieldLink, 'id' );[m
[32m+[m
[32m+[m				[32mif ($alias) {[m
[32m+[m					[32m$addition->setMeta( "sys.typeof.{$alias}", $beanType );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$addition->setMeta( "sys.typeof.{$beanType}", $beanType );[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$this->store( $addition );[m
[32m+[m			[32m} else {[m
[32m+[m				[32mthrow new RedException( 'Array may only contain OODBBeans' );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a cleaned bean; i.e. only scalar values. This is the core of the store()[m
[32m+[m	[32m * method. When all lists and embedded beans (parent objects) have been processed and[m
[32m+[m	[32m * removed from the original bean the bean is passed to this method to be stored[m
[32m+[m	[32m * in the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean the clean bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function storeBean( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $bean->getMeta( 'changed' ) ) {[m
[32m+[m			[32m$this->check( $bean );[m
[32m+[m			[32m$table = $bean->getMeta( 'type' );[m
[32m+[m			[32m$this->createTableIfNotExists( $bean, $table );[m
[32m+[m
[32m+[m			[32m$updateValues = array();[m
[32m+[m
[32m+[m			[32m$partial = ( $this->partialBeans === TRUE || ( is_array( $this->partialBeans ) && in_array( $table, $this->partialBeans ) ) );[m
[32m+[m			[32mif ( $partial ) {[m
[32m+[m				[32m$mask = $bean->getMeta( 'changelist' );[m
[32m+[m				[32m$bean->setMeta( 'changelist', array() );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$columnCache = NULL;[m
[32m+[m			[32mforeach ( $bean as $property => $value ) {[m
[32m+[m				[32mif ( $partial && !in_array( $property, $mask ) ) continue;[m
[32m+[m				[32mif ( $property !== 'id' ) {[m
[32m+[m					[32m$this->modifySchema( $bean, $property, $value, $columnCache );[m
[32m+[m				[32m}[m
[32m+[m				[32mif ( $property !== 'id' ) {[m
[32m+[m					[32m$updateValues[] = array( 'property' => $property, 'value' => $value );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$bean->id = $this->writer->updateRecord( $table, $updateValues, $bean->id );[m
[32m+[m			[32m$bean->setMeta( 'changed', FALSE );[m
[32m+[m		[32m}[m
[32m+[m		[32m$bean->setMeta( 'tainted', FALSE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exception handler.[m
[32m+[m	[32m * Fluid and Frozen mode have different ways of handling[m
[32m+[m	[32m * exceptions. Fluid mode (using the fluid repository) ignores[m
[32m+[m	[32m * exceptions caused by the following:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - missing tables[m
[32m+[m	[32m * - missing column[m
[32m+[m	[32m *[m
[32m+[m	[32m * In these situations, the repository will behave as if[m
[32m+[m	[32m * no beans could be found. This is because in fluid mode[m
[32m+[m	[32m * it might happen to query a table or column that has not been[m
[32m+[m	[32m * created yet. In frozen mode, this is not supposed to happen[m
[32m+[m	[32m * and the corresponding exceptions will be thrown.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param \Exception $exception exception[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function handleException( \Exception $exception )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !$this->writer->sqlStateIn( $exception->getSQLState(),[m
[32m+[m			[32marray([m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_TABLE,[m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_COLUMN ),[m
[32m+[m				[32m$exception->getDriverDetails() )[m
[32m+[m		[32m) {[m
[32m+[m			[32mthrow $exception;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads a bean from the object database.[m
[32m+[m	[32m * It searches for a OODBBean Bean Object in the[m
[32m+[m	[32m * database. It does not matter how this bean has been stored.[m
[32m+[m	[32m * RedBean uses the primary key ID $id and the string $type[m
[32m+[m	[32m * to find the bean. The $type specifies what kind of bean you[m
[32m+[m	[32m * are looking for; this is the same type as used with the[m
[32m+[m	[32m * dispense() function. If RedBean finds the bean it will return[m
[32m+[m	[32m * the OODB Bean object; if it cannot find the bean[m
[32m+[m	[32m * RedBean will return a new bean of type $type and with[m
[32m+[m	[32m * primary key ID 0. In the latter case it acts basically the[m
[32m+[m	[32m * same as dispense().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Important note:[m
[32m+[m	[32m * If the bean cannot be found in the database a new bean of[m
[32m+[m	[32m * the specified type will be generated and returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type type of bean you want to load[m
[32m+[m	[32m * @param integer $id   ID of the bean you want to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function load( $type, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32m$rows = array();[m
[32m+[m		[32m$bean = $this->dispense( $type );[m
[32m+[m		[32mif ( isset( $this->stash[$this->nesting][$id] ) ) {[m
[32m+[m			[32m$row = $this->stash[$this->nesting][$id];[m
[32m+[m		[32m} else {[m
[32m+[m			[32mtry {[m
[32m+[m				[32m$rows = $this->writer->queryRecord( $type, array( 'id' => array( $id ) ) );[m
[32m+[m			[32m} catch ( SQLException $exception ) {[m
[32m+[m				[32mif ([m
[32m+[m					[32m$this->writer->sqlStateIn([m
[32m+[m						[32m$exception->getSQLState(),[m
[32m+[m						[32marray([m
[32m+[m							[32mQueryWriter::C_SQLSTATE_NO_SUCH_COLUMN,[m
[32m+[m							[32mQueryWriter::C_SQLSTATE_NO_SUCH_TABLE[m
[32m+[m						[32m),[m
[32m+[m						[32m$exception->getDriverDetails()[m
[32m+[m					[32m)[m
[32m+[m				[32m) {[m
[32m+[m					[32m$rows = array();[m
[32m+[m				[32m} else {[m
[32m+[m					[32mthrow $exception;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32mif ( !count( $rows ) ) {[m
[32m+[m				[32mreturn $bean;[m
[32m+[m			[32m}[m
[32m+[m			[32m$row = array_pop( $rows );[m
[32m+[m		[32m}[m
[32m+[m		[32m$bean->importRow( $row );[m
[32m+[m		[32m$this->nesting++;[m
[32m+[m		[32m$this->oodb->signal( 'open', $bean );[m
[32m+[m		[32m$this->nesting--;[m
[32m+[m
[32m+[m		[32mreturn $bean->setMeta( 'tainted', FALSE );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Repository {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m[32muse RedBeanPHP\Repository as Repository;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Frozen Repository.[m
[32m+[m[32m * OODB manages two repositories, a fluid one that[m
[32m+[m[32m * adjust the database schema on-the-fly to accomodate for[m
[32m+[m[32m * new bean types (tables) and new properties (columns) and[m
[32m+[m[32m * a frozen one for use in a production environment. OODB[m
[32m+[m[32m * allows you to swap the repository instances using the freeze()[m
[32m+[m[32m * method.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Repository/Frozen.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Frozen extends Repository[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exception handler.[m
[32m+[m	[32m * Fluid and Frozen mode have different ways of handling[m
[32m+[m	[32m * exceptions. Fluid mode (using the fluid repository) ignores[m
[32m+[m	[32m * exceptions caused by the following:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - missing tables[m
[32m+[m	[32m * - missing column[m
[32m+[m	[32m *[m
[32m+[m	[32m * In these situations, the repository will behave as if[m
[32m+[m	[32m * no beans could be found. This is because in fluid mode[m
[32m+[m	[32m * it might happen to query a table or column that has not been[m
[32m+[m	[32m * created yet. In frozen mode, this is not supposed to happen[m
[32m+[m	[32m * and the corresponding exceptions will be thrown.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param \Exception $exception exception[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function handleException( \Exception $exception )[m
[32m+[m	[32m{[m
[32m+[m		[32mthrow $exception;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a cleaned bean; i.e. only scalar values. This is the core of the store()[m
[32m+[m	[32m * method. When all lists and embedded beans (parent objects) have been processed and[m
[32m+[m	[32m * removed from the original bean the bean is passed to this method to be stored[m
[32m+[m	[32m * in the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean the clean bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function storeBean( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $bean->getMeta( 'changed' ) ) {[m
[32m+[m
[32m+[m			[32mlist( $properties, $table ) = $bean->getPropertiesAndType();[m
[32m+[m			[32m$id = $properties['id'];[m
[32m+[m			[32munset($properties['id']);[m
[32m+[m			[32m$updateValues = array();[m
[32m+[m			[32m$k1 = 'property';[m
[32m+[m			[32m$k2 = 'value';[m
[32m+[m
[32m+[m			[32m$partial = ( $this->partialBeans === TRUE || ( is_array( $this->partialBeans ) && in_array( $table, $this->partialBeans ) ) );[m
[32m+[m			[32mif ( $partial ) {[m
[32m+[m				[32m$mask = $bean->getMeta( 'changelist' );[m
[32m+[m				[32m$bean->setMeta( 'changelist', array() );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mforeach( $properties as $key => $value ) {[m
[32m+[m				[32mif ( $partial && !in_array( $key, $mask ) ) continue;[m
[32m+[m				[32m$updateValues[] = array( $k1 => $key, $k2 => $value );[m
[32m+[m			[32m}[m
[32m+[m			[32m$bean->id = $this->writer->updateRecord( $table, $updateValues, $id );[m
[32m+[m			[32m$bean->setMeta( 'changed', FALSE );[m
[32m+[m		[32m}[m
[32m+[m		[32m$bean->setMeta( 'tainted', FALSE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Part of the store() functionality.[m
[32m+[m	[32m * Handles all new additions after the bean has been saved.[m
[32m+[m	[32m * Stores addition bean in own-list, extracts the id and[m
[32m+[m	[32m * adds a foreign key. Also adds a constraint in case the type is[m
[32m+[m	[32m * in the dependent list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that this method raises a custom exception if the bean[m
[32m+[m	[32m * is not an instance of OODBBean. Therefore it does not use[m
[32m+[m	[32m * a type hint. This allows the user to take action in case[m
[32m+[m	[32m * invalid objects are passed in the list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean         bean to process[m
[32m+[m	[32m * @param array    $ownAdditions list of addition beans in own-list[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m * @throws RedException[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function processAdditions( $bean, $ownAdditions )[m
[32m+[m	[32m{[m
[32m+[m		[32m$beanType = $bean->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32m$cachedIndex = array();[m
[32m+[m		[32mforeach ( $ownAdditions as $addition ) {[m
[32m+[m			[32mif ( $addition instanceof OODBBean ) {[m
[32m+[m
[32m+[m				[32m$myFieldLink = $beanType . '_id';[m
[32m+[m				[32m$alias = $bean->getMeta( 'sys.alias.' . $addition->getMeta( 'type' ) );[m
[32m+[m				[32mif ( $alias ) $myFieldLink = $alias . '_id';[m
[32m+[m
[32m+[m				[32m$addition->$myFieldLink = $bean->id;[m
[32m+[m				[32m$addition->setMeta( 'cast.' . $myFieldLink, 'id' );[m
[32m+[m				[32m$this->store( $addition );[m
[32m+[m
[32m+[m			[32m} else {[m
[32m+[m				[32mthrow new RedException( 'Array may only contain OODBBeans' );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads a bean from the object database.[m
[32m+[m	[32m * It searches for a OODBBean Bean Object in the[m
[32m+[m	[32m * database. It does not matter how this bean has been stored.[m
[32m+[m	[32m * RedBean uses the primary key ID $id and the string $type[m
[32m+[m	[32m * to find the bean. The $type specifies what kind of bean you[m
[32m+[m	[32m * are looking for; this is the same type as used with the[m
[32m+[m	[32m * dispense() function. If RedBean finds the bean it will return[m
[32m+[m	[32m * the OODB Bean object; if it cannot find the bean[m
[32m+[m	[32m * RedBean will return a new bean of type $type and with[m
[32m+[m	[32m * primary key ID 0. In the latter case it acts basically the[m
[32m+[m	[32m * same as dispense().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Important note:[m
[32m+[m	[32m * If the bean cannot be found in the database a new bean of[m
[32m+[m	[32m * the specified type will be generated and returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type type of bean you want to load[m
[32m+[m	[32m * @param integer $id   ID of the bean you want to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m * @throws SQLException[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function load( $type, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32m$rows = array();[m
[32m+[m		[32m$bean = $this->dispense( $type );[m
[32m+[m		[32mif ( isset( $this->stash[$this->nesting][$id] ) ) {[m
[32m+[m			[32m$row = $this->stash[$this->nesting][$id];[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$rows = $this->writer->queryRecord( $type, array( 'id' => array( $id ) ) );[m
[32m+[m			[32mif ( !count( $rows ) ) {[m
[32m+[m				[32mreturn $bean;[m
[32m+[m			[32m}[m
[32m+[m			[32m$row = array_pop( $rows );[m
[32m+[m		[32m}[m
[32m+[m		[32m$bean->importRow( $row );[m
[32m+[m		[32m$this->nesting++;[m
[32m+[m		[32m$this->oodb->signal( 'open', $bean );[m
[32m+[m		[32m$this->nesting--;[m
[32m+[m
[32m+[m		[32mreturn $bean->setMeta( 'tainted', FALSE );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\Repository as Repository;[m
[32m+[m[32muse RedBeanPHP\Repository\Fluid as FluidRepo;[m
[32m+[m[32muse RedBeanPHP\Repository\Frozen as FrozenRepo;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean Object Oriented DataBase.[m
[32m+[m[32m *[m
[32m+[m[32m * The RedBean OODB Class is the main class of RedBeanPHP.[m
[32m+[m[32m * It takes OODBBean objects and stores them to and loads them from the[m
[32m+[m[32m * database as well as providing other CRUD functions. This class acts as a[m
[32m+[m[32m * object database.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/OODB.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass OODB extends Observable[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $sqlFilters = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $chillList = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $stash = NULL;[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * @var integer[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $nesting = 0;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $isFrozen = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var FacadeBeanHelper[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $beanhelper = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var AssociationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $assocManager = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Repository[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $repository = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var FrozenRepo[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $frozenRepository = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var FluidRepo[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $fluidRepository = NULL;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected static $autoClearHistoryAfterStore = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * If set to TRUE, this method will call clearHistory every time[m
[32m+[m	[32m * the bean gets stored.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $autoClear auto clear option[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function autoClearHistoryAfterStore( $autoClear = TRUE )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$autoClearHistoryAfterStore = (boolean) $autoClear;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Unboxes a bean from a FUSE model if needed and checks whether the bean is[m
[32m+[m	[32m * an instance of OODBBean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean you wish to unbox[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function unboxIfNeeded( $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $bean instanceof SimpleModel ) {[m
[32m+[m			[32m$bean = $bean->unbox();[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( !( $bean instanceof OODBBean ) ) {[m
[32m+[m			[32mthrow new RedException( 'OODB Store requires a bean, got: ' . gettype( $bean ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, requires a query writer.[m
[32m+[m	[32m * Most of the time, you do not need to use this constructor,[m
[32m+[m	[32m * since the facade takes care of constructing and wiring the[m
[32m+[m	[32m * RedBeanPHP core objects. However if you would like to[m
[32m+[m	[32m * assemble an OODB instance yourself, this is how it works:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $database = new RPDO( $dsn, $user, $pass );[m
[32m+[m	[32m * $adapter = new DBAdapter( $database );[m
[32m+[m	[32m * $writer = new PostgresWriter( $adapter );[m
[32m+[m	[32m * $oodb = new OODB( $writer, FALSE );[m
[32m+[m	[32m * $bean = $oodb->dispense( 'bean' );[m
[32m+[m	[32m * $bean->name = 'coffeeBean';[m
[32m+[m	[32m * $id = $oodb->store( $bean );[m
[32m+[m	[32m * $bean = $oodb->load( 'bean', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates the 3 RedBeanPHP core objects:[m
[32m+[m	[32m * the Adapter, the Query Writer and the OODB instance and[m
[32m+[m	[32m * wires them together. The example also demonstrates some of[m
[32m+[m	[32m * the methods that can be used with OODB, as you see, they[m
[32m+[m	[32m * closely resemble their facade counterparts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The wiring process: create an RPDO instance using your database[m
[32m+[m	[32m * connection parameters. Create a database adapter from the RPDO[m
[32m+[m	[32m * object and pass that to the constructor of the writer. Next,[m
[32m+[m	[32m * create an OODB instance from the writer. Now you have an OODB[m
[32m+[m	[32m * object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param QueryWriter   $writer writer[m
[32m+[m	[32m * @param array|boolean $frozen mode of operation: TRUE (frozen), FALSE (default, fluid) or ARRAY (chilled)[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( QueryWriter $writer, $frozen = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $writer instanceof QueryWriter ) {[m
[32m+[m			[32m$this->writer = $writer;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->freeze( $frozen );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles fluid or frozen mode. In fluid mode the database[m
[32m+[m	[32m * structure is adjusted to accomodate your objects. In frozen mode[m
[32m+[m	[32m * this is not the case.[m
[32m+[m	[32m *[m
[32m+[m	[32m * You can also pass an array containing a selection of frozen types.[m
[32m+[m	[32m * Let's call this chill mode, it's just like fluid mode except that[m
[32m+[m	[32m * certain types (i.e. tables) aren't touched.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean|array $toggle TRUE if you want to use OODB instance in frozen mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function freeze( $toggle )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $toggle ) ) {[m
[32m+[m			[32m$this->chillList = $toggle;[m
[32m+[m			[32m$this->isFrozen  = FALSE;[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$this->isFrozen = (boolean) $toggle;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( $this->isFrozen ) {[m
[32m+[m			[32mif ( !$this->frozenRepository ) {[m
[32m+[m				[32m$this->frozenRepository = new FrozenRepo( $this, $this->writer );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$this->repository = $this->frozenRepository;[m
[32m+[m
[32m+[m		[32m} else {[m
[32m+[m			[32mif ( !$this->fluidRepository ) {[m
[32m+[m				[32m$this->fluidRepository = new FluidRepo( $this, $this->writer );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$this->repository = $this->fluidRepository;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( count( self::$sqlFilters ) ) {[m
[32m+[m			[32mAQueryWriter::setSQLFilters( self::$sqlFilters, ( !$this->isFrozen ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the current mode of operation of RedBean.[m
[32m+[m	[32m * In fluid mode the database[m
[32m+[m	[32m * structure is adjusted to accomodate your objects.[m
[32m+[m	[32m * In frozen mode[m
[32m+[m	[32m * this is not the case.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isFrozen()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn (bool) $this->isFrozen;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether a type is in the chill list.[m
[32m+[m	[32m * If a type is 'chilled' it's frozen, so its schema cannot be[m
[32m+[m	[32m * changed anymore. However other bean types may still be modified.[m
[32m+[m	[32m * This method is a convenience method for other objects to check if[m
[32m+[m	[32m * the schema of a certain type is locked for modification.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type the type you wish to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function isChilled( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn (boolean) ( in_array( $type, $this->chillList ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dispenses a new bean (a OODBBean Bean Object)[m
[32m+[m	[32m * of the specified type. Always[m
[32m+[m	[32m * use this function to get an empty bean object. Never[m
[32m+[m	[32m * instantiate a OODBBean yourself because it needs[m
[32m+[m	[32m * to be configured before you can use it with RedBean. This[m
[32m+[m	[32m * function applies the appropriate initialization /[m
[32m+[m	[32m * configuration for you.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type              type of bean you want to dispense[m
[32m+[m	[32m * @param string  $number            number of beans you would like to get[m
[32m+[m	[32m * @param boolean $alwaysReturnArray if TRUE always returns the result as an array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function dispense( $type, $number = 1, $alwaysReturnArray = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $number < 1 ) {[m
[32m+[m			[32mif ( $alwaysReturnArray ) return array();[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this->repository->dispense( $type, $number, $alwaysReturnArray );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets bean helper to be given to beans.[m
[32m+[m	[32m * Bean helpers assist beans in getting a reference to a toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param BeanHelper $beanhelper helper[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setBeanHelper( BeanHelper $beanhelper )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->beanhelper = $beanhelper;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the current bean helper.[m
[32m+[m	[32m * Bean helpers assist beans in getting a reference to a toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return BeanHelper[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getBeanHelper()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->beanhelper;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether a OODBBean bean is valid.[m
[32m+[m	[32m * If the type is not valid or the ID is not valid it will[m
[32m+[m	[32m * throw an exception: Security.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean the bean that needs to be checked[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function check( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->repository->check( $bean );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Searches the database for a bean that matches conditions $conditions and sql $addSQL[m
[32m+[m	[32m * and returns an array containing all the beans that have been found.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Conditions need to take form:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m *    'PROPERTY' => array( POSSIBLE VALUES... 'John', 'Steve' )[m
[32m+[m	[32m *    'PROPERTY' => array( POSSIBLE VALUES... )[m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * All conditions are glued together using the AND-operator, while all value lists[m
[32m+[m	[32m * are glued using IN-operators thus acting as OR-conditions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that you can use property names; the columns will be extracted using the[m
[32m+[m	[32m * appropriate bean formatter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       type of beans you are looking for[m
[32m+[m	[32m * @param array  $conditions list of conditions[m
[32m+[m	[32m * @param string $sql        SQL to be used in query[m
[32m+[m	[32m * @param array  $bindings   a list of values to bind to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function find( $type, $conditions = array(), $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->find( $type, $conditions, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as find() but returns a BeanCollection.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of beans you are looking for[m
[32m+[m	[32m * @param string $sql      SQL to be used in query[m
[32m+[m	[32m * @param array  $bindings a list of values to bind to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return BeanCollection[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findCollection(  $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->findCollection( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether the specified table already exists in the database.[m
[32m+[m	[32m * Not part of the Object Database interface![m
[32m+[m	[32m *[m
[32m+[m	[32m * @deprecated Use AQueryWriter::typeExists() instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $table table name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function tableExists( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->tableExists( $table );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a bean in the database. This method takes a[m
[32m+[m	[32m * OODBBean Bean Object $bean and stores it[m
[32m+[m	[32m * in the database. If the database schema is not compatible[m
[32m+[m	[32m * with this bean and RedBean runs in fluid mode the schema[m
[32m+[m	[32m * will be altered to store the bean correctly.[m
[32m+[m	[32m * If the database schema is not compatible with this bean and[m
[32m+[m	[32m * RedBean runs in frozen mode it will throw an exception.[m
[32m+[m	[32m * This function returns the primary key ID of the inserted[m
[32m+[m	[32m * bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The return value is an integer if possible. If it is not possible to[m
[32m+[m	[32m * represent the value as an integer a string will be returned. We use[m
[32m+[m	[32m * explicit casts instead of functions to preserve performance[m
[32m+[m	[32m * (0.13 vs 0.28 for 10000 iterations on Core i3).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|SimpleModel $bean bean to store[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer|string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function store( $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$bean = $this->unboxIfNeeded( $bean );[m
[32m+[m		[32m$id = $this->repository->store( $bean );[m
[32m+[m		[32mif ( self::$autoClearHistoryAfterStore ) {[m
[32m+[m				[32m$bean->clearHistory();[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads a bean from the object database.[m
[32m+[m	[32m * It searches for a OODBBean Bean Object in the[m
[32m+[m	[32m * database. It does not matter how this bean has been stored.[m
[32m+[m	[32m * RedBean uses the primary key ID $id and the string $type[m
[32m+[m	[32m * to find the bean. The $type specifies what kind of bean you[m
[32m+[m	[32m * are looking for; this is the same type as used with the[m
[32m+[m	[32m * dispense() function. If RedBean finds the bean it will return[m
[32m+[m	[32m * the OODB Bean object; if it cannot find the bean[m
[32m+[m	[32m * RedBean will return a new bean of type $type and with[m
[32m+[m	[32m * primary key ID 0. In the latter case it acts basically the[m
[32m+[m	[32m * same as dispense().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Important note:[m
[32m+[m	[32m * If the bean cannot be found in the database a new bean of[m
[32m+[m	[32m * the specified type will be generated and returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type type of bean you want to load[m
[32m+[m	[32m * @param integer $id   ID of the bean you want to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function load( $type, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->load( $type, $id );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes a bean from the database.[m
[32m+[m	[32m * This function will remove the specified OODBBean[m
[32m+[m	[32m * Bean Object from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|SimpleModel $bean bean you want to remove from database[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function trash( $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$bean = $this->unboxIfNeeded( $bean );[m
[32m+[m		[32mreturn $this->repository->trash( $bean );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an array of beans. Pass a type and a series of ids and[m
[32m+[m	[32m * this method will bring you the corresponding beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * important note: Because this method loads beans using the load()[m
[32m+[m	[32m * function (but faster) it will return empty beans with ID 0 for[m
[32m+[m	[32m * every bean that could not be located. The resulting beans will have the[m
[32m+[m	[32m * passed IDs as their keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans[m
[32m+[m	[32m * @param array  $ids  ids to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function batch( $type, $ids )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->batch( $type, $ids );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * This is a convenience method; it converts database rows[m
[32m+[m	[32m * (arrays) into beans. Given a type and a set of rows this method[m
[32m+[m	[32m * will return an array of beans of the specified type loaded with[m
[32m+[m	[32m * the data fields provided by the result set from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans you would like to have[m
[32m+[m	[32m * @param array  $rows rows from the database result[m
[32m+[m	[32m * @param string $mask mask to apply for meta data[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function convertToBeans( $type, $rows, $mask = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->convertToBeans( $type, $rows, $mask );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts the number of beans of type $type.[m
[32m+[m	[32m * This method accepts a second argument to modify the count-query.[m
[32m+[m	[32m * A third argument can be used to provide bindings for the SQL snippet.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of bean we are looking for[m
[32m+[m	[32m * @param string $addSQL   additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings parameters to bind to SQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function count( $type, $addSQL = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->count( $type, $addSQL, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Trash all beans of a given type. Wipes an entire type of bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean you wish to delete all instances of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function wipe( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository->wipe( $type );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an Association Manager for use with OODB.[m
[32m+[m	[32m * A simple getter function to obtain a reference to the association manager used for[m
[32m+[m	[32m * storage and more.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return AssociationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getAssociationManager()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset( $this->assocManager ) ) {[m
[32m+[m			[32mthrow new RedException( 'No association manager available.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this->assocManager;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the association manager instance to be used by this OODB.[m
[32m+[m	[32m * A simple setter function to set the association manager to be used for storage and[m
[32m+[m	[32m * more.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param AssociationManager $assocManager sets the association manager to be used[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setAssociationManager( AssociationManager $assocManager )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->assocManager = $assocManager;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the currently used repository instance.[m
[32m+[m	[32m * For testing purposes only.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Repository[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getCurrentRepository()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->repository;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Clears all function bindings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function clearAllFuncBindings()[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$sqlFilters = array();[m
[32m+[m		[32mAQueryWriter::setSQLFilters( self::$sqlFilters, FALSE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Binds an SQL function to a column.[m
[32m+[m	[32m * This method can be used to setup a decode/encode scheme or[m
[32m+[m	[32m * perform UUID insertion. This method is especially useful for handling[m
[32m+[m	[32m * MySQL spatial columns, because they need to be processed first using[m
[32m+[m	[32m * the asText/GeomFromText functions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $mode       mode to set function for, i.e. read or write[m
[32m+[m	[32m * @param string  $field      field (table.column) to bind SQL function to[m
[32m+[m	[32m * @param string  $function   SQL function to bind to field[m
[32m+[m	[32m * @param boolean $isTemplate TRUE if $function is an SQL string, FALSE for just a function name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function bindFunc( $mode, $field, $function, $isTemplate = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $type, $property ) = explode( '.', $field );[m
[32m+[m		[32m$mode = ($mode === 'write') ? QueryWriter::C_SQLFILTER_WRITE : QueryWriter::C_SQLFILTER_READ;[m
[32m+[m
[32m+[m		[32mif ( !isset( self::$sqlFilters[$mode] ) ) self::$sqlFilters[$mode] = array();[m
[32m+[m		[32mif ( !isset( self::$sqlFilters[$mode][$type] ) ) self::$sqlFilters[$mode][$type] = array();[m
[32m+[m
[32m+[m		[32mif ( is_null( $function ) ) {[m
[32m+[m			[32munset( self::$sqlFilters[$mode][$type][$property] );[m
[32m+[m		[32m} else {[m
[32m+[m			[32mif ($mode === QueryWriter::C_SQLFILTER_WRITE) {[m
[32m+[m				[32mif ($isTemplate) {[m
[32m+[m					[32m$code = sprintf( $function, '?' );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$code = "{$function}(?)";[m
[32m+[m				[32m}[m
[32m+[m				[32mself::$sqlFilters[$mode][$type][$property] = $code;[m
[32m+[m			[32m} else {[m
[32m+[m				[32mif ($isTemplate) {[m
[32m+[m					[32m$code = sprintf( $function, $field );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$code = "{$function}({$field})";[m
[32m+[m				[32m}[m
[32m+[m				[32mself::$sqlFilters[$mode][$type][$property] = $code;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mAQueryWriter::setSQLFilters( self::$sqlFilters, ( !$this->isFrozen ) );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * ToolBox.[m
[32m+[m[32m *[m
[32m+[m[32m * The toolbox is an integral part of RedBeanPHP providing the basic[m
[32m+[m[32m * architectural building blocks to manager objects, helpers and additional tools[m
[32m+[m[32m * like plugins. A toolbox contains the three core components of RedBeanPHP:[m
[32m+[m[32m * the adapter, the query writer and the core functionality of RedBeanPHP in[m
[32m+[m[32m * OODB.[m
[32m+[m[32m *[m
[32m+[m[32m * @file      RedBeanPHP/ToolBox.php[m
[32m+[m[32m * @author    Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license   BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass ToolBox[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $oodb;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The toolbox is an integral part of RedBeanPHP providing the basic[m
[32m+[m	[32m * architectural building blocks to manager objects, helpers and additional tools[m
[32m+[m	[32m * like plugins. A toolbox contains the three core components of RedBeanPHP:[m
[32m+[m	[32m * the adapter, the query writer and the core functionality of RedBeanPHP in[m
[32m+[m	[32m * OODB.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $toolbox = new ToolBox( $oodb, $adapter, $writer );[m
[32m+[m	[32m * $plugin  = new MyPlugin( $toolbox );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how the toolbox is used.[m
[32m+[m	[32m * The core objects are passed to the ToolBox constructor to[m
[32m+[m	[32m * assemble a toolbox instance. The toolbox is then passed to[m
[32m+[m	[32m * the plugin, helper or manager object. Instances of[m
[32m+[m	[32m * TagManager, AssociationManager and so on are examples of[m
[32m+[m	[32m * this, they all require a toolbox. The toolbox can also[m
[32m+[m	[32m * be obtained from the facade using: R::getToolBox();[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODB        $oodb    Object Database, OODB[m
[32m+[m	[32m * @param DBAdapter   $adapter Database Adapter[m
[32m+[m	[32m * @param QueryWriter $writer  Query Writer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( OODB $oodb, Adapter $adapter, QueryWriter $writer )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->oodb    = $oodb;[m
[32m+[m		[32m$this->adapter = $adapter;[m
[32m+[m		[32m$this->writer  = $writer;[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the query writer in this toolbox.[m
[32m+[m	[32m * The Query Writer is responsible for building the queries for a[m
[32m+[m	[32m * specific database and executing them through the adapter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $toolbox = R::getToolBox();[m
[32m+[m	[32m * $redbean = $toolbox->getRedBean();[m
[32m+[m	[32m * $adapter = $toolbox->getDatabaseAdapter();[m
[32m+[m	[32m * $writer  = $toolbox->getWriter();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to obtain the core objects[m
[32m+[m	[32m * from a toolbox instance. If you are working with the R-object[m
[32m+[m	[32m * only, the following shortcuts exist as well:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - R::getRedBean()[m
[32m+[m	[32m * - R::getDatabaseAdapter()[m
[32m+[m	[32m * - R::getWriter()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getWriter()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->writer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the OODB instance in this toolbox.[m
[32m+[m	[32m * OODB is responsible for creating, storing, retrieving and deleting[m
[32m+[m	[32m * single beans. Other components rely[m
[32m+[m	[32m * on OODB for their basic functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $toolbox = R::getToolBox();[m
[32m+[m	[32m * $redbean = $toolbox->getRedBean();[m
[32m+[m	[32m * $adapter = $toolbox->getDatabaseAdapter();[m
[32m+[m	[32m * $writer  = $toolbox->getWriter();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to obtain the core objects[m
[32m+[m	[32m * from a toolbox instance. If you are working with the R-object[m
[32m+[m	[32m * only, the following shortcuts exist as well:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - R::getRedBean()[m
[32m+[m	[32m * - R::getDatabaseAdapter()[m
[32m+[m	[32m * - R::getWriter()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getRedBean()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->oodb;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the database adapter in this toolbox.[m
[32m+[m	[32m * The adapter is responsible for executing the query and binding the values.[m
[32m+[m	[32m * The adapter also takes care of transaction handling.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $toolbox = R::getToolBox();[m
[32m+[m	[32m * $redbean = $toolbox->getRedBean();[m
[32m+[m	[32m * $adapter = $toolbox->getDatabaseAdapter();[m
[32m+[m	[32m * $writer  = $toolbox->getWriter();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how to obtain the core objects[m
[32m+[m	[32m * from a toolbox instance. If you are working with the R-object[m
[32m+[m	[32m * only, the following shortcuts exist as well:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - R::getRedBean()[m
[32m+[m	[32m * - R::getDatabaseAdapter()[m
[32m+[m	[32m * - R::getWriter()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getDatabaseAdapter()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->adapter;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP Finder.[m
[32m+[m[32m * Service class to find beans. For the most part this class[m
[32m+[m[32m * offers user friendly utility methods for interacting with the[m
[32m+[m[32m * OODB::find() method, which is rather complex. This class can be[m
[32m+[m[32m * used to find beans using plain old SQL queries.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Finder.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Finder[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $redbean;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The Finder requires a toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m		[32m$this->redbean = $toolbox->getRedBean();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A custom record-to-bean mapping function for findMulti.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $collection = R::findMulti( 'shop,product,price',[m
[32m+[m	[32m * 'SELECT shop.*, product.*, price.* FROM shop[m
[32m+[m	[32m *	LEFT JOIN product ON product.shop_id = shop.id[m
[32m+[m	[32m *	LEFT JOIN price ON price.product_id = product.id', [], [[m
[32m+[m	[32m *		Finder::map( 'shop', 'product' ),[m
[32m+[m	[32m *		Finder::map( 'product', 'price' ),[m
[32m+[m	[32m *	]);[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $parentName name of the parent bean[m
[32m+[m	[32m * @param string $childName  name of the child bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function map($parentName,$childName) {[m
[32m+[m		[32mreturn array([m
[32m+[m			[32m'a' => $parentName,[m
[32m+[m			[32m'b' => $childName,[m
[32m+[m			[32m'matcher' => function( $parent, $child ) use ( $parentName, $childName ) {[m
[32m+[m				[32m$propertyName = 'own' . ucfirst( $childName );[m
[32m+[m				[32mif (!isset($parent[$propertyName])) {[m
[32m+[m					[32m$parent->noLoad()->{$propertyName} = array();[m
[32m+[m				[32m}[m
[32m+[m				[32m$property = "{$parentName}ID";[m
[32m+[m				[32mreturn ( $child->$property == $parent->id );[m
[32m+[m			[32m},[m
[32m+[m			[32m'do' => function( $parent, $child ) use ( $childName ) {[m
[32m+[m				[32m$list = 'own'.ucfirst( $childName ).'List';[m
[32m+[m				[32m$parent->noLoad()->{$list}[$child->id] = $child;[m
[32m+[m			[32m}[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m* A custom record-to-bean mapping function for findMulti.[m
[32m+[m	[32m*[m
[32m+[m	[32m* Usage:[m
[32m+[m	[32m*[m
[32m+[m	[32m* <code>[m
[32m+[m	[32m* $collection = R::findMulti( 'book,book_tag,tag',[m
[32m+[m	[32m* 'SELECT book.*, book_tag.*, tag.* FROM book[m
[32m+[m	[32m*      LEFT JOIN book_tag ON book_tag.book_id = book.id[m
[32m+[m	[32m*      LEFT JOIN tag ON book_tag.tag_id = tag.id', [], [[m
[32m+[m	[32m*              Finder::nmMap( 'book', 'tag' ),[m
[32m+[m	[32m*      ]);[m
[32m+[m	[32m* </code>[m
[32m+[m	[32m*[m
[32m+[m	[32m* @param string $parentName name of the parent bean[m
[32m+[m	[32m* @param string $childName  name of the child bean[m
[32m+[m	[32m*[m
[32m+[m	[32m* @return array[m
[32m+[m	[32m*/[m
[32m+[m	[32mpublic static function nmMap( $parentName, $childName )[m
[32m+[m	[32m{[m
[32m+[m		[32m$types = array($parentName, $childName);[m
[32m+[m		[32msort( $types );[m
[32m+[m		[32m$link = implode( '_', $types );[m
[32m+[m		[32mreturn array([m
[32m+[m			[32m'a' => $parentName,[m
[32m+[m			[32m'b' => $childName,[m
[32m+[m			[32m'matcher' => function( $parent, $child, $beans ) use ( $parentName, $childName, $link ) {[m
[32m+[m				[32m$propertyName = 'shared' . ucfirst( $childName );[m
[32m+[m				[32mif (!isset($parent[$propertyName])) {[m
[32m+[m					[32m$parent->noLoad()->{$propertyName} = array();[m
[32m+[m				[32m}[m
[32m+[m				[32mforeach( $beans[$link] as $linkBean ) {[m
[32m+[m					[32mif ( $linkBean["{$parentName}ID"] == $parent->id && $linkBean["{$childName}ID"] == $child->id ) {[m
[32m+[m						[32mreturn true;[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m},[m
[32m+[m			[32m'do' => function( $parent, $child ) use ( $childName ) {[m
[32m+[m				[32m$list = 'shared'.ucfirst( $childName ).'List';[m
[32m+[m				[32m$parent->noLoad()->{$list}[$child->id] = $child;[m
[32m+[m			[32m}[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finder::onMap() -> One-to-N mapping.[m
[32m+[m	[32m * A custom record-to-bean mapping function for findMulti.[m
[32m+[m	[32m * Opposite of Finder::map(). Maps child beans to parents.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $collection = R::findMulti( 'shop,product',[m
[32m+[m	[32m * 'SELECT shop.*, product.* FROM shop[m
[32m+[m	[32m *	LEFT JOIN product ON product.shop_id = shop.id',[m
[32m+[m	[32m *  [], [[m
[32m+[m	[32m *		Finder::onmap( 'product', 'shop' ),[m
[32m+[m	[32m *	]);[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Can also be used for instance to attach related beans[m
[32m+[m	[32m * in one-go to save some queries:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Given $users that have a country_id:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $all = R::findMulti('country',[m
[32m+[m	[32m *    R::genSlots( $users,[m
[32m+[m	[32m *       'SELECT country.* FROM country WHERE id IN ( %s )' ),[m
[32m+[m	[32m *    array_column( $users, 'country_id' ),[m
[32m+[m	[32m *    [Finder::onmap('country', $users)][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * For your convenience, an even shorter notation has been added:[m
[32m+[m	[32m *[m
[32m+[m	[32m * $countries = R::loadJoined( $users, 'country' );[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $parentName name of the parent bean[m
[32m+[m	[32m * @param string|array $childName  name of the child bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function onMap($parentName,$childNameOrBeans) {[m
[32m+[m		[32mreturn array([m
[32m+[m			[32m'a' => $parentName,[m
[32m+[m			[32m'b' => $childNameOrBeans,[m
[32m+[m			[32m'matcher' => array( $parentName, "{$parentName}_id" ),[m
[32m+[m			[32m'do' => 'match'[m
[32m+[m		[32m);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds a bean using a type and a where clause (SQL).[m
[32m+[m	[32m * As with most Query tools in RedBean you can provide values to[m
[32m+[m	[32m * be inserted in the SQL statement by populating the value[m
[32m+[m	[32m * array parameter; you can either use the question mark notation[m
[32m+[m	[32m * or the slot-notation (:keyname).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type   the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      sql    SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function find( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_array( $bindings ) ) {[m
[32m+[m			[32mthrow new RedException([m
[32m+[m				[32m'Expected array, ' . gettype( $bindings ) . ' given.'[m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $this->redbean->find( $type, array(), $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like find() but also exports the beans as an array.[m
[32m+[m	[32m * This method will perform a find-operation. For every bean[m
[32m+[m	[32m * in the result collection this method will call the export() method.[m
[32m+[m	[32m * This method returns an array containing the array representations[m
[32m+[m	[32m * of every bean in the result set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type   the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      sql    SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findAndExport( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$arr = array();[m
[32m+[m		[32mforeach ( $this->find( $type, $sql, $bindings ) as $key => $item ) {[m
[32m+[m			[32m$arr[] = $item->export();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $arr;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like find() but returns just one bean instead of an array of beans.[m
[32m+[m	[32m * This method will return only the first bean of the array.[m
[32m+[m	[32m * If no beans are found, this method will return NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type   the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      sql    SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findOne( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql = $this->toolbox->getWriter()->glueLimitOne( $sql );[m
[32m+[m
[32m+[m		[32m$items = $this->find( $type, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( empty($items) ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn reset( $items );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like find() but returns the last bean of the result array.[m
[32m+[m	[32m * Opposite of Finder::findLast().[m
[32m+[m	[32m * If no beans are found, this method will return NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findLast( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$items = $this->find( $type, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( empty($items) ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn end( $items );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tries to find beans of a certain type,[m
[32m+[m	[32m * if no beans are found, it dispenses a bean of that type.[m
[32m+[m	[32m * Note that this function always returns an array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param  string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param  array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findOrDispense( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$foundBeans = $this->find( $type, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mif ( empty( $foundBeans ) ) {[m
[32m+[m			[32mreturn array( $this->redbean->dispense( $type ) );[m
[32m+[m		[32m} else {[m
[32m+[m			[32mreturn $foundBeans;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds a BeanCollection using the repository.[m
[32m+[m	[32m * A bean collection can be used to retrieve one bean at a time using[m
[32m+[m	[32m * cursors - this is useful for processing large datasets. A bean collection[m
[32m+[m	[32m * will not load all beans into memory all at once, just one at a time.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param  string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param  array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return BeanCollection[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findCollection( $type, $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->redbean->findCollection( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds or creates a bean.[m
[32m+[m	[32m * Tries to find a bean with certain properties specified in the second[m
[32m+[m	[32m * parameter ($like). If the bean is found, it will be returned.[m
[32m+[m	[32m * If multiple beans are found, only the first will be returned.[m
[32m+[m	[32m * If no beans match the criteria, a new bean will be dispensed,[m
[32m+[m	[32m * the criteria will be imported as properties and this new bean[m
[32m+[m	[32m * will be stored and returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Format of criteria set: property => value[m
[32m+[m	[32m * The criteria set also supports OR-conditions: property => array( value1, orValue2 )[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type type of bean to search for[m
[32m+[m	[32m * @param array   $like criteria set describing bean to search for[m
[32m+[m	[32m * @param boolean $hasBeenCreated set to TRUE if bean has been created[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findOrCreate( $type, $like = array(), $sql = '', &$hasBeenCreated = false )[m
[32m+[m	[32m{[m
[32m+[m			[32m$sql = $this->toolbox->getWriter()->glueLimitOne( $sql );[m
[32m+[m			[32m$beans = $this->findLike( $type, $like, $sql );[m
[32m+[m			[32mif ( count( $beans ) ) {[m
[32m+[m				[32m$bean = reset( $beans );[m
[32m+[m				[32m$hasBeenCreated = false;[m
[32m+[m				[32mreturn $bean;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$bean = $this->redbean->dispense( $type );[m
[32m+[m			[32m$bean->import( $like );[m
[32m+[m			[32m$this->redbean->store( $bean );[m
[32m+[m			[32m$hasBeenCreated = true;[m
[32m+[m			[32mreturn $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds beans by its type and a certain criteria set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Format of criteria set: property => value[m
[32m+[m	[32m * The criteria set also supports OR-conditions: property => array( value1, orValue2 )[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the additional SQL is a condition, this condition will be glued to the rest[m
[32m+[m	[32m * of the query using an AND operator. Note that this is as far as this method[m
[32m+[m	[32m * can go, there is no way to glue additional SQL using an OR-condition.[m
[32m+[m	[32m * This method provides access to an underlying mechanism in the RedBeanPHP architecture[m
[32m+[m	[32m * to find beans using criteria sets. However, please do not use this method[m
[32m+[m	[32m * for complex queries, use plain SQL instead ( the regular find method ) as it is[m
[32m+[m	[32m * more suitable for the job. This method is[m
[32m+[m	[32m * meant for basic search-by-example operations.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       type of bean to search for[m
[32m+[m	[32m * @param array  $conditions criteria set describing the bean to search for[m
[32m+[m	[32m * @param string $sql        additional SQL (for sorting)[m
[32m+[m	[32m * @param array  $bindings   bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findLike( $type, $conditions = array(), $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->redbean->find( $type, $conditions, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a hashmap with bean arrays keyed by type using an SQL[m
[32m+[m	[32m * query as its resource. Given an SQL query like 'SELECT movie.*, review.* FROM movie... JOIN review'[m
[32m+[m	[32m * this method will return movie and review beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $stuff = $finder->findMulti('movie,review', '[m
[32m+[m	[32m *          SELECT movie.*, review.* FROM movie[m
[32m+[m	[32m *          LEFT JOIN review ON review.movie_id = movie.id');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * After this operation, $stuff will contain an entry 'movie' containing all[m
[32m+[m	[32m * movies and an entry named 'review' containing all reviews (all beans).[m
[32m+[m	[32m * You can also pass bindings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you want to re-map your beans, so you can use $movie->ownReviewList without[m
[32m+[m	[32m * having RedBeanPHP executing an SQL query you can use the fourth parameter to[m
[32m+[m	[32m * define a selection of remapping closures.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The remapping argument (optional) should contain an array of arrays.[m
[32m+[m	[32m * Each array in the remapping array should contain the following entries:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 	'a'       => TYPE A[m
[32m+[m	[32m *  'b'       => TYPE B OR BEANS[m
[32m+[m	[32m *    'matcher' =>[m
[32m+[m	[32m * 			MATCHING FUNCTION ACCEPTING A, B and ALL BEANS[m
[32m+[m	[32m * 			OR ARRAY[m
[32m+[m	[32m * 				WITH FIELD on B that should match with FIELD on A[m
[32m+[m	[32m * 				AND  FIELD on A that should match with FIELD on B[m
[32m+[m	[32m *          OR TRUE[m
[32m+[m	[32m *              TO JUST PERFORM THE DO-FUNCTION ON EVERY A-BEAN[m
[32m+[m	[32m *[m
[32m+[m	[32m *    'do'      => OPERATION FUNCTION ACCEPTING A, B, ALL BEANS, ALL REMAPPINGS[m
[32m+[m	[32m * 				   (ONLY IF MATCHER IS ALSO A FUNCTION)[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Using this mechanism you can build your own 'preloader' with tiny function[m
[32m+[m	[32m * snippets (and those can be re-used and shared online of course).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 	'a' => 'movie'     //define A as movie[m
[32m+[m	[32m *  'b' => 'review'    //define B as review[m
[32m+[m	[32m *  matcher' => function( $a, $b ) {[m
[32m+[m	[32m *     return ( $b->movie_id == $a->id );  //Perform action if review.movie_id equals movie.id[m
[32m+[m	[32m *  }[m
[32m+[m	[32m *  'do' => function( $a, $b ) {[m
[32m+[m	[32m *       $a->noLoad()->ownReviewList[] = $b; //Add the review to the movie[m
[32m+[m	[32m *       $a->clearHistory();                 //optional, act 'as if these beans have been loaded through ownReviewList'.[m
[32m+[m	[32m *   }[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The Query Template parameter is optional as well but can be used to[m
[32m+[m	[32m * set a different SQL template (sprintf-style) for processing the original query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note the SQL query provided IS NOT THE ONE used internally by this function,[m
[32m+[m	[32m * this function will pre-process the query to get all the data required to find the beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note if you use the 'book.*' notation make SURE you're[m
[32m+[m	[32m * selector starts with a SPACE. ' book.*' NOT ',book.*'. This is because[m
[32m+[m	[32m * it's actually an SQL-like template SLOT, not real SQL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note instead of an SQL query you can pass a result array as well.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note the performance of this function is poor, if you deal with large number of records[m
[32m+[m	[32m * please use plain SQL instead. This function has been added as a bridge between plain SQL[m
[32m+[m	[32m * and bean oriented approaches but it is really on the edge of both worlds. You can safely[m
[32m+[m	[32m * use this function to load additional records as beans in paginated context, let's say[m
[32m+[m	[32m * 50-250 records. Anything above that will gradually perform worse. RedBeanPHP was never[m
[32m+[m	[32m * intended to replace SQL but offer tooling to integrate SQL with object oriented[m
[32m+[m	[32m * designs. If you have come to this function, you have reached the final border between[m
[32m+[m	[32m * SQL-oriented design and OOP. Anything after this will be just as good as custom mapping[m
[32m+[m	[32m * or plain old database querying. I recommend the latter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $types         a list of types (either array or comma separated string)[m
[32m+[m	[32m * @param string|array $sql           optional, an SQL query or an array of prefetched records[m
[32m+[m	[32m * @param array        $bindings      optional, bindings for SQL query[m
[32m+[m	[32m * @param array        $remappings    optional, an array of remapping arrays[m
[32m+[m	[32m * @param string       $queryTemplate optional, query template[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function findMulti( $types, $sql = NULL, $bindings = array(), $remappings = array(), $queryTemplate = ' %s.%s AS %s__%s' )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_array( $types ) ) $types = array_map( 'trim', explode( ',', $types ) );[m
[32m+[m		[32mif ( is_null( $sql ) ) {[m
[32m+[m			[32m$beans = array();[m
[32m+[m			[32mforeach( $types as $type ) $beans[$type] = $this->redbean->find( $type );[m
[32m+[m		[32m} else {[m
[32m+[m			[32mif ( !is_array( $sql ) ) {[m
[32m+[m				[32m$writer = $this->toolbox->getWriter();[m
[32m+[m				[32m$adapter = $this->toolbox->getDatabaseAdapter();[m
[32m+[m
[32m+[m				[32m//Repair the query, replace book.* with book.id AS book_id etc..[m
[32m+[m				[32mforeach( $types as $type ) {[m
[32m+[m					[32m$regex = "#( (`?{$type}`?)\.\*)#";[m
[32m+[m					[32mif ( preg_match( $regex, $sql, $matches ) ) {[m
[32m+[m						[32m$pattern = $matches[1];[m
[32m+[m						[32m$table = $matches[2];[m
[32m+[m						[32m$newSelectorArray = array();[m
[32m+[m						[32m$columns = $writer->getColumns( $type );[m
[32m+[m						[32mforeach( $columns as $column => $definition ) {[m
[32m+[m							[32m$newSelectorArray[] = sprintf( $queryTemplate, $table, $column, $type, $column );[m
[32m+[m						[32m}[m
[32m+[m						[32m$newSelector = implode( ',', $newSelectorArray );[m
[32m+[m						[32m$sql = str_replace( $pattern, $newSelector, $sql );[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$rows = $adapter->get( $sql, $bindings );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$rows = $sql;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m//Gather the bean data from the query results using the prefix[m
[32m+[m			[32m$wannaBeans = array();[m
[32m+[m			[32mforeach( $types as $type ) {[m
[32m+[m				[32m$wannaBeans[$type] = array();[m
[32m+[m				[32m$prefix            = "{$type}__";[m
[32m+[m				[32mforeach( $rows as $rowkey=>$row ) {[m
[32m+[m					[32m$wannaBean = array();[m
[32m+[m					[32mforeach( $row as $cell => $value ) {[m
[32m+[m						[32mif ( strpos( $cell, $prefix ) === 0 ) {[m
[32m+[m							[32m$property = substr( $cell, strlen( $prefix ) );[m
[32m+[m							[32munset( $rows[$rowkey][$cell] );[m
[32m+[m							[32m$wannaBean[$property] = $value;[m
[32m+[m						[32m}[m
[32m+[m					[32m}[m
[32m+[m					[32mif ( !isset( $wannaBean['id'] ) ) continue;[m
[32m+[m					[32mif ( is_null( $wannaBean['id'] ) ) continue;[m
[32m+[m					[32m$wannaBeans[$type][$wannaBean['id']] = $wannaBean;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m//Turn the rows into beans[m
[32m+[m			[32m$beans = array();[m
[32m+[m			[32mforeach( $wannaBeans as $type => $wannabees ) {[m
[32m+[m				[32m$beans[$type] = $this->redbean->convertToBeans( $type, $wannabees );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m//Apply additional re-mappings[m
[32m+[m		[32mforeach($remappings as $remapping) {[m
[32m+[m			[32m$a       = $remapping['a'];[m
[32m+[m			[32m$b       = $remapping['b'];[m
[32m+[m			[32mif (is_array($b)) {[m
[32m+[m				[32m$firstBean = reset($b);[m
[32m+[m				[32m$type = $firstBean->getMeta('type');[m
[32m+[m				[32m$beans[$type] = $b;[m
[32m+[m				[32m$b = $type;[m
[32m+[m			[32m}[m
[32m+[m			[32m$matcher = $remapping['matcher'];[m
[32m+[m			[32mif (is_callable($matcher) || $matcher === TRUE) {[m
[32m+[m				[32m$do = $remapping['do'];[m
[32m+[m				[32mforeach( $beans[$a] as $bean ) {[m
[32m+[m					[32mif ( $matcher === TRUE ) {[m
[32m+[m						[32m$do( $bean, $beans[$b], $beans, $remapping );[m
[32m+[m						[32mcontinue;[m
[32m+[m					[32m}[m
[32m+[m					[32mforeach( $beans[$b] as $putBean ) {[m
[32m+[m						[32mif ( $matcher( $bean, $putBean, $beans ) ) $do( $bean, $putBean, $beans, $remapping );[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m			[32m} else {[m
[32m+[m				[32mlist($field1, $field2) = $matcher;[m
[32m+[m				[32mforeach( $beans[$b] as $key => $bean ) {[m
[32m+[m					[32m$beans[$b][$key]->{$field1} = $beans[$a][$bean->{$field2}];[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Association Manager.[m
[32m+[m[32m * The association manager can be used to create and manage[m
[32m+[m[32m * many-to-many relations (for example sharedLists). In a many-to-many relation,[m
[32m+[m[32m * one bean can be associated with many other beans, while each of those beans[m
[32m+[m[32m * can also be related to multiple beans.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/AssociationManager.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass AssociationManager extends Observable[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $oodb;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exception handler.[m
[32m+[m	[32m * Fluid and Frozen mode have different ways of handling[m
[32m+[m	[32m * exceptions. Fluid mode (using the fluid repository) ignores[m
[32m+[m	[32m * exceptions caused by the following:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - missing tables[m
[32m+[m	[32m * - missing column[m
[32m+[m	[32m *[m
[32m+[m	[32m * In these situations, the repository will behave as if[m
[32m+[m	[32m * no beans could be found. This is because in fluid mode[m
[32m+[m	[32m * it might happen to query a table or column that has not been[m
[32m+[m	[32m * created yet. In frozen mode, this is not supposed to happen[m
[32m+[m	[32m * and the corresponding exceptions will be thrown.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param \Exception $exception exception[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function handleException( \Exception $exception )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->oodb->isFrozen() || !$this->writer->sqlStateIn( $exception->getSQLState(),[m
[32m+[m			[32marray([m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_TABLE,[m
[32m+[m				[32mQueryWriter::C_SQLSTATE_NO_SUCH_COLUMN ),[m
[32m+[m				[32m$exception->getDriverDetails()[m
[32m+[m			[32m)[m
[32m+[m		[32m) {[m
[32m+[m			[32mthrow $exception;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Internal method.[m
[32m+[m	[32m * Returns the many-to-many related rows of table $type for bean $bean using additional SQL in $sql and[m
[32m+[m	[32m * $bindings bindings. If $getLinks is TRUE, link rows are returned instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     reference bean instance[m
[32m+[m	[32m * @param string   $type     target bean type[m
[32m+[m	[32m * @param string   $sql      additional SQL snippet[m
[32m+[m	[32m * @param array    $bindings bindings for query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function relatedRows( $bean, $type, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$ids = array( $bean->id );[m
[32m+[m		[32m$sourceType = $bean->getMeta( 'type' );[m
[32m+[m		[32mtry {[m
[32m+[m			[32mreturn $this->writer->queryRecordRelated( $sourceType, $type, $ids, $sql, $bindings );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m			[32mreturn array();[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Associates a pair of beans. This method associates two beans, no matter[m
[32m+[m	[32m * what types. Accepts a base bean that contains data for the linking record.[m
[32m+[m	[32m * This method is used by associate. This method also accepts a base bean to be used[m
[32m+[m	[32m * as the template for the link record in the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean1 first bean[m
[32m+[m	[32m * @param OODBBean $bean2 second bean[m
[32m+[m	[32m * @param OODBBean $bean  base bean (association record)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function associateBeans( OODBBean $bean1, OODBBean $bean2, OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type      = $bean->getMeta( 'type' );[m
[32m+[m		[32m$property1 = $bean1->getMeta( 'type' ) . '_id';[m
[32m+[m		[32m$property2 = $bean2->getMeta( 'type' ) . '_id';[m
[32m+[m
[32m+[m		[32mif ( $property1 == $property2 ) {[m
[32m+[m			[32m$property2 = $bean2->getMeta( 'type' ) . '2_id';[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->oodb->store( $bean1 );[m
[32m+[m		[32m$this->oodb->store( $bean2 );[m
[32m+[m
[32m+[m		[32m$bean->setMeta( "cast.$property1", "id" );[m
[32m+[m		[32m$bean->setMeta( "cast.$property2", "id" );[m
[32m+[m		[32m$bean->setMeta( 'sys.buildcommand.unique', array( $property1, $property2 ) );[m
[32m+[m
[32m+[m		[32m$bean->$property1 = $bean1->id;[m
[32m+[m		[32m$bean->$property2 = $bean2->id;[m
[32m+[m
[32m+[m		[32m$results   = array();[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$id = $this->oodb->store( $bean );[m
[32m+[m			[32m$results[] = $id;[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32mif ( !$this->writer->sqlStateIn( $exception->getSQLState(),[m
[32m+[m				[32marray( QueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION ),[m
[32m+[m				[32m$exception->getDriverDetails() )[m
[32m+[m			[32m) {[m
[32m+[m				[32mthrow $exception;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $results;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, creates a new instance of the Association Manager.[m
[32m+[m	[32m * The association manager can be used to create and manage[m
[32m+[m	[32m * many-to-many relations (for example sharedLists). In a many-to-many relation,[m
[32m+[m	[32m * one bean can be associated with many other beans, while each of those beans[m
[32m+[m	[32m * can also be related to multiple beans. To create an Association Manager[m
[32m+[m	[32m * instance you'll need to pass a ToolBox object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $tools toolbox supplying core RedBeanPHP objects[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $tools )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->oodb    = $tools->getRedBean();[m
[32m+[m		[32m$this->adapter = $tools->getDatabaseAdapter();[m
[32m+[m		[32m$this->writer  = $tools->getWriter();[m
[32m+[m		[32m$this->toolbox = $tools;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Creates a table name based on a types array.[m
[32m+[m	[32m * Manages the get the correct name for the linking table for the[m
[32m+[m	[32m * types provided.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $types 2 types as strings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getTable( $types )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->writer->getAssocTable( $types );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Associates two beans in a many-to-many relation.[m
[32m+[m	[32m * This method will associate two beans and store the connection between the[m
[32m+[m	[32m * two in a link table. Instead of two single beans this method also accepts[m
[32m+[m	[32m * two sets of beans. Returns the ID or the IDs of the linking beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $beans1 one or more beans to form the association[m
[32m+[m	[32m * @param OODBBean|array $beans2 one or more beans to form the association[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function associate( $beans1, $beans2 )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_array( $beans1 ) ) {[m
[32m+[m			[32m$beans1 = array( $beans1 );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !is_array( $beans2 ) ) {[m
[32m+[m			[32m$beans2 = array( $beans2 );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$results = array();[m
[32m+[m		[32mforeach ( $beans1 as $bean1 ) {[m
[32m+[m			[32mforeach ( $beans2 as $bean2 ) {[m
[32m+[m				[32m$table     = $this->getTable( array( $bean1->getMeta( 'type' ), $bean2->getMeta( 'type' ) ) );[m
[32m+[m				[32m$bean      = $this->oodb->dispense( $table );[m
[32m+[m				[32m$results[] = $this->associateBeans( $bean1, $bean2, $bean );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn ( count( $results ) > 1 ) ? $results : reset( $results );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts the number of related beans in an N-M relation.[m
[32m+[m	[32m * This method returns the number of beans of type $type associated[m
[32m+[m	[32m * with reference bean(s) $bean. The query can be tuned using an[m
[32m+[m	[32m * SQL snippet for additional filtering.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $bean     a bean object or an array of beans[m
[32m+[m	[32m * @param string         $type     type of bean you're interested in[m
[32m+[m	[32m * @param string         $sql      SQL snippet (optional)[m
[32m+[m	[32m * @param array          $bindings bindings for your SQL string[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function relatedCount( $bean, $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !( $bean instanceof OODBBean ) ) {[m
[32m+[m			[32mthrow new RedException([m
[32m+[m				[32m'Expected array or OODBBean but got:' . gettype( $bean )[m
[32m+[m			[32m);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !$bean->id ) {[m
[32m+[m			[32mreturn 0;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$beanType = $bean->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32mtry {[m
[32m+[m			[32mreturn $this->writer->queryRecordCountRelated( $beanType, $type, $bean->id, $sql, $bindings );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m
[32m+[m			[32mreturn 0;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Breaks the association between two beans. This method unassociates two beans. If the[m
[32m+[m	[32m * method succeeds the beans will no longer form an association. In the database[m
[32m+[m	[32m * this means that the association record will be removed. This method uses the[m
[32m+[m	[32m * OODB trash() method to remove the association links, thus giving FUSE models the[m
[32m+[m	[32m * opportunity to hook-in additional business logic. If the $fast parameter is[m
[32m+[m	[32m * set to boolean TRUE this method will remove the beans without their consent,[m
[32m+[m	[32m * bypassing FUSE. This can be used to improve performance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $beans1 first bean in target association[m
[32m+[m	[32m * @param OODBBean $beans2 second bean in target association[m
[32m+[m	[32m * @param boolean  $fast  if TRUE, removes the entries by query without FUSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function unassociate( $beans1, $beans2, $fast = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$beans1 = ( !is_array( $beans1 ) ) ? array( $beans1 ) : $beans1;[m
[32m+[m		[32m$beans2 = ( !is_array( $beans2 ) ) ? array( $beans2 ) : $beans2;[m
[32m+[m
[32m+[m		[32mforeach ( $beans1 as $bean1 ) {[m
[32m+[m			[32mforeach ( $beans2 as $bean2 ) {[m
[32m+[m				[32mtry {[m
[32m+[m					[32m$this->oodb->store( $bean1 );[m
[32m+[m					[32m$this->oodb->store( $bean2 );[m
[32m+[m
[32m+[m					[32m$type1 = $bean1->getMeta( 'type' );[m
[32m+[m					[32m$type2 = $bean2->getMeta( 'type' );[m
[32m+[m
[32m+[m					[32m$row      = $this->writer->queryRecordLink( $type1, $type2, $bean1->id, $bean2->id );[m
[32m+[m
[32m+[m					[32mif ( !$row ) return;[m
[32m+[m
[32m+[m					[32m$linkType = $this->getTable( array( $type1, $type2 ) );[m
[32m+[m
[32m+[m					[32mif ( $fast ) {[m
[32m+[m						[32m$this->writer->deleteRecord( $linkType, array( 'id' => $row['id'] ) );[m
[32m+[m
[32m+[m						[32mreturn;[m
[32m+[m					[32m}[m
[32m+[m
[32m+[m					[32m$beans = $this->oodb->convertToBeans( $linkType, array( $row ) );[m
[32m+[m
[32m+[m					[32mif ( count( $beans ) > 0 ) {[m
[32m+[m						[32m$bean = reset( $beans );[m
[32m+[m						[32m$this->oodb->trash( $bean );[m
[32m+[m					[32m}[m
[32m+[m				[32m} catch ( SQLException $exception ) {[m
[32m+[m					[32m$this->handleException( $exception );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes all relations for a bean. This method breaks every connection between[m
[32m+[m	[32m * a certain bean $bean and every other bean of type $type. Warning: this method[m
[32m+[m	[32m * is really fast because it uses a direct SQL query however it does not inform the[m
[32m+[m	[32m * models about this. If you want to notify FUSE models about deletion use a foreach-loop[m
[32m+[m	[32m * with unassociate() instead. (that might be slower though)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean reference bean[m
[32m+[m	[32m * @param string   $type type of beans that need to be unassociated[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function clearRelations( OODBBean $bean, $type )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->oodb->store( $bean );[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$this->writer->deleteRelations( $bean->getMeta( 'type' ), $type, $bean->id );[m
[32m+[m		[32m} catch ( SQLException $exception ) {[m
[32m+[m			[32m$this->handleException( $exception );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all the beans associated with $bean.[m
[32m+[m	[32m * This method will return an array containing all the beans that have[m
[32m+[m	[32m * been associated once with the associate() function and are still[m
[32m+[m	[32m * associated with the bean specified. The type parameter indicates the[m
[32m+[m	[32m * type of beans you are looking for. You can also pass some extra SQL and[m
[32m+[m	[32m * values for that SQL to filter your results after fetching the[m
[32m+[m	[32m * related beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Don't try to make use of subqueries, a subquery using IN() seems to[m
[32m+[m	[32m * be slower than two queries![m
[32m+[m	[32m *[m
[32m+[m	[32m * Since 3.2, you can now also pass an array of beans instead just one[m
[32m+[m	[32m * bean as the first parameter.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $bean the bean you have[m
[32m+[m	[32m * @param string         $type      the type of beans you want[m
[32m+[m	[32m * @param string         $sql       SQL snippet for extra filtering[m
[32m+[m	[32m * @param array          $bindings  values to be inserted in SQL slots[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function related( $bean, $type, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql   = $this->writer->glueSQLCondition( $sql );[m
[32m+[m		[32m$rows  = $this->relatedRows( $bean, $type, $sql, $bindings );[m
[32m+[m		[32m$links = array();[m
[32m+[m
[32m+[m		[32mforeach ( $rows as $key => $row ) {[m
[32m+[m			[32mif ( !isset( $links[$row['id']] ) ) $links[$row['id']] = array();[m
[32m+[m			[32m$links[$row['id']][] = $row['linked_by'];[m
[32m+[m			[32munset( $rows[$key]['linked_by'] );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$beans = $this->oodb->convertToBeans( $type, $rows );[m
[32m+[m		[32mforeach ( $beans as $bean ) $bean->setMeta( 'sys.belongs-to', $links[$bean->id] );[m
[32m+[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Bean Helper Interface.[m
[32m+[m[32m *[m
[32m+[m[32m * Interface for Bean Helper.[m
[32m+[m[32m * A little bolt that glues the whole machinery together.[m
[32m+[m[32m * The Bean Helper is passed to the OODB RedBeanPHP Object to[m
[32m+[m[32m * faciliatte the creation of beans and providing them with[m
[32m+[m[32m * a toolbox. The Helper also facilitates the FUSE feature,[m
[32m+[m[32m * determining how beans relate to their models. By overriding[m
[32m+[m[32m * the getModelForBean method you can tune the FUSEing to[m
[32m+[m[32m * fit your business application needs.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/IBeanHelper.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface BeanHelper[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a toolbox to empower the bean.[m
[32m+[m	[32m * This allows beans to perform OODB operations by themselves,[m
[32m+[m	[32m * as such the bean is a proxy for OODB. This allows beans to implement[m
[32m+[m	[32m * their magic getters and setters and return lists.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getToolbox();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Does approximately the same as getToolbox but also extracts the[m
[32m+[m	[32m * toolbox for you.[m
[32m+[m	[32m * This method returns a list with all toolbox items in Toolbox Constructor order:[m
[32m+[m	[32m * OODB, adapter, writer and finally the toolbox itself!.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getExtractedToolbox();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a certain bean this method will[m
[32m+[m	[32m * return the corresponding model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to obtain the corresponding model of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return SimpleModel|CustomModel|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getModelForBean( OODBBean $bean );[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\BeanHelper {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\BeanHelper as BeanHelper;[m
[32m+[m[32muse RedBeanPHP\Facade as Facade;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\SimpleModelHelper as SimpleModelHelper;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Bean Helper.[m
[32m+[m[32m *[m
[32m+[m[32m * The Bean helper helps beans to access access the toolbox and[m
[32m+[m[32m * FUSE models. This Bean Helper makes use of the facade to obtain a[m
[32m+[m[32m * reference to the toolbox.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/BeanHelperFacade.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass SimpleFacadeBeanHelper implements BeanHelper[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Factory function to create instance of Simple Model, if any.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @var \Closure[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $factory = null;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Factory method using a customizable factory function to create[m
[32m+[m	[32m * the instance of the Simple Model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $modelClassName name of the class[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return SimpleModel[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function factory( $modelClassName )[m
[32m+[m	[32m{[m
[32m+[m		[32m$factory = self::$factory;[m
[32m+[m		[32mreturn ( $factory ) ? $factory( $modelClassName ) : new $modelClassName();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the factory function to create the model when using FUSE[m
[32m+[m	[32m * to connect a bean to a model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param \Closure $factory factory function[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setFactoryFunction( $factory )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$factory = $factory;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see BeanHelper::getToolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getToolbox()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Facade::getToolBox();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see BeanHelper::getModelForBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getModelForBean( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$model     = $bean->getMeta( 'type' );[m
[32m+[m		[32m$prefix    = defined( 'REDBEAN_MODEL_PREFIX' ) ? REDBEAN_MODEL_PREFIX : '\\Model_';[m
[32m+[m
[32m+[m		[32mif ( strpos( $model, '_' ) !== FALSE ) {[m
[32m+[m			[32m$modelParts = explode( '_', $model );[m
[32m+[m			[32m$modelName = '';[m
[32m+[m			[32mforeach( $modelParts as $part ) {[m
[32m+[m				[32m$modelName .= ucfirst( $part );[m
[32m+[m			[32m}[m
[32m+[m			[32m$modelName = $prefix . $modelName;[m
[32m+[m			[32mif ( !class_exists( $modelName ) ) {[m
[32m+[m				[32m$modelName = $prefix . ucfirst( $model );[m
[32m+[m				[32mif ( !class_exists( $modelName ) ) {[m
[32m+[m					[32mreturn NULL;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$modelName = $prefix . ucfirst( $model );[m
[32m+[m			[32mif ( !class_exists( $modelName ) ) {[m
[32m+[m				[32mreturn NULL;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32m$obj = self::factory( $modelName );[m
[32m+[m		[32m$obj->loadBean( $bean );[m
[32m+[m		[32mreturn $obj;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see BeanHelper::getExtractedToolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getExtractedToolbox()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Facade::getExtractedToolbox();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * SimpleModel[m
[32m+[m[32m * Base Model For All RedBeanPHP Models using FUSE.[m
[32m+[m[32m *[m
[32m+[m[32m * RedBeanPHP FUSE is a mechanism to connect beans to posthoc[m
[32m+[m[32m * models. Models are connected to beans by naming conventions.[m
[32m+[m[32m * Actions on beans will result in actions on models.[m
[32m+[m[32m *[m
[32m+[m[32m * @file       RedBeanPHP/SimpleModel.php[m
[32m+[m[32m * @author     Gabor de Mooij and the RedBeanPHP Team[m
[32m+[m[32m * @license    BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass SimpleModel[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $bean;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Used by FUSE: the ModelHelper class to connect a bean to a model.[m
[32m+[m	[32m * This method loads a bean in the model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function loadBean( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->bean = $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Magic Getter to make the bean properties available from[m
[32m+[m	[32m * the $this-scope.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this method returns a value, not a reference![m
[32m+[m	[32m *       To obtain a reference unbox the bean first![m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $prop property to get[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __get( $prop )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->bean->$prop;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Magic Setter.[m
[32m+[m	[32m * Sets the value directly as a bean property.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $prop  property to set value of[m
[32m+[m	[32m * @param mixed  $value value to set[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __set( $prop, $value )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->bean->$prop = $value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Isset implementation.[m
[32m+[m	[32m * Implements the isset function for array-like access.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $key key to check[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __isset( $key )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn isset( $this->bean->$key );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Box the bean using the current model.[m
[32m+[m	[32m * This method wraps the current bean in this model.[m
[32m+[m	[32m * This method can be reached using FUSE through a simple[m
[32m+[m	[32m * OODBBean. The method returns a RedBeanPHP Simple Model.[m
[32m+[m	[32m * This is useful if you would like to rely on PHP type hinting.[m
[32m+[m	[32m * You can box your beans before passing them to functions or methods[m
[32m+[m	[32m * with typed parameters.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note about beans vs models:[m
[32m+[m	[32m * Use unbox to obtain the bean powering the model. If you want to use bean functionality,[m
[32m+[m	[32m * you should -always- unbox first. While some functionality (like magic get/set) is[m
[32m+[m	[32m * available in the model, this is just read-only. To use a model as a typical RedBean[m
[32m+[m	[32m * OODBBean you should always unbox the model to a bean. Models are meant to[m
[32m+[m	[32m * expose only domain logic added by the developer (business logic, no ORM logic).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return SimpleModel[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function box()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Unbox the bean from the model.[m
[32m+[m	[32m * This method returns the bean inside the model.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note about beans vs models:[m
[32m+[m	[32m * Use unbox to obtain the bean powering the model. If you want to use bean functionality,[m
[32m+[m	[32m * you should -always- unbox first. While some functionality (like magic get/set) is[m
[32m+[m	[32m * available in the model, this is just read-only. To use a model as a typical RedBean[m
[32m+[m	[32m * OODBBean you should always unbox the model to a bean. Models are meant to[m
[32m+[m	[32m * expose only domain logic added by the developer (business logic, no ORM logic).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function unbox()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->bean;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\Observer as Observer;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\Observable as Observable;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean Model Helper.[m
[32m+[m[32m *[m
[32m+[m[32m * Connects beans to models.[m
[32m+[m[32m * This is the core of so-called FUSE.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/ModelHelper.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass SimpleModelHelper implements Observer[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gets notified by an observable.[m
[32m+[m	[32m * This method decouples the FUSE system from the actual beans.[m
[32m+[m	[32m * If a FUSE event happens 'update', this method will attempt to[m
[32m+[m	[32m * invoke the corresponding method on the bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $eventName i.e. 'delete', 'after_delete'[m
[32m+[m	[32m * @param OODBean $bean      affected bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function onEvent( $eventName, $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$bean->$eventName();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Attaches the FUSE event listeners. Now the Model Helper will listen for[m
[32m+[m	[32m * CRUD events. If a CRUD event occurs it will send a signal to the model[m
[32m+[m	[32m * that belongs to the CRUD bean and this model will take over control from[m
[32m+[m	[32m * there. This method will attach the following event listeners to the observable:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - 'update'       (gets called by R::store, before the records gets inserted / updated)[m
[32m+[m	[32m * - 'after_update' (gets called by R::store, after the records have been inserted / updated)[m
[32m+[m	[32m * - 'open'         (gets called by R::load, after the record has been retrieved)[m
[32m+[m	[32m * - 'delete'       (gets called by R::trash, before deletion of record)[m
[32m+[m	[32m * - 'after_delete' (gets called by R::trash, after deletion)[m
[32m+[m	[32m * - 'dispense'     (gets called by R::dispense)[m
[32m+[m	[32m *[m
[32m+[m	[32m * For every event type, this method will register this helper as a listener.[m
[32m+[m	[32m * The observable will notify the listener (this object) with the event ID and the[m
[32m+[m	[32m * affected bean. This helper will then process the event (onEvent) by invoking[m
[32m+[m	[32m * the event on the bean. If a bean offers a method with the same name as the[m
[32m+[m	[32m * event ID, this method will be invoked.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Observable $observable object to observe[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function attachEventListeners( Observable $observable )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( array( 'update', 'open', 'delete', 'after_delete', 'after_update', 'dispense' ) as $eventID ) {[m
[32m+[m			[32m$observable->addEventListener( $eventID, $this );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\AssociationManager as AssociationManager;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBeanPHP Tag Manager.[m
[32m+[m[32m *[m
[32m+[m[32m * The tag manager offers an easy way to quickly implement basic tagging[m
[32m+[m[32m * functionality.[m
[32m+[m[32m *[m
[32m+[m[32m * Provides methods to tag beans and perform tag-based searches in the[m
[32m+[m[32m * bean database.[m
[32m+[m[32m *[m
[32m+[m[32m * @file       RedBeanPHP/TagManager.php[m
[32m+[m[32m * @author     Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license    BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass TagManager[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var AssociationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $associationManager;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $redbean;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks if the argument is a comma separated string, in this case[m
[32m+[m	[32m * it will split the string into words and return an array instead.[m
[32m+[m	[32m * In case of an array the argument will be returned 'as is'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array|string $tagList list of tags[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function extractTagsIfNeeded( $tagList )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $tagList !== FALSE && !is_array( $tagList ) ) {[m
[32m+[m			[32m$tags = explode( ',', (string) $tagList );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$tags = $tagList;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $tags;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds a tag bean by it's title.[m
[32m+[m	[32m * Internal method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $title title to search for[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function findTagByTitle( $title )[m
[32m+[m	[32m{[m
[32m+[m		[32m$beans = $this->redbean->find( 'tag', array( 'title' => array( $title ) ) );[m
[32m+[m
[32m+[m		[32mif ( $beans ) {[m
[32m+[m			[32m$bean = reset( $beans );[m
[32m+[m
[32m+[m			[32mreturn $bean;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The tag manager offers an easy way to quickly implement basic tagging[m
[32m+[m	[32m * functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox toolbox object[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m		[32m$this->redbean = $toolbox->getRedBean();[m
[32m+[m
[32m+[m		[32m$this->associationManager = $this->redbean->getAssociationManager();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tests whether a bean has been associated with one ore more[m
[32m+[m	[32m * of the listed tags. If the third parameter is TRUE this method[m
[32m+[m	[32m * will return TRUE only if all tags that have been specified are indeed[m
[32m+[m	[32m * associated with the given bean, otherwise FALSE.[m
[32m+[m	[32m * If the third parameter is FALSE this[m
[32m+[m	[32m * method will return TRUE if one of the tags matches, FALSE if none[m
[32m+[m	[32m * match.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::hasTag( $blog, 'horror,movie', TRUE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above returns TRUE if the $blog bean has been tagged[m
[32m+[m	[32m * as BOTH horror and movie. If the post has only been tagged as 'movie'[m
[32m+[m	[32m * or 'horror' this operation will return FALSE because the third parameter[m
[32m+[m	[32m * has been set to TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  OODBBean     $bean bean to check for tags[m
[32m+[m	[32m * @param  array|string $tags list of tags[m
[32m+[m	[32m * @param  boolean      $all  whether they must all match or just some[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function hasTag( $bean, $tags, $all = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$foundtags = $this->tag( $bean );[m
[32m+[m
[32m+[m		[32m$tags = $this->extractTagsIfNeeded( $tags );[m
[32m+[m		[32m$same = array_intersect( $tags, $foundtags );[m
[32m+[m
[32m+[m		[32mif ( $all ) {[m
[32m+[m			[32mreturn ( implode( ',', $same ) === implode( ',', $tags ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn (bool) ( count( $same ) > 0 );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes all specified tags from the bean. The tags specified in[m
[32m+[m	[32m * the second parameter will no longer be associated with the bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::untag( $blog, 'smart,interesting' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, the $blog bean will no longer[m
[32m+[m	[32m * be associated with the tags 'smart' and 'interesting'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  OODBBean $bean    tagged bean[m
[32m+[m	[32m * @param  array    $tagList list of tags (names)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function untag( $bean, $tagList )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m
[32m+[m		[32mforeach ( $tags as $tag ) {[m
[32m+[m			[32mif ( $t = $this->findTagByTitle( $tag ) ) {[m
[32m+[m				[32m$this->associationManager->unassociate( $bean, $t );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Part of RedBeanPHP Tagging API.[m
[32m+[m	[32m * Tags a bean or returns tags associated with a bean.[m
[32m+[m	[32m * If $tagList is NULL or omitted this method will return a[m
[32m+[m	[32m * comma separated list of tags associated with the bean provided.[m
[32m+[m	[32m * If $tagList is a comma separated list (string) of tags all tags will[m
[32m+[m	[32m * be associated with the bean.[m
[32m+[m	[32m * You may also pass an array instead of a string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::tag( $meal, "TexMex,Mexican" );[m
[32m+[m	[32m * $tags = R::tag( $meal );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The first line in the example above will tag the $meal[m
[32m+[m	[32m * as 'TexMex' and 'Mexican Cuisine'. The second line will[m
[32m+[m	[32m * retrieve all tags attached to the meal object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean    bean to tag[m
[32m+[m	[32m * @param mixed    $tagList tags to attach to the specified bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function tag( OODBBean $bean, $tagList = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_null( $tagList ) ) {[m
[32m+[m
[32m+[m			[32m$tags = $bean->sharedTag;[m
[32m+[m			[32m$foundTags = array();[m
[32m+[m
[32m+[m			[32mforeach ( $tags as $tag ) {[m
[32m+[m				[32m$foundTags[] = $tag->title;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mreturn $foundTags;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->associationManager->clearRelations( $bean, 'tag' );[m
[32m+[m		[32m$this->addTags( $bean, $tagList );[m
[32m+[m
[32m+[m		[32mreturn $tagList;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Part of RedBeanPHP Tagging API.[m
[32m+[m	[32m * Adds tags to a bean.[m
[32m+[m	[32m * If $tagList is a comma separated list of tags all tags will[m
[32m+[m	[32m * be associated with the bean.[m
[32m+[m	[32m * You may also pass an array instead of a string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::addTags( $blog, ["halloween"] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example adds the tag 'halloween' to the $blog[m
[32m+[m	[32m * bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean    bean to tag[m
[32m+[m	[32m * @param array    $tagList list of tags to add to bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function addTags( OODBBean $bean, $tagList )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m
[32m+[m		[32mif ( $tagList === FALSE ) {[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mforeach ( $tags as $tag ) {[m
[32m+[m			[32mif ( !$t = $this->findTagByTitle( $tag ) ) {[m
[32m+[m				[32m$t        = $this->redbean->dispense( 'tag' );[m
[32m+[m				[32m$t->title = $tag;[m
[32m+[m
[32m+[m				[32m$this->redbean->store( $t );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$this->associationManager->associate( $bean, $t );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all beans that have been tagged with one or more[m
[32m+[m	[32m * of the specified tags.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $watchList = R::tagged([m
[32m+[m	[32m *   'movie',[m
[32m+[m	[32m *   'horror,gothic',[m
[32m+[m	[32m *   ' ORDER BY movie.title DESC LIMIT ?',[m
[32m+[m	[32m *   [ 10 ][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example uses R::tagged() to find all movies that have been[m
[32m+[m	[32m * tagged as 'horror' or 'gothic', order them by title and limit[m
[32m+[m	[32m * the number of movies to be returned to 10.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional SQL (use only for pagination)[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function tagged( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags       = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m		[32m$records    = $this->toolbox->getWriter()->queryTagged( $beanType, $tags, FALSE, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mreturn $this->redbean->convertToBeans( $beanType, $records );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all beans that have been tagged with ALL of the tags given.[m
[32m+[m	[32m * This method works the same as R::tagged() except that this method only returns[m
[32m+[m	[32m * beans that have been tagged with all the specified labels.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $watchList = R::taggedAll([m
[32m+[m	[32m *    'movie',[m
[32m+[m	[32m *    [ 'gothic', 'short' ],[m
[32m+[m	[32m *    ' ORDER BY movie.id DESC LIMIT ? ',[m
[32m+[m	[32m *    [ 4 ][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above returns at most 4 movies (due to the LIMIT clause in the SQL[m
[32m+[m	[32m * Query Snippet) that have been tagged as BOTH 'short' AND 'gothic'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function taggedAll( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags  = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m		[32m$records    = $this->toolbox->getWriter()->queryTagged( $beanType, $tags, TRUE, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mreturn $this->redbean->convertToBeans( $beanType, $records );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like taggedAll() but only counts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see taggedAll[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countTaggedAll( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags  = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m		[32mreturn $this->toolbox->getWriter()->queryCountTagged( $beanType, $tags, TRUE, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like tagged() but only counts.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see tagged[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countTagged( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$tags  = $this->extractTagsIfNeeded( $tagList );[m
[32m+[m		[32mreturn $this->toolbox->getWriter()->queryCountTagged( $beanType, $tags, FALSE, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Label Maker.[m
[32m+[m[32m * Makes so-called label beans.[m
[32m+[m[32m * A label is a bean with only an id, type and name property.[m
[32m+[m[32m * Labels can be used to create simple entities like categories, tags or enums.[m
[32m+[m[32m * This service class provides convenience methods to deal with this kind of[m
[32m+[m[32m * beans.[m
[32m+[m[32m *[m
[32m+[m[32m * @file       RedBeanPHP/LabelMaker.php[m
[32m+[m[32m * @author     Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license    BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass LabelMaker[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A label is a bean with only an id, type and name property.[m
[32m+[m	[32m * This function will dispense beans for all entries in the array. The[m
[32m+[m	[32m * values of the array will be assigned to the name property of each[m
[32m+[m	[32m * individual bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $people = R::dispenseLabels( 'person', [ 'Santa', 'Claus' ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type   type of beans you would like to have[m
[32m+[m	[32m * @param array  $labels list of labels, names for each bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function dispenseLabels( $type, $labels )[m
[32m+[m	[32m{[m
[32m+[m		[32m$labelBeans = array();[m
[32m+[m		[32mforeach ( $labels as $label ) {[m
[32m+[m			[32m$labelBean       = $this->toolbox->getRedBean()->dispense( $type );[m
[32m+[m			[32m$labelBean->name = $label;[m
[32m+[m			[32m$labelBeans[]    = $labelBean;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $labelBeans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gathers labels from beans. This function loops through the beans,[m
[32m+[m	[32m * collects the value of the name property for each individual bean[m
[32m+[m	[32m * and stores the names in a new array. The array then gets sorted using the[m
[32m+[m	[32m * default sort function of PHP (sort).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $o1->name = 'hamburger';[m
[32m+[m	[32m * $o2->name = 'pizza';[m
[32m+[m	[32m * implode( ',', R::gatherLabels( [ $o1, $o2 ] ) ); //hamburger,pizza[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that the return value is an array of strings, not beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $beans list of beans to loop through[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function gatherLabels( $beans )[m
[32m+[m	[32m{[m
[32m+[m		[32m$labels = array();[m
[32m+[m
[32m+[m		[32mforeach ( $beans as $bean ) {[m
[32m+[m			[32m$labels[] = $bean->name;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32msort( $labels );[m
[32m+[m
[32m+[m		[32mreturn $labels;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Fetches an ENUM from the database and creates it if necessary.[m
[32m+[m	[32m * An ENUM has the following format:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * ENUM:VALUE[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you pass 'ENUM' only, this method will return an array of its[m
[32m+[m	[32m * values:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * implode( ',', R::gatherLabels( R::enum( 'flavour' ) ) ) //'BANANA,MOCCA'[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you pass 'ENUM:VALUE' this method will return the specified enum bean[m
[32m+[m	[32m * and create it in the database if it does not exist yet:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bananaFlavour = R::enum( 'flavour:banana' );[m
[32m+[m	[32m * $bananaFlavour->name;[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * So you can use this method to set an ENUM value in a bean:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $shake->flavour = R::enum( 'flavour:banana' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * the property flavour now contains the enum bean, a parent bean.[m
[32m+[m	[32m * In the database, flavour_id will point to the flavour record with name 'banana'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $enum ENUM specification for label[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function enum( $enum )[m
[32m+[m	[32m{[m
[32m+[m		[32m$oodb = $this->toolbox->getRedBean();[m
[32m+[m
[32m+[m		[32mif ( strpos( $enum, ':' ) === FALSE ) {[m
[32m+[m			[32m$type  = $enum;[m
[32m+[m			[32m$value = FALSE;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mlist( $type, $value ) = explode( ':', $enum );[m
[32m+[m			[32m$value                = preg_replace( '/\W+/', '_', strtoupper( trim( $value ) ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m/**[m
[32m+[m		[32m * We use simply find here, we could use inspect() in fluid mode etc,[m
[32m+[m		[32m * but this would be useless. At first sight it looks clean, you could even[m
[32m+[m		[32m * bake this into find(), however, find not only has to deal with the primary[m
[32m+[m		[32m * search type, people can also include references in the SQL part, so avoiding[m
[32m+[m		[32m * find failures does not matter, this is still the quickest way making use[m
[32m+[m		[32m * of existing functionality.[m
[32m+[m		[32m *[m
[32m+[m		[32m * @note There seems to be a bug in XDebug v2.3.2 causing suppressed[m
[32m+[m		[32m * exceptions like these to surface anyway, to prevent this use:[m
[32m+[m		[32m *[m
[32m+[m		[32m * "xdebug.default_enable = 0"[m
[32m+[m		[32m *[m
[32m+[m		[32m *  Also see Github Issue #464[m
[32m+[m		[32m */[m
[32m+[m		[32m$values = $oodb->find( $type );[m
[32m+[m
[32m+[m		[32mif ( $value === FALSE ) {[m
[32m+[m			[32mreturn $values;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mforeach( $values as $enumItem ) {[m
[32m+[m				[32mif ( $enumItem->name === $value ) return $enumItem;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$newEnumItems = $this->dispenseLabels( $type, array( $value ) );[m
[32m+[m		[32m$newEnumItem  = reset( $newEnumItems );[m
[32m+[m
[32m+[m		[32m$oodb->store( $newEnumItem );[m
[32m+[m
[32m+[m		[32mreturn $newEnumItem;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\QueryWriter as QueryWriter;[m
[32m+[m[32muse RedBeanPHP\Adapter\DBAdapter as DBAdapter;[m
[32m+[m[32muse RedBeanPHP\RedException\SQL as SQLException;[m
[32m+[m[32muse RedBeanPHP\Logger as Logger;[m
[32m+[m[32muse RedBeanPHP\Logger\RDefault as RDefault;[m
[32m+[m[32muse RedBeanPHP\Logger\RDefault\Debug as Debug;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\BeanHelper\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;[m
[32m+[m[32muse RedBeanPHP\Driver\RPDO as RPDO;[m
[32m+[m[32muse RedBeanPHP\Util\MultiLoader as MultiLoader;[m
[32m+[m[32muse RedBeanPHP\Util\Transaction as Transaction;[m
[32m+[m[32muse RedBeanPHP\Util\Dump as Dump;[m
[32m+[m[32muse RedBeanPHP\Util\DispenseHelper as DispenseHelper;[m
[32m+[m[32muse RedBeanPHP\Util\ArrayTool as ArrayTool;[m
[32m+[m[32muse RedBeanPHP\Util\QuickExport as QuickExport;[m
[32m+[m[32muse RedBeanPHP\Util\MatchUp as MatchUp;[m
[32m+[m[32muse RedBeanPHP\Util\Look as Look;[m
[32m+[m[32muse RedBeanPHP\Util\Diff as Diff;[m
[32m+[m[32muse RedBeanPHP\Util\Tree as Tree;[m
[32m+[m[32muse RedBeanPHP\Util\Feature;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean Facade[m
[32m+[m[32m *[m
[32m+[m[32m * Version Information[m
[32m+[m[32m * RedBean Version @version 5.7[m
[32m+[m[32m *[m
[32m+[m[32m * This class hides the object landscape of[m
[32m+[m[32m * RedBeanPHP behind a single letter class providing[m
[32m+[m[32m * almost all functionality with simple static calls.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Facade.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Facade[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * RedBeanPHP version constant.[m
[32m+[m	[32m */[m
[32m+[m	[32mconst C_REDBEANPHP_VERSION = '5.7';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $redbean;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $adapter;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var AssociationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $associationManager;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var TagManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $tagManager;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var DuplicationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $duplicationManager;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var LabelMaker[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $labelMaker;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Finder[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $finder;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Tree[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $tree;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Logger[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $logger;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $plugins = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $exportCaseStyle = 'default';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var flag allows transactions through facade in fluid mode[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $allowFluidTransactions = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var flag allows to unfreeze if needed with store(all)[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $allowHybridMode = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Not in use (backward compatibility SQLHelper)[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static $f;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static $currentDB = '';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static $toolboxes = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Internal Query function, executes the desired query. Used by[m
[32m+[m	[32m * all facade query functions. This keeps things DRY.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $method   desired query method (i.e. 'cell', 'col', 'exec' etc..)[m
[32m+[m	[32m * @param string $sql      the sql you want to execute[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to query statement[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static function query( $method, $sql, $bindings )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !self::$redbean->isFrozen() ) {[m
[32m+[m			[32mtry {[m
[32m+[m				[32m$rs = Facade::$adapter->$method( $sql, $bindings );[m
[32m+[m			[32m} catch ( SQLException $exception ) {[m
[32m+[m				[32mif ( self::$writer->sqlStateIn( $exception->getSQLState(),[m
[32m+[m					[32marray([m
[32m+[m						[32mQueryWriter::C_SQLSTATE_NO_SUCH_COLUMN,[m
[32m+[m						[32mQueryWriter::C_SQLSTATE_NO_SUCH_TABLE )[m
[32m+[m					[32m,$exception->getDriverDetails()[m
[32m+[m					[32m)[m
[32m+[m				[32m) {[m
[32m+[m					[32mreturn ( $method === 'getCell' ) ? NULL : array();[m
[32m+[m				[32m} else {[m
[32m+[m					[32mthrow $exception;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mreturn $rs;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mreturn Facade::$adapter->$method( $sql, $bindings );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets allow hybrid mode flag. In Hybrid mode (default off),[m
[32m+[m	[32m * store/storeAll take an extra argument to switch to fluid[m
[32m+[m	[32m * mode in case of an exception. You can use this to speed up[m
[32m+[m	[32m * fluid mode. This method returns the previous value of the[m
[32m+[m	[32m * flag.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $hybrid[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setAllowHybridMode( $hybrid )[m
[32m+[m	[32m{[m
[32m+[m		[32m$old = self::$allowHybridMode;[m
[32m+[m		[32mself::$allowHybridMode = $hybrid;[m
[32m+[m		[32mreturn $old;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the RedBeanPHP version string.[m
[32m+[m	[32m * The RedBeanPHP version string always has the same format "X.Y"[m
[32m+[m	[32m * where X is the major version number and Y is the minor version number.[m
[32m+[m	[32m * Point releases are not mentioned in the version string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getVersion()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::C_REDBEANPHP_VERSION;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the version string from the database server.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getDatabaseServerVersion()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$adapter->getDatabaseServerVersion();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tests the database connection.[m
[32m+[m	[32m * Returns TRUE if connection has been established and[m
[32m+[m	[32m * FALSE otherwise. Suppresses any warnings that may[m
[32m+[m	[32m * occur during the testing process and catches all[m
[32m+[m	[32m * exceptions that might be thrown during the test.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function testConnection()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset( self::$adapter ) ) return FALSE;[m
[32m+[m
[32m+[m		[32m$database = self::$adapter->getDatabase();[m
[32m+[m		[32mtry {[m
[32m+[m			[32m@$database->connect();[m
[32m+[m		[32m} catch ( \Exception $e ) {}[m
[32m+[m		[32mreturn $database->isConnected();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Kickstarts redbean for you. This method should be called before you start using[m
[32m+[m	[32m * RedBeanPHP. The Setup() method can be called without any arguments, in this case it will[m
[32m+[m	[32m * try to create a SQLite database in /tmp called red.db (this only works on UNIX-like systems).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::setup( 'mysql:host=localhost;dbname=mydatabase', 'dba', 'dbapassword' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * You can replace 'mysql:' with the name of the database you want to use.[m
[32m+[m	[32m * Possible values are:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - pgsql  (PostgreSQL database)[m
[32m+[m	[32m * - sqlite (SQLite database)[m
[32m+[m	[32m * - mysql  (MySQL database)[m
[32m+[m	[32m * - mysql  (also for Maria database)[m
[32m+[m	[32m * - sqlsrv (MS SQL Server - community supported experimental driver)[m
[32m+[m	[32m * - CUBRID (CUBRID driver - basic support provided by Plugin)[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that setup() will not immediately establish a connection to the database.[m
[32m+[m	[32m * Instead, it will prepare the connection and connect 'lazily', i.e. the moment[m
[32m+[m	[32m * a connection is really required, for instance when attempting to load[m
[32m+[m	[32m * a bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $dsn          Database connection string[m
[32m+[m	[32m * @param string  $username     Username for database[m
[32m+[m	[32m * @param string  $password     Password for database[m
[32m+[m	[32m * @param boolean $frozen       TRUE if you want to setup in frozen mode[m
[32m+[m	[32m * @param boolean $partialBeans TRUE to enable partial bean updates[m
[32m+[m	[32m * @param array   $options      Additional (PDO) options to pass[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setup( $dsn = NULL, $username = NULL, $password = NULL, $frozen = FALSE, $partialBeans = FALSE, $options = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_null( $dsn ) ) {[m
[32m+[m			[32m$dsn = 'sqlite:' . DIRECTORY_SEPARATOR . sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'red.db';[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mself::addDatabase( 'default', $dsn, $username, $password, $frozen, $partialBeans, $options );[m
[32m+[m		[32mself::selectDatabase( 'default' );[m
[32m+[m
[32m+[m		[32mreturn self::$toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles 'Narrow Field Mode'.[m
[32m+[m	[32m * In Narrow Field mode the queryRecord method will[m
[32m+[m	[32m * narrow its selection field to[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * SELECT {table}.*[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * instead of[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * SELECT *[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is a better way of querying because it allows[m
[32m+[m	[32m * more flexibility (for instance joins). However if you need[m
[32m+[m	[32m * the wide selector for backward compatibility; use this method[m
[32m+[m	[32m * to turn OFF Narrow Field Mode by passing FALSE.[m
[32m+[m	[32m * Default is TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $narrowField TRUE = Narrow Field FALSE = Wide Field[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setNarrowFieldMode( $mode )[m
[32m+[m	[32m{[m
[32m+[m		[32mAQueryWriter::setNarrowFieldMode( $mode );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles fluid transactions. By default fluid transactions[m
[32m+[m	[32m * are not active. Starting, committing or rolling back a transaction[m
[32m+[m	[32m * through the facade in fluid mode will have no effect. If you wish[m
[32m+[m	[32m * to replace this standard portable behavor with behavior depending[m
[32m+[m	[32m * on how the used database platform handles fluid (DDL) transactions[m
[32m+[m	[32m * set this flag to TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $mode allow fluid transaction mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setAllowFluidTransactions( $mode )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$allowFluidTransactions = $mode;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles support for IS-NULL-conditions.[m
[32m+[m	[32m * If IS-NULL-conditions are enabled condition arrays[m
[32m+[m	[32m * for functions including findLike() are treated so that[m
[32m+[m	[32m * 'field' => NULL will be interpreted as field IS NULL[m
[32m+[m	[32m * instead of being skipped. Returns the previous[m
[32m+[m	[32m * value of the flag.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag TRUE or FALSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useISNULLConditions( $mode )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::getWriter()->flushCache(); /* otherwise same queries might fail (see Unit test XNull) */[m
[32m+[m		[32mreturn AQueryWriter::useISNULLConditions( $mode );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Wraps a transaction around a closure or string callback.[m
[32m+[m	[32m * If an Exception is thrown inside, the operation is automatically rolled back.[m
[32m+[m	[32m * If no Exception happens, it commits automatically.[m
[32m+[m	[32m * It also supports (simulated) nested transactions (that is useful when[m
[32m+[m	[32m * you have many methods that needs transactions but are unaware of[m
[32m+[m	[32m * each other).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $from = 1;[m
[32m+[m	[32m * $to = 2;[m
[32m+[m	[32m * $amount = 300;[m
[32m+[m	[32m *[m
[32m+[m	[32m * R::transaction(function() use($from, $to, $amount)[m
[32m+[m	[32m * {[m
[32m+[m	[32m *   $accountFrom = R::load('account', $from);[m
[32m+[m	[32m *   $accountTo = R::load('account', $to);[m
[32m+[m	[32m *   $accountFrom->money -= $amount;[m
[32m+[m	[32m *   $accountTo->money += $amount;[m
[32m+[m	[32m *   R::store($accountFrom);[m
[32m+[m	[32m *   R::store($accountTo);[m
[32m+[m	[32m * });[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param callable $callback Closure (or other callable) with the transaction logic[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function transaction( $callback )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Transaction::transaction( self::$adapter, $callback );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Adds a database to the facade, afterwards you can select the database using[m
[32m+[m	[32m * selectDatabase($key), where $key is the name you assigned to this database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::addDatabase( 'database-1', 'sqlite:/tmp/db1.txt' );[m
[32m+[m	[32m * R::selectDatabase( 'database-1' ); //to select database again[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method allows you to dynamically add (and select) new databases[m
[32m+[m	[32m * to the facade. Adding a database with the same key will cause an exception.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string      $key    ID for the database[m
[32m+[m	[32m * @param string      $dsn    DSN for the database[m
[32m+[m	[32m * @param string      $user   user for connection[m
[32m+[m	[32m * @param NULL|string $pass   password for connection[m
[32m+[m	[32m * @param bool        $frozen whether this database is frozen or not[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function addDatabase( $key, $dsn, $user = NULL, $pass = NULL, $frozen = FALSE, $partialBeans = FALSE, $options = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( isset( self::$toolboxes[$key] ) ) {[m
[32m+[m			[32mthrow new RedException( 'A database has already been specified for this key.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mself::$toolboxes[$key] = self::createToolbox($dsn, $user, $pass, $frozen, $partialBeans, $options);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Creates a toolbox. This method can be called if you want to use redbean non-static.[m
[32m+[m[32m   * It has the same interface as R::setup(). The createToolbx() method can be called[m
[32m+[m[32m   * without any arguments, in this case it will try to create a SQLite database in[m
[32m+[m[32m   * /tmp called red.db (this only works on UNIX-like systems).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::createToolbox( 'mysql:host=localhost;dbname=mydatabase', 'dba', 'dbapassword' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * You can replace 'mysql:' with the name of the database you want to use.[m
[32m+[m	[32m * Possible values are:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - pgsql  (PostgreSQL database)[m
[32m+[m	[32m * - sqlite (SQLite database)[m
[32m+[m	[32m * - mysql  (MySQL database)[m
[32m+[m	[32m * - mysql  (also for Maria database)[m
[32m+[m	[32m * - sqlsrv (MS SQL Server - community supported experimental driver)[m
[32m+[m	[32m * - CUBRID (CUBRID driver - basic support provided by Plugin)[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that createToolbox() will not immediately establish a connection to the database.[m
[32m+[m	[32m * Instead, it will prepare the connection and connect 'lazily', i.e. the moment[m
[32m+[m	[32m * a connection is really required, for instance when attempting to load a bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $dsn      Database connection string[m
[32m+[m	[32m * @param string  $username Username for database[m
[32m+[m	[32m * @param string  $password Password for database[m
[32m+[m	[32m * @param boolean $frozen   TRUE if you want to setup in frozen mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox[m
[32m+[m	[32m */[m
[32m+[m[32m  public static function createToolbox( $dsn = NULL, $username = NULL, $password = NULL, $frozen = FALSE, $partialBeans = FALSE, $options = array() )[m
[32m+[m[32m  {[m
[32m+[m		[32mif ( is_object($dsn) ) {[m
[32m+[m			[32m$db  = new RPDO( $dsn );[m
[32m+[m			[32m$dbType = $db->getDatabaseType();[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$db = new RPDO( $dsn, $username, $password, $options );[m
[32m+[m			[32m$dbType = substr( $dsn, 0, strpos( $dsn, ':' ) );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$adapter = new DBAdapter( $db );[m
[32m+[m
[32m+[m		[32m$writers = array([m
[32m+[m			[32m'pgsql'  => 'PostgreSQL',[m
[32m+[m			[32m'sqlite' => 'SQLiteT',[m
[32m+[m			[32m'cubrid' => 'CUBRID',[m
[32m+[m			[32m'mysql'  => 'MySQL',[m
[32m+[m			[32m'sqlsrv' => 'SQLServer',[m
[32m+[m		[32m);[m
[32m+[m
[32m+[m		[32m$wkey = trim( strtolower( $dbType ) );[m
[32m+[m		[32mif ( !isset( $writers[$wkey] ) ) {[m
[32m+[m			[32m$wkey = preg_replace( '/\W/', '' , $wkey );[m
[32m+[m			[32mthrow new RedException( 'Unsupported database ('.$wkey.').' );[m
[32m+[m		[32m}[m
[32m+[m		[32m$writerClass = '\\RedBeanPHP\\QueryWriter\\'.$writers[$wkey];[m
[32m+[m		[32m$writer      = new $writerClass( $adapter );[m
[32m+[m		[32m$redbean     = new OODB( $writer, $frozen );[m
[32m+[m
[32m+[m		[32mif ( $partialBeans ) {[m
[32m+[m			[32m$redbean->getCurrentRepository()->usePartialBeans( $partialBeans );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn new ToolBox( $redbean, $adapter, $writer );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether a database identified with the specified key has[m
[32m+[m	[32m * already been added to the facade. This function will return TRUE[m
[32m+[m	[32m * if the database indicated by the key is available and FALSE otherwise.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $key the key/name of the database to check for[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function hasDatabase( $key )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ( isset( self::$toolboxes[$key] ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects a different database for the Facade to work with.[m
[32m+[m	[32m * If you use the R::setup() you don't need this method. This method is meant[m
[32m+[m	[32m * for multiple database setups. This method selects the database identified by the[m
[32m+[m	[32m * database ID ($key). Use addDatabase() to add a new database, which in turn[m
[32m+[m	[32m * can be selected using selectDatabase(). If you use R::setup(), the resulting[m
[32m+[m	[32m * database will be stored under key 'default', to switch (back) to this database[m
[32m+[m	[32m * use R::selectDatabase( 'default' ). This method returns TRUE if the database has been[m
[32m+[m	[32m * switched and FALSE otherwise (for instance if you already using the specified database).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $key Key of the database to select[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function selectDatabase( $key, $force = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( self::$currentDB === $key && !$force ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !isset( self::$toolboxes[$key] ) ) {[m
[32m+[m			[32mthrow new RedException( 'Database not found in registry. Add database using R::addDatabase().' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mself::configureFacadeWithToolbox( self::$toolboxes[$key] );[m
[32m+[m		[32mself::$currentDB = $key;[m
[32m+[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles DEBUG mode.[m
[32m+[m	[32m * In Debug mode all SQL that happens under the hood will[m
[32m+[m	[32m * be printed to the screen and/or logged.[m
[32m+[m	[32m * If no database connection has been configured using R::setup() or[m
[32m+[m	[32m * R::selectDatabase() this method will throw an exception.[m
[32m+[m	[32m *[m
[32m+[m	[32m * There are 2 debug styles:[m
[32m+[m	[32m *[m
[32m+[m	[32m * Classic: separate parameter bindings, explicit and complete but less readable[m
[32m+[m	[32m * Fancy:   interpersed bindings, truncates large strings, highlighted schema changes[m
[32m+[m	[32m *[m
[32m+[m	[32m * Fancy style is more readable but sometimes incomplete.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The first parameter turns debugging ON or OFF.[m
[32m+[m	[32m * The second parameter indicates the mode of operation:[m
[32m+[m	[32m *[m
[32m+[m	[32m * 0 Log and write to STDOUT classic style (default)[m
[32m+[m	[32m * 1 Log only, class style[m
[32m+[m	[32m * 2 Log and write to STDOUT fancy style[m
[32m+[m	[32m * 3 Log only, fancy style[m
[32m+[m	[32m *[m
[32m+[m	[32m * This function always returns the logger instance created to generate the[m
[32m+[m	[32m * debug messages.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $tf   debug mode (TRUE or FALSE)[m
[32m+[m	[32m * @param integer $mode mode of operation[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return RDefault[m
[32m+[m	[32m * @throws RedException[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function debug( $tf = TRUE, $mode = 0 )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ($mode > 1) {[m
[32m+[m			[32m$mode -= 2;[m
[32m+[m			[32m$logger = new Debug;[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$logger = new RDefault;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !isset( self::$adapter ) ) {[m
[32m+[m			[32mthrow new RedException( 'Use R::setup() first.' );[m
[32m+[m		[32m}[m
[32m+[m		[32m$logger->setMode($mode);[m
[32m+[m		[32mself::$adapter->getDatabase()->setDebugMode( $tf, $logger );[m
[32m+[m
[32m+[m		[32mreturn $logger;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Turns on the fancy debugger.[m
[32m+[m	[32m * In 'fancy' mode the debugger will output queries with bound[m
[32m+[m	[32m * parameters inside the SQL itself. This method has been added to[m
[32m+[m	[32m * offer a convenient way to activate the fancy debugger system[m
[32m+[m	[32m * in one call.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $toggle TRUE to activate debugger and select 'fancy' mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function fancyDebug( $toggle = TRUE )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::debug( $toggle, 2 );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m* Inspects the database schema. If you pass the type of a bean this[m
[32m+[m	[32m* method will return the fields of its table in the database.[m
[32m+[m	[32m* The keys of this array will be the field names and the values will be[m
[32m+[m	[32m* the column types used to store their values.[m
[32m+[m	[32m* If no type is passed, this method returns a list of all tables in the database.[m
[32m+[m	[32m*[m
[32m+[m	[32m* @param string $type Type of bean (i.e. table) you want to inspect[m
[32m+[m	[32m*[m
[32m+[m	[32m* @return array[m
[32m+[m	[32m*/[m
[32m+[m	[32mpublic static function inspect( $type = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ($type === NULL) ? self::$writer->getTables() : self::$writer->getColumns( $type );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stores a bean in the database. This method takes a[m
[32m+[m	[32m * OODBBean Bean Object $bean and stores it[m
[32m+[m	[32m * in the database. If the database schema is not compatible[m
[32m+[m	[32m * with this bean and RedBean runs in fluid mode the schema[m
[32m+[m	[32m * will be altered to store the bean correctly.[m
[32m+[m	[32m * If the database schema is not compatible with this bean and[m
[32m+[m	[32m * RedBean runs in frozen mode it will throw an exception.[m
[32m+[m	[32m * This function returns the primary key ID of the inserted[m
[32m+[m	[32m * bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The return value is an integer if possible. If it is not possible to[m
[32m+[m	[32m * represent the value as an integer a string will be returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $post = R::dispense('post');[m
[32m+[m	[32m * $post->title = 'my post';[m
[32m+[m	[32m * $id = R::store( $post );[m
[32m+[m	[32m * $post = R::load( 'post', $id );[m
[32m+[m	[32m * R::trash( $post );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, we create a new bean of type 'post'.[m
[32m+[m	[32m * We then set the title of the bean to 'my post' and we[m
[32m+[m	[32m * store the bean. The store() method will return the primary[m
[32m+[m	[32m * key ID $id assigned by the database. We can now use this[m
[32m+[m	[32m * ID to load the bean from the database again and delete it.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the second parameter is set to TRUE and[m
[32m+[m	[32m * Hybrid mode is allowed (default OFF for novice), then RedBeanPHP[m
[32m+[m	[32m * will automatically temporarily switch to fluid mode to attempt to store the[m
[32m+[m	[32m * bean in case of an SQLException.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|SimpleModel $bean             bean to store[m
[32m+[m	[32m * @param boolean              $unfreezeIfNeeded retries in fluid mode in hybrid mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer|string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function store( $bean, $unfreezeIfNeeded = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$result = NULL;[m
[32m+[m		[32mtry {[m
[32m+[m			[32m$result = self::$redbean->store( $bean );[m
[32m+[m		[32m} catch (SQLException $exception) {[m
[32m+[m			[32m$wasFrozen = self::$redbean->isFrozen();[m
[32m+[m			[32mif ( !self::$allowHybridMode || !$unfreezeIfNeeded ) throw $exception;[m
[32m+[m			[32mself::freeze( FALSE );[m
[32m+[m			[32m$result = self::$redbean->store( $bean );[m
[32m+[m			[32mself::freeze( $wasFrozen );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $result;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles fluid or frozen mode. In fluid mode the database[m
[32m+[m	[32m * structure is adjusted to accomodate your objects. In frozen mode[m
[32m+[m	[32m * this is not the case.[m
[32m+[m	[32m *[m
[32m+[m	[32m * You can also pass an array containing a selection of frozen types.[m
[32m+[m	[32m * Let's call this chilly mode, it's just like fluid mode except that[m
[32m+[m	[32m * certain types (i.e. tables) aren't touched.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean|array $tf mode of operation (TRUE means frozen)[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function freeze( $tf = TRUE )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$redbean->freeze( $tf );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads multiple types of beans with the same ID.[m
[32m+[m	[32m * This might look like a strange method, however it can be useful[m
[32m+[m	[32m * for loading a one-to-one relation. In a typical 1-1 relation,[m
[32m+[m	[32m * you have two records sharing the same primary key.[m
[32m+[m	[32m * RedBeanPHP has only limited support for 1-1 relations.[m
[32m+[m	[32m * In general it is recommended to use 1-N for this.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list( $author, $bio ) = R::loadMulti( 'author, bio', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $types the set of types to load at once[m
[32m+[m	[32m * @param mixed        $id    the common ID[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function loadMulti( $types, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn MultiLoader::load( self::$redbean, $types, $id );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads a bean from the object database.[m
[32m+[m	[32m * It searches for a OODBBean Bean Object in the[m
[32m+[m	[32m * database. It does not matter how this bean has been stored.[m
[32m+[m	[32m * RedBean uses the primary key ID $id and the string $type[m
[32m+[m	[32m * to find the bean. The $type specifies what kind of bean you[m
[32m+[m	[32m * are looking for; this is the same type as used with the[m
[32m+[m	[32m * dispense() function. If RedBean finds the bean it will return[m
[32m+[m	[32m * the OODB Bean object; if it cannot find the bean[m
[32m+[m	[32m * RedBean will return a new bean of type $type and with[m
[32m+[m	[32m * primary key ID 0. In the latter case it acts basically the[m
[32m+[m	[32m * same as dispense().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Important note:[m
[32m+[m	[32m * If the bean cannot be found in the database a new bean of[m
[32m+[m	[32m * the specified type will be generated and returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $post = R::dispense('post');[m
[32m+[m	[32m * $post->title = 'my post';[m
[32m+[m	[32m * $id = R::store( $post );[m
[32m+[m	[32m * $post = R::load( 'post', $id );[m
[32m+[m	[32m * R::trash( $post );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, we create a new bean of type 'post'.[m
[32m+[m	[32m * We then set the title of the bean to 'my post' and we[m
[32m+[m	[32m * store the bean. The store() method will return the primary[m
[32m+[m	[32m * key ID $id assigned by the database. We can now use this[m
[32m+[m	[32m * ID to load the bean from the database again and delete it.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type    type of bean you want to load[m
[32m+[m	[32m * @param integer $id      ID of the bean you want to load[m
[32m+[m	[32m * @param string  $snippet string to use after select  (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function load( $type, $id, $snippet = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $snippet !== NULL ) self::$writer->setSQLSelectSnippet( $snippet );[m
[32m+[m		[32m$bean = self::$redbean->load( $type, $id );[m
[32m+[m		[32mreturn $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as load, but selects the bean for update, thus locking the bean.[m
[32m+[m	[32m * This equals an SQL query like 'SELECT ... FROM ... FOR UPDATE'.[m
[32m+[m	[32m * Use this method if you want to load a bean you intend to UPDATE.[m
[32m+[m	[32m * This method should be used to 'LOCK a bean'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean = R::loadForUpdate( 'bean', $id );[m
[32m+[m	[32m * ...update...[m
[32m+[m	[32m * R::store( $bean );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type    type of bean you want to load[m
[32m+[m	[32m * @param integer $id      ID of the bean you want to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function loadForUpdate( $type, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::load( $type, $id, AQueryWriter::C_SELECT_SNIPPET_FOR_UPDATE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as find(), but selects the beans for update, thus locking the beans.[m
[32m+[m	[32m * This equals an SQL query like 'SELECT ... FROM ... FOR UPDATE'.[m
[32m+[m	[32m * Use this method if you want to load a bean you intend to UPDATE.[m
[32m+[m	[32m * This method should be used to 'LOCK a bean'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $bean = R::findForUpdate([m
[32m+[m	[32m *    'bean',[m
[32m+[m	[32m *    ' title LIKE ? ',[m
[32m+[m	[32m *    array('title')[m
[32m+[m	[32m * );[m
[32m+[m	[32m * ...update...[m
[32m+[m	[32m * R::store( $bean );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findForUpdate( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::find( $type, $sql, $bindings, AQueryWriter::C_SELECT_SNIPPET_FOR_UPDATE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience method.[m
[32m+[m	[32m * Same as findForUpdate but returns just one bean and adds LIMIT-clause.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findOneForUpdate( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$sql = self::getWriter()->glueLimitOne( $sql );[m
[32m+[m		[32m$beans = self::findForUpdate($type, $sql, $bindings);[m
[32m+[m		[32mreturn !empty($beans) ? reset($beans) : NULL;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes a bean from the database.[m
[32m+[m	[32m * This function will remove the specified OODBBean[m
[32m+[m	[32m * Bean Object from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This facade method also accepts a type-id combination,[m
[32m+[m	[32m * in the latter case this method will attempt to load the specified bean[m
[32m+[m	[32m * and THEN trash it.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $post = R::dispense('post');[m
[32m+[m	[32m * $post->title = 'my post';[m
[32m+[m	[32m * $id = R::store( $post );[m
[32m+[m	[32m * $post = R::load( 'post', $id );[m
[32m+[m	[32m * R::trash( $post );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, we create a new bean of type 'post'.[m
[32m+[m	[32m * We then set the title of the bean to 'my post' and we[m
[32m+[m	[32m * store the bean. The store() method will return the primary[m
[32m+[m	[32m * key ID $id assigned by the database. We can now use this[m
[32m+[m	[32m * ID to load the bean from the database again and delete it.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|OODBBean|SimpleModel $beanOrType bean you want to remove from database[m
[32m+[m	[32m * @param integer                     $id         ID if the bean to trash (optional, type-id variant only)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function trash( $beanOrType, $id = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_string( $beanOrType ) ) return self::trash( self::load( $beanOrType, $id ) );[m
[32m+[m		[32mreturn self::$redbean->trash( $beanOrType );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dispenses a new RedBean OODB Bean for use with[m
[32m+[m	[32m * the rest of the methods. RedBeanPHP thinks in beans, the bean is the[m
[32m+[m	[32m * primary way to interact with RedBeanPHP and the database managed by[m
[32m+[m	[32m * RedBeanPHP. To load, store and delete data from the database using RedBeanPHP[m
[32m+[m	[32m * you exchange these RedBeanPHP OODB Beans. The only exception to this rule[m
[32m+[m	[32m * are the raw query methods like R::getCell() or R::exec() and so on.[m
[32m+[m	[32m * The dispense method is the 'preferred way' to create a new bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book = R::dispense( 'book' );[m
[32m+[m	[32m * $book->title = 'My Book';[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method can also be used to create an entire bean graph at once.[m
[32m+[m	[32m * Given an array with keys specifying the property names of the beans[m
[32m+[m	[32m * and a special _type key to indicate the type of bean, one can[m
[32m+[m	[32m * make the Dispense Helper generate an entire hierarchy of beans, including[m
[32m+[m	[32m * lists. To make dispense() generate a list, simply add a key like:[m
[32m+[m	[32m * ownXList or sharedXList where X is the type of beans it contains and[m
[32m+[m	[32m * a set its value to an array filled with arrays representing the beans.[m
[32m+[m	[32m * Note that, although the type may have been hinted at in the list name,[m
[32m+[m	[32m * you still have to specify a _type key for every bean array in the list.[m
[32m+[m	[32m * Note that, if you specify an array to generate a bean graph, the number[m
[32m+[m	[32m * parameter will be ignored.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m *  $book = R::dispense( [[m
[32m+[m	[32m *   '_type' => 'book',[m
[32m+[m	[32m *   'title'  => 'Gifted Programmers',[m
[32m+[m	[32m *   'author' => [ '_type' => 'author', 'name' => 'Xavier' ],[m
[32m+[m	[32m *   'ownPageList' => [ ['_type'=>'page', 'text' => '...'] ][m
[32m+[m	[32m * ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $typeOrBeanArray   type or bean array to import[m
[32m+[m	[32m * @param integer      $num               number of beans to dispense[m
[32m+[m	[32m * @param boolean      $alwaysReturnArray if TRUE always returns the result as an array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dispense( $typeOrBeanArray, $num = 1, $alwaysReturnArray = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn DispenseHelper::dispense( self::$redbean, $typeOrBeanArray, $num, $alwaysReturnArray );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Takes a comma separated list of bean types[m
[32m+[m	[32m * and dispenses these beans. For each type in the list[m
[32m+[m	[32m * you can specify the number of beans to be dispensed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list( $book, $page, $text ) = R::dispenseAll( 'book,page,text' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This will dispense a book, a page and a text. This way you can[m
[32m+[m	[32m * quickly dispense beans of various types in just one line of code.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list($book, $pages) = R::dispenseAll('book,page*100');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This returns an array with a book bean and then another array[m
[32m+[m	[32m * containing 100 page beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $order      a description of the desired dispense order using the syntax above[m
[32m+[m	[32m * @param boolean $onlyArrays return only arrays even if amount < 2[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dispenseAll( $order, $onlyArrays = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn DispenseHelper::dispenseAll( self::$redbean, $order, $onlyArrays );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convience method. Tries to find beans of a certain type,[m
[32m+[m	[32m * if no beans are found, it dispenses a bean of that type.[m
[32m+[m	[32m * Note that this function always returns an array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type     type of bean you are looking for[m
[32m+[m	[32m * @param  string $sql      SQL code for finding the bean[m
[32m+[m	[32m * @param  array  $bindings parameters to bind to SQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findOrDispense( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mDispenseHelper::checkType( $type );[m
[32m+[m		[32mreturn self::$finder->findOrDispense( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as findOrDispense but returns just one element.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type     type of bean you are looking for[m
[32m+[m	[32m * @param  string $sql      SQL code for finding the bean[m
[32m+[m	[32m * @param  array  $bindings parameters to bind to SQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findOneOrDispense( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mDispenseHelper::checkType( $type );[m
[32m+[m		[32m$arrayOfBeans = self::findOrDispense( $type, $sql, $bindings );[m
[32m+[m		[32mreturn reset($arrayOfBeans);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds beans using a type and optional SQL statement.[m
[32m+[m	[32m * As with most Query tools in RedBean you can provide values to[m
[32m+[m	[32m * be inserted in the SQL statement by populating the value[m
[32m+[m	[32m * array parameter; you can either use the question mark notation[m
[32m+[m	[32m * or the slot-notation (:keyname).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Your SQL does not have to start with a WHERE-clause condition.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to parameters in query[m
[32m+[m	[32m * @param string $snippet  SQL snippet to include in query (for example: FOR UPDATE)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @phpstan-param literal-string|null $sql[m
[32m+[m	[32m * @psalm-param   literal-string|null $sql[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function find( $type, $sql = NULL, $bindings = array(), $snippet = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $snippet !== NULL ) self::$writer->setSQLSelectSnippet( $snippet );[m
[32m+[m		[32mreturn self::$finder->find( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Alias for find().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findAll( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->find( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like find() but also exports the beans as an array.[m
[32m+[m	[32m * This method will perform a find-operation. For every bean[m
[32m+[m	[32m * in the result collection this method will call the export() method.[m
[32m+[m	[32m * This method returns an array containing the array representations[m
[32m+[m	[32m * of every bean in the result set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type   the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      sql    SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findAndExport( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findAndExport( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Like R::find() but returns the first bean only.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findOne( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findOne( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated[m
[32m+[m	[32m *[m
[32m+[m	[32m * Like find() but returns the last bean of the result array.[m
[32m+[m	[32m * Opposite of Finder::findLast().[m
[32m+[m	[32m * If no beans are found, this method will return NULL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Please do not use this function, it is horribly ineffective.[m
[32m+[m	[32m * Instead use a reversed ORDER BY clause and a LIMIT 1 with R::findOne().[m
[32m+[m	[32m * This function should never be used and only remains for[m
[32m+[m	[32m * the sake of backward compatibility.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see Finder::find[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findLast( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findLast( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Finds a BeanCollection using the repository.[m
[32m+[m	[32m * A bean collection can be used to retrieve one bean at a time using[m
[32m+[m	[32m * cursors - this is useful for processing large datasets. A bean collection[m
[32m+[m	[32m * will not load all beans into memory all at once, just one at a time.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $type     the type of bean you are looking for[m
[32m+[m	[32m * @param  string $sql      SQL query to find the desired bean, starting right after WHERE clause[m
[32m+[m	[32m * @param  array  $bindings values array of values to be bound to parameters in query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return BeanCollection[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findCollection( $type, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findCollection( $type, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a hashmap with bean arrays keyed by type using an SQL[m
[32m+[m	[32m * query as its resource. Given an SQL query like 'SELECT movie.*, review.* FROM movie... JOIN review'[m
[32m+[m	[32m * this method will return movie and review beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $stuff = $finder->findMulti('movie,review', '[m
[32m+[m	[32m *          SELECT movie.*, review.* FROM movie[m
[32m+[m	[32m *          LEFT JOIN review ON review.movie_id = movie.id');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * After this operation, $stuff will contain an entry 'movie' containing all[m
[32m+[m	[32m * movies and an entry named 'review' containing all reviews (all beans).[m
[32m+[m	[32m * You can also pass bindings.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you want to re-map your beans, so you can use $movie->ownReviewList without[m
[32m+[m	[32m * having RedBeanPHP executing an SQL query you can use the fourth parameter to[m
[32m+[m	[32m * define a selection of remapping closures.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The remapping argument (optional) should contain an array of arrays.[m
[32m+[m	[32m * Each array in the remapping array should contain the following entries:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 	'a'       => TYPE A[m
[32m+[m	[32m *    'b'       => TYPE B[m
[32m+[m	[32m *    'matcher' => MATCHING FUNCTION ACCEPTING A, B and ALL BEANS[m
[32m+[m	[32m *    'do'      => OPERATION FUNCTION ACCEPTING A, B, ALL BEANS, ALL REMAPPINGS[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Using this mechanism you can build your own 'preloader' with tiny function[m
[32m+[m	[32m * snippets (and those can be re-used and shared online of course).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array([m
[32m+[m	[32m * 	'a'       => 'movie'     //define A as movie[m
[32m+[m	[32m *    'b'       => 'review'    //define B as review[m
[32m+[m	[32m *    'matcher' => function( $a, $b ) {[m
[32m+[m	[32m *       return ( $b->movie_id == $a->id );  //Perform action if review.movie_id equals movie.id[m
[32m+[m	[32m *    }[m
[32m+[m	[32m *    'do'      => function( $a, $b ) {[m
[32m+[m	[32m *       $a->noLoad()->ownReviewList[] = $b; //Add the review to the movie[m
[32m+[m	[32m *       $a->clearHistory();                 //optional, act 'as if these beans have been loaded through ownReviewList'.[m
[32m+[m	[32m *    }[m
[32m+[m	[32m * )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note the SQL query provided IS NOT THE ONE used internally by this function,[m
[32m+[m	[32m * this function will pre-process the query to get all the data required to find the beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note if you use the 'book.*' notation make SURE you're[m
[32m+[m	[32m * selector starts with a SPACE. ' book.*' NOT ',book.*'. This is because[m
[32m+[m	[32m * it's actually an SQL-like template SLOT, not real SQL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note instead of an SQL query you can pass a result array as well.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $types         a list of types (either array or comma separated string)[m
[32m+[m	[32m * @param string|array $sql           an SQL query or an array of prefetched records[m
[32m+[m	[32m * @param array        $bindings      optional, bindings for SQL query[m
[32m+[m	[32m * @param array        $remappings    optional, an array of remapping arrays[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findMulti( $types, $sql, $bindings = array(), $remappings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findMulti( $types, $sql, $bindings, $remappings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns an array of beans. Pass a type and a series of ids and[m
[32m+[m	[32m * this method will bring you the corresponding beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * important note: Because this method loads beans using the load()[m
[32m+[m	[32m * function (but faster) it will return empty beans with ID 0 for[m
[32m+[m	[32m * every bean that could not be located. The resulting beans will have the[m
[32m+[m	[32m * passed IDs as their keys.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans[m
[32m+[m	[32m * @param array  $ids  ids to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function batch( $type, $ids )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$redbean->batch( $type, $ids );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Alias for batch(). Batch method is older but since we added so-called *All[m
[32m+[m	[32m * methods like storeAll, trashAll, dispenseAll and findAll it seemed logical to[m
[32m+[m	[32m * improve the consistency of the Facade API and also add an alias for batch() called[m
[32m+[m	[32m * loadAll.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of beans[m
[32m+[m	[32m * @param array  $ids  ids to load[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function loadAll( $type, $ids )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$redbean->batch( $type, $ids );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to execute Queries directly.[m
[32m+[m	[32m * Executes SQL.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql       SQL query to execute[m
[32m+[m	[32m * @param array  $bindings  a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function exec( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'exec', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns all rows[m
[32m+[m	[32m * and all columns.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getAll( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'get', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns a single cell.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getCell( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getCell', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns a PDOCursor instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return RedBeanPHP\Cursor\PDOCursor[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getCursor( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getCursor', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns a single row.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getRow( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getRow', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns a single column.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getCol( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getCol', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to execute Queries directly.[m
[32m+[m	[32m * Executes SQL.[m
[32m+[m	[32m * Results will be returned as an associative array. The first[m
[32m+[m	[32m * column in the select clause will be used for the keys in this array and[m
[32m+[m	[32m * the second column will be used for the values. If only one column is[m
[32m+[m	[32m * selected in the query, both key and value of the array will have the[m
[32m+[m	[32m * value of this field for each row.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getAssoc( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getAssoc', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *Convenience function to fire an SQL query using the RedBeanPHP[m
[32m+[m	[32m * database adapter. This method allows you to directly query the[m
[32m+[m	[32m * database without having to obtain an database adapter instance first.[m
[32m+[m	[32m * Executes the specified SQL query together with the specified[m
[32m+[m	[32m * parameter bindings and returns an associative array.[m
[32m+[m	[32m * Results will be returned as an associative array indexed by the first[m
[32m+[m	[32m * column in the select.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $sql      SQL query to execute[m
[32m+[m	[32m * @param array  $bindings a list of values to be bound to query parameters[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getAssocRow( $sql, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::query( 'getAssocRow', $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the insert ID for databases that support/require this[m
[32m+[m	[32m * functionality. Alias for R::getAdapter()->getInsertID().[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getInsertID()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$adapter->getInsertID();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Makes a copy of a bean. This method makes a deep copy[m
[32m+[m	[32m * of the bean.The copy will have the following features.[m
[32m+[m	[32m * - All beans in own-lists will be duplicated as well[m
[32m+[m	[32m * - All references to shared beans will be copied but not the shared beans themselves[m
[32m+[m	[32m * - All references to parent objects (_id fields) will be copied but not the parents themselves[m
[32m+[m	[32m * In most cases this is the desired scenario for copying beans.[m
[32m+[m	[32m * This function uses a trail-array to prevent infinite recursion, if a recursive bean is found[m
[32m+[m	[32m * (i.e. one that already has been processed) the ID of the bean will be returned.[m
[32m+[m	[32m * This should not happen though.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * This function does a reflectional database query so it may be slow.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @deprecated[m
[32m+[m	[32m * This function is deprecated in favour of R::duplicate().[m
[32m+[m	[32m * This function has a confusing method signature, the R::duplicate() function[m
[32m+[m	[32m * only accepts two arguments: bean and filters.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean    bean to be copied[m
[32m+[m	[32m * @param array    $trail   for internal usage, pass array()[m
[32m+[m	[32m * @param boolean  $pid     for internal usage[m
[32m+[m	[32m * @param array    $filters white list filter with bean types to duplicate[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dup( $bean, $trail = array(), $pid = FALSE, $filters = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$duplicationManager->setFilters( $filters );[m
[32m+[m		[32mreturn self::$duplicationManager->dup( $bean, $trail, $pid );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Makes a deep copy of a bean. This method makes a deep copy[m
[32m+[m	[32m * of the bean.The copy will have the following:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * All beans in own-lists will be duplicated as well[m
[32m+[m	[32m * * All references to shared beans will be copied but not the shared beans themselves[m
[32m+[m	[32m * * All references to parent objects (_id fields) will be copied but not the parents themselves[m
[32m+[m	[32m *[m
[32m+[m	[32m * In most cases this is the desired scenario for copying beans.[m
[32m+[m	[32m * This function uses a trail-array to prevent infinite recursion, if a recursive bean is found[m
[32m+[m	[32m * (i.e. one that already has been processed) the ID of the bean will be returned.[m
[32m+[m	[32m * This should not happen though.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * This function does a reflectional database query so it may be slow.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * This is a simplified version of the deprecated R::dup() function.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean  bean to be copied[m
[32m+[m	[32m * @param array    $white white list filter with bean types to duplicate[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function duplicate( $bean, $filters = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::dup( $bean, array(), FALSE, $filters );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exports a collection of beans. Handy for XML/JSON exports with a[m
[32m+[m	[32m * Javascript framework like Dojo or ExtJS.[m
[32m+[m	[32m * What will be exported:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * contents of the bean[m
[32m+[m	[32m * * all own bean lists (recursively)[m
[32m+[m	[32m * * all shared beans (not THEIR own lists)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param    array|OODBBean $beans   beans to be exported[m
[32m+[m	[32m * @param    boolean        $parents whether you want parent beans to be exported[m
[32m+[m	[32m * @param    array          $filters whitelist of types[m
[32m+[m	[32m * @param    boolean        $meta      export meta data as well[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function exportAll( $beans, $parents = FALSE, $filters = array(), $meta = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$duplicationManager->exportAll( $beans, $parents, $filters, self::$exportCaseStyle, $meta );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects case style for export.[m
[32m+[m	[32m * This will determine the case style for the keys of exported beans (see exportAll).[m
[32m+[m	[32m * The following options are accepted:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * 'default' RedBeanPHP by default enforces Snake Case (i.e. book_id is_valid )[m
[32m+[m	[32m * * 'camel'   Camel Case   (i.e. bookId isValid   )[m
[32m+[m	[32m * * 'dolphin' Dolphin Case (i.e. bookID isValid   ) Like CamelCase but ID is written all uppercase[m
[32m+[m	[32m *[m
[32m+[m	[32m * @warning RedBeanPHP transforms camelCase to snake_case using a slightly different[m
[32m+[m	[32m * algorithm, it also converts isACL to is_acl (not is_a_c_l) and bookID to book_id.[m
[32m+[m	[32m * Due to information loss this cannot be corrected. However if you might try[m
[32m+[m	[32m * DolphinCase for IDs it takes into account the exception concerning IDs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $caseStyle case style identifier[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useExportCase( $caseStyle = 'default' )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !in_array( $caseStyle, array( 'default', 'camel', 'dolphin' ) ) ) throw new RedException( 'Invalid case selected.' );[m
[32m+[m		[32mself::$exportCaseStyle = $caseStyle;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Converts a series of rows to beans.[m
[32m+[m	[32m * This method converts a series of rows to beans.[m
[32m+[m	[32m * The type of the desired output beans can be specified in the[m
[32m+[m	[32m * first parameter. The second parameter is meant for the database[m
[32m+[m	[32m * result rows.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $rows = R::getAll( 'SELECT * FROM ...' )[m
[32m+[m	[32m * $beans = R::convertToBeans( $rows );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * As of version 4.3.2 you can specify a meta-mask.[m
[32m+[m	[32m * Data from columns with names starting with the value specified in the mask[m
[32m+[m	[32m * will be transferred to the meta section of a bean (under data.bundle).[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $rows = R::getAll( 'SELECT FROM... COUNT(*) AS extra_count ...' );[m
[32m+[m	[32m * $beans = R::convertToBeans( $rows, 'extra_' );[m
[32m+[m	[32m * $bean = reset( $beans );[m
[32m+[m	[32m * $data = $bean->getMeta( 'data.bundle' );[m
[32m+[m	[32m * $extra_count = $data['extra_count'];[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * New in 4.3.2: meta mask. The meta mask is a special mask to send[m
[32m+[m	[32m * data from raw result rows to the meta store of the bean. This is[m
[32m+[m	[32m * useful for bundling additional information with custom queries.[m
[32m+[m	[32m * Values of every column whos name starts with $mask will be[m
[32m+[m	[32m * transferred to the meta section of the bean under key 'data.bundle'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of beans to produce[m
[32m+[m	[32m * @param array  $rows     must contain an array of array[m
[32m+[m	[32m * @param string $metamask meta mask to apply (optional)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function convertToBeans( $type, $rows, $metamask = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$redbean->convertToBeans( $type, $rows, $metamask );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Just like converToBeans, but for one bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type      type of bean to produce[m
[32m+[m	[32m * @param array  $row       one row from the database[m
[32m+[m	[32m * @param string $metamask  metamask (see convertToBeans)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function convertToBean( $type, $row, $metamask = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !count( $row ) ) return NULL;[m
[32m+[m		[32m$beans = self::$redbean->convertToBeans( $type, array( $row ), $metamask );[m
[32m+[m		[32m$bean  = reset( $beans );[m
[32m+[m		[32mreturn $bean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience function to 'find' beans from an SQL query.[m
[32m+[m	[32m * Used mostly to obtain a series of beans as well as[m
[32m+[m	[32m * pagination data (to paginate results) and optionally[m
[32m+[m	[32m * other data as well (that should not be considered part of[m
[32m+[m	[32m * a bean).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m *  $books = R::findFromSQL('book',"[m
[32m+[m	[32m *  SELECT *, count(*) OVER() AS total[m
[32m+[m	[32m *  FROM book[m
[32m+[m	[32m *  WHERE {$filter}[m
[32m+[m	[32m *  OFFSET {$from} LIMIT {$to} ", ['total']);[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is the same as doing (example uses PostgreSQL dialect):[m
[32m+[m	[32m *[m
[32m+[m	[32m *  $rows = R::getAll("[m
[32m+[m	[32m *  SELECT *, count(*) OVER() AS total[m
[32m+[m	[32m *  FROM book[m
[32m+[m	[32m *  WHERE {$filter}[m
[32m+[m	[32m *  OFFSET {$from} LIMIT {$to}[m
[32m+[m	[32m *  ", $params);[m
[32m+[m	[32m *  $books = R::convertToBeans('book', $rows, ['total']);[m
[32m+[m	[32m *[m
[32m+[m	[32m * The additional data can be obtained using:[m
[32m+[m	[32m *[m
[32m+[m	[32m * $book->info('total');[m
[32m+[m	[32m *[m
[32m+[m	[32m * For further details see R::convertToBeans().[m
[32m+[m	[32m * If you set $autoExtract to TRUE and meta mask is an array,[m
[32m+[m	[32m * an array will be returned containing two nested arrays, the[m
[32m+[m	[32m * first of those nested arrays will contain the meta values[m
[32m+[m	[32m * you requested, the second array will contain the beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $type        Type of bean to produce[m
[32m+[m	[32m * @param string  $sql         SQL query snippet to use[m
[32m+[m	[32m * @param array   $bindings    bindings for query (optional)[m
[32m+[m	[32m * @param mixed   $metamask    meta mask (optional, defaults to 'extra_')[m
[32m+[m	[32m * @param boolean $autoExtract TRUE to return meta mask values as first item of array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findFromSQL( $type, $sql, $bindings = array(), $metamask = 'extra_', $autoExtract = false) {[m
[32m+[m		[32m$rows = self::query( 'get', $sql, $bindings );[m
[32m+[m		[32m$beans = array();[m
[32m+[m		[32mif (count($rows)) $beans = self::$redbean->convertToBeans( $type, $rows, $metamask );[m
[32m+[m		[32mif ($autoExtract && is_array($metamask)) {[m
[32m+[m			[32m$values = array();[m
[32m+[m			[32m$firstBean = NULL;[m
[32m+[m			[32mif (count($beans)) $firstBean = reset($beans);[m
[32m+[m			[32mforeach($metamask as $key) {[m
[32m+[m				[32m$values[$key] = ($firstBean) ? $firstBean->info($key) : NULL;[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn array( $values, $beans );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $beans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tests whether a bean has been associated with one ore more[m
[32m+[m	[32m * of the listed tags. If the third parameter is TRUE this method[m
[32m+[m	[32m * will return TRUE only if all tags that have been specified are indeed[m
[32m+[m	[32m * associated with the given bean, otherwise FALSE.[m
[32m+[m	[32m * If the third parameter is FALSE this[m
[32m+[m	[32m * method will return TRUE if one of the tags matches, FALSE if none[m
[32m+[m	[32m * match.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::hasTag( $blog, 'horror,movie', TRUE );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above returns TRUE if the $blog bean has been tagged[m
[32m+[m	[32m * as BOTH horror and movie. If the post has only been tagged as 'movie'[m
[32m+[m	[32m * or 'horror' this operation will return FALSE because the third parameter[m
[32m+[m	[32m * has been set to TRUE.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  OODBBean     $bean bean to check for tags[m
[32m+[m	[32m * @param  array|string $tags list of tags[m
[32m+[m	[32m * @param  boolean      $all  whether they must all match or just some[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function hasTag( $bean, $tags, $all = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->hasTag( $bean, $tags, $all );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Removes all specified tags from the bean. The tags specified in[m
[32m+[m	[32m * the second parameter will no longer be associated with the bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::untag( $blog, 'smart,interesting' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above, the $blog bean will no longer[m
[32m+[m	[32m * be associated with the tags 'smart' and 'interesting'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  OODBBean $bean    tagged bean[m
[32m+[m	[32m * @param  array    $tagList list of tags (names)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function untag( $bean, $tagList )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$tagManager->untag( $bean, $tagList );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tags a bean or returns tags associated with a bean.[m
[32m+[m	[32m * If $tagList is NULL or omitted this method will return a[m
[32m+[m	[32m * comma separated list of tags associated with the bean provided.[m
[32m+[m	[32m * If $tagList is a comma separated list (string) of tags all tags will[m
[32m+[m	[32m * be associated with the bean.[m
[32m+[m	[32m * You may also pass an array instead of a string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::tag( $meal, "TexMex,Mexican" );[m
[32m+[m	[32m * $tags = R::tag( $meal );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The first line in the example above will tag the $meal[m
[32m+[m	[32m * as 'TexMex' and 'Mexican Cuisine'. The second line will[m
[32m+[m	[32m * retrieve all tags attached to the meal object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean    bean to tag[m
[32m+[m	[32m * @param mixed    $tagList tags to attach to the specified bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function tag( OODBBean $bean, $tagList = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->tag( $bean, $tagList );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Adds tags to a bean.[m
[32m+[m	[32m * If $tagList is a comma separated list of tags all tags will[m
[32m+[m	[32m * be associated with the bean.[m
[32m+[m	[32m * You may also pass an array instead of a string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::addTags( $blog, ["halloween"] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example adds the tag 'halloween' to the $blog[m
[32m+[m	[32m * bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean    bean to tag[m
[32m+[m	[32m * @param array    $tagList list of tags to add to bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function addTags( OODBBean $bean, $tagList )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$tagManager->addTags( $bean, $tagList );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all beans that have been tagged with one or more[m
[32m+[m	[32m * of the specified tags.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $watchList = R::tagged([m
[32m+[m	[32m *   'movie',[m
[32m+[m	[32m *   'horror,gothic',[m
[32m+[m	[32m *   ' ORDER BY movie.title DESC LIMIT ?',[m
[32m+[m	[32m *   [ 10 ][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example uses R::tagged() to find all movies that have been[m
[32m+[m	[32m * tagged as 'horror' or 'gothic', order them by title and limit[m
[32m+[m	[32m * the number of movies to be returned to 10.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional SQL (use only for pagination)[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function tagged( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->tagged( $beanType, $tagList, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all beans that have been tagged with ALL of the tags given.[m
[32m+[m	[32m * This method works the same as R::tagged() except that this method only returns[m
[32m+[m	[32m * beans that have been tagged with all the specified labels.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Tag list can be either an array with tag names or a comma separated list[m
[32m+[m	[32m * of tag names.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $watchList = R::taggedAll([m
[32m+[m	[32m *    'movie',[m
[32m+[m	[32m *    [ 'gothic', 'short' ],[m
[32m+[m	[32m *    ' ORDER BY movie.id DESC LIMIT ? ',[m
[32m+[m	[32m *    [ 4 ][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above returns at most 4 movies (due to the LIMIT clause in the SQL[m
[32m+[m	[32m * Query Snippet) that have been tagged as BOTH 'short' AND 'gothic'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function taggedAll( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->taggedAll( $beanType, $tagList, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as taggedAll() but counts beans only (does not return beans).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see R::taggedAll[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function countTaggedAll( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->countTaggedAll( $beanType, $tagList, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Same as tagged() but counts beans only (does not return beans).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @see R::tagged[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string       $beanType type of bean you are looking for[m
[32m+[m	[32m * @param array|string $tagList  list of tags to match[m
[32m+[m	[32m * @param string       $sql      additional sql snippet[m
[32m+[m	[32m * @param array        $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function countTagged( $beanType, $tagList, $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tagManager->countTagged( $beanType, $tagList, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Wipes all beans of type $beanType.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $beanType type of bean you want to destroy entirely[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function wipe( $beanType )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Facade::$redbean->wipe( $beanType );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts the number of beans of type $type.[m
[32m+[m	[32m * This method accepts a second argument to modify the count-query.[m
[32m+[m	[32m * A third argument can be used to provide bindings for the SQL snippet.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type     type of bean we are looking for[m
[32m+[m	[32m * @param string $addSQL   additional SQL snippet[m
[32m+[m	[32m * @param array  $bindings parameters to bind to SQL[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function count( $type, $addSQL = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Facade::$redbean->count( $type, $addSQL, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Configures the facade, want to have a new Writer? A new Object Database or a new[m
[32m+[m	[32m * Adapter and you want it on-the-fly? Use this method to hot-swap your facade with a new[m
[32m+[m	[32m * toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $tb toolbox to configure facade with[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function configureFacadeWithToolbox( ToolBox $tb )[m
[32m+[m	[32m{[m
[32m+[m		[32m$oldTools                 = self::$toolbox;[m
[32m+[m		[32mself::$toolbox            = $tb;[m
[32m+[m		[32mself::$writer             = self::$toolbox->getWriter();[m
[32m+[m		[32mself::$adapter            = self::$toolbox->getDatabaseAdapter();[m
[32m+[m		[32mself::$redbean            = self::$toolbox->getRedBean();[m
[32m+[m		[32mself::$finder             = new Finder( self::$toolbox );[m
[32m+[m		[32mself::$associationManager = new AssociationManager( self::$toolbox );[m
[32m+[m		[32mself::$tree               = new Tree( self::$toolbox );[m
[32m+[m		[32mself::$redbean->setAssociationManager( self::$associationManager );[m
[32m+[m		[32mself::$labelMaker         = new LabelMaker( self::$toolbox );[m
[32m+[m		[32m$helper                   = new SimpleModelHelper();[m
[32m+[m		[32m$helper->attachEventListeners( self::$redbean );[m
[32m+[m		[32mif (self::$redbean->getBeanHelper() == NULL) {[m
[32m+[m			[32mself::$redbean->setBeanHelper( new SimpleFacadeBeanHelper );[m
[32m+[m		[32m}[m
[32m+[m		[32mself::$duplicationManager = new DuplicationManager( self::$toolbox );[m
[32m+[m		[32mself::$tagManager         = new TagManager( self::$toolbox );[m
[32m+[m		[32mreturn $oldTools;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Facade Convience method for adapter transaction system.[m
[32m+[m	[32m * Begins a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::begin();[m
[32m+[m	[32m * try {[m
[32m+[m	[32m *  $bean1 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean1 );[m
[32m+[m	[32m *  $bean2 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean2 );[m
[32m+[m	[32m *  R::commit();[m
[32m+[m	[32m * } catch( \Exception $e ) {[m
[32m+[m	[32m *  R::rollback();[m
[32m+[m	[32m * }[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how transactions in RedBeanPHP are used.[m
[32m+[m	[32m * In this example 2 beans are stored or nothing is stored at all.[m
[32m+[m	[32m * It's not possible for this piece of code to store only half of the beans.[m
[32m+[m	[32m * If an exception occurs, the transaction gets rolled back and the database[m
[32m+[m	[32m * will be left 'untouched'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In fluid mode transactions will be ignored and all queries will[m
[32m+[m	[32m * be executed as-is because database schema changes will automatically[m
[32m+[m	[32m * trigger the transaction system to commit everything in some database[m
[32m+[m	[32m * systems. If you use a database that can handle DDL changes you might wish[m
[32m+[m	[32m * to use setAllowFluidTransactions(TRUE). If you do this, the behavior of[m
[32m+[m	[32m * this function in fluid mode will depend on the database platform used.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return bool[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function begin()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;[m
[32m+[m		[32mself::$adapter->startTransaction();[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Facade Convience method for adapter transaction system.[m
[32m+[m	[32m * Commits a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::begin();[m
[32m+[m	[32m * try {[m
[32m+[m	[32m *  $bean1 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean1 );[m
[32m+[m	[32m *  $bean2 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean2 );[m
[32m+[m	[32m *  R::commit();[m
[32m+[m	[32m * } catch( \Exception $e ) {[m
[32m+[m	[32m *  R::rollback();[m
[32m+[m	[32m * }[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how transactions in RedBeanPHP are used.[m
[32m+[m	[32m * In this example 2 beans are stored or nothing is stored at all.[m
[32m+[m	[32m * It's not possible for this piece of code to store only half of the beans.[m
[32m+[m	[32m * If an exception occurs, the transaction gets rolled back and the database[m
[32m+[m	[32m * will be left 'untouched'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In fluid mode transactions will be ignored and all queries will[m
[32m+[m	[32m * be executed as-is because database schema changes will automatically[m
[32m+[m	[32m * trigger the transaction system to commit everything in some database[m
[32m+[m	[32m * systems. If you use a database that can handle DDL changes you might wish[m
[32m+[m	[32m * to use setAllowFluidTransactions(TRUE). If you do this, the behavior of[m
[32m+[m	[32m * this function in fluid mode will depend on the database platform used.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return bool[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function commit()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;[m
[32m+[m		[32mself::$adapter->commit();[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Facade Convience method for adapter transaction system.[m
[32m+[m	[32m * Rolls back a transaction.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::begin();[m
[32m+[m	[32m * try {[m
[32m+[m	[32m *  $bean1 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean1 );[m
[32m+[m	[32m *  $bean2 = R::dispense( 'bean' );[m
[32m+[m	[32m *  R::store( $bean2 );[m
[32m+[m	[32m *  R::commit();[m
[32m+[m	[32m * } catch( \Exception $e ) {[m
[32m+[m	[32m *  R::rollback();[m
[32m+[m	[32m * }[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above illustrates how transactions in RedBeanPHP are used.[m
[32m+[m	[32m * In this example 2 beans are stored or nothing is stored at all.[m
[32m+[m	[32m * It's not possible for this piece of code to store only half of the beans.[m
[32m+[m	[32m * If an exception occurs, the transaction gets rolled back and the database[m
[32m+[m	[32m * will be left 'untouched'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In fluid mode transactions will be ignored and all queries will[m
[32m+[m	[32m * be executed as-is because database schema changes will automatically[m
[32m+[m	[32m * trigger the transaction system to commit everything in some database[m
[32m+[m	[32m * systems. If you use a database that can handle DDL changes you might wish[m
[32m+[m	[32m * to use setAllowFluidTransactions(TRUE). If you do this, the behavior of[m
[32m+[m	[32m * this function in fluid mode will depend on the database platform used.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return bool[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function rollback()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;[m
[32m+[m		[32mself::$adapter->rollback();[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a list of columns. Format of this array:[m
[32m+[m	[32m * array( fieldname => type )[m
[32m+[m	[32m * Note that this method only works in fluid mode because it might be[m
[32m+[m	[32m * quite heavy on production servers![m
[32m+[m	[32m *[m
[32m+[m	[32m * @param  string $table name of the table (not type) you want to get columns of[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getColumns( $table )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$writer->getColumns( $table );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Generates question mark slots for an array of values.[m
[32m+[m	[32m * Given an array and an optional template string this method[m
[32m+[m	[32m * will produce string containing parameter slots for use in[m
[32m+[m	[32m * an SQL query string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::genSlots( array( 'a', 'b' ) );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The statement in the example will produce the string:[m
[32m+[m	[32m * '?,?'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Another example, using a template string:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::genSlots( array('a', 'b'), ' IN( %s ) ' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The statement in the example will produce the string:[m
[32m+[m	[32m * ' IN( ?,? ) '.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array  $array    array to generate question mark slots for[m
[32m+[m	[32m * @param string $template template to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function genSlots( $array, $template = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ArrayTool::genSlots( $array, $template );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Convenience method to quickly attach parent beans.[m
[32m+[m	[32m * Although usually this can also be done with findMulti(), that[m
[32m+[m	[32m * approach can be a bit verbose sometimes. This convenience method[m
[32m+[m	[32m * uses a default yet overridable SQL snippet to perform the[m
[32m+[m	[32m * operation, leveraging the power of findMulti().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $users = R::find('user');[m
[32m+[m	[32m * $users = R::loadJoined( $users, 'country' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This is an alternative for:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $all = R::findMulti('country',[m
[32m+[m	[32m *    R::genSlots( $users,[m
[32m+[m	[32m *       'SELECT country.* FROM country WHERE id IN ( %s )' ),[m
[32m+[m	[32m *    array_column( $users, 'country_id' ),[m
[32m+[m	[32m *    [Finder::onmap('country', $gebruikers)][m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array  $beans       a list of OODBBeans[m
[32m+[m	[32m * @param string $type        a type string[m
[32m+[m	[32m * @param string $sqlTemplate an SQL template string for the SELECT-query[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function loadJoined( $beans, $type, $sqlTemplate = 'SELECT %s.* FROM %s WHERE id IN (%s)' )[m
[32m+[m	[32m{[m
[32m+[m		[32mif (!count($beans)) return array();[m
[32m+[m		[32m$ids  = array();[m
[32m+[m		[32m$key  = "{$type}_id";[m
[32m+[m		[32mforeach( $beans as $bean ) $ids[] = $bean->{$key};[m
[32m+[m		[32m$result = self::findMulti($type, self::genSlots( $beans,sprintf($sqlTemplate, $type, $type, '%s')), $ids, array( Finder::onmap($type, $beans) ) );[m
[32m+[m		[32m$bean = reset($beans);[m
[32m+[m		[32mreturn $result[ $bean->getMeta('type') ];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Flattens a multi dimensional bindings array for use with genSlots().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::flat( array( 'a', array( 'b' ), 'c' ) );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * produces an array like: [ 'a', 'b', 'c' ][m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $array  array to flatten[m
[32m+[m	[32m * @param array $result result array parameter (for recursion)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function flat( $array, $result = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn ArrayTool::flat( $array, $result );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Nukes the entire database.[m
[32m+[m	[32m * This will remove all schema structures from the database.[m
[32m+[m	[32m * Only works in fluid mode. Be careful with this method.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @warning dangerous method, will remove all tables, columns etc.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function nuke()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::wipeAll( TRUE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Truncates or drops all database tables/views.[m
[32m+[m	[32m * Empties the database. If the deleteTables flag is set to TRUE[m
[32m+[m	[32m * this function will also remove the database structures.[m
[32m+[m	[32m * The latter only works in fluid mode.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $alsoDeleteTables TRUE to clear entire database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function wipeAll( $alsoDeleteTables = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $alsoDeleteTables ) {[m
[32m+[m			[32mif ( !self::$redbean->isFrozen() ) {[m
[32m+[m				[32mself::$writer->wipeAll();[m
[32m+[m			[32m}[m
[32m+[m		[32m} else {[m
[32m+[m			[32mforeach ( self::$writer->getTables() as $table ) {[m
[32m+[m				[32mself::wipe( $table );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Short hand function to store a set of beans at once, IDs will be[m
[32m+[m	[32m * returned as an array. For information please consult the R::store()[m
[32m+[m	[32m * function.[m
[32m+[m	[32m * A loop saver.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the second parameter is set to TRUE and[m
[32m+[m	[32m * Hybrid mode is allowed (default OFF for novice), then RedBeanPHP[m
[32m+[m	[32m * will automatically temporarily switch to fluid mode to attempt to store the[m
[32m+[m	[32m * bean in case of an SQLException.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array   $beans            list of beans to be stored[m
[32m+[m	[32m * @param boolean $unfreezeIfNeeded retries in fluid mode in hybrid mode[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function storeAll( $beans, $unfreezeIfNeeded = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$ids = array();[m
[32m+[m		[32mforeach ( $beans as $bean ) {[m
[32m+[m			[32m$ids[] = self::store( $bean, $unfreezeIfNeeded );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $ids;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Short hand function to trash a set of beans at once.[m
[32m+[m	[32m * For information please consult the R::trash() function.[m
[32m+[m	[32m * A loop saver.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $beans list of beans to be trashed[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function trashAll( $beans )[m
[32m+[m	[32m{[m
[32m+[m		[32m$numberOfDeletion = 0;[m
[32m+[m		[32mforeach ( $beans as $bean ) {[m
[32m+[m			[32m$numberOfDeletion += self::trash( $bean );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $numberOfDeletion;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Short hand function to trash a series of beans using[m
[32m+[m	[32m * only IDs. This function combines trashAll and batch loading[m
[32m+[m	[32m * in one call. Note that while this function accepts just[m
[32m+[m	[32m * bean IDs, the beans will still be loaded first. This is because[m
[32m+[m	[32m * the function still respects all the FUSE hooks that may have beeb[m
[32m+[m	[32m * associated with the domain logic associated with these beans.[m
[32m+[m	[32m * If you really want to delete just records from the database use[m
[32m+[m	[32m * a simple DELETE-FROM SQL query instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string type  $type the bean type you wish to trash[m
[32m+[m	[32m * @param string array $ids  list of bean IDs[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function trashBatch( $type, $ids )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::trashAll( self::batch( $type, $ids ) );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Short hand function to find and trash beans.[m
[32m+[m	[32m * This function combines trashAll and find.[m
[32m+[m	[32m * Given a bean type, a query snippet and optionally some parameter[m
[32m+[m	[32m * bindings, this function will search for the beans described in the[m
[32m+[m	[32m * query and its parameters and then feed them to the trashAll function[m
[32m+[m	[32m * to be trashed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note that while this function accepts just[m
[32m+[m	[32m * a bean type and query snippet, the beans will still be loaded first. This is because[m
[32m+[m	[32m * the function still respects all the FUSE hooks that may have been[m
[32m+[m	[32m * associated with the domain logic associated with these beans.[m
[32m+[m	[32m * If you really want to delete just records from the database use[m
[32m+[m	[32m * a simple DELETE-FROM SQL query instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns the number of beans deleted.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type       bean type to look for in database[m
[32m+[m	[32m * @param string $sqlSnippet an SQL query snippet[m
[32m+[m	[32m * @param array  $bindings   SQL parameter bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return int[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function hunt( $type, $sqlSnippet = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$numberOfTrashedBeans = 0;[m
[32m+[m		[32m$beans = self::findCollection( $type, $sqlSnippet, $bindings );[m
[32m+[m		[32mwhile( $bean = $beans->next() ) {[m
[32m+[m			[32mself::trash( $bean );[m
[32m+[m			[32m$numberOfTrashedBeans++;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $numberOfTrashedBeans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles Writer Cache.[m
[32m+[m	[32m * Turns the Writer Cache on or off. The Writer Cache is a simple[m
[32m+[m	[32m * query based caching system that may improve performance without the need[m
[32m+[m	[32m * for cache management. This caching system will cache non-modifying queries[m
[32m+[m	[32m * that are marked with special SQL comments. As soon as a non-marked query[m
[32m+[m	[32m * gets executed the cache will be flushed. Only non-modifying select queries[m
[32m+[m	[32m * have been marked therefore this mechanism is a rather safe way of caching, requiring[m
[32m+[m	[32m * no explicit flushes or reloads. Of course this does not apply if you intend to test[m
[32m+[m	[32m * or simulate concurrent querying.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo TRUE to enable cache, FALSE to disable cache[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useWriterCache( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::getWriter()->setUseCache( $yesNo );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A label is a bean with only an id, type and name property.[m
[32m+[m	[32m * This function will dispense beans for all entries in the array. The[m
[32m+[m	[32m * values of the array will be assigned to the name property of each[m
[32m+[m	[32m * individual bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type   type of beans you would like to have[m
[32m+[m	[32m * @param array  $labels list of labels, names for each bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dispenseLabels( $type, $labels )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$labelMaker->dispenseLabels( $type, $labels );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Generates and returns an ENUM value. This is how RedBeanPHP handles ENUMs.[m
[32m+[m	[32m * Either returns a (newly created) bean respresenting the desired ENUM[m
[32m+[m	[32m * value or returns a list of all enums for the type.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To obtain (and add if necessary) an ENUM value:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $tea->flavour = R::enum( 'flavour:apple' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns a bean of type 'flavour' with  name = apple.[m
[32m+[m	[32m * This will add a bean with property name (set to APPLE) to the database[m
[32m+[m	[32m * if it does not exist yet.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To obtain all flavours:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::enum('flavour');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * To get a list of all flavour names:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::gatherLabels( R::enum( 'flavour' ) );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $enum either type or type-value[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function enum( $enum )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$labelMaker->enum( $enum );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Gathers labels from beans. This function loops through the beans,[m
[32m+[m	[32m * collects the values of the name properties of each individual bean[m
[32m+[m	[32m * and stores the names in a new array. The array then gets sorted using the[m
[32m+[m	[32m * default sort function of PHP (sort).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $beans list of beans to loop[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function gatherLabels( $beans )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$labelMaker->gatherLabels( $beans );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Closes the database connection.[m
[32m+[m	[32m * While database connections are closed automatically at the end of the PHP script,[m
[32m+[m	[32m * closing database connections is generally recommended to improve performance.[m
[32m+[m	[32m * Closing a database connection will immediately return the resources to PHP.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::setup( ... );[m
[32m+[m	[32m * ... do stuff ...[m
[32m+[m	[32m * R::close();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function close()[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( isset( self::$adapter ) ) {[m
[32m+[m			[32mself::$adapter->close();[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Simple convenience function, returns ISO date formatted representation[m
[32m+[m	[32m * of $time.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param mixed $time UNIX timestamp[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function isoDate( $time = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !$time ) {[m
[32m+[m			[32m$time = time();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn @date( 'Y-m-d', $time );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Simple convenience function, returns ISO date time[m
[32m+[m	[32m * formatted representation[m
[32m+[m	[32m * of $time.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param mixed $time UNIX timestamp[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function isoDateTime( $time = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !$time ) $time = time();[m
[32m+[m		[32mreturn @date( 'Y-m-d H:i:s', $time );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the database adapter you want to use.[m
[32m+[m	[32m * The database adapter manages the connection to the database[m
[32m+[m	[32m * and abstracts away database driver specific interfaces.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter $adapter Database Adapter for facade to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setDatabaseAdapter( Adapter $adapter )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$adapter = $adapter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the Query Writer you want to use.[m
[32m+[m	[32m * The Query Writer writes and executes database queries using[m
[32m+[m	[32m * the database adapter. It turns RedBeanPHP 'commands' into[m
[32m+[m	[32m * database 'statements'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param QueryWriter $writer Query Writer instance for facade to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setWriter( QueryWriter $writer )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$writer = $writer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the OODB you want to use.[m
[32m+[m	[32m * The RedBeanPHP Object oriented database is the main RedBeanPHP[m
[32m+[m	[32m * interface that allows you to store and retrieve RedBeanPHP[m
[32m+[m	[32m * objects (i.e. beans).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODB $redbean Object Database for facade to use[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setRedBean( OODB $redbean )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$redbean = $redbean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Optional accessor for neat code.[m
[32m+[m	[32m * Sets the database adapter you want to use.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return DBAdapter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getDatabaseAdapter()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$adapter;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * In case you use PDO (which is recommended and the default but not mandatory, hence[m
[32m+[m	[32m * the database adapter), you can use this method to obtain the PDO object directly.[m
[32m+[m	[32m * This is a convenience method, it will do the same as:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::getDatabaseAdapter()->getDatabase()->getPDO();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the PDO object could not be found, for whatever reason, this method[m
[32m+[m	[32m * will return NULL instead.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return NULL|PDO[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getPDO()[m
[32m+[m	[32m{[m
[32m+[m		[32m$databaseAdapter = self::getDatabaseAdapter();[m
[32m+[m		[32mif ( is_null( $databaseAdapter ) ) return NULL;[m
[32m+[m		[32m$database = $databaseAdapter->getDatabase();[m
[32m+[m		[32mif ( is_null( $database ) ) return NULL;[m
[32m+[m		[32mif ( !method_exists( $database, 'getPDO' ) ) return NULL;[m
[32m+[m		[32mreturn $database->getPDO();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the current duplication manager instance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return DuplicationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getDuplicationManager()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$duplicationManager;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Optional accessor for neat code.[m
[32m+[m	[32m * Sets the database adapter you want to use.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getWriter()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$writer;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Optional accessor for neat code.[m
[32m+[m	[32m * Sets the database adapter you want to use.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getRedBean()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$redbean;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the toolbox currently used by the facade.[m
[32m+[m	[32m * To set the toolbox use R::setup() or R::configureFacadeWithToolbox().[m
[32m+[m	[32m * To create a toolbox use Setup::kickstart(). Or create a manual[m
[32m+[m	[32m * toolbox using the ToolBox class.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getToolBox()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Mostly for internal use, but might be handy[m
[32m+[m	[32m * for some users.[m
[32m+[m	[32m * This returns all the components of the currently[m
[32m+[m	[32m * selected toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns the components in the following order:[m
[32m+[m	[32m *[m
[32m+[m	[32m * # OODB instance (getRedBean())[m
[32m+[m	[32m * # Database Adapter[m
[32m+[m	[32m * # Query Writer[m
[32m+[m	[32m * # Toolbox itself[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getExtractedToolbox()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array( self::$redbean, self::$adapter, self::$writer, self::$toolbox );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Facade method for AQueryWriter::renameAssociation()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $from[m
[32m+[m	[32m * @param string       $to[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function renameAssociation( $from, $to = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mAQueryWriter::renameAssociation( $from, $to );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Little helper method for Resty Bean Can server and others.[m
[32m+[m	[32m * Takes an array of beans and exports each bean.[m
[32m+[m	[32m * Unlike exportAll this method does not recurse into own lists[m
[32m+[m	[32m * and shared lists, the beans are exported as-is, only loaded lists[m
[32m+[m	[32m * are exported.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $beans beans[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function beansToArray( $beans )[m
[32m+[m	[32m{[m
[32m+[m		[32m$list = array();[m
[32m+[m		[32mforeach( $beans as $bean ) $list[] = $bean->export();[m
[32m+[m		[32mreturn $list;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the error mode for FUSE.[m
[32m+[m	[32m * What to do if a FUSE model method does not exist?[m
[32m+[m	[32m * You can set the following options:[m
[32m+[m	[32m *[m
[32m+[m	[32m * * OODBBean::C_ERR_IGNORE (default), ignores the call, returns NULL[m
[32m+[m	[32m * * OODBBean::C_ERR_LOG, logs the incident using error_log[m
[32m+[m	[32m * * OODBBean::C_ERR_NOTICE, triggers a E_USER_NOTICE[m
[32m+[m	[32m * * OODBBean::C_ERR_WARN, triggers a E_USER_WARNING[m
[32m+[m	[32m * * OODBBean::C_ERR_EXCEPTION, throws an exception[m
[32m+[m	[32m * * OODBBean::C_ERR_FUNC, allows you to specify a custom handler (function)[m
[32m+[m	[32m * * OODBBean::C_ERR_FATAL, triggers a E_USER_ERROR[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * Custom handler method signature: handler( array ([m
[32m+[m	[32m * 	'message' => string[m
[32m+[m	[32m * 	'bean' => OODBBean[m
[32m+[m	[32m * 	'method' => string[m
[32m+[m	[32m * ) )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method returns the old mode and handler as an array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param integer       $mode mode, determines how to handle errors[m
[32m+[m	[32m * @param callable|NULL $func custom handler (if applicable)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setErrorHandlingFUSE( $mode, $func = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn OODBBean::setErrorHandlingFUSE( $mode, $func );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dumps bean data to array.[m
[32m+[m	[32m * Given a one or more beans this method will[m
[32m+[m	[32m * return an array containing first part of the string[m
[32m+[m	[32m * representation of each item in the array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::dump( $bean );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example shows how to echo the result of a simple[m
[32m+[m	[32m * dump. This will print the string representation of the[m
[32m+[m	[32m * specified bean to the screen, limiting the output per bean[m
[32m+[m	[32m * to 35 characters to improve readability. Nested beans will[m
[32m+[m	[32m * also be dumped.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $data either a bean or an array of beans[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dump( $data )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn Dump::dump( $data );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Binds an SQL function to a column.[m
[32m+[m	[32m * This method can be used to setup a decode/encode scheme or[m
[32m+[m	[32m * perform UUID insertion. This method is especially useful for handling[m
[32m+[m	[32m * MySQL spatial columns, because they need to be processed first using[m
[32m+[m	[32m * the asText/GeomFromText functions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::bindFunc( 'read', 'location.point', 'asText' );[m
[32m+[m	[32m * R::bindFunc( 'write', 'location.point', 'GeomFromText' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Passing NULL as the function will reset (clear) the function[m
[32m+[m	[32m * for this column/mode.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $mode     mode for function: i.e. read or write[m
[32m+[m	[32m * @param string $field    field (table.column) to bind function to[m
[32m+[m	[32m * @param string $function SQL function to bind to specified column[m
[32m+[m	[32m * @param boolean $isTemplate TRUE if $function is an SQL string, FALSE for just a function name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function bindFunc( $mode, $field, $function, $isTemplate = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$redbean->bindFunc( $mode, $field, $function, $isTemplate );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets global aliases.[m
[32m+[m	[32m * Registers a batch of aliases in one go. This works the same as[m
[32m+[m	[32m * fetchAs but explicitly. For instance if you register[m
[32m+[m	[32m * the alias 'cover' for 'page' a property containing a reference to a[m
[32m+[m	[32m * page bean called 'cover' will correctly return the page bean and not[m
[32m+[m	[32m * a (non-existant) cover bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::aliases( array( 'cover' => 'page' ) );[m
[32m+[m	[32m * $book = R::dispense( 'book' );[m
[32m+[m	[32m * $page = R::dispense( 'page' );[m
[32m+[m	[32m * $book->cover = $page;[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * $book = $book->fresh();[m
[32m+[m	[32m * $cover = $book->cover;[m
[32m+[m	[32m * echo $cover->getMeta( 'type' ); //page[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The format of the aliases registration array is:[m
[32m+[m	[32m *[m
[32m+[m	[32m * {alias} => {actual type}[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we use:[m
[32m+[m	[32m *[m
[32m+[m	[32m * cover => page[m
[32m+[m	[32m *[m
[32m+[m	[32m * From that point on, every bean reference to a cover[m
[32m+[m	[32m * will return a 'page' bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $list list of global aliases to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function aliases( $list )[m
[32m+[m	[32m{[m
[32m+[m		[32mOODBBean::aliases( $list );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tries to find a bean matching a certain type and[m
[32m+[m	[32m * criteria set. If no beans are found a new bean[m
[32m+[m	[32m * will be created, the criteria will be imported into this[m
[32m+[m	[32m * bean and the bean will be stored and returned.[m
[32m+[m	[32m * If multiple beans match the criteria only the first one[m
[32m+[m	[32m * will be returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean to search for[m
[32m+[m	[32m * @param array  $like criteria set describing the bean to search for[m
[32m+[m	[32m * @param boolean $hasBeenCreated set to TRUE if bean has been created[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findOrCreate( $type, $like = array(), $sql = '', &$hasBeenCreated = false )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findOrCreate( $type, $like, $sql = '', $hasBeenCreated );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Tries to find beans matching the specified type and[m
[32m+[m	[32m * criteria set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the optional additional SQL snippet is a condition, it will[m
[32m+[m	[32m * be glued to the rest of the query using the AND operator.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean to search for[m
[32m+[m	[32m * @param array  $like optional criteria set describing the bean to search for[m
[32m+[m	[32m * @param string $sql  optional additional SQL for sorting[m
[32m+[m	[32m * @param array  $bindings bindings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function findLike( $type, $like = array(), $sql = '', $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$finder->findLike( $type, $like, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Starts logging queries.[m
[32m+[m	[32m * Use this method to start logging SQL queries being[m
[32m+[m	[32m * executed by the adapter. Logging queries will not[m
[32m+[m	[32m * print them on the screen. Use R::getLogs() to[m
[32m+[m	[32m * retrieve the logs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::startLogging();[m
[32m+[m	[32m * R::store( R::dispense( 'book' ) );[m
[32m+[m	[32m * R::find('book', 'id > ?',[0]);[m
[32m+[m	[32m * $logs = R::getLogs();[m
[32m+[m	[32m * $count = count( $logs );[m
[32m+[m	[32m * print_r( $logs );[m
[32m+[m	[32m * R::stopLogging();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we start a logging session during[m
[32m+[m	[32m * which we store an empty bean of type book. To inspect the[m
[32m+[m	[32m * logs we invoke R::getLogs() after stopping the logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note you cannot use R::debug and R::startLogging[m
[32m+[m	[32m * at the same time because R::debug is essentially a[m
[32m+[m	[32m * special kind of logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function startLogging()[m
[32m+[m	[32m{[m
[32m+[m		[32mself::debug( TRUE, RDefault::C_LOGGER_ARRAY );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Stops logging and flushes the logs,[m
[32m+[m	[32m * convient method to stop logging of queries.[m
[32m+[m	[32m * Use this method to stop logging SQL queries being[m
[32m+[m	[32m * executed by the adapter. Logging queries will not[m
[32m+[m	[32m * print them on the screen. Use R::getLogs() to[m
[32m+[m	[32m * retrieve the logs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::startLogging();[m
[32m+[m	[32m * R::store( R::dispense( 'book' ) );[m
[32m+[m	[32m * R::find('book', 'id > ?',[0]);[m
[32m+[m	[32m * $logs = R::getLogs();[m
[32m+[m	[32m * $count = count( $logs );[m
[32m+[m	[32m * print_r( $logs );[m
[32m+[m	[32m * R::stopLogging();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we start a logging session during[m
[32m+[m	[32m * which we store an empty bean of type book. To inspect the[m
[32m+[m	[32m * logs we invoke R::getLogs() after stopping the logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note you cannot use R::debug and R::startLogging[m
[32m+[m	[32m * at the same time because R::debug is essentially a[m
[32m+[m	[32m * special kind of logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note by stopping the logging you also flush the logs.[m
[32m+[m	[32m * Therefore, only stop logging AFTER you have obtained the[m
[32m+[m	[32m * query logs using R::getLogs()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function stopLogging()[m
[32m+[m	[32m{[m
[32m+[m		[32mself::debug( FALSE );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the log entries written after the startLogging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Use this method to obtain the query logs gathered[m
[32m+[m	[32m * by the logging mechanisms.[m
[32m+[m	[32m * Logging queries will not[m
[32m+[m	[32m * print them on the screen. Use R::getLogs() to[m
[32m+[m	[32m * retrieve the logs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::startLogging();[m
[32m+[m	[32m * R::store( R::dispense( 'book' ) );[m
[32m+[m	[32m * R::find('book', 'id > ?',[0]);[m
[32m+[m	[32m * $logs = R::getLogs();[m
[32m+[m	[32m * $count = count( $logs );[m
[32m+[m	[32m * print_r( $logs );[m
[32m+[m	[32m * R::stopLogging();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * In the example above we start a logging session during[m
[32m+[m	[32m * which we store an empty bean of type book. To inspect the[m
[32m+[m	[32m * logs we invoke R::getLogs() after stopping the logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The logs may look like:[m
[32m+[m	[32m *[m
[32m+[m	[32m * [1] => SELECT `book`.*  FROM `book`  WHERE id > ?  -- keep-cache[m
[32m+[m	[32m * [2] => array ( 0 => 0, )[m
[32m+[m	[32m * [3] => resultset: 1 rows[m
[32m+[m	[32m *[m
[32m+[m	[32m * Basically, element in the array is a log entry.[m
[32m+[m	[32m * Parameter bindings are  represented as nested arrays (see 2).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note you cannot use R::debug and R::startLogging[m
[32m+[m	[32m * at the same time because R::debug is essentially a[m
[32m+[m	[32m * special kind of logging.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note by stopping the logging you also flush the logs.[m
[32m+[m	[32m * Therefore, only stop logging AFTER you have obtained the[m
[32m+[m	[32m * query logs using R::getLogs()[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getLogs()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::getLogger()->getLogs();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Resets the query counter.[m
[32m+[m	[32m * The query counter can be used to monitor the number[m
[32m+[m	[32m * of database queries that have[m
[32m+[m	[32m * been processed according to the database driver. You can use this[m
[32m+[m	[32m * to monitor the number of queries required to render a page.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::resetQueryCount();[m
[32m+[m	[32m * echo R::getQueryCount() . ' queries processed.';[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function resetQueryCount()[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$adapter->getDatabase()->resetCounter();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the number of SQL queries processed.[m
[32m+[m	[32m * This method returns the number of database queries that have[m
[32m+[m	[32m * been processed according to the database driver. You can use this[m
[32m+[m	[32m * to monitor the number of queries required to render a page.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::getQueryCount() . ' queries processed.';[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getQueryCount()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$adapter->getDatabase()->getQueryCount();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the current logger instance being used by the[m
[32m+[m	[32m * database object.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Logger[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getLogger()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$adapter->getDatabase()->getLogger();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setAutoResolve( $automatic = TRUE ){}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles 'partial bean mode'. If this mode has been[m
[32m+[m	[32m * selected the repository will only update the fields of a bean that[m
[32m+[m	[32m * have been changed rather than the entire bean.[m
[32m+[m	[32m * Pass the value TRUE to select 'partial mode' for all beans.[m
[32m+[m	[32m * Pass the value FALSE to disable 'partial mode'.[m
[32m+[m	[32m * Pass an array of bean types if you wish to use partial mode only[m
[32m+[m	[32m * for some types.[m
[32m+[m	[32m * This method will return the previous value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean|array $yesNoBeans List of type names or 'all'[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function usePartialBeans( $yesNoBeans )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$redbean->getCurrentRepository()->usePartialBeans( $yesNoBeans );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exposes the result of the specified SQL query as a CSV file.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::csv( 'SELECT[m
[32m+[m	[32m *                 `name`,[m
[32m+[m	[32m *                  population[m
[32m+[m	[32m *          FROM city[m
[32m+[m	[32m *          WHERE region = :region ',[m
[32m+[m	[32m *          array( ':region' => 'Denmark' ),[m
[32m+[m	[32m *          array( 'city', 'population' ),[m
[32m+[m	[32m *          '/tmp/cities.csv'[m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The command above will select all cities in Denmark[m
[32m+[m	[32m * and create a CSV with columns 'city' and 'population' and[m
[32m+[m	[32m * populate the cells under these column headers with the[m
[32m+[m	[32m * names of the cities and the population numbers respectively.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $sql      SQL query to expose result of[m
[32m+[m	[32m * @param array   $bindings parameter bindings[m
[32m+[m	[32m * @param array   $columns  column headers for CSV file[m
[32m+[m	[32m * @param string  $path     path to save CSV file to[m
[32m+[m	[32m * @param boolean $output   TRUE to output CSV directly using readfile[m
[32m+[m	[32m * @param array   $options  delimiter, quote and escape character respectively[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function csv( $sql = '', $bindings = array(), $columns = NULL, $path = '/tmp/redexport_%s.csv', $output = TRUE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$quickExport = new QuickExport( self::$toolbox );[m
[32m+[m		[32m$quickExport->csv( $sql, $bindings, $columns, $path, $output );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * MatchUp is a powerful productivity boosting method that can replace simple control[m
[32m+[m	[32m * scripts with a single RedBeanPHP command. Typically, matchUp() is used to[m
[32m+[m	[32m * replace login scripts, token generation scripts and password reset scripts.[m
[32m+[m	[32m * The MatchUp method takes a bean type, an SQL query snippet (starting at the WHERE clause),[m
[32m+[m	[32m * SQL bindings, a pair of task arrays and a bean reference.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the first 3 parameters match a bean, the first task list will be considered,[m
[32m+[m	[32m * otherwise the second one will be considered. On consideration, each task list,[m
[32m+[m	[32m * an array of keys and values will be executed. Every key in the task list should[m
[32m+[m	[32m * correspond to a bean property while every value can either be an expression to[m
[32m+[m	[32m * be evaluated or a closure (PHP 5.3+). After applying the task list to the bean[m
[32m+[m	[32m * it will be stored. If no bean has been found, a new bean will be dispensed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method will return TRUE if the bean was found and FALSE if not AND[m
[32m+[m	[32m * there was a NOT-FOUND task list. If no bean was found AND there was also[m
[32m+[m	[32m * no second task list, NULL will be returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To obtain the bean, pass a variable as the sixth parameter.[m
[32m+[m	[32m * The function will put the matching bean in the specified variable.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $type         type of bean you're looking for[m
[32m+[m	[32m * @param string   $sql          SQL snippet (starting at the WHERE clause, omit WHERE-keyword)[m
[32m+[m	[32m * @param array    $bindings     array of parameter bindings for SQL snippet[m
[32m+[m	[32m * @param array    $onFoundDo    task list to be considered on finding the bean[m
[32m+[m	[32m * @param array    $onNotFoundDo task list to be considered on NOT finding the bean[m
[32m+[m	[32m * @param OODBBean &$bean        reference to obtain the found bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function matchUp( $type, $sql, $bindings = array(), $onFoundDo = NULL, $onNotFoundDo = NULL, &$bean = NULL 	) {[m
[32m+[m		[32m$matchUp = new MatchUp( self::$toolbox );[m
[32m+[m		[32mreturn $matchUp->matchUp( $type, $sql, $bindings, $onFoundDo, $onNotFoundDo, $bean );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @deprecated[m
[32m+[m	[32m *[m
[32m+[m	[32m * Returns an instance of the Look Helper class.[m
[32m+[m	[32m * The instance will be configured with the current toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In previous versions of RedBeanPHP you had to use:[m
[32m+[m	[32m * R::getLook()->look() instead of R::look(). However to improve useability of the[m
[32m+[m	[32m * library the look() function can now directly be invoked from the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * For more details regarding the Look functionality, please consult R::look().[m
[32m+[m	[32m * @see Facade::look[m
[32m+[m	[32m * @see Look::look[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return Look[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getLook()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn new Look( self::$toolbox );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Takes an full SQL query with optional bindings, a series of keys, a template[m
[32m+[m	[32m * and optionally a filter function and glue and assembles a view from all this.[m
[32m+[m	[32m * This is the fastest way from SQL to view. Typically this function is used to[m
[32m+[m	[32m * generate pulldown (select tag) menus with options queried from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $htmlPulldown = R::look([m
[32m+[m	[32m *   'SELECT * FROM color WHERE value != ? ORDER BY value ASC',[m
[32m+[m	[32m *   [ 'g' ],[m
[32m+[m	[32m *   [ 'value', 'name' ],[m
[32m+[m	[32m *   '<option value="%s">%s</option>',[m
[32m+[m	[32m *   'strtoupper',[m
[32m+[m	[32m *   "\n"[m
[32m+[m	[32m * );[m
[32m+[m	[32m *</code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates an HTML fragment like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <option value="B">BLUE</option>[m
[32m+[m	[32m * <option value="R">RED</option>[m
[32m+[m	[32m *[m
[32m+[m	[32m * to pick a color from a palette. The HTML fragment gets constructed by[m
[32m+[m	[32m * an SQL query that selects all colors that do not have value 'g' - this[m
[32m+[m	[32m * excludes green. Next, the bean properties 'value' and 'name' are mapped to the[m
[32m+[m	[32m * HTML template string, note that the order here is important. The mapping and[m
[32m+[m	[32m * the HTML template string follow vsprintf-rules. All property values are then[m
[32m+[m	[32m * passed through the specified filter function 'strtoupper' which in this case[m
[32m+[m	[32m * is a native PHP function to convert strings to uppercase characters only.[m
[32m+[m	[32m * Finally the resulting HTML fragment strings are glued together using a[m
[32m+[m	[32m * newline character specified in the last parameter for readability.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In previous versions of RedBeanPHP you had to use:[m
[32m+[m	[32m * R::getLook()->look() instead of R::look(). However to improve useability of the[m
[32m+[m	[32m * library the look() function can now directly be invoked from the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $sql      query to execute[m
[32m+[m	[32m * @param array    $bindings parameters to bind to slots mentioned in query or an empty array[m
[32m+[m	[32m * @param array    $keys     names in result collection to map to template[m
[32m+[m	[32m * @param string   $template HTML template to fill with values associated with keys, use printf notation (i.e. %s)[m
[32m+[m	[32m * @param callable $filter   function to pass values through (for translation for instance)[m
[32m+[m	[32m * @param string   $glue     optional glue to use when joining resulting strings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function look( $sql, $bindings = array(), $keys = array( 'selected', 'id', 'name' ), $template = '<option %s value="%s">%s</option>', $filter = 'trim', $glue = '' )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::getLook()->look( $sql, $bindings, $keys, $template, $filter, $glue );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Calculates a diff between two beans (or arrays of beans).[m
[32m+[m	[32m * The result of this method is an array describing the differences of the second bean compared to[m
[32m+[m	[32m * the first, where the first bean is taken as reference. The array is keyed by type/property, id and property name, where[m
[32m+[m	[32m * type/property is either the type (in case of the root bean) or the property of the parent bean where the type resides.[m
[32m+[m	[32m * The diffs are mainly intended for logging, you cannot apply these diffs as patches to other beans.[m
[32m+[m	[32m * However this functionality might be added in the future.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The keys of the array can be formatted using the $format parameter.[m
[32m+[m	[32m * A key will be composed of a path (1st), id (2nd) and property (3rd).[m
[32m+[m	[32m * Using printf-style notation you can determine the exact format of the key.[m
[32m+[m	[32m * The default format will look like:[m
[32m+[m	[32m *[m
[32m+[m	[32m * 'book.1.title' => array( <OLDVALUE>, <NEWVALUE> )[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you only want a simple diff of one bean and you don't care about ids,[m
[32m+[m	[32m * you might pass a format like: '%1$s.%3$s' which gives:[m
[32m+[m	[32m *[m
[32m+[m	[32m * 'book.1.title' => array( <OLDVALUE>, <NEWVALUE> )[m
[32m+[m	[32m *[m
[32m+[m	[32m * The filter parameter can be used to set filters, it should be an array[m
[32m+[m	[32m * of property names that have to be skipped. By default this array is filled with[m
[32m+[m	[32m * two strings: 'created' and 'modified'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $bean    reference beans[m
[32m+[m	[32m * @param OODBBean|array $other   beans to compare[m
[32m+[m	[32m * @param array          $filters names of properties of all beans to skip[m
[32m+[m	[32m * @param string         $format  the format of the key, defaults to '%s.%s.%s'[m
[32m+[m	[32m * @param string         $type    type/property of bean to use for key generation[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function diff( $bean, $other, $filters = array( 'created', 'modified' ), $pattern = '%s.%s.%s' )[m
[32m+[m	[32m{[m
[32m+[m		[32m$diff = new Diff( self::$toolbox );[m
[32m+[m		[32mreturn $diff->diff( $bean, $other, $filters, $pattern );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The gentleman's way to register a RedBeanPHP ToolBox instance[m
[32m+[m	[32m * with the facade. Stores the toolbox in the static toolbox[m
[32m+[m	[32m * registry of the facade class. This allows for a neat and[m
[32m+[m	[32m * explicit way to register a toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $key     key to store toolbox instance under[m
[32m+[m	[32m * @param ToolBox $toolbox toolbox to register[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function addToolBoxWithKey( $key, ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$toolboxes[$key] = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * The gentleman's way to remove a RedBeanPHP ToolBox instance[m
[32m+[m	[32m * from the facade. Removes the toolbox identified by[m
[32m+[m	[32m * the specified key in the static toolbox[m
[32m+[m	[32m * registry of the facade class. This allows for a neat and[m
[32m+[m	[32m * explicit way to remove a toolbox.[m
[32m+[m	[32m * Returns TRUE if the specified toolbox was found and removed.[m
[32m+[m	[32m * Returns FALSE otherwise.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $key     identifier of the toolbox to remove[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function removeToolBoxByKey( $key )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !array_key_exists( $key, self::$toolboxes ) ) {[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32munset( self::$toolboxes[$key] );[m
[32m+[m		[32mreturn TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns the toolbox associated with the specified key.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $key     key to store toolbox instance under[m
[32m+[m	[32m * @param ToolBox $toolbox toolbox to register[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return ToolBox|NULL[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function getToolBoxByKey( $key )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !array_key_exists( $key, self::$toolboxes ) ) {[m
[32m+[m			[32mreturn NULL;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn self::$toolboxes[$key];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles JSON column features.[m
[32m+[m	[32m * Invoking this method with boolean TRUE causes 2 JSON features to be enabled.[m
[32m+[m	[32m * Beans will automatically JSONify any array that's not in a list property and[m
[32m+[m	[32m * the Query Writer (if capable) will attempt to create a JSON column for strings that[m
[32m+[m	[32m * appear to contain JSON.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Feature #1:[m
[32m+[m	[32m * AQueryWriter::useJSONColumns[m
[32m+[m	[32m *[m
[32m+[m	[32m * Toggles support for automatic generation of JSON columns.[m
[32m+[m	[32m * Using JSON columns means that strings containing JSON will[m
[32m+[m	[32m * cause the column to be created (not modified) as a JSON column.[m
[32m+[m	[32m * However it might also trigger exceptions if this means the DB attempts to[m
[32m+[m	[32m * convert a non-json column to a JSON column.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Feature #2:[m
[32m+[m	[32m * OODBBean::convertArraysToJSON[m
[32m+[m	[32m *[m
[32m+[m	[32m * Toggles array to JSON conversion. If set to TRUE any array[m
[32m+[m	[32m * set to a bean property that's not a list will be turned into[m
[32m+[m	[32m * a JSON string. Used together with AQueryWriter::useJSONColumns this[m
[32m+[m	[32m * extends the data type support for JSON columns.[m
[32m+[m	[32m *[m
[32m+[m	[32m * So invoking this method is the same as:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * AQueryWriter::useJSONColumns( $flag );[m
[32m+[m	[32m * OODBBean::convertArraysToJSON( $flag );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Unlike the methods above, that return the previous state, this[m
[32m+[m	[32m * method does not return anything (void).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag feature flag (either TRUE or FALSE)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useJSONFeatures( $flag )[m
[32m+[m	[32m{[m
[32m+[m		[32mAQueryWriter::useJSONColumns( $flag );[m
[32m+[m		[32mOODBBean::convertArraysToJSON( $flag );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a bean and an optional SQL snippet,[m
[32m+[m	[32m * this method will return the bean together with all[m[41m [m
[32m+[m	[32m * child beans in a hierarchically structured[m
[32m+[m	[32m * bean table.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note that not all database support this functionality. You'll need[m
[32m+[m	[32m * at least MariaDB 10.2.2 or Postgres. This method does not include[m
[32m+[m	[32m * a warning mechanism in case your database does not support this[m
[32m+[m	[32m * functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     bean to find children of[m
[32m+[m	[32m * @param string   $sql      optional SQL snippet[m
[32m+[m	[32m * @param array    $bindings SQL snippet parameter bindings[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function children( OODBBean $bean, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tree->children( $bean, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a bean and an optional SQL snippet,[m
[32m+[m	[32m * this method will count all child beans in a hierarchically structured[m
[32m+[m	[32m * bean table.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note that not all database support this functionality. You'll need[m
[32m+[m	[32m * at least MariaDB 10.2.2 or Postgres. This method does not include[m
[32m+[m	[32m * a warning mechanism in case your database does not support this[m
[32m+[m	[32m * functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * By default, if no select is given or select=TRUE this method will subtract 1 of[m
[32m+[m	[32m * the total count to omit the starting bean. If you provide your own select,[m
[32m+[m	[32m * this method assumes you take control of the resulting total yourself since[m
[32m+[m	[32m * it cannot 'predict' what or how you are trying to 'count'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean       $bean     bean to find children of[m
[32m+[m	[32m * @param string         $sql      optional SQL snippet[m
[32m+[m	[32m * @param array          $bindings SQL snippet parameter bindings[m
[32m+[m	[32m * @param string|boolean $select   select snippet to use (advanced, optional, see QueryWriter::queryRecursiveCommonTableExpression)[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function countChildren( OODBBean $bean, $sql = NULL, $bindings = array(), $select = QueryWriter::C_CTE_SELECT_COUNT )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tree->countChildren( $bean, $sql, $bindings, $select );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a bean and an optional SQL snippet,[m
[32m+[m	[32m * this method will count all parent beans in a hierarchically structured[m
[32m+[m	[32m * bean table.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note that not all database support this functionality. You'll need[m
[32m+[m	[32m * at least MariaDB 10.2.2 or Postgres. This method does not include[m
[32m+[m	[32m * a warning mechanism in case your database does not support this[m
[32m+[m	[32m * functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * By default, if no select is given or select=TRUE this method will subtract 1 of[m
[32m+[m	[32m * the total count to omit the starting bean. If you provide your own select,[m
[32m+[m	[32m * this method assumes you take control of the resulting total yourself since[m
[32m+[m	[32m * it cannot 'predict' what or how you are trying to 'count'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean       $bean     bean to find children of[m
[32m+[m	[32m * @param string         $sql      optional SQL snippet[m
[32m+[m	[32m * @param array          $bindings SQL snippet parameter bindings[m
[32m+[m	[32m * @param string|boolean $select   select snippet to use (advanced, optional, see QueryWriter::queryRecursiveCommonTableExpression)[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function countParents( OODBBean $bean, $sql = NULL, $bindings = array(), $select = QueryWriter::C_CTE_SELECT_COUNT )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tree->countParents( $bean, $sql, $bindings, $select );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given a bean and an optional SQL snippet,[m
[32m+[m	[32m * this method will return the bean along with all parent beans[m
[32m+[m	[32m * in a hierarchically structured bean table.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note that not all database support this functionality. You'll need[m
[32m+[m	[32m * at least MariaDB 10.2.2 or Postgres. This method does not include[m
[32m+[m	[32m * a warning mechanism in case your database does not support this[m
[32m+[m	[32m * functionality.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     bean to find parents of[m
[32m+[m	[32m * @param string   $sql      optional SQL snippet[m
[32m+[m	[32m * @param array    $bindings SQL snippet parameter bindings[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function parents( OODBBean $bean, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn self::$tree->parents( $bean, $sql, $bindings );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Toggles support for nuke().[m
[32m+[m	[32m * Can be used to turn off the nuke() feature for security reasons.[m
[32m+[m	[32m * Returns the old flag value.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $flag TRUE or FALSE[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function noNuke( $yesNo ) {[m
[32m+[m		[32mreturn AQueryWriter::forbidNuke( $yesNo );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Globally available service method for RedBeanPHP.[m
[32m+[m	[32m * Converts a snake cased string to a camel cased string.[m
[32m+[m	[32m * If the parameter is an array, the keys will be converted.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $snake snake_cased string to convert to camelCase[m
[32m+[m	[32m * @param boolean $dolphin exception for Ids - (bookId -> bookID)[m
[32m+[m	[32m *                         too complicated for the human mind, only dolphins can understand this[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string|array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function camelfy( $snake, $dolphin = false )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $snake ) ) {[m
[32m+[m			[32m$newArray = array();[m
[32m+[m			[32mforeach( $snake as $key => $value ) {[m
[32m+[m				[32m$newKey = self::camelfy( $key, $dolphin );[m
[32m+[m				[32mif ( is_array( $value ) ) {[m
[32m+[m					[32m$value = self::camelfy( $value, $dolphin );[m
[32m+[m				[32m}[m
[32m+[m				[32m$newArray[ $newKey ] = $value;[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn $newArray;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn AQueryWriter::snakeCamel( $snake, $dolphin );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Globally available service method for RedBeanPHP.[m
[32m+[m	[32m * Converts a camel cased string to a snake cased string.[m
[32m+[m	[32m * If the parameter is an array, the keys will be converted.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $camel camelCased string to convert to snake case[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string|array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function uncamelfy( $camel )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_array( $camel ) ) {[m
[32m+[m			[32m$newArray = array();[m
[32m+[m			[32mforeach( $camel as $key => $value ) {[m
[32m+[m				[32m$newKey = self::uncamelfy( $key );[m
[32m+[m				[32mif ( is_array( $value ) ) {[m
[32m+[m					[32m$value = self::uncamelfy( $value );[m
[32m+[m				[32m}[m
[32m+[m				[32m$newArray[ $newKey ] = $value;[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn $newArray;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn AQueryWriter::camelsSnake( $camel );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects the feature set you want as specified by[m
[32m+[m	[32m * the label.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::useFeatureSet( 'novice/latest' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $label label[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function useFeatureSet( $label ) {[m
[32m+[m		[32mreturn Feature::feature($label);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dynamically extends the facade with a plugin.[m
[32m+[m	[32m * Using this method you can register your plugin with the facade and then[m
[32m+[m	[32m * use the plugin by invoking the name specified plugin name as a method on[m
[32m+[m	[32m * the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::ext( 'makeTea', function() { ... }  );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Now you can use your makeTea plugin like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::makeTea();[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $pluginName name of the method to call the plugin[m
[32m+[m	[32m * @param callable $callable   a PHP callable[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function ext( $pluginName, $callable )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !preg_match( '#^[a-zA-Z_][a-zA-Z0-9_]*$#', $pluginName ) ) {[m
[32m+[m			[32mthrow new RedException( 'Plugin name may only contain alphanumeric characters and underscores and cannot start with a number.' );[m
[32m+[m		[32m}[m
[32m+[m		[32mself::$plugins[$pluginName] = $callable;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Call static for use with dynamic plugins. This magic method will[m
[32m+[m	[32m * intercept static calls and route them to the specified plugin.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $pluginName name of the plugin[m
[32m+[m	[32m * @param array  $params     list of arguments to pass to plugin method[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function __callStatic( $pluginName, $params )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !isset( self::$plugins[$pluginName] ) ) {[m
[32m+[m			[32mif ( !preg_match( '#^[a-zA-Z_][a-zA-Z0-9_]*$#', $pluginName ) ) {[m
[32m+[m				[32mthrow new RedException( 'Plugin name may only contain alphanumeric characters and underscores and cannot start with a number.' );[m
[32m+[m			[32m}[m
[32m+[m			[32mthrow new RedException( 'Plugin \''.$pluginName.'\' does not exist, add this plugin using: R::ext(\''.$pluginName.'\')' );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn call_user_func_array( self::$plugins[$pluginName], $params );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\AssociationManager as AssociationManager;[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\QueryWriter\AQueryWriter as AQueryWriter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Duplication Manager[m
[32m+[m[32m * The Duplication Manager creates deep copies from beans, this means[m
[32m+[m[32m * it can duplicate an entire bean hierarchy. You can use this feature to[m
[32m+[m[32m * implement versioning for instance. Because duplication and exporting are[m
[32m+[m[32m * closely related this class is also used to export beans recursively[m
[32m+[m[32m * (i.e. we make a duplicate and then convert to array). This class allows[m
[32m+[m[32m * you to tune the duplication process by specifying filters determining[m
[32m+[m[32m * which relations to take into account and by specifying tables[m
[32m+[m[32m * (in which case no reflective queries have to be issued thus improving[m
[32m+[m[32m * performance). This class also hosts the Camelfy function used to[m
[32m+[m[32m * reformat the keys of an array, this method is publicly available and[m
[32m+[m[32m * used internally by exportAll().[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/DuplicationManager.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass DuplicationManager[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var AssociationManager[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $associationManager;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $redbean;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $tables = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $columns = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $filters = array();[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var array[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $cacheTables = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $copyMeta = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Copies the shared beans in a bean, i.e. all the sharedBean-lists.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $copy   target bean to copy lists to[m
[32m+[m	[32m * @param string   $shared name of the shared list[m
[32m+[m	[32m * @param array    $beans  array with shared beans to copy[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function copySharedBeans( OODBBean $copy, $shared, $beans )[m
[32m+[m	[32m{[m
[32m+[m		[32m$copy->$shared = array();[m
[32m+[m
[32m+[m		[32mforeach ( $beans as $subBean ) {[m
[32m+[m			[32marray_push( $copy->$shared, $subBean );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Copies the own beans in a bean, i.e. all the ownBean-lists.[m
[32m+[m	[32m * Each bean in the own-list belongs exclusively to its owner so[m
[32m+[m	[32m * we need to invoke the duplicate method again to duplicate each bean here.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $copy        target bean to copy lists to[m
[32m+[m	[32m * @param string   $owned       name of the own list[m
[32m+[m	[32m * @param array    $beans       array with shared beans to copy[m
[32m+[m	[32m * @param array    $trail       array with former beans to detect recursion[m
[32m+[m	[32m * @param boolean  $preserveIDs TRUE means preserve IDs, for export only[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function copyOwnBeans( OODBBean $copy, $owned, $beans, $trail, $preserveIDs )[m
[32m+[m	[32m{[m
[32m+[m		[32m$copy->$owned = array();[m
[32m+[m		[32mforeach ( $beans as $subBean ) {[m
[32m+[m			[32marray_push( $copy->$owned, $this->duplicate( $subBean, $trail, $preserveIDs ) );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Creates a copy of bean $bean and copies all primitive properties (not lists)[m
[32m+[m	[32m * and the parents beans to the newly created bean. Also sets the ID of the bean[m
[32m+[m	[32m * to 0.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean bean to copy[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function createCopy( OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $bean->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32m$copy = $this->redbean->dispense( $type );[m
[32m+[m		[32m$copy->setMeta( 'sys.dup-from-id', $bean->id );[m
[32m+[m		[32m$copy->setMeta( 'sys.old-id', $bean->id );[m
[32m+[m		[32m$copy->importFrom( $bean );[m
[32m+[m		[32mif ($this->copyMeta) $copy->copyMetaFrom($bean);[m
[32m+[m		[32m$copy->id = 0;[m
[32m+[m
[32m+[m		[32mreturn $copy;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Generates a key from the bean type and its ID and determines if the bean[m
[32m+[m	[32m * occurs in the trail, if not the bean will be added to the trail.[m
[32m+[m	[32m * Returns TRUE if the bean occurs in the trail and FALSE otherwise.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array    $trail list of former beans[m
[32m+[m	[32m * @param OODBBean $bean  currently selected bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function inTrailOrAdd( &$trail, OODBBean $bean )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $bean->getMeta( 'type' );[m
[32m+[m		[32m$key  = $type . $bean->getID();[m
[32m+[m
[32m+[m		[32mif ( isset( $trail[$key] ) ) {[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$trail[$key] = $bean;[m
[32m+[m
[32m+[m		[32mreturn FALSE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Given the type name of a bean this method returns the canonical names[m
[32m+[m	[32m * of the own-list and the shared-list properties respectively.[m
[32m+[m	[32m * Returns a list with two elements: name of the own-list, and name[m
[32m+[m	[32m * of the shared list.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $typeName bean type name[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate function getListNames( $typeName )[m
[32m+[m	[32m{[m
[32m+[m		[32m$owned  = 'own' . ucfirst( $typeName );[m
[32m+[m		[32m$shared = 'shared' . ucfirst( $typeName );[m
[32m+[m
[32m+[m		[32mreturn array( $owned, $shared );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether the bean has an own list based on[m
[32m+[m	[32m * schema inspection from realtime schema or cache.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type   bean type to get list for[m
[32m+[m	[32m * @param string $target type of list you want to detect[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function hasOwnList( $type, $target )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn isset( $this->columns[$target][$type . '_id'] );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Determines whether the bea has a shared list based on[m
[32m+[m	[32m * schema inspection from realtime schema or cache.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type   bean type to get list for[m
[32m+[m	[32m * @param string $target type of list you are looking for[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function hasSharedList( $type, $target )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn in_array( AQueryWriter::getAssocTableFormat( array( $type, $target ) ), $this->tables );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @see DuplicationManager::dup[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean        bean to be copied[m
[32m+[m	[32m * @param array    $trail       trail to prevent infinite loops[m
[32m+[m	[32m * @param boolean  $preserveIDs preserve IDs[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected function duplicate( OODBBean $bean, $trail = array(), $preserveIDs = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( $this->inTrailOrAdd( $trail, $bean ) ) return $bean;[m
[32m+[m
[32m+[m		[32m$type = $bean->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32m$copy = $this->createCopy( $bean );[m
[32m+[m		[32mforeach ( $this->tables as $table ) {[m
[32m+[m
[32m+[m			[32mif ( !empty( $this->filters ) ) {[m
[32m+[m				[32mif ( !in_array( $table, $this->filters ) ) continue;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mlist( $owned, $shared ) = $this->getListNames( $table );[m
[32m+[m
[32m+[m			[32mif ( $this->hasSharedList( $type, $table ) ) {[m
[32m+[m				[32mif ( $beans = $bean->$shared ) {[m
[32m+[m					[32m$this->copySharedBeans( $copy, $shared, $beans );[m
[32m+[m				[32m}[m
[32m+[m			[32m} elseif ( $this->hasOwnList( $type, $table ) ) {[m
[32m+[m				[32mif ( $beans = $bean->$owned ) {[m
[32m+[m					[32m$this->copyOwnBeans( $copy, $owned, $beans, $trail, $preserveIDs );[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32m$copy->setMeta( 'sys.shadow.' . $owned, NULL );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$copy->setMeta( 'sys.shadow.' . $shared, NULL );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$copy->id = ( $preserveIDs ) ? $bean->id : $copy->id;[m
[32m+[m
[32m+[m		[32mreturn $copy;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor,[m
[32m+[m	[32m * creates a new instance of DupManager.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox            = $toolbox;[m
[32m+[m		[32m$this->redbean            = $toolbox->getRedBean();[m
[32m+[m		[32m$this->associationManager = $this->redbean->getAssociationManager();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Recursively turns the keys of an array into[m
[32m+[m	[32m * camelCase.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array   $array       array to camelize[m
[32m+[m	[32m * @param boolean $dolphinMode whether you want the exception for IDs.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function camelfy( $array, $dolphinMode = FALSE ) {[m
[32m+[m		[32m$newArray = array();[m
[32m+[m		[32mforeach( $array as $key => $element ) {[m
[32m+[m			[32m$newKey = preg_replace_callback( '/_(\w)/', function( $matches ){[m
[32m+[m				[32mreturn strtoupper( $matches[1] );[m
[32m+[m			[32m}, $key);[m
[32m+[m
[32m+[m			[32mif ( $dolphinMode ) {[m
[32m+[m				[32m$newKey = preg_replace( '/(\w)Id$/', '$1ID', $newKey );[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$newArray[$newKey] = ( is_array($element) ) ? $this->camelfy( $element, $dolphinMode ) : $element;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $newArray;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * For better performance you can pass the tables in an array to this method.[m
[32m+[m	[32m * If the tables are available the duplication manager will not query them so[m
[32m+[m	[32m * this might be beneficial for performance.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method allows two array formats:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array( TABLE1, TABLE2 ... )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * or[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * array( TABLE1 => array( COLUMN1, COLUMN2 ... ) ... )[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $tables a table cache array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setTables( $tables )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach ( $tables as $key => $value ) {[m
[32m+[m			[32mif ( is_numeric( $key ) ) {[m
[32m+[m				[32m$this->tables[] = $value;[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$this->tables[]      = $key;[m
[32m+[m				[32m$this->columns[$key] = $value;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->cacheTables = TRUE;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns a schema array for cache.[m
[32m+[m	[32m * You can use the return value of this method as a cache,[m
[32m+[m	[32m * store it in RAM or on disk and pass it to setTables later.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function getSchema()[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn $this->columns;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Indicates whether you want the duplication manager to cache the database schema.[m
[32m+[m	[32m * If this flag is set to TRUE the duplication manager will query the database schema[m
[32m+[m	[32m * only once. Otherwise the duplicationmanager will, by default, query the schema[m
[32m+[m	[32m * every time a duplication action is performed (dup()).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo TRUE to use caching, FALSE otherwise[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setCacheTables( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->cacheTables = $yesNo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * A filter array is an array with table names.[m
[32m+[m	[32m * By setting a table filter you can make the duplication manager only take into account[m
[32m+[m	[32m * certain bean types. Other bean types will be ignored when exporting or making a[m
[32m+[m	[32m * deep copy. If no filters are set all types will be taking into account, this is[m
[32m+[m	[32m * the default behavior.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $filters list of tables to be filtered[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function setFilters( $filters )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_array( $filters ) ) {[m
[32m+[m			[32m$filters = array( $filters );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$this->filters = $filters;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Makes a copy of a bean. This method makes a deep copy[m
[32m+[m	[32m * of the bean.The copy will have the following features.[m
[32m+[m	[32m * - All beans in own-lists will be duplicated as well[m
[32m+[m	[32m * - All references to shared beans will be copied but not the shared beans themselves[m
[32m+[m	[32m * - All references to parent objects (_id fields) will be copied but not the parents themselves[m
[32m+[m	[32m * In most cases this is the desired scenario for copying beans.[m
[32m+[m	[32m * This function uses a trail-array to prevent infinite recursion, if a recursive bean is found[m
[32m+[m	[32m * (i.e. one that already has been processed) the ID of the bean will be returned.[m
[32m+[m	[32m * This should not happen though.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * This function does a reflectional database query so it may be slow.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * this function actually passes the arguments to a protected function called[m
[32m+[m	[32m * duplicate() that does all the work. This method takes care of creating a clone[m
[32m+[m	[32m * of the bean to avoid the bean getting tainted (triggering saving when storing it).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean        bean to be copied[m
[32m+[m	[32m * @param array    $trail       for internal usage, pass array()[m
[32m+[m	[32m * @param boolean  $preserveIDs for internal usage[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function dup( OODBBean $bean, $trail = array(), $preserveIDs = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !count( $this->tables ) ) {[m
[32m+[m			[32m$this->tables = $this->toolbox->getWriter()->getTables();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !count( $this->columns ) ) {[m
[32m+[m			[32mforeach ( $this->tables as $table ) {[m
[32m+[m				[32m$this->columns[$table] = $this->toolbox->getWriter()->getColumns( $table );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$rs = $this->duplicate( ( clone $bean ), $trail, $preserveIDs );[m
[32m+[m
[32m+[m		[32mif ( !$this->cacheTables ) {[m
[32m+[m			[32m$this->tables  = array();[m
[32m+[m			[32m$this->columns = array();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $rs;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exports a collection of beans recursively.[m
[32m+[m	[32m * This method will export an array of beans in the first argument to a[m
[32m+[m	[32m * set of arrays. This can be used to send JSON or XML representations[m
[32m+[m	[32m * of bean hierarchies to the client.[m
[32m+[m	[32m *[m
[32m+[m	[32m * For every bean in the array this method will export:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - contents of the bean[m
[32m+[m	[32m * - all own bean lists (recursively)[m
[32m+[m	[32m * - all shared beans (but not THEIR own lists)[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the second parameter is set to TRUE the parents of the beans in the[m
[32m+[m	[32m * array will be exported as well (but not THEIR parents).[m
[32m+[m	[32m *[m
[32m+[m	[32m * The third parameter can be used to provide a white-list array[m
[32m+[m	[32m * for filtering. This is an array of strings representing type names,[m
[32m+[m	[32m * only the type names in the filter list will be exported.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The fourth parameter can be used to change the keys of the resulting[m
[32m+[m	[32m * export arrays. The default mode is 'snake case' but this leaves the[m
[32m+[m	[32m * keys as-is, because 'snake' is the default case style used by[m
[32m+[m	[32m * RedBeanPHP in the database. You can set this to 'camel' for[m
[32m+[m	[32m * camel cased keys or 'dolphin' (same as camelcase but id will be[m
[32m+[m	[32m * converted to ID instead of Id).[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array|OODBBean $beans     beans to be exported[m
[32m+[m	[32m * @param boolean        $parents   also export parents[m
[32m+[m	[32m * @param array          $filters   only these types (whitelist)[m
[32m+[m	[32m * @param string         $caseStyle case style identifier[m
[32m+[m	[32m * @param boolean        $meta      export meta data as well[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function exportAll( $beans, $parents = FALSE, $filters = array(), $caseStyle = 'snake', $meta = FALSE)[m
[32m+[m	[32m{[m
[32m+[m		[32m$array = array();[m
[32m+[m		[32mif ( !is_array( $beans ) ) {[m
[32m+[m			[32m$beans = array( $beans );[m
[32m+[m		[32m}[m
[32m+[m		[32m$this->copyMeta = $meta;[m
[32m+[m		[32mforeach ( $beans as $bean ) {[m
[32m+[m			[32m$this->setFilters( $filters );[m
[32m+[m			[32m$duplicate = $this->dup( $bean, array(), TRUE );[m
[32m+[m			[32m$array[]   = $duplicate->export( $meta, $parents, FALSE, $filters );[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( $caseStyle === 'camel' ) $array = $this->camelfy( $array );[m
[32m+[m		[32mif ( $caseStyle === 'dolphin' ) $array = $this->camelfy( $array, TRUE );[m
[32m+[m		[32mreturn $array;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Array Tool Helper[m
[32m+[m[32m *[m
[32m+[m[32m * This code was originally part of the facade, however it has[m
[32m+[m[32m * been decided to remove unique features to service classes like[m
[32m+[m[32m * this to make them available to developers not using the facade class.[m
[32m+[m[32m *[m
[32m+[m[32m * This is a helper or service class containing frequently used[m
[32m+[m[32m * array functions for dealing with SQL queries.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/ArrayTool.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass ArrayTool[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Generates question mark slots for an array of values.[m
[32m+[m	[32m * Given an array and an optional template string this method[m
[32m+[m	[32m * will produce string containing parameter slots for use in[m
[32m+[m	[32m * an SQL query string.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::genSlots( array( 'a', 'b' ) );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The statement in the example will produce the string:[m
[32m+[m	[32m * '?,?'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Another example, using a template string:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::genSlots( array('a', 'b'), ' IN( %s ) ' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The statement in the example will produce the string:[m
[32m+[m	[32m * ' IN( ?,? ) '.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array  $array    array to generate question mark slots for[m
[32m+[m	[32m * @param string $template template to use[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function genSlots( $array, $template = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$str = count( $array ) ? implode( ',', array_fill( 0, count( $array ), '?' ) ) : '';[m
[32m+[m		[32mreturn ( is_null( $template ) ||  $str === '' ) ? $str : sprintf( $template, $str );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Flattens a multi dimensional bindings array for use with genSlots().[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::flat( array( 'a', array( 'b' ), 'c' ) );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * produces an array like: [ 'a', 'b', 'c' ][m
[32m+[m	[32m *[m
[32m+[m	[32m * @param array $array  array to flatten[m
[32m+[m	[32m * @param array $result result array parameter (for recursion)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function flat( $array, $result = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32mforeach( $array as $value ) {[m
[32m+[m			[32mif ( is_array( $value ) ) $result = self::flat( $value, $result );[m
[32m+[m			[32melse $result[] = $value;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $result;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Dispense Helper[m
[32m+[m[32m *[m
[32m+[m[32m * A helper class containing a dispense utility.[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @file    RedBeanPHP/Util/DispenseHelper.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass DispenseHelper[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $enforceNamingPolicy = TRUE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Sets the enforce naming policy flag. If set to[m
[32m+[m	[32m * TRUE the RedBeanPHP naming policy will be enforced.[m
[32m+[m	[32m * Otherwise it will not. Use at your own risk.[m
[32m+[m	[32m * Setting this to FALSE is not recommended.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param boolean $yesNo whether to enforce RB name policy[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function setEnforceNamingPolicy( $yesNo )[m
[32m+[m	[32m{[m
[32m+[m		[32mself::$enforceNamingPolicy = (boolean) $yesNo;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Checks whether the bean type conforms to the RedbeanPHP[m
[32m+[m	[32m * naming policy. This method will throw an exception if the[m
[32m+[m	[32m * type does not conform to the RedBeanPHP database column naming[m
[32m+[m	[32m * policy.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The RedBeanPHP naming policy for beans states that valid[m
[32m+[m	[32m * bean type names contain only:[m
[32m+[m	[32m *[m
[32m+[m	[32m * - lowercase alphanumeric characters a-z[m
[32m+[m	[32m * - numbers 0-9[m
[32m+[m	[32m * - at least one character[m
[32m+[m	[32m *[m
[32m+[m	[32m * Although there are no restrictions on length, database[m
[32m+[m	[32m * specific implementations may apply further restrictions[m
[32m+[m	[32m * regarding the length of a table which means these restrictions[m
[32m+[m	[32m * also apply to bean types.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The RedBeanPHP naming policy ensures that, without any[m
[32m+[m	[32m * configuration, the core functionalities work across many[m
[32m+[m	[32m * databases and operating systems, including those that are[m
[32m+[m	[32m * case insensitive or restricted to the ASCII character set.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Although these restrictions can be bypassed, this is not[m
[32m+[m	[32m * recommended.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $type type of bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function checkType( $type )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !preg_match( '/^[a-z0-9]+$/', $type ) ) {[m
[32m+[m			[32mthrow new RedException( 'Invalid type: ' . $type );[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dispenses a new RedBean OODB Bean for use with[m
[32m+[m	[32m * the rest of the methods. RedBeanPHP thinks in beans, the bean is the[m
[32m+[m	[32m * primary way to interact with RedBeanPHP and the database managed by[m
[32m+[m	[32m * RedBeanPHP. To load, store and delete data from the database using RedBeanPHP[m
[32m+[m	[32m * you exchange these RedBeanPHP OODB Beans. The only exception to this rule[m
[32m+[m	[32m * are the raw query methods like R::getCell() or R::exec() and so on.[m
[32m+[m	[32m * The dispense method is the 'preferred way' to create a new bean.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $book = R::dispense( 'book' );[m
[32m+[m	[32m * $book->title = 'My Book';[m
[32m+[m	[32m * R::store( $book );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method can also be used to create an entire bean graph at once.[m
[32m+[m	[32m * Given an array with keys specifying the property names of the beans[m
[32m+[m	[32m * and a special _type key to indicate the type of bean, one can[m
[32m+[m	[32m * make the Dispense Helper generate an entire hierarchy of beans, including[m
[32m+[m	[32m * lists. To make dispense() generate a list, simply add a key like:[m
[32m+[m	[32m * ownXList or sharedXList where X is the type of beans it contains and[m
[32m+[m	[32m * a set its value to an array filled with arrays representing the beans.[m
[32m+[m	[32m * Note that, although the type may have been hinted at in the list name,[m
[32m+[m	[32m * you still have to specify a _type key for every bean array in the list.[m
[32m+[m	[32m * Note that, if you specify an array to generate a bean graph, the number[m
[32m+[m	[32m * parameter will be ignored.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m *  $book = R::dispense( [[m
[32m+[m	[32m *   '_type' => 'book',[m
[32m+[m	[32m *   'title'  => 'Gifted Programmers',[m
[32m+[m	[32m *   'author' => [ '_type' => 'author', 'name' => 'Xavier' ],[m
[32m+[m	[32m *   'ownPageList' => [ ['_type'=>'page', 'text' => '...'] ][m
[32m+[m	[32m * ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string|array $typeOrBeanArray   type or bean array to import[m
[32m+[m	[32m * @param integer      $num               number of beans to dispense[m
[32m+[m	[32m * @param boolean      $alwaysReturnArray if TRUE always returns the result as an array[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array|OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dispense( OODB $oodb, $typeOrBeanArray, $num = 1, $alwaysReturnArray = FALSE ) {[m
[32m+[m
[32m+[m		[32mif ( is_array($typeOrBeanArray) ) {[m
[32m+[m
[32m+[m			[32mif ( !isset( $typeOrBeanArray['_type'] ) ) {[m
[32m+[m				[32m$list = array();[m
[32m+[m				[32mforeach( $typeOrBeanArray as $beanArray ) {[m
[32m+[m					[32mif ([m
[32m+[m						[32m!( is_array( $beanArray )[m
[32m+[m						[32m&& isset( $beanArray['_type'] ) ) ) {[m
[32m+[m						[32mthrow new RedException( 'Invalid Array Bean' );[m
[32m+[m					[32m}[m
[32m+[m				[32m}[m
[32m+[m				[32mforeach( $typeOrBeanArray as $beanArray ) $list[] = self::dispense( $oodb, $beanArray );[m
[32m+[m				[32mreturn $list;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$import = $typeOrBeanArray;[m
[32m+[m			[32m$type = $import['_type'];[m
[32m+[m			[32munset( $import['_type'] );[m
[32m+[m		[32m} else {[m
[32m+[m			[32m$type = $typeOrBeanArray;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif (self::$enforceNamingPolicy) self::checkType( $type );[m
[32m+[m
[32m+[m		[32m$beanOrBeans = $oodb->dispense( $type, $num, $alwaysReturnArray );[m
[32m+[m
[32m+[m		[32mif ( isset( $import ) ) {[m
[32m+[m			[32m$beanOrBeans->import( $import );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $beanOrBeans;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Takes a comma separated list of bean types[m
[32m+[m	[32m * and dispenses these beans. For each type in the list[m
[32m+[m	[32m * you can specify the number of beans to be dispensed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list( $book, $page, $text ) = R::dispenseAll( 'book,page,text' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This will dispense a book, a page and a text. This way you can[m
[32m+[m	[32m * quickly dispense beans of various types in just one line of code.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list($book, $pages) = R::dispenseAll('book,page*100');[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * This returns an array with a book bean and then another array[m
[32m+[m	[32m * containing 100 page beans.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODB    $oodb       OODB[m
[32m+[m	[32m * @param string  $order      a description of the desired dispense order using the syntax above[m
[32m+[m	[32m * @param boolean $onlyArrays return only arrays even if amount < 2[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dispenseAll( OODB $oodb, $order, $onlyArrays = FALSE )[m
[32m+[m	[32m{[m
[32m+[m		[32m$list = array();[m
[32m+[m
[32m+[m		[32mforeach( explode( ',', $order ) as $order ) {[m
[32m+[m			[32mif ( strpos( $order, '*' ) !== FALSE ) {[m
[32m+[m				[32mlist( $type, $amount ) = explode( '*', $order );[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$type   = $order;[m
[32m+[m				[32m$amount = 1;[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32m$list[] = self::dispense( $oodb, $type, $amount, $onlyArrays );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $list;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Dump helper[m
[32m+[m[32m *[m
[32m+[m[32m * This code was originally part of the facade, however it has[m
[32m+[m[32m * been decided to remove unique features to service classes like[m
[32m+[m[32m * this to make them available to developers not using the facade class.[m
[32m+[m[32m *[m
[32m+[m[32m * Dumps the contents of a bean in an array for[m
[32m+[m[32m * debugging purposes.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/Dump.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Dump[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Dumps bean data to array.[m
[32m+[m	[32m * Given a one or more beans this method will[m
[32m+[m	[32m * return an array containing first part of the string[m
[32m+[m	[32m * representation of each item in the array.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * echo R::dump( $bean );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example shows how to echo the result of a simple[m
[32m+[m	[32m * dump. This will print the string representation of the[m
[32m+[m	[32m * specified bean to the screen, limiting the output per bean[m
[32m+[m	[32m * to 35 characters to improve readability. Nested beans will[m
[32m+[m	[32m * also be dumped.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $data either a bean or an array of beans[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function dump( $data )[m
[32m+[m	[32m{[m
[32m+[m		[32m$array = array();[m
[32m+[m		[32mif ( $data instanceof OODBBean ) {[m
[32m+[m			[32m$str = strval( $data );[m
[32m+[m			[32mif (strlen($str) > 35) {[m
[32m+[m				[32m$beanStr = substr( $str, 0, 35 ).'... ';[m
[32m+[m			[32m} else {[m
[32m+[m				[32m$beanStr = $str;[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn $beanStr;[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( is_array( $data ) ) {[m
[32m+[m			[32mforeach( $data as $key => $item ) {[m
[32m+[m				[32m$array[$key] = self::dump( $item );[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $array;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Multi Bean Loader Helper[m
[32m+[m[32m *[m
[32m+[m[32m * This code was originally part of the facade, however it has[m
[32m+[m[32m * been decided to remove unique features to service classes like[m
[32m+[m[32m * this to make them available to developers not using the facade class.[m
[32m+[m[32m *[m
[32m+[m[32m * This helper class offers limited support for one-to-one[m
[32m+[m[32m * relations by providing a service to load a set of beans[m
[32m+[m[32m * with differnt types and a common ID.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/MultiLoader.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass MultiLoader[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Loads multiple types of beans with the same ID.[m
[32m+[m	[32m * This might look like a strange method, however it can be useful[m
[32m+[m	[32m * for loading a one-to-one relation. In a typical 1-1 relation,[m
[32m+[m	[32m * you have two records sharing the same primary key.[m
[32m+[m	[32m * RedBeanPHP has only limited support for 1-1 relations.[m
[32m+[m	[32m * In general it is recommended to use 1-N for this.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * list( $author, $bio ) = R::loadMulti( 'author, bio', $id );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODB         $oodb  OODB object[m
[32m+[m	[32m * @param string|array $types the set of types to load at once[m
[32m+[m	[32m * @param mixed        $id    the common ID[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return OODBBean[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function load( OODB $oodb, $types, $id )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( is_string( $types ) ) $types = explode( ',', $types );[m
[32m+[m		[32mif ( !is_array( $types ) ) return array();[m
[32m+[m		[32mforeach ( $types as $k => $typeItem ) {[m
[32m+[m			[32m$types[$k] = $oodb->load( $typeItem, $id );[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $types;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\RedException as RedException;[m
[32m+[m[32muse RedBeanPHP\Adapter as Adapter;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Transaction Helper[m
[32m+[m[32m *[m
[32m+[m[32m * This code was originally part of the facade, however it has[m
[32m+[m[32m * been decided to remove unique features to service classes like[m
[32m+[m[32m * this to make them available to developers not using the facade class.[m
[32m+[m[32m *[m
[32m+[m[32m * Database transaction helper. This is a convenience class[m
[32m+[m[32m * to perform a callback in a database transaction. This class[m
[32m+[m[32m * contains a method to wrap your callback in a transaction.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/Transaction.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Transaction[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Wraps a transaction around a closure or string callback.[m
[32m+[m	[32m * If an Exception is thrown inside, the operation is automatically rolled back.[m
[32m+[m	[32m * If no Exception happens, it commits automatically.[m
[32m+[m	[32m * It also supports (simulated) nested transactions (that is useful when[m
[32m+[m	[32m * you have many methods that needs transactions but are unaware of[m
[32m+[m	[32m * each other).[m
[32m+[m	[32m *[m
[32m+[m	[32m * Example:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $from = 1;[m
[32m+[m	[32m * $to = 2;[m
[32m+[m	[32m * $amount = 300;[m
[32m+[m	[32m *[m
[32m+[m	[32m * R::transaction(function() use($from, $to, $amount)[m
[32m+[m	[32m * {[m
[32m+[m	[32m *   $accountFrom = R::load('account', $from);[m
[32m+[m	[32m *   $accountTo = R::load('account', $to);[m
[32m+[m	[32m *   $accountFrom->money -= $amount;[m
[32m+[m	[32m *   $accountTo->money += $amount;[m
[32m+[m	[32m *   R::store($accountFrom);[m
[32m+[m	[32m *   R::store($accountTo);[m
[32m+[m	[32m * });[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param Adapter  $adapter  Database Adapter providing transaction mechanisms.[m
[32m+[m	[32m * @param callable $callback Closure (or other callable) with the transaction logic[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function transaction( Adapter $adapter, $callback )[m
[32m+[m	[32m{[m
[32m+[m		[32mif ( !is_callable( $callback ) ) {[m
[32m+[m			[32mthrow new RedException( 'R::transaction needs a valid callback.' );[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mstatic $depth = 0;[m
[32m+[m		[32m$result = null;[m
[32m+[m		[32mtry {[m
[32m+[m			[32mif ( $depth == 0 ) {[m
[32m+[m				[32m$adapter->startTransaction();[m
[32m+[m			[32m}[m
[32m+[m			[32m$depth++;[m
[32m+[m			[32m$result = call_user_func( $callback ); //maintain 5.2 compatibility[m
[32m+[m			[32m$depth--;[m
[32m+[m			[32mif ( $depth == 0 ) {[m
[32m+[m				[32m$adapter->commit();[m
[32m+[m			[32m}[m
[32m+[m		[32m} catch ( \Exception $exception ) {[m
[32m+[m			[32m$depth--;[m
[32m+[m			[32mif ( $depth == 0 ) {[m
[32m+[m				[32m$adapter->rollback();[m
[32m+[m			[32m}[m
[32m+[m			[32mthrow $exception;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $result;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Quick Export Utility[m
[32m+[m[32m *[m
[32m+[m[32m * The Quick Export Utility Class provides functionality to easily[m
[32m+[m[32m * expose the result of SQL queries as well-known formats like CSV.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/QuickExporft.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass QuickExport[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Finder[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @boolean[m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static $test = FALSE;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The Quick Export requires a toolbox.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Makes csv() testable.[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function operation( $name, $arg1, $arg2 = TRUE ) {[m
[32m+[m		[32m$out = '';[m
[32m+[m		[32mswitch( $name ) {[m
[32m+[m			[32mcase 'test':[m
[32m+[m				[32mself::$test = (boolean) $arg1;[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 'header':[m
[32m+[m				[32m$out = ( self::$test ) ? $arg1 : header( $arg1, $arg2 );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 'readfile':[m
[32m+[m				[32m$out = ( self::$test ) ? file_get_contents( $arg1 ) : readfile( $arg1 );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase 'exit':[m
[32m+[m				[32m$out = ( self::$test ) ? 'exit' : exit();[m
[32m+[m				[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn $out;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Exposes the result of the specified SQL query as a CSV file.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::csv( 'SELECT[m
[32m+[m	[32m *   `name`,[m
[32m+[m	[32m *   population[m
[32m+[m	[32m *   FROM city[m
[32m+[m	[32m *   WHERE region = :region ',[m
[32m+[m	[32m *   array( ':region' => 'Denmark' ),[m
[32m+[m	[32m *   array( 'city', 'population' ),[m
[32m+[m	[32m *   '/tmp/cities.csv'[m
[32m+[m	[32m * );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The command above will select all cities in Denmark[m
[32m+[m	[32m * and create a CSV with columns 'city' and 'population' and[m
[32m+[m	[32m * populate the cells under these column headers with the[m
[32m+[m	[32m * names of the cities and the population numbers respectively.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string  $sql      SQL query to expose result of[m
[32m+[m	[32m * @param array   $bindings parameter bindings[m
[32m+[m	[32m * @param array   $columns  column headers for CSV file[m
[32m+[m	[32m * @param string  $path     path to save CSV file to[m
[32m+[m	[32m * @param boolean $output   TRUE to output CSV directly using readfile[m
[32m+[m	[32m * @param array   $options  delimiter, quote and escape character respectively[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function csv( $sql = '', $bindings = array(), $columns = NULL, $path = '/tmp/redexport_%s.csv', $output = TRUE, $options = array(',','"','\\') )[m
[32m+[m	[32m{[m
[32m+[m		[32mlist( $delimiter, $enclosure, $escapeChar ) = $options;[m
[32m+[m		[32m$path = sprintf( $path, date('Ymd_his') );[m
[32m+[m		[32m$handle = fopen( $path, 'w' );[m
[32m+[m		[32mif ($columns) if (PHP_VERSION_ID>=505040) fputcsv($handle, $columns, $delimiter, $enclosure, $escapeChar ); else fputcsv($handle, $columns, $delimiter, $enclosure );[m
[32m+[m		[32m$cursor = $this->toolbox->getDatabaseAdapter()->getCursor( $sql, $bindings );[m
[32m+[m		[32mwhile( $row = $cursor->getNextItem() ) {[m
[32m+[m			[32mif (PHP_VERSION_ID>=505040) fputcsv($handle, $row, $delimiter, $enclosure, $escapeChar ); else fputcsv($handle, $row, $delimiter, $enclosure );[m
[32m+[m		[32m}[m
[32m+[m		[32mfclose($handle);[m
[32m+[m		[32mif ( $output ) {[m
[32m+[m			[32m$file = basename($path);[m
[32m+[m			[32m$out = self::operation('header',"Pragma: public");[m
[32m+[m			[32m$out .= self::operation('header',"Expires: 0");[m
[32m+[m			[32m$out .= self::operation('header',"Cache-Control: must-revalidate, post-check=0, pre-check=0");[m
[32m+[m			[32m$out .= self::operation('header',"Cache-Control: private", FALSE );[m
[32m+[m			[32m$out .= self::operation('header',"Content-Type: text/csv");[m
[32m+[m			[32m$out .= self::operation('header',"Content-Disposition: attachment; filename={$file}" );[m
[32m+[m			[32m$out .= self::operation('header',"Content-Transfer-Encoding: binary");[m
[32m+[m			[32m$out .= self::operation('readfile',$path );[m
[32m+[m			[32m@unlink( $path );[m
[32m+[m			[32mself::operation('exit', FALSE);[m
[32m+[m			[32mreturn $out;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\Finder;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * MatchUp Utility[m
[32m+[m[32m *[m
[32m+[m[32m * Tired of creating login systems and password-forget systems?[m
[32m+[m[32m * MatchUp is an ORM-translation of these kind of problems.[m
[32m+[m[32m * A matchUp is a match-and-update combination in terms of beans.[m
[32m+[m[32m * Typically login related problems are all about a match and[m
[32m+[m[32m * a conditional update.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/MatchUp.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass MatchUp[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The MatchUp class requires a toolbox[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * MatchUp is a powerful productivity boosting method that can replace simple control[m
[32m+[m	[32m * scripts with a single RedBeanPHP command. Typically, matchUp() is used to[m
[32m+[m	[32m * replace login scripts, token generation scripts and password reset scripts.[m
[32m+[m	[32m * The MatchUp method takes a bean type, an SQL query snippet (starting at the WHERE clause),[m
[32m+[m	[32m * SQL bindings, a pair of task arrays and a bean reference.[m
[32m+[m	[32m *[m
[32m+[m	[32m * If the first 3 parameters match a bean, the first task list will be considered,[m
[32m+[m	[32m * otherwise the second one will be considered. On consideration, each task list,[m
[32m+[m	[32m * an array of keys and values will be executed. Every key in the task list should[m
[32m+[m	[32m * correspond to a bean property while every value can either be an expression to[m
[32m+[m	[32m * be evaluated or a closure (PHP 5.3+). After applying the task list to the bean[m
[32m+[m	[32m * it will be stored. If no bean has been found, a new bean will be dispensed.[m
[32m+[m	[32m *[m
[32m+[m	[32m * This method will return TRUE if the bean was found and FALSE if not AND[m
[32m+[m	[32m * there was a NOT-FOUND task list. If no bean was found AND there was also[m
[32m+[m	[32m * no second task list, NULL will be returned.[m
[32m+[m	[32m *[m
[32m+[m	[32m * To obtain the bean, pass a variable as the sixth parameter.[m
[32m+[m	[32m * The function will put the matching bean in the specified variable.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage (this example resets a password in one go):[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $newpass = '1234';[m
[32m+[m	[32m * $didResetPass = R::matchUp([m
[32m+[m	[32m * 'account', ' token = ? AND tokentime > ? ',[m
[32m+[m	[32m * [ $token, time()-100 ],[m
[32m+[m	[32m * [ 'pass' => $newpass, 'token' => '' ],[m
[32m+[m	[32m * NULL,[m
[32m+[m	[32m * $account );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $type         type of bean you're looking for[m
[32m+[m	[32m * @param string   $sql          SQL snippet (starting at the WHERE clause, omit WHERE-keyword)[m
[32m+[m	[32m * @param array    $bindings     array of parameter bindings for SQL snippet[m
[32m+[m	[32m * @param array    $onFoundDo    task list to be considered on finding the bean[m
[32m+[m	[32m * @param array    $onNotFoundDo task list to be considered on NOT finding the bean[m
[32m+[m	[32m * @param OODBBean &$bean        reference to obtain the found bean[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return mixed[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function matchUp( $type, $sql, $bindings = array(), $onFoundDo = NULL, $onNotFoundDo = NULL, &$bean = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$finder = new Finder( $this->toolbox );[m
[32m+[m		[32m$oodb   = $this->toolbox->getRedBean();[m
[32m+[m		[32m$bean = $finder->findOne( $type, $sql, $bindings );[m
[32m+[m		[32mif ( $bean && $onFoundDo ) {[m
[32m+[m			[32mforeach( $onFoundDo as $property => $value ) {[m
[32m+[m				[32mif ( function_exists('is_callable') && is_callable( $value ) ) {[m
[32m+[m					[32m$bean[$property] = call_user_func_array( $value, array( $bean ) );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$bean[$property] = $value;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$oodb->store( $bean );[m
[32m+[m			[32mreturn TRUE;[m
[32m+[m		[32m}[m
[32m+[m		[32mif ( $onNotFoundDo ) {[m
[32m+[m			[32m$bean = $oodb->dispense( $type );[m
[32m+[m			[32mforeach( $onNotFoundDo as $property => $value ) {[m
[32m+[m				[32mif ( function_exists('is_callable') && is_callable( $value ) ) {[m
[32m+[m					[32m$bean[$property] = call_user_func_array( $value, array( $bean ) );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$bean[$property] = $value;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$oodb->store( $bean );[m
[32m+[m			[32mreturn FALSE;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn NULL;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\Finder;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Look Utility[m
[32m+[m[32m *[m
[32m+[m[32m * The Look Utility class provides an easy way to generate[m
[32m+[m[32m * tables and selects (pulldowns) from the database.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/Look.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Look[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The MatchUp class requires a toolbox[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Takes an full SQL query with optional bindings, a series of keys, a template[m
[32m+[m	[32m * and optionally a filter function and glue and assembles a view from all this.[m
[32m+[m	[32m * This is the fastest way from SQL to view. Typically this function is used to[m
[32m+[m	[32m * generate pulldown (select tag) menus with options queried from the database.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $htmlPulldown = R::look([m
[32m+[m	[32m *   'SELECT * FROM color WHERE value != ? ORDER BY value ASC',[m
[32m+[m	[32m *   [ 'g' ],[m
[32m+[m	[32m *   [ 'value', 'name' ],[m
[32m+[m	[32m *   '<option value="%s">%s</option>',[m
[32m+[m	[32m *   'strtoupper',[m
[32m+[m	[32m *   "\n"[m
[32m+[m	[32m * );[m
[32m+[m	[32m *</code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * The example above creates an HTML fragment like this:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <option value="B">BLUE</option>[m
[32m+[m	[32m * <option value="R">RED</option>[m
[32m+[m	[32m *[m
[32m+[m	[32m * to pick a color from a palette. The HTML fragment gets constructed by[m
[32m+[m	[32m * an SQL query that selects all colors that do not have value 'g' - this[m
[32m+[m	[32m * excludes green. Next, the bean properties 'value' and 'name' are mapped to the[m
[32m+[m	[32m * HTML template string, note that the order here is important. The mapping and[m
[32m+[m	[32m * the HTML template string follow vsprintf-rules. All property values are then[m
[32m+[m	[32m * passed through the specified filter function 'strtoupper' which in this case[m
[32m+[m	[32m * is a native PHP function to convert strings to uppercase characters only.[m
[32m+[m	[32m * Finally the resulting HTML fragment strings are glued together using a[m
[32m+[m	[32m * newline character specified in the last parameter for readability.[m
[32m+[m	[32m *[m
[32m+[m	[32m * In previous versions of RedBeanPHP you had to use:[m
[32m+[m	[32m * R::getLook()->look() instead of R::look(). However to improve useability of the[m
[32m+[m	[32m * library the look() function can now directly be invoked from the facade.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string   $sql      query to execute[m
[32m+[m	[32m * @param array    $bindings parameters to bind to slots mentioned in query or an empty array[m
[32m+[m	[32m * @param array    $keys     names in result collection to map to template[m
[32m+[m	[32m * @param string   $template HTML template to fill with values associated with keys, use printf notation (i.e. %s)[m
[32m+[m	[32m * @param callable $filter   function to pass values through (for translation for instance)[m
[32m+[m	[32m * @param string   $glue     optional glue to use when joining resulting strings[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return string[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function look( $sql, $bindings = array(), $keys = array( 'selected', 'id', 'name' ), $template = '<option %s value="%s">%s</option>', $filter = 'trim', $glue = '' )[m
[32m+[m	[32m{[m
[32m+[m		[32m$adapter = $this->toolbox->getDatabaseAdapter();[m
[32m+[m		[32m$lines = array();[m
[32m+[m		[32m$rows = $adapter->get( $sql, $bindings );[m
[32m+[m		[32mforeach( $rows as $row ) {[m
[32m+[m			[32m$values = array();[m
[32m+[m			[32mforeach( $keys as $key ) {[m
[32m+[m				[32mif (!empty($filter)) {[m
[32m+[m					[32m$values[] = call_user_func_array( $filter, array( $row[$key] ) );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$values[] = $row[$key];[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32m$lines[] = vsprintf( $template, $values );[m
[32m+[m		[32m}[m
[32m+[m		[32m$string = implode( $glue, $lines );[m
[32m+[m		[32mreturn $string;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\OODB as OODB;[m
[32m+[m[32muse RedBeanPHP\OODBBean as OODBBean;[m
[32m+[m[32muse RedBeanPHP\ToolBox as ToolBox;[m
[32m+[m[32muse RedBeanPHP\Finder;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Diff Utility[m
[32m+[m[32m *[m
[32m+[m[32m * The Look Utility class provides an easy way to generate[m
[32m+[m[32m * tables and selects (pulldowns) from the database.[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * @file    RedBeanPHP/Util/Diff.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Diff[m
[32m+[m[32m{[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var Toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor.[m
[32m+[m	[32m * The MatchUp class requires a toolbox[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Calculates a diff between two beans (or arrays of beans).[m
[32m+[m	[32m * The result of this method is an array describing the differences of the second bean compared to[m
[32m+[m	[32m * the first, where the first bean is taken as reference. The array is keyed by type/property, id and property name, where[m
[32m+[m	[32m * type/property is either the type (in case of the root bean) or the property of the parent bean where the type resides.[m
[32m+[m	[32m * The diffs are mainly intended for logging, you cannot apply these diffs as patches to other beans.[m
[32m+[m	[32m * However this functionality might be added in the future.[m
[32m+[m	[32m *[m
[32m+[m	[32m * The keys of the array can be formatted using the $format parameter.[m
[32m+[m	[32m * A key will be composed of a path (1st), id (2nd) and property (3rd).[m
[32m+[m	[32m * Using printf-style notation you can determine the exact format of the key.[m
[32m+[m	[32m * The default format will look like:[m
[32m+[m	[32m *[m
[32m+[m	[32m * 'book.1.title' => array( <OLDVALUE>, <NEWVALUE> )[m
[32m+[m	[32m *[m
[32m+[m	[32m * If you only want a simple diff of one bean and you don't care about ids,[m
[32m+[m	[32m * you might pass a format like: '%1$s.%3$s' which gives:[m
[32m+[m	[32m *[m
[32m+[m	[32m * 'book.1.title' => array( <OLDVALUE>, <NEWVALUE> )[m
[32m+[m	[32m *[m
[32m+[m	[32m * The filter parameter can be used to set filters, it should be an array[m
[32m+[m	[32m * of property names that have to be skipped. By default this array is filled with[m
[32m+[m	[32m * two strings: 'created' and 'modified'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean|array $beans   reference beans[m
[32m+[m	[32m * @param OODBBean|array $others  beans to compare[m
[32m+[m	[32m * @param array          $filters names of properties of all beans to skip[m
[32m+[m	[32m * @param string         $format  the format of the key, defaults to '%s.%s.%s'[m
[32m+[m	[32m * @param string         $type    type/property of bean to use for key generation[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function diff( $beans, $others, $filters = array( 'created', 'modified' ), $format = '%s.%s.%s', $type = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32m$diff = array();[m
[32m+[m
[32m+[m		[32mif ( !is_array( $beans ) ) $beans = array( $beans );[m
[32m+[m		[32m$beansI = array();[m
[32m+[m		[32mforeach ( $beans as $bean ) {[m
[32m+[m			[32mif ( !( $bean instanceof OODBBean ) ) continue;[m
[32m+[m			[32m$beansI[$bean->id] = $bean;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( !is_array( $others ) ) $others = array( $others );[m
[32m+[m		[32m$othersI = array();[m
[32m+[m		[32mforeach ( $others as $other ) {[m
[32m+[m			[32mif ( !( $other instanceof OODBBean ) ) continue;[m
[32m+[m			[32m$othersI[$other->id] = $other;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif ( count( $beansI ) == 0 || count( $othersI ) == 0 ) {[m
[32m+[m			[32mreturn array();[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m$type = $type != NULL ? $type : reset($beansI)->getMeta( 'type' );[m
[32m+[m
[32m+[m		[32mforeach( $beansI as $id => $bean ) {[m
[32m+[m			[32mif ( !isset( $othersI[$id] ) ) continue;[m
[32m+[m			[32m$other = $othersI[$id];[m
[32m+[m			[32mforeach( $bean as $property => $value ) {[m
[32m+[m				[32mif ( in_array( $property, $filters ) ) continue;[m
[32m+[m				[32m$key = vsprintf( $format, array( $type, $bean->id, $property ) );[m
[32m+[m				[32m$compare = $other->{$property};[m
[32m+[m				[32mif ( !is_object( $value ) && !is_array( $value ) && $value != $compare ) {[m
[32m+[m					[32m$diff[$key] = array( $value, $compare );[m
[32m+[m				[32m} else {[m
[32m+[m					[32m$diff = array_merge( $diff, $this->diff( $value, $compare, $filters, $format, $key ) );[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mreturn $diff;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m
[32m+[m[32muse RedBeanPHP\ToolBox;[m
[32m+[m[32muse RedBeanPHP\OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tree[m
[32m+[m[32m *[m
[32m+[m[32m * Given a bean, finds it children or parents[m
[32m+[m[32m * in a hierchical structure.[m
[32m+[m[32m *[m
[32m+[m[32m * @experimental feature[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/Tree.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Tree {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var ToolBox[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $toolbox;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var QueryWriter[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $writer;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * @var OODB[m
[32m+[m	[32m */[m
[32m+[m	[32mprotected $oodb;[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Constructor, creates a new instance of[m
[32m+[m	[32m * the Tree.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param ToolBox $toolbox toolbox[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function __construct( ToolBox $toolbox )[m
[32m+[m	[32m{[m
[32m+[m		[32m$this->toolbox = $toolbox;[m
[32m+[m		[32m$this->writer  = $toolbox->getWriter();[m
[32m+[m		[32m$this->oodb    = $toolbox->getRedBean();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all child beans associates with the specified[m
[32m+[m	[32m * bean in a tree structure.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this only works for databases that support[m
[32m+[m	[32m * recusrive common table expressions.[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $newsArticles = R::children( $newsPage, ' ORDER BY title ASC ' )[m[41m [m
[32m+[m	[32m * $newsArticles = R::children( $newsPage, ' WHERE title = ? ', [ $t ] );[m
[32m+[m	[32m * $newsArticles = R::children( $newsPage, ' WHERE title = :t ', [ ':t' => $t ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     reference bean to find children of[m
[32m+[m	[32m * @param string   $sql      optional SQL snippet[m
[32m+[m	[32m * @param array    $bindings optional parameter bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function children( OODBBean $bean, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $bean->getMeta('type');[m
[32m+[m		[32m$id   = $bean->id;[m
[32m+[m
[32m+[m		[32m$rows = $this->writer->queryRecursiveCommonTableExpression( $type, $id, FALSE, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mreturn $this->oodb->convertToBeans( $type, $rows );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Returns all parent beans associates with the specified[m
[32m+[m	[32m * bean in a tree structure.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this only works for databases that support[m
[32m+[m	[32m * recusrive common table expressions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $newsPages = R::parents( $newsArticle, ' ORDER BY title ASC ' );[m
[32m+[m	[32m * $newsPages = R::parents( $newsArticle, ' WHERE title = ? ', [ $t ] );[m
[32m+[m	[32m * $newsPages = R::parents( $newsArticle, ' WHERE title = :t ', [ ':t' => $t ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     reference bean to find parents of[m
[32m+[m	[32m * @param string   $sql      optional SQL snippet[m
[32m+[m	[32m * @param array    $bindings optional parameter bindings for SQL snippet[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return array[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function parents( OODBBean $bean, $sql = NULL, $bindings = array() )[m
[32m+[m	[32m{[m
[32m+[m		[32m$type = $bean->getMeta('type');[m
[32m+[m		[32m$id   = $bean->id;[m
[32m+[m
[32m+[m		[32m$rows = $this->writer->queryRecursiveCommonTableExpression( $type, $id, TRUE, $sql, $bindings );[m
[32m+[m
[32m+[m		[32mreturn $this->oodb->convertToBeans( $type, $rows );[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts all children beans associates with the specified[m
[32m+[m	[32m * bean in a tree structure.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this only works for databases that support[m
[32m+[m	[32m * recusrive common table expressions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $count = R::countChildren( $newsArticle );[m
[32m+[m	[32m * $count = R::countChildren( $newsArticle, ' WHERE title = ? ', [ $t ] );[m
[32m+[m	[32m * $count = R::countChildren( $newsArticle, ' WHERE title = :t ', [ ':t' => $t ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note:[m
[32m+[m	[32m * By default, if no SQL or select is given or select=TRUE this method will subtract 1 of[m
[32m+[m	[32m * the total count to omit the starting bean. If you provide your own select,[m
[32m+[m	[32m * this method assumes you take control of the resulting total yourself since[m
[32m+[m	[32m * it cannot 'predict' what or how you are trying to 'count'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean       $bean     reference bean to find children of[m
[32m+[m	[32m * @param string         $sql      optional SQL snippet[m
[32m+[m	[32m * @param array          $bindings optional parameter bindings for SQL snippet[m
[32m+[m	[32m * @param string|boolean $select   select snippet to use (advanced, optional, see QueryWriter::queryRecursiveCommonTableExpression)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countChildren( OODBBean $bean, $sql = NULL, $bindings = array(), $select = TRUE ) {[m
[32m+[m		[32m$type = $bean->getMeta('type');[m
[32m+[m		[32m$id   = $bean->id;[m
[32m+[m		[32m$rows = $this->writer->queryRecursiveCommonTableExpression( $type, $id, FALSE, $sql, $bindings, $select );[m
[32m+[m		[32m$first = reset($rows);[m
[32m+[m		[32m$cell  = reset($first);[m
[32m+[m		[32mreturn (intval($cell) - (($select === TRUE && is_null($sql)) ? 1 : 0));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Counts all parent beans associates with the specified[m
[32m+[m	[32m * bean in a tree structure.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @note this only works for databases that support[m
[32m+[m	[32m * recusrive common table expressions.[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * $count = R::countParents( $newsArticle );[m
[32m+[m	[32m * $count = R::countParents( $newsArticle, ' WHERE title = ? ', [ $t ] );[m
[32m+[m	[32m * $count = R::countParents( $newsArticle, ' WHERE title = :t ', [ ':t' => $t ] );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * You are allowed to use named parameter bindings as well as[m
[32m+[m	[32m * numeric parameter bindings (using the question mark notation).[m
[32m+[m	[32m * However, you can not mix. Also, if using named parameter bindings,[m
[32m+[m	[32m * parameter binding key ':slot0' is reserved for the ID of the bean[m
[32m+[m	[32m * and used in the query.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Note:[m
[32m+[m	[32m * By default, if no SQL or select is given or select=TRUE this method will subtract 1 of[m
[32m+[m	[32m * the total count to omit the starting bean. If you provide your own select,[m
[32m+[m	[32m * this method assumes you take control of the resulting total yourself since[m
[32m+[m	[32m * it cannot 'predict' what or how you are trying to 'count'.[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param OODBBean $bean     reference bean to find parents of[m
[32m+[m	[32m * @param string   $sql      optional SQL snippet[m
[32m+[m	[32m * @param array    $bindings optional parameter bindings for SQL snippet[m
[32m+[m	[32m * @param string|boolean $select   select snippet to use (advanced, optional, see QueryWriter::queryRecursiveCommonTableExpression)[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return integer[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic function countParents( OODBBean $bean, $sql = NULL, $bindings = array(), $select = TRUE ) {[m
[32m+[m		[32m$type = $bean->getMeta('type');[m
[32m+[m		[32m$id   = $bean->id;[m
[32m+[m		[32m$rows = $this->writer->queryRecursiveCommonTableExpression( $type, $id, TRUE, $sql, $bindings, $select );[m
[32m+[m		[32m$first = reset($rows);[m
[32m+[m		[32m$cell  = reset($first);[m
[32m+[m		[32mreturn (intval($cell) - (($select === TRUE && is_null($sql)) ? 1 : 0));[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP\Util {[m
[32m+[m[32muse RedBeanPHP\Facade as R;[m
[32m+[m[32muse RedBeanPHP\OODBBean;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Feature Utility[m
[32m+[m[32m *[m
[32m+[m[32m * The Feature Utility class provides an easy way to turn[m
[32m+[m[32m * on or off features. This allows us to introduce new features[m
[32m+[m[32m * without accidentally breaking backward compatibility.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Util/Feature.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32mclass Feature[m
[32m+[m[32m{[m
[32m+[m	[32m/* Feature set constants */[m
[32m+[m	[32mconst C_FEATURE_NOVICE_LATEST = 'novice/latest';[m
[32m+[m	[32mconst C_FEATURE_LATEST        = 'latest';[m
[32m+[m	[32mconst C_FEATURE_NOVICE_5_5    = 'novice/5.5';[m
[32m+[m	[32mconst C_FEATURE_5_5           = '5.5';[m
[32m+[m	[32mconst C_FEATURE_NOVICE_5_4    = 'novice/5.4';[m
[32m+[m	[32mconst C_FEATURE_5_4           = '5.4';[m
[32m+[m	[32mconst C_FEATURE_NOVICE_5_3    = 'novice/5.3';[m
[32m+[m	[32mconst C_FEATURE_5_3           = '5.3';[m
[32m+[m	[32mconst C_FEATURE_ORIGINAL      = 'original';[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Selects the feature set you want as specified by[m
[32m+[m	[32m * the label.[m
[32m+[m	[32m *[m
[32m+[m	[32m * Available labels:[m
[32m+[m	[32m *[m
[32m+[m	[32m * novice/latest:[m
[32m+[m	[32m * - forbid R::nuke()[m
[32m+[m	[32m * - enable automatic relation resolver based on foreign keys[m
[32m+[m	[32m * - forbid R::store(All)( $bean, TRUE ) (Hybrid mode)[m
[32m+[m	[32m * - use IS-NULL conditions in findLike() etc[m
[32m+[m	[32m *[m
[32m+[m	[32m * latest:[m
[32m+[m	[32m * - allow R::nuke()[m
[32m+[m	[32m * - enable auto resolve[m
[32m+[m	[32m * - allow hybrid mode[m
[32m+[m	[32m * - use IS-NULL conditions in findLike() etc[m
[32m+[m	[32m *[m
[32m+[m	[32m * novice/X or X:[m
[32m+[m	[32m * - keep everything as it was in version X[m
[32m+[m	[32m *[m
[32m+[m	[32m * Usage:[m
[32m+[m	[32m *[m
[32m+[m	[32m * <code>[m
[32m+[m	[32m * R::useFeatureSet( 'novice/latest' );[m
[32m+[m	[32m * </code>[m
[32m+[m	[32m *[m
[32m+[m	[32m * @param string $label label[m
[32m+[m	[32m *[m
[32m+[m	[32m * @return void[m
[32m+[m	[32m */[m
[32m+[m	[32mpublic static function feature( $label ) {[m
[32m+[m		[32mswitch( $label ) {[m
[32m+[m			[32mcase self::C_FEATURE_NOVICE_LATEST:[m
[32m+[m			[32mcase self::C_FEATURE_NOVICE_5_4:[m
[32m+[m			[32mcase self::C_FEATURE_NOVICE_5_5:[m
[32m+[m				[32mOODBBean::useFluidCount( TRUE );[m
[32m+[m				[32mR::noNuke( TRUE );[m
[32m+[m				[32mR::setAllowHybridMode( FALSE );[m
[32m+[m				[32mR::useISNULLConditions( TRUE );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase self::C_FEATURE_LATEST:[m
[32m+[m			[32mcase self::C_FEATURE_5_4:[m
[32m+[m			[32mcase self::C_FEATURE_5_5:[m
[32m+[m				[32mOODBBean::useFluidCount( TRUE );[m
[32m+[m				[32mR::noNuke( FALSE );[m
[32m+[m				[32mR::setAllowHybridMode( TRUE );[m
[32m+[m				[32mR::useISNULLConditions( TRUE );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase self::C_FEATURE_NOVICE_5_3:[m
[32m+[m				[32mOODBBean::useFluidCount( TRUE );[m
[32m+[m				[32mR::noNuke( TRUE );[m
[32m+[m				[32mR::setAllowHybridMode( FALSE );[m
[32m+[m				[32mR::useISNULLConditions( FALSE );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase self::C_FEATURE_5_3:[m
[32m+[m				[32mOODBBean::useFluidCount( TRUE );[m
[32m+[m				[32mR::noNuke( FALSE );[m
[32m+[m				[32mR::setAllowHybridMode( FALSE );[m
[32m+[m				[32mR::useISNULLConditions( FALSE );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase self::C_FEATURE_ORIGINAL:[m
[32m+[m				[32mOODBBean::useFluidCount( TRUE );[m
[32m+[m				[32mR::noNuke( FALSE );[m
[32m+[m				[32mR::setAllowHybridMode( FALSE );[m
[32m+[m				[32mR::useISNULLConditions( FALSE );[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mdefault:[m
[32m+[m				[32mthrow new \Exception("Unknown feature set label.");[m
[32m+[m				[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnamespace RedBeanPHP {[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * RedBean Plugin.[m
[32m+[m[32m * Marker interface for plugins.[m
[32m+[m[32m * Use this interface when defining new plugins, it's an[m
[32m+[m[32m * easy way for the rest of the application to recognize your[m
[32m+[m[32m * plugin. This plugin interface does not require you to[m
[32m+[m[32m * implement a specific API.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBean/Plugin.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m[32minterface Plugin[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m;[m
[32m+[m[32m}[m
[32m+[m[32mnamespace {[m
[32m+[m
[32m+[m[32m//make some classes available for backward compatibility[m
[32m+[m[32mclass RedBean_SimpleModel extends \RedBeanPHP\SimpleModel {};[m
[32m+[m
[32m+[m[32mif (!class_exists('R')) {[m
[32m+[m	[32mclass R extends \RedBeanPHP\Facade{};[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Support functions for RedBeanPHP.[m
[32m+[m[32m * Additional convenience shortcut functions for RedBeanPHP.[m
[32m+[m[32m *[m
[32m+[m[32m * @file    RedBeanPHP/Functions.php[m
[32m+[m[32m * @author  Gabor de Mooij and the RedBeanPHP community[m
[32m+[m[32m * @license BSD/GPLv2[m
[32m+[m[32m *[m
[32m+[m[32m * @copyright[m
[32m+[m[32m * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.[m
[32m+[m[32m * This source file is subject to the BSD/GPLv2 License that is bundled[m
[32m+[m[32m * with this source code in the file license.txt.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Convenience function for ENUM short syntax in queries.[m
[32m+[m[32m *[m
[32m+[m[32m * Usage:[m
[32m+[m[32m *[m
[32m+[m[32m * <code>[m
[32m+[m[32m * R::find( 'paint', ' color_id = ? ', [ EID('color:yellow') ] );[m
[32m+[m[32m * </code>[m
[32m+[m[32m *[m
[32m+[m[32m * If a function called EID() already exists you'll have to write this[m
[32m+[m[32m * wrapper yourself ;)[m
[32m+[m[32m *[m
[32m+[m[32m * @param string $enumName enum code as you would pass to R::enum()[m
[32m+[m[32m *[m
[32m+[m[32m * @return mixed[m
[32m+[m[32m */[m
[32m+[m[32mif (!function_exists('EID')) {[m
[32m+[m
[32m+[m	[32mfunction EID($enumName)[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn \RedBeanPHP\Facade::enum( $enumName )->id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Prints the result of R::dump() to the screen using[m
[32m+[m[32m * print_r.[m
[32m+[m[32m *[m
[32m+[m[32m * @param mixed $data data to dump[m
[32m+[m[32m *[m
[32m+[m[32m * @return void[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists( 'dmp' ) ) {[m
[32m+[m
[32m+[m	[32mfunction dmp( $list )[m
[32m+[m	[32m{[m
[32m+[m		[32mprint_r( \RedBeanPHP\Facade::dump( $list ) );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Function alias for R::genSlots().[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists( 'genslots' ) ) {[m
[32m+[m
[32m+[m	[32mfunction genslots( $slots, $tpl = NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn \RedBeanPHP\Facade::genSlots( $slots, $tpl );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Function alias for R::flat().[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists( 'array_flatten' ) ) {[m
[32m+[m
[32m+[m	[32mfunction array_flatten( $array )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn \RedBeanPHP\Facade::flat( $array );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Function pstr() generates [ $value, \PDO::PARAM_STR ][m
[32m+[m[32m * Ensures that your parameter is being treated as a string.[m
[32m+[m[32m *[m
[32m+[m[32m * Usage:[m
[32m+[m[32m *[m
[32m+[m[32m * <code>[m
[32m+[m[32m * R::find('book', 'title = ?', [ pstr('1') ]);[m
[32m+[m[32m * </code>[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists( 'pstr' ) ) {[m
[32m+[m
[32m+[m	[32mfunction pstr( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array( strval( $value ) , \PDO::PARAM_STR );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Function pint() generates [ $value, \PDO::PARAM_INT ][m
[32m+[m[32m * Ensures that your parameter is being treated as an integer.[m
[32m+[m[32m *[m
[32m+[m[32m * Usage:[m
[32m+[m[32m *[m
[32m+[m[32m * <code>[m
[32m+[m[32m * R::find('book', ' pages > ? ', [ pint(2) ] );[m
[32m+[m[32m * </code>[m
[32m+[m[32m */[m
[32m+[m[32mif ( !function_exists( 'pint' ) ) {[m
[32m+[m
[32m+[m	[32mfunction pint( $value )[m
[32m+[m	[32m{[m
[32m+[m		[32mreturn array( intval( $value ) , \PDO::PARAM_INT );[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/framework/widgets/language/Language.php b/vendor/framework/widgets/language/Language.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6b5602d[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/widgets/language/Language.php[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\widgets\language;[m
[32m+[m
[32m+[m[32muse framework\core\App;[m
[32m+[m
[32m+[m[32mclass Language {[m
[32m+[m
[32m+[m[32m    protected $tpl;[m
[32m+[m[32m    protected $languages;[m
[32m+[m[32m    protected $language;[m
[32m+[m
[32m+[m[32m    public function __construct(){[m
[32m+[m[32m        $this->tpl = __DIR__ . '/lang.php';[m
[32m+[m[32m        $this->run();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function run(){[m
[32m+[m[32m        $this->languages = App::$app->getProperty('langs');[m
[32m+[m[32m        $this->language = App::$app->getProperty('lang');[m
[32m+[m[32m        echo $this->getHtml();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function getLanguages(){[m
[32m+[m[32m        return \R::getAssoc("SELECT code, name, base FROM lang ORDER BY base DESC");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function getLanguage($languages){[m
[32m+[m[32m        if(isset($_COOKIE['lang']) && array_key_exists($_COOKIE['lang'], $languages)){[m
[32m+[m[32m            $key = $_COOKIE['lang'];[m
[32m+[m[32m        }else{[m
[32m+[m[32m            $key = key($languages);[m
[32m+[m[32m        }[m
[32m+[m[32m        $lang = $languages[$key];[m
[32m+[m[32m        $lang['code'] = $key;[m
[32m+[m[32m        return $lang;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getHtml(){[m
[32m+[m[32m        ob_start();[m
[32m+[m
[32m+[m[32m        require_once $this->tpl;[m
[32m+[m
[32m+[m[32m        return ob_get_clean();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/widgets/language/lang.php b/vendor/framework/widgets/language/lang.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b0ee0c2[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/widgets/language/lang.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<select class="selectpicker" id="lang">[m
[32m+[m[32m    <option value="<?php echo $this->language['code'];?>"><?php echo $this->language['name'];?></option>[m
[32m+[m[32m    <?php foreach($this->languages as $k => $v): ?>[m
[32m+[m[32m        <?php if($this->language['code'] != $k): ?>[m
[32m+[m[32m            <option value="<?php echo $k;?>"><?php echo $v['name'];?></option>[m
[32m+[m[32m        <?php endif; ?>[m
[32m+[m[32m    <?php endforeach; ?>[m
[32m+[m[32m</select>[m
[32m+[m
[1mdiff --git a/vendor/framework/widgets/menu/Menu.php b/vendor/framework/widgets/menu/Menu.php[m
[1mnew file mode 100644[m
[1mindex 0000000..87e7c0f[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/widgets/menu/Menu.php[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace framework\widgets\menu;[m
[32m+[m
[32m+[m[32muse framework\libs\Cache;[m
[32m+[m
[32m+[m[32mclass Menu {[m
[32m+[m[32m    protected $data;[m
[32m+[m[32m    protected $tree;[m
[32m+[m[32m    protected $menuHtml;[m
[32m+[m[32m    protected $tpl;[m
[32m+[m[32m    protected $container = 'ul';[m
[32m+[m[32m    protected $class = 'menu';[m
[32m+[m[32m    protected $table = 'menu';[m
[32m+[m[32m    protected $cache = 3600;[m
[32m+[m[32m    protected $cacheKey = 'menu';[m
[32m+[m
[32m+[m[32m    public function __construct($options) {[m
[32m+[m[32m        $this->tpl = __DIR__ . '/theme/menu.php';[m
[32m+[m[32m        $this->getOptions($options);[m
[32m+[m[32m        $this->run();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getOptions($options) {[m
[32m+[m[32m        foreach ($options as $k => $v) {[m
[32m+[m[32m            if (property_exists($this, $k)) {[m
[32m+[m[32m                $this->$k = $v;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function output() {[m
[32m+[m[32m        echo "<{$this->container} class='{$this->class}'>";[m
[32m+[m[32m            echo $this->menuHtml;[m
[32m+[m[32m        echo "</{$this->container}>";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function run() {[m
[32m+[m[32m        $cache = new Cache();[m
[32m+[m[32m        $this->menuHtml = $cache->get('menu');[m
[32m+[m[32m        if (!$this->menuHtml) {[m
[32m+[m[32m            $this->data = \R::getAssoc("SELECT * FROM {$this->table}");[m
[32m+[m[32m            $this->tree = $this->getTree();[m
[32m+[m[32m            $this->menuHtml = $this->getMenuHtml($this->tree);[m
[32m+[m[32m            $cache->set('menu', $this->menuHtml, $this->cache);[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->output();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getTree() {[m
[32m+[m[32m        $tree = [];[m
[32m+[m[32m        $data = $this->data;[m
[32m+[m
[32m+[m[32m        foreach ($data as $id => &$node) {[m
[32m+[m[32m            if (!$node['parent']) {[m
[32m+[m[32m                $tree[$id] = &$node;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $data[$node['parent']]['childs'][$id] = &$node;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $tree;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getMenuHtml($tree, $tab = '') {[m
[32m+[m[32m        $str = '';[m
[32m+[m
[32m+[m[32m        foreach ($tree as $id => $menu) {[m
[32m+[m[32m            $str .= $this->menuToTemplate($menu, $tab, $id);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $str;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function menuToTemplate($menu, $tab, $id) {[m
[32m+[m[32m        ob_start();[m
[32m+[m
[32m+[m[32m        require $this->tpl;[m
[32m+[m
[32m+[m[32m        return ob_get_clean();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/vendor/framework/widgets/menu/theme/menu.php b/vendor/framework/widgets/menu/theme/menu.php[m
[1mnew file mode 100644[m
[1mindex 0000000..45c581e[m
[1m--- /dev/null[m
[1m+++ b/vendor/framework/widgets/menu/theme/menu.php[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<li>[m
[32m+[m[32m    <a href="?id=<?php echo $id; ?>"><?php echo $menu['name']; ?></a>[m
[32m+[m[32m    <?php if (isset($menu['childs'])): ?>[m
[32m+[m[32m        <ul>[m
[32m+[m[32m            <?php echo $this->getMenuHtml($menu['childs']); ?>[m
[32m+[m[32m        </ul>[m
[32m+[m[32m    <?php endif; ?>[m
[32m+[m[32m</li>[m
\ No newline at end of file[m
[1mdiff --git a/vendor/vlucas/valitron/.github/FUNDING.yml b/vendor/vlucas/valitron/.github/FUNDING.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..ce3de2d[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/.github/FUNDING.yml[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mtidelift: "packagist/vlucas/valitron"[m
[1mdiff --git a/vendor/vlucas/valitron/.github/workflows/test.yml b/vendor/vlucas/valitron/.github/workflows/test.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..93e07ad[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/.github/workflows/test.yml[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32mname: Run Tests[m
[32m+[m
[32m+[m[32mon: [push, pull_request][m
[32m+[m
[32m+[m[32mjobs:[m
[32m+[m[32m  test:[m
[32m+[m[32m    runs-on: ${{ matrix.operating-system }}[m
[32m+[m[32m    strategy:[m
[32m+[m[32m      matrix:[m
[32m+[m[32m        operating-system: ['ubuntu-latest'][m
[32m+[m[32m        php-versions:[m
[32m+[m[32m        - '5.4'[m
[32m+[m[32m        - '5.5'[m
[32m+[m[32m        - '5.6'[m
[32m+[m[32m        - '7.0'[m
[32m+[m[32m        - '7.1'[m
[32m+[m[32m        - '7.2'[m
[32m+[m[32m        - '7.3'[m
[32m+[m[32m        - '7.4'[m
[32m+[m[32m        - '8.0'[m
[32m+[m[32m #      - '8.1'[m
[32m+[m[32m    steps:[m
[32m+[m[32m      - name: Checkout[m
[32m+[m[32m        uses: actions/checkout@v2[m
[32m+[m[32m      - name: Setup PHP[m
[32m+[m[32m        uses: shivammathur/setup-php@v2[m
[32m+[m[32m        with:[m
[32m+[m[32m          php-version: ${{ matrix.php-versions }}[m
[32m+[m[32m      - name: Cache composer packages[m
[32m+[m[32m        id: composer-cache[m
[32m+[m[32m        uses: actions/cache@v2[m
[32m+[m[32m        with:[m
[32m+[m[32m          path: vendor[m
[32m+[m[32m          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}[m
[32m+[m[32m          restore-keys: |[m
[32m+[m[32m            ${{ runner.os }}-php-${{ matrix.php-versions }}-[m
[32m+[m[32m      - name: Validate composer configuration[m
[32m+[m[32m        run: |[m
[32m+[m[32m          composer validate[m
[32m+[m[32m      - name: Install dependencies[m
[32m+[m[32m        run: |[m
[32m+[m[32m          composer install --no-progress[m
[32m+[m[32m      - name: Run tests[m
[32m+[m[32m        run: |[m
[32m+[m[32m          composer run-script test[m
[32m+[m
[32m+[m[32m#  test-hhvm:[m
[32m+[m[32m#    runs-on: ubuntu-latest[m
[32m+[m[32m#    steps:[m
[32m+[m[32m#      - name: Checkout[m
[32m+[m[32m#        uses: actions/checkout@v2[m
[32m+[m[32m#      - name: Setup HHVM[m
[32m+[m[32m#        uses: azjezz/setup-hhvm@v1[m
[32m+[m[32m#        with:[m
[32m+[m[32m#          version: latest[m
[32m+[m[32m#          debug: false[m
[32m+[m[32m#      - name: Cache composer packages[m
[32m+[m[32m#        id: composer-cache[m
[32m+[m[32m#        uses: actions/cache@v2[m
[32m+[m[32m#        with:[m
[32m+[m[32m#          path: vendor[m
[32m+[m[32m#          key: ${{ runner.os }}-hhvm-${{ hashFiles('**/composer.lock') }}[m
[32m+[m[32m#          restore-keys: |[m
[32m+[m[32m#            ${{ runner.os }}-hhvm-[m
[32m+[m[32m#      - name: Validate composer configuration[m
[32m+[m[32m#        run: |[m
[32m+[m[32m#          composer validate[m
[32m+[m[32m#      - name: Install dependencies[m
[32m+[m[32m#        run: |[m
[32m+[m[32m#          composer install --no-progress[m
[32m+[m[32m#      - name: Run tests[m
[32m+[m[32m#        run: |[m
[32m+[m[32m#          composer run-script test[m
\ No newline at end of file[m
[1mdiff --git a/vendor/vlucas/valitron/LICENSE.txt b/vendor/vlucas/valitron/LICENSE.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..70ee47e[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/LICENSE.txt[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mThe BSD 3-Clause License[m
[32m+[m[32mhttp://opensource.org/licenses/BSD-3-Clause[m
[32m+[m
[32m+[m[32mCopyright (c) 2013, Vance Lucas[m
[32m+[m[32mAll rights reserved.[m
[32m+[m
[32m+[m[32mRedistribution and use in source and binary forms, with or without[m
[32m+[m[32mmodification, are permitted provided that the following conditions are[m
[32m+[m[32mmet:[m
[32m+[m
[32m+[m[32m * Redistributions of source code must retain the above copyright[m
[32m+[m[32m   notice,[m
[32m+[m[32mthis list of conditions and the following disclaimer.[m
[32m+[m[32m * Redistributions in binary form must reproduce the above copyright[m
[32m+[m[32mnotice, this list of conditions and the following disclaimer in the[m
[32m+[m[32mdocumentation and/or other materials provided with the distribution.[m
[32m+[m[32m * Neither the name of the Vance Lucas nor the names of its contributors[m
[32m+[m[32mmay be used to endorse or promote products derived from this software[m
[32m+[m[32mwithout specific prior written permission.[m
[32m+[m
[32m+[m[32mTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS[m
[32m+[m[32mIS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED[m
[32m+[m[32mTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A[m
[32m+[m[32mPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT[m
[32m+[m[32mHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,[m
[32m+[m[32mSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED[m
[32m+[m[32mTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR[m
[32m+[m[32mPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF[m
[32m+[m[32mLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING[m
[32m+[m[32mNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS[m
[32m+[m[32mSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.[m
[32m+[m
[1mdiff --git a/vendor/vlucas/valitron/README.md b/vendor/vlucas/valitron/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..e8e08f4[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/README.md[m
[36m@@ -0,0 +1,1354 @@[m
[32m+[m[32m## Valitron: Easy Validation That Doesn't Suck[m
[32m+[m
[32m+[m[32mValitron is a simple, minimal and elegant stand-alone validation library[m
[32m+[m[32mwith NO dependencies. Valitron uses simple, straightforward validation[m
[32m+[m[32mmethods with a focus on readable and concise syntax. Valitron is the[m
[32m+[m[32msimple and pragmatic validation library you've been looking for.[m
[32m+[m
[32m+[m[32m[![Build[m
[32m+[m[32mStatus](https://github.com/vlucas/valitron/actions/workflows/test.yml/badge.svg)](https://github.com/vlucas/valitron/actions/workflows/test.yml)[m
[32m+[m[32m[![Latest Stable Version](https://poser.pugx.org/vlucas/valitron/v/stable.png)](https://packagist.org/packages/vlucas/valitron)[m
[32m+[m[32m[![Total Downloads](https://poser.pugx.org/vlucas/valitron/downloads.png)](https://packagist.org/packages/vlucas/valitron)[m
[32m+[m
[32m+[m[32m[Get supported vlucas/valitron with the Tidelift Subscription](https://tidelift.com/subscription/pkg/packagist-vlucas-valitron?utm_source=packagist-vlucas-valitron&utm_medium=referral&utm_campaign=readme)[m[41m [m
[32m+[m
[32m+[m[32m## Why Valitron?[m
[32m+[m
[32m+[m[32mValitron was created out of frustration with other validation libraries[m
[32m+[m[32mthat have dependencies on large components from other frameworks like[m
[32m+[m[32mSymfony's HttpFoundation, pulling in a ton of extra files that aren't[m
[32m+[m[32mreally needed for basic validation. It also has purposefully simple[m
[32m+[m[32msyntax used to run all validations in one call instead of individually[m
[32m+[m[32mvalidating each value by instantiating new classes and validating values[m
[32m+[m[32mone at a time like some other validation libraries require.[m
[32m+[m
[32m+[m[32mIn short, Valitron is everything you've been looking for in a validation[m
[32m+[m[32mlibrary but haven't been able to find until now: simple pragmatic[m
[32m+[m[32msyntax, lightweight code that makes sense, extensible for custom[m
[32m+[m[32mcallbacks and validations, well tested, and without dependencies. Let's[m
[32m+[m[32mget started.[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32mValitron uses [Composer](http://getcomposer.org) to install and update:[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mcurl -s http://getcomposer.org/installer | php[m
[32m+[m[32mphp composer.phar require vlucas/valitron[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThe examples below use PHP 5.4 syntax, but Valitron works on PHP 5.3+.[m
[32m+[m
[32m+[m[32m## Usage[m
[32m+[m
[32m+[m[32mUsage is simple and straightforward. Just supply an array of data you[m
[32m+[m[32mwish to validate, add some rules, and then call `validate()`. If there[m
[32m+[m[32mare any errors, you can call `errors()` to get them.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array('name' => 'Chester Tester'));[m
[32m+[m[32m$v->rule('required', 'name');[m
[32m+[m[32mif($v->validate()) {[m
[32m+[m[32m    echo "Yay! We're all good!";[m
[32m+[m[32m} else {[m
[32m+[m[32m    // Errors[m
[32m+[m[32m    print_r($v->errors());[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mUsing this format, you can validate `$_POST` data directly and easily,[m
[32m+[m[32mand can even apply a rule like `required` to an array of fields:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator($_POST);[m
[32m+[m[32m$v->rule('required', ['name', 'email']);[m
[32m+[m[32m$v->rule('email', 'email');[m
[32m+[m[32mif($v->validate()) {[m
[32m+[m[32m    echo "Yay! We're all good!";[m
[32m+[m[32m} else {[m
[32m+[m[32m    // Errors[m
[32m+[m[32m    print_r($v->errors());[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou may use dot syntax to access members of multi-dimensional arrays,[m
[32m+[m[32mand an asterisk to validate each member of an array:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array('settings' => array([m
[32m+[m[32m    array('threshold' => 50),[m
[32m+[m[32m    array('threshold' => 90)[m
[32m+[m[32m)));[m
[32m+[m[32m$v->rule('max', 'settings.*.threshold', 100);[m
[32m+[m[32mif($v->validate()) {[m
[32m+[m[32m    echo "Yay! We're all good!";[m
[32m+[m[32m} else {[m
[32m+[m[32m    // Errors[m
[32m+[m[32m    print_r($v->errors());[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mOr use dot syntax to validate all members of a numeric array:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array('values' => array(50, 90)));[m
[32m+[m[32m$v->rule('max', 'values.*', 100);[m
[32m+[m[32mif($v->validate()) {[m
[32m+[m[32m    echo "Yay! We're all good!";[m
[32m+[m[32m} else {[m
[32m+[m[32m    // Errors[m
[32m+[m[32m    print_r($v->errors());[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can also access nested values using dot notation:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array('user' => array('first_name' => 'Steve', 'last_name' => 'Smith', 'username' => 'Batman123')));[m
[32m+[m[32m$v->rule('alpha', 'user.first_name')->rule('alpha', 'user.last_name')->rule('alphaNum', 'user.username');[m
[32m+[m[32mif($v->validate()) {[m
[32m+[m[32m    echo "Yay! We're all good!";[m
[32m+[m[32m} else {[m
[32m+[m[32m    // Errors[m
[32m+[m[32m    print_r($v->errors());[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mSetting language and language dir globally:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m
[32m+[m[32m// boot or config file[m
[32m+[m
[32m+[m[32muse Valitron\Validator as V;[m
[32m+[m
[32m+[m[32mV::langDir(__DIR__.'/validator_lang'); // always set langDir before lang.[m
[32m+[m[32mV::lang('ar');[m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mDisabling the {field} name in the output of the error message.[m[41m [m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32muse Valitron\Validator as V;[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator(['name' => 'John']);[m
[32m+[m[32m$v->rule('required', ['name']);[m
[32m+[m
[32m+[m[32m// Disable prepending the labels[m
[32m+[m[32m$v->setPrependLabels(false);[m
[32m+[m
[32m+[m[32m// Error output for the "false" condition[m
[32m+[m[32m[[m
[32m+[m[32m    ["name"] => [[m
[32m+[m[32m        "is required"[m
[32m+[m[32m    ][m
[32m+[m[32m][m
[32m+[m
[32m+[m[32m// Error output for the default (true) condition[m
[32m+[m[32m[[m
[32m+[m[32m    ["name"] => [[m
[32m+[m[32m        "name is required"[m
[32m+[m[32m    ][m
[32m+[m[32m][m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can conditionally require values using required conditional rules. In this example, for authentication, we're requiring either a token when both the email and password are not present, or a password when the email address is present.[m
[32m+[m[32m```php[m
[32m+[m[32m// this rule set would work for either data set...[m
[32m+[m[32m$data = ['email' => 'test@test.com', 'password' => 'mypassword'];[m
[32m+[m[32m// or...[m
[32m+[m[32m$data = ['token' => 'jashdjahs83rufh89y38h38h'];[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator($data);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWithout' => [[m
[32m+[m[32m        ['token', ['email', 'password'], true][m
[32m+[m[32m    ],[m
[32m+[m[32m    'requiredWith' => [[m
[32m+[m[32m        ['password', ['email']][m
[32m+[m[32m    ],[m
[32m+[m[32m    'email' => [[m
[32m+[m[32m        ['email'][m
[32m+[m[32m    ][m
[32m+[m[32m    'optional' => [[m
[32m+[m[32m        ['email'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$this->assertTrue($v->validate());[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Built-in Validation Rules[m
[32m+[m
[32m+[m[32m * `required` - Field is required[m
[32m+[m[32m * `requiredWith` - Field is required if any other fields are present[m
[32m+[m[32m * `requiredWithout` - Field is required if any other fields are NOT present[m
[32m+[m[32m * `equals` - Field must match another field (email/password confirmation)[m
[32m+[m[32m * `different` - Field must be different than another field[m
[32m+[m[32m * `accepted` - Checkbox or Radio must be accepted (yes, on, 1, true)[m
[32m+[m[32m * `numeric` - Must be numeric[m
[32m+[m[32m * `integer` - Must be integer number[m
[32m+[m[32m * `boolean` - Must be boolean[m
[32m+[m[32m * `array` - Must be array[m
[32m+[m[32m * `length` - String must be certain length[m
[32m+[m[32m * `lengthBetween` - String must be between given lengths[m
[32m+[m[32m * `lengthMin` - String must be greater than given length[m
[32m+[m[32m * `lengthMax` - String must be less than given length[m
[32m+[m[32m * `min` - Minimum[m
[32m+[m[32m * `max` - Maximum[m
[32m+[m[32m * `listContains` - Performs in_array check on given array values (the other way round than `in`)[m
[32m+[m[32m * `in` - Performs in_array check on given array values[m
[32m+[m[32m * `notIn` - Negation of `in` rule (not in array of values)[m
[32m+[m[32m * `ip` - Valid IP address[m
[32m+[m[32m * `ipv4` - Valid IP v4 address[m
[32m+[m[32m * `ipv6` - Valid IP v6 address[m
[32m+[m[32m * `email` - Valid email address[m
[32m+[m[32m * `emailDNS` - Valid email address with active DNS record[m
[32m+[m[32m * `url` - Valid URL[m
[32m+[m[32m * `urlActive` - Valid URL with active DNS record[m
[32m+[m[32m * `alpha` - Alphabetic characters only[m
[32m+[m[32m * `alphaNum` - Alphabetic and numeric characters only[m
[32m+[m[32m * `ascii` - ASCII characters only[m
[32m+[m[32m * `slug` - URL slug characters (a-z, 0-9, -, \_)[m
[32m+[m[32m * `regex` - Field matches given regex pattern[m
[32m+[m[32m * `date` - Field is a valid date[m
[32m+[m[32m * `dateFormat` - Field is a valid date in the given format[m
[32m+[m[32m * `dateBefore` - Field is a valid date and is before the given date[m
[32m+[m[32m * `dateAfter` - Field is a valid date and is after the given date[m
[32m+[m[32m * `contains` - Field is a string and contains the given string[m
[32m+[m[32m * `subset` - Field is an array or a scalar and all elements are contained in the given array[m
[32m+[m[32m * `containsUnique` - Field is an array and contains unique values[m
[32m+[m[32m * `creditCard` - Field is a valid credit card number[m
[32m+[m[32m * `instanceOf` - Field contains an instance of the given class[m
[32m+[m[32m * `optional` - Value does not need to be included in data array. If it is however, it must pass validation.[m
[32m+[m[32m * `arrayHasKeys` - Field is an array and contains all specified keys.[m
[32m+[m
[32m+[m[32m**NOTE**: If you are comparing floating-point numbers with min/max validators, you[m
[32m+[m[32mshould install the [BCMath](http://us3.php.net/manual/en/book.bc.php)[m
[32m+[m[32mextension for greater accuracy and reliability. The extension is not required[m
[32m+[m[32mfor Valitron to work, but Valitron will use it if available, and it is highly[m
[32m+[m[32mrecommended.[m
[32m+[m
[32m+[m[32m## required fields usage[m
[32m+[m[32mthe `required` rule checks if a field exists in the data array, and is not null or an empty string.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('required', 'field_name');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mUsing an extra parameter, you can make this rule more flexible, and only check if the field exists in the data array.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('required', 'field_name', true);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman', 'password' => 'Gr33nG0Blin', 'required_but_null' => null]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'required' => [[m
[32m+[m[32m        ['username'],[m
[32m+[m[32m        ['password'],[m
[32m+[m[32m        ['required_but_null', true] // boolean flag allows empty value so long as the field name is set on the data array[m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## requiredWith fields usage[m
[32m+[m[32mThe `requiredWith` rule checks that the field is required, not null, and not the empty string, if any other fields are present, not null, and not the empty string.[m
[32m+[m[32m```php[m
[32m+[m[32m// password field will be required when the username field is provided and not empty[m
[32m+[m[32m$v->rule('requiredWith', 'password', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman', 'password' => 'Gr33nG0Blin']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWith' => [[m
[32m+[m[32m        ['password', 'username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m*Note* You can provide multiple values as an array. In this case if ANY of the fields are present the field will be required.[m
[32m+[m[32m```php[m
[32m+[m[32m// in this case the password field will be required if the username or email fields are present[m
[32m+[m[32m$v->rule('requiredWith', 'password', ['username', 'email']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman', 'password' => 'Gr33nG0Blin']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWith' => [[m
[32m+[m[32m        ['password', ['username', 'email']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Strict flag[m
[32m+[m[32mThe strict flag will change the `requiredWith` rule to `requiredWithAll` which will require the field only if ALL of the other fields are present, not null, and not the empty string.[m
[32m+[m[32m```php[m
[32m+[m[32m// in this example the suffix field is required only when both the first_name and last_name are provided[m
[32m+[m[32m$v->rule('requiredWith', 'suffix', ['first_name', 'last_name'], true);[m
[32m+[m[32m```[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['first_name' => 'steve', 'last_name' => 'holt', 'suffix' => 'Mr']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWith' => [[m
[32m+[m[32m        ['suffix', ['first_name', 'last_name'], true][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mLikewise, in this case `validate()` would still return true, as the suffix field would not be required in strict mode, as not all of the fields are provided.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['first_name' => 'steve']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWith' => [[m
[32m+[m[32m        ['suffix', ['first_name', 'last_name'], true][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## requiredWithout fields usage[m
[32m+[m[32mThe `requiredWithout` rule checks that the field is required, not null, and not the empty string, if any other fields are NOT present.[m
[32m+[m[32m```php[m
[32m+[m[32m// this rule will require the username field when the first_name is not present[m
[32m+[m[32m$v->rule('requiredWithout', 'username', 'first_name')[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m// this will return true, as the username is provided when the first_name is not provided[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWithout' => [[m
[32m+[m[32m        ['username', 'first_name'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m*Note* You can provide multiple values as an array. In this case if ANY of the fields are NOT present the field will be required.[m
[32m+[m[32m```php[m
[32m+[m[32m// in this case the username field will be required if either the first_name or last_name fields are not present[m
[32m+[m[32m$v->rule('requiredWithout', 'username', ['first_name', 'last_name']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m// this passes validation because although the last_name field is not present, the username is provided[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman', 'first_name' => 'Peter']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWithout' => [[m
[32m+[m[32m        ['username', ['first_name', 'last_name']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Strict flag[m
[32m+[m[32mThe strict flag will change the `requiredWithout` rule to `requiredWithoutAll` which will require the field only if ALL of the other fields are not present.[m
[32m+[m[32m```php[m
[32m+[m[32m// in this example the username field is required only when both the first_name and last_name are not provided[m
[32m+[m[32m$v->rule('requiredWithout', 'username', ['first_name', 'last_name'], true);[m
[32m+[m[32m```[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'BatMan']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWithout' => [[m
[32m+[m[32m        ['username', ['first_name', 'last_name'], true][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mLikewise, in this case `validate()` would still return true, as the username field would not be required in strict mode, as all of the fields are provided.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['first_name' => 'steve', 'last_name' => 'holt']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'requiredWithout' => [[m
[32m+[m[32m        ['suffix', ['first_name', 'last_name'], true][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## equals fields usage[m
[32m+[m[32mThe `equals` rule checks if two fields are equals in the data array, and that the second field is not null.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('equals', 'password', 'confirmPassword');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['password' => 'youshouldnotseethis', 'confirmPassword' => 'youshouldnotseethis']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'equals' => [[m
[32m+[m[32m        ['password', 'confirmPassword'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## different fields usage[m
[32m+[m[32mThe `different` rule checks if two fields are not the same, or different, in the data array and that the second field is not null.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('different', 'username', 'password');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'spiderman', 'password' => 'Gr33nG0Blin']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'different' => [[m
[32m+[m[32m        ['username', 'password'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## accepted fields usage[m
[32m+[m[32mThe `accepted` rule checks if the field is either 'yes', 'on', 1, or true.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('accepted', 'remember_me');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['remember_me' => true]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'accepted' => [[m
[32m+[m[32m        ['remember_me'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## numeric fields usage[m
[32m+[m[32mThe `numeric` rule checks if the field is number. This is analogous to php's is_numeric() function.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('numeric', 'amount');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['amount' => 3.14]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'numeric' => [[m
[32m+[m[32m        ['amount'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## integer fields usage[m
[32m+[m[32mThe `integer` rule checks if the field is an integer number.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('integer', 'age');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['age' => '27']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'integer' => [[m
[32m+[m[32m        ['age'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m*Note* the optional boolean flag for strict mode makes sure integers are to be supplied in a strictly numeric form. So the following rule would evaluate to true:[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['negative' => '-27', 'positive'=>'27']);[m
[32m+[m[32m$v->rule('integer', 'age', true);[m
[32m+[m[32m$v->rule('integer', 'height', true);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mWhereas the following will evaluate to false, as the + for the positive number in this case is redundant:[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['negative' => '-27', 'positive'=>'+27']);[m
[32m+[m[32m$v->rule('integer', 'age', true);[m
[32m+[m[32m$v->rule('integer', 'height', true);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## boolean fields usage[m
[32m+[m[32mThe `boolean` rule checks if the field is a boolean. This is analogous to php's is_bool() function.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('boolean', 'remember_me');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['remember_me' => true]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'boolean' => [[m
[32m+[m[32m        ['remember_me'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## array fields usage[m
[32m+[m[32mThe `array` rule checks if the field is an array. This is analogous to php's is_array() function.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('array', 'user_notifications');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate Syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_notifications' => ['bulletin_notifications' => true, 'marketing_notifications' => false, 'message_notification' => true]]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'array' => [[m
[32m+[m[32m        ['user_notifications'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## length fields usage[m
[32m+[m[32mThe `length` rule checks if the field is exactly a given length and that the field is a valid string.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('length', 'username', 10);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'bobburgers']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'length' => [[m
[32m+[m[32m        ['username', 10][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## lengthBetween fields usage[m
[32m+[m[32mThe `lengthBetween` rule checks if the field is between a given length tange and that the field is a valid string.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('lengthBetween', 'username', 1, 10);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'bobburgers']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'lengthBetween' => [[m
[32m+[m[32m        ['username', 1, 10][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## lengthMin fields usage[m
[32m+[m[32mThe `lengthMin` rule checks if the field is at least a given length and that the field is a valid string.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('lengthMin', 'username', 5);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'martha']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'lengthMin' => [[m
[32m+[m[32m        ['username', 5][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## lengthMax fields usage[m
[32m+[m[32mThe `lengthMax` rule checks if the field is at most a given length and that the field is a valid string.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('lengthMax', 'username', 10);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'bruins91']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'lengthMax' => [[m
[32m+[m[32m        ['username', 10][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## min fields usage[m
[32m+[m[32mThe `min` rule checks if the field is at least a given value and that the provided value is numeric.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('min', 'age', 18);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['age' => 28]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'min' => [[m
[32m+[m[32m        ['age', 18][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## max fields usage[m
[32m+[m[32mThe `max` rule checks if the field is at most a given value and that the provided value is numeric.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('max', 'age', 12);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['age' => 10]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'max' => [[m
[32m+[m[32m        ['age', 12][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## listContains fields usage[m
[32m+[m[32mThe `listContains` rule checks that the field is present in a given array of values.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('listContains', 'color', 'yellow');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['color' => ['blue', 'green', 'red', 'yellow']]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'listContains' => [[m
[32m+[m[32m        ['color', 'yellow'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## in fields usage[m
[32m+[m[32mThe `in` rule checks that the field is present in a given array of values.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('in', 'color', ['blue', 'green', 'red', 'purple']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['color' => 'purple']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'in' => [[m
[32m+[m[32m        ['color', ['blue', 'green', 'red', 'purple']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## notIn fields usage[m
[32m+[m[32mThe `notIn` rule checks that the field is NOT present in a given array of values.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('notIn', 'color', ['blue', 'green', 'red', 'yellow']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['color' => 'purple']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'notIn' => [[m
[32m+[m[32m        ['color', ['blue', 'green', 'red', 'yellow']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ip fields usage[m
[32m+[m[32mThe `ip` rule checks that the field is a valid ip address. This includes IPv4, IPv6, private, and reserved ranges.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('ip', 'user_ip');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_ip' => '127.0.0.1']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'ip' => [[m
[32m+[m[32m        ['user_ip'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ipv4 fields usage[m
[32m+[m[32mThe `ipv4` rule checks that the field is a valid IPv4 address.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('ipv4', 'user_ip');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_ip' => '127.0.0.1']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'ipv4' => [[m
[32m+[m[32m        ['user_ip'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ipv6 fields usage[m
[32m+[m[32mThe `ipv6` rule checks that the field is a valid IPv6 address.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('ipv6', 'user_ip');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_ip' => '0:0:0:0:0:0:0:1']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'ipv6' => [[m
[32m+[m[32m        ['user_ip'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## email fields usage[m
[32m+[m[32mThe `email` rule checks that the field is a valid email address.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('email', 'user_email');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_email' => 'someone@example.com']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'email' => [[m
[32m+[m[32m        ['user_email'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## emailDNS fields usage[m
[32m+[m[32mThe `emailDNS` rule validates the field is a valid email address with an active DNS record or any type.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('emailDNS', 'user_email');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['user_email' => 'some_fake_email_address@gmail.com']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'emailDNS' => [[m
[32m+[m[32m        ['user_email'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## url fields usage[m
[32m+[m[32mThe `url` rule checks the field is a valid url.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('url', 'website');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['website' => 'https://example.com/contact']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'url' => [[m
[32m+[m[32m        ['website'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## urlActive fields usage[m
[32m+[m[32mThe `urlActive` rule checks the field is a valid url with an active A, AAAA, or CNAME record.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('urlActive', 'website');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['website' => 'https://example.com/contact']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'urlActive' => [[m
[32m+[m[32m        ['website'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## alpha fields usage[m
[32m+[m[32mThe `alpha` rule checks the field is alphabetic characters only.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('alpha', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'batman']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'alpha' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## alphaNum fields usage[m
[32m+[m[32mThe `alphaNum` rule checks the field contains only alphabetic or numeric characters.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('alphaNum', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'alphaNum' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ascii fields usage[m
[32m+[m[32mThe `ascii` rule checks the field contains only characters in the ascii character set.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('ascii', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'ascii' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## slug fields usage[m
[32m+[m[32mThe `slug` rule checks that the field only contains URL slug characters (a-z, 0-9, -, _).[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('slug', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'L337-H4ckZ0rz_123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'slug' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## regex fields usage[m
[32m+[m[32mThe `regex` rule ensures the field matches a given regex pattern.[m
[32m+[m[32m(This regex checks the string is alpha numeric between 5-10 characters).[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('regex', 'username', '/^[a-zA-Z0-9]{5,10}$/');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'Batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'regex' => [[m
[32m+[m[32m        ['username', '/^[a-zA-Z0-9]{5,10}$/'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## date fields usage[m
[32m+[m[32mThe `date` rule checks if the supplied field is a valid \DateTime object or if the string can be converted to a unix timestamp via strtotime().[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('date', 'created_at');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['created_at' => '2018-10-13']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'date' => [[m
[32m+[m[32m        ['created_at'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## dateFormat fields usage[m
[32m+[m[32mThe `dateFormat` rule checks that the supplied field is a valid date in a specified date format.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('dateFormat', 'created_at', 'Y-m-d');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['created_at' => '2018-10-13']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'dateFormat' => [[m
[32m+[m[32m        ['created_at', 'Y-m-d'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## dateBefore fields usage[m
[32m+[m[32mThe `dateBefore` rule checks that the supplied field is a valid date before a specified date.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('dateBefore', 'created_at', '2018-10-13');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['created_at' => '2018-09-01']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'dateBefore' => [[m
[32m+[m[32m        ['created_at', '2018-10-13'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## dateAfter fields usage[m
[32m+[m[32mThe `dateAfter` rule checks that the supplied field is a valid date after a specified date.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('dateAfter', 'created_at', '2018-10-13');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['created_at' => '2018-09-01']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'dateAfter' => [[m
[32m+[m[32m        ['created_at', '2018-01-01'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## contains fields usage[m
[32m+[m[32mThe `contains` rule checks that a given string exists within the field and checks that the field and the search value are both valid strings.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('contains', 'username', 'man');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'Batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'contains' => [[m
[32m+[m[32m        ['username', 'man'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m*Note* You can use the optional strict flag to ensure a case-sensitive match.[m
[32m+[m[32mThe following example will return true:[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'Batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'contains' => [[m
[32m+[m[32m        ['username', 'man'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m[32mWhereas, this would return false, as the M in the search string is not uppercase in the provided value:[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'Batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'contains' => [[m
[32m+[m[32m        ['username', 'Man', true][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## subset fields usage[m
[32m+[m[32mThe `subset` rule checks that the field is either a scalar or array field and that all of it's values are contained within a given set of values.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('subset', 'colors', ['green', 'blue', 'orange']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['colors' => ['green', 'blue']]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'subset' => [[m
[32m+[m[32m        ['colors', ['orange', 'green', 'blue', 'red']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m[32mThis example would return false, as the provided color, purple, does not exist in the array of accepted values we're providing.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['colors' => ['purple', 'blue']]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'subset' => [[m
[32m+[m[32m        ['colors', ['orange', 'green', 'blue', 'red']][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## containsUnique fields usage[m
[32m+[m[32mThe `containsUnique` rule checks that the provided field is an array and that all values contained within are unique, i.e. no duplicate values in the array.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('containsUnique', 'colors');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['colors' => ['purple', 'blue']]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'containsUnique' => [[m
[32m+[m[32m        ['colors'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m[32mThis example would return false, as the values in the provided array are duplicates.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['colors' => ['purple', 'purple']]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'containsUnique' => [[m
[32m+[m[32m        ['colors'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Credit Card Validation usage[m
[32m+[m
[32m+[m[32mCredit card validation currently allows you to validate a Visa `visa`,[m
[32m+[m[32mMastercard `mastercard`, Dinersclub `dinersclub`, American Express `amex`[m
[32m+[m[32mor Discover `discover`[m
[32m+[m
[32m+[m[32mThis will check the credit card against each card type[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('creditCard', 'credit_card');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mTo optionally filter card types, add the slug to an array as the next parameter:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('creditCard', 'credit_card', ['visa', 'mastercard']);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf you only want to validate one type of card, put it as a string:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('creditCard', 'credit_card', 'visa');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf the card type information is coming from the client, you might also want to[m
[32m+[m[32mstill specify an array of valid card types:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$cardType = 'amex';[m
[32m+[m[32m$v->rule('creditCard', 'credit_card', $cardType, ['visa', 'mastercard']);[m
[32m+[m[32m$v->validate(); // false[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## instanceOf fields usage[m
[32m+[m[32mThe `instanceOf` rule checks that the field is an instance of a given class.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('instanceOf', 'date', \DateTime);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['date' => new \DateTime()]);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'instanceOf' => [[m
[32m+[m[32m        ['date', 'DateTime'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m[32m*Note* You can also compare the value against a given object as opposed to the string class name.[m
[32m+[m[32mThis example would also return true:[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['date' => new \DateTime()]);[m
[32m+[m[32m$existingDateObject = new \DateTime();[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'instanceOf' => [[m
[32m+[m[32m        ['date', $existingDateObject][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## optional fields usage[m
[32m+[m[32mThe `optional` rule ensures that if the field is present in the data set that it passes all validation rules.[m
[32m+[m[32m```php[m
[32m+[m[32m$v->rule('optional', 'username');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAlternate syntax.[m
[32m+[m[32mThis example would return true either when the 'username' field is not present or in the case where the username is only alphabetic characters.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'batman']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'alpha' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ],[m
[32m+[m[32m    'optional' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m[32mThis example would return false, as although the field is optional, since it is provided it must pass all the validation rules, which in this case it does not.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['username' => 'batman123']);[m
[32m+[m[32m$v->rules([[m
[32m+[m[32m    'alpha' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ],[m
[32m+[m[32m    'optional' => [[m
[32m+[m[32m        ['username'][m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## arrayHasKeys fields usage[m
[32m+[m
[32m+[m[32mThe `arrayHasKeys` rule ensures that the field is an array and that it contains all the specified keys.[m
[32m+[m[32mReturns false if the field is not an array or if no required keys are specified or if some key is missing.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator([[m
[32m+[m[32m    'address' => [[m
[32m+[m[32m        'name' => 'Jane Doe',[m
[32m+[m[32m        'street' => 'Doe Square',[m
[32m+[m[32m        'city' => 'Doe D.C.'[m
[32m+[m[32m    ][m
[32m+[m[32m]);[m
[32m+[m[32m$v->rule('arrayHasKeys', 'address', ['name', 'street', 'city']);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Adding Custom Validation Rules[m
[32m+[m
[32m+[m[32mTo add your own validation rule, use the `addRule` method with a rule[m
[32m+[m[32mname, a custom callback or closure, and a error message to display in[m
[32m+[m[32mcase of an error. The callback provided should return boolean true or[m
[32m+[m[32mfalse.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32mValitron\Validator::addRule('alwaysFail', function($field, $value, array $params, array $fields) {[m
[32m+[m[32m    return false;[m
[32m+[m[32m}, 'Everything you do is wrong. You fail.');[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can also use one-off rules that are only valid for the specified[m
[32m+[m[32mfields.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array("foo" => "bar"));[m
[32m+[m[32m$v->rule(function($field, $value, $params, $fields) {[m
[32m+[m[32m    return true;[m
[32m+[m[32m}, "foo")->message("{field} failed...");[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThis is useful because such rules can have access to variables[m
[32m+[m[32mdefined in the scope where the `Validator` lives. The Closure's[m
[32m+[m[32msignature is identical to `Validator::addRule` callback's[m
[32m+[m[32msignature.[m
[32m+[m
[32m+[m[32mIf you wish to add your own rules that are not static (i.e.,[m
[32m+[m[32myour rule is not static and available to call `Validator`[m
[32m+[m[32minstances), you need to use `Validator::addInstanceRule`.[m
[32m+[m[32mThis rule will take the same parameters as[m
[32m+[m[32m`Validator::addRule` but it has to be called on a `Validator`[m
[32m+[m[32minstance.[m
[32m+[m
[32m+[m[32m## Chaining rules[m
[32m+[m
[32m+[m[32mYou can chain multiple rules together using the following syntax.[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(['email_address' => 'test@test.com']);[m
[32m+[m[32m$v->rule('required', 'email_address')->rule('email', 'email_address');[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Alternate syntax for adding rules[m
[32m+[m
[32m+[m[32mAs the number of rules grows, you may prefer the alternate syntax[m
[32m+[m[32mfor defining multiple rules at once.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'required' => 'foo',[m
[32m+[m[32m    'accepted' => 'bar',[m
[32m+[m[32m    'integer' =>  'bar'[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator(array('foo' => 'bar', 'bar' => 1));[m
[32m+[m[32m$v->rules($rules);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf your rule requires multiple parameters or a single parameter[m
[32m+[m[32mmore complex than a string, you need to wrap the rule in an array.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'required' => [[m
[32m+[m[32m        ['foo'],[m
[32m+[m[32m        ['bar'][m
[32m+[m[32m    ],[m
[32m+[m[32m    'length' => [[m
[32m+[m[32m        ['foo', 3][m
[32m+[m[32m    ][m
[32m+[m[32m];[m
[32m+[m[32m```[m
[32m+[m[32mYou can also specify multiple rules for each rule type.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'length'   => [[m
[32m+[m[32m        ['foo', 5],[m
[32m+[m[32m        ['bar', 5][m
[32m+[m[32m    ][m
[32m+[m[32m];[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mPutting these techniques together, you can create a complete[m
[32m+[m[32mrule definition in a relatively compact data structure.[m
[32m+[m
[32m+[m[32mYou can continue to add individual rules with the `rule` method[m
[32m+[m[32meven after specifying a rule definition via an array. This is[m
[32m+[m[32mespecially useful if you are defining custom validation rules.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'required' => 'foo',[m
[32m+[m[32m    'accepted' => 'bar',[m
[32m+[m[32m    'integer' =>  'bar'[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator(array('foo' => 'bar', 'bar' => 1));[m
[32m+[m[32m$v->rules($rules);[m
[32m+[m[32m$v->rule('min', 'bar', 0);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can also add rules on a per-field basis:[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'required',[m
[32m+[m[32m    ['lengthMin', 4][m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator(array('foo' => 'bar'));[m
[32m+[m[32m$v->mapFieldRules('foo', $rules);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mOr for multiple fields at once:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$rules = [[m
[32m+[m[32m    'foo' => ['required', 'integer'],[m
[32m+[m[32m    'bar'=>['email', ['lengthMin', 4]][m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32m$v = new Valitron\Validator(array('foo' => 'bar', 'bar' => 'mail@example.com));[m
[32m+[m[32m$v->mapFieldsRules($rules);[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Adding field label to messages[m
[32m+[m
[32m+[m[32mYou can do this in two different ways, you can add a individual label to a rule or an array of all labels for the rules.[m
[32m+[m
[32m+[m[32mTo add individual label to rule you simply add the `label` method after the rule.[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array());[m
[32m+[m[32m$v->rule('required', 'name')->message('{field} is required')->label('Name');[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThere is a edge case to this method, you wouldn't be able to use a array of field names in the rule definition, so one rule per field. So this wouldn't work:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array());[m
[32m+[m[32m$v->rule('required', array('name', 'email'))->message('{field} is required')->label('Name');[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mHowever we can use a array of labels to solve this issue by simply adding the `labels` method instead:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array());[m
[32m+[m[32m$v->rule('required', array('name', 'email'))->message('{field} is required');[m
[32m+[m[32m$v->labels(array([m
[32m+[m[32m    'name' => 'Name',[m
[32m+[m[32m    'email' => 'Email address'[m
[32m+[m[32m));[m
[32m+[m[32m$v->validate();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThis introduces a new set of tags to your error language file which looks like `{field}`, if you are using a rule like `equals` you can access the second value in the language file by incrementing the field with a value like `{field1}`.[m
[32m+[m
[32m+[m
[32m+[m[32m## Re-use of validation rules[m
[32m+[m
[32m+[m[32mYou can re-use your validation rules to quickly validate different data with the same rules by using the withData method:[m
[32m+[m
[32m+[m[32m```php[m
[32m+[m[32m$v = new Valitron\Validator(array());[m
[32m+[m[32m$v->rule('required', 'name')->message('{field} is required');[m
[32m+[m[32m$v->validate(); //false[m
[32m+[m
[32m+[m[32m$v2 = $v->withData(array('name'=>'example'));[m
[32m+[m[32m$v2->validate(); //true[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Running Tests[m
[32m+[m
[32m+[m[32mThe test suite depends on the Composer autoloader to load and run the[m
[32m+[m[32mValitron files. Please ensure you have downloaded and installed Composer[m
[32m+[m[32mbefore running the tests:[m
[32m+[m
[32m+[m[32m1. Download Composer `curl -s http://getcomposer.org/installer | php`[m
[32m+[m[32m2. Run 'install' `php composer.phar install`[m
[32m+[m[32m3. Run the tests `phpunit`[m
[32m+[m
[32m+[m[32m## Contributing[m
[32m+[m
[32m+[m[32m1. Fork it[m
[32m+[m[32m2. Create your feature branch (`git checkout -b my-new-feature`)[m
[32m+[m[32m3. Make your changes[m
[32m+[m[32m4. Run the tests, adding new ones for your own code if necessary (`phpunit`)[m
[32m+[m[32m5. Commit your changes (`git commit -am 'Added some feature'`)[m
[32m+[m[32m6. Push to the branch (`git push origin my-new-feature`)[m
[32m+[m[32m7. Create new Pull Request[m
[32m+[m[32m8. Pat yourself on the back for being so awesome[m
[32m+[m
[32m+[m[32m## Security Disclosures and Contact Information[m
[32m+[m
[32m+[m[32mTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.[m
[1mdiff --git a/vendor/vlucas/valitron/composer.json b/vendor/vlucas/valitron/composer.json[m
[1mnew file mode 100644[m
[1mindex 0000000..37c8712[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/composer.json[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "name": "vlucas/valitron",[m
[32m+[m[32m    "type": "library",[m
[32m+[m[32m    "description": "Simple, elegant, stand-alone validation library with NO dependencies",[m
[32m+[m[32m    "keywords": ["validation", "validator", "valid"],[m
[32m+[m[32m    "homepage": "https://github.com/vlucas/valitron",[m
[32m+[m[32m    "license": "BSD-3-Clause",[m
[32m+[m[32m    "authors": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Vance Lucas",[m
[32m+[m[32m            "email": "vance@vancelucas.com",[m
[32m+[m[32m            "homepage": "https://www.vancelucas.com"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "require": {[m
[32m+[m[32m        "php": ">=5.3.2"[m
[32m+[m[32m    },[m
[32m+[m[32m    "require-dev": {[m
[32m+[m[32m        "phpunit/phpunit": ">=4.8.35"[m
[32m+[m[32m    },[m
[32m+[m[32m    "suggest": {[m
[32m+[m[32m        "ext-mbstring": "It can support the multiple bytes string length."[m
[32m+[m[32m    },[m
[32m+[m[32m    "autoload": {[m
[32m+[m[32m        "psr-4": {[m
[32m+[m[32m            "Valitron\\": "src/Valitron"[m
[32m+[m[32m        }[m
[32m+[m[32m    },[m
[32m+[m[32m    "autoload-dev": {[m
[32m+[m[32m        "psr-4": {[m
[32m+[m[32m            "Valitron\\": "tests/Valitron"[m
[32m+[m[32m        }[m
[32m+[m[32m    },[m
[32m+[m[32m    "scripts": {[m
[32m+[m[32m        "test": "./vendor/bin/phpunit"[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/vendor/vlucas/valitron/lang/ar.php b/vendor/vlucas/valitron/lang/ar.php[m
[1mnew file mode 100644[m
[1mindex 0000000..533ccab[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/ar.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "مطلوب",[m
[32m+[m[32m    'equals'        => "يجب أن يكون مساوي لي '%s'",[m
[32m+[m[32m    'different'     => "يجب ان يكون غير '%s'",[m
[32m+[m[32m    'accepted'      => "يجب ان يكون نعم",[m
[32m+[m[32m    'numeric'       => "يجب ان يكون رقم",[m
[32m+[m[32m    'integer'       => "يجب ان يكون رقم (0-9)",[m
[32m+[m[32m    'length'        => "يجب ان يكون أطول من %d",[m
[32m+[m[32m    'min'           => "يجب ان يكون اعلي من  %s",[m
[32m+[m[32m    'max'           => "يجب ان يكون اقل من %s",[m
[32m+[m[32m    'in'            => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'listContains'  => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'notIn'         => "الُمدخل يغير صحيح",[m
[32m+[m[32m    'ip'            => "رقم الإتصال غير صحيح",[m
[32m+[m[32m    'email'         => "البريد الألكتروني غير صحيح",[m
[32m+[m[32m    'url'           => "الرابط غير صحيح",[m
[32m+[m[32m    'urlActive'     => "يجب أن يكون نطاق فعال",[m
[32m+[m[32m    'alpha'         => "يجب أن يحتوي فقط علي a-z",[m
[32m+[m[32m    'alphaNum'      => "يجب ان يحتوي فقط a-z او ارقام 0-9",[m
[32m+[m[32m    'slug'          => "يجب ان يحتوي فقط علي a-z, و ارقام 0-9, شرطات و  خط سفلي",[m
[32m+[m[32m    'regex'         => "خطا بالصيغة",[m
[32m+[m[32m    'date'          => "خطا بالتاريخ",[m
[32m+[m[32m    'dateFormat'    => "يجب ان يكون تاريخ بهذه الصيغة '%s'",[m
[32m+[m[32m    'dateBefore'    => "التاريخ يجب ان يكون قبل '%s'",[m
[32m+[m[32m    'dateAfter'     => "التاريخ يجب ان يكون بعد '%s'",[m
[32m+[m[32m    'contains'      => "يجب ان يحتوي %s"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/az.php b/vendor/vlucas/valitron/lang/az.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0cb3c03[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/az.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "mütləqdir",[m
[32m+[m[32m    'equals'        => "'%s' olmalıdır",[m
[32m+[m[32m    'different'     => "'%s'-dən fərqli olmalıdır",[m
[32m+[m[32m    'accepted'      => "Qeyd dilməlidir",[m
[32m+[m[32m    'numeric'       => "rəqəm olmalıdır",[m
[32m+[m[32m    'integer'       => "tam ədəd olmalıdır",[m
[32m+[m[32m    'length'        => "%d qədər uzunluğu olmalıdır",[m
[32m+[m[32m    'min'           => "minimum %s qədər olmalıdır",[m
[32m+[m[32m    'max'           => "maksimum %s qədər olmalıdır",[m
[32m+[m[32m    'listContains'  => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'in'            => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'notIn'         => "yalnış dəyər ehtiva edir",[m
[32m+[m[32m    'ip'            => "düzgün IP ünvanı deyil",[m
[32m+[m[32m    'email'         => "düzgün email ünvanı deyil",[m
[32m+[m[32m    'url'           => "URL deyil",[m
[32m+[m[32m    'urlActive'     => "aktiv domain olmalıdır",[m
[32m+[m[32m    'alpha'         => "ancaq latın hərfləri ehtiva etməlidir",[m
[32m+[m[32m    'alphaNum'      => "ancaq latın hərfləri və(və ya) rəqəmlər ehtiva etməlidir",[m
[32m+[m[32m    'slug'          => "ancaq latın hərfləri,rəqəmlər,tire və altdan xət ehtiva etməlidir",[m
[32m+[m[32m    'regex'         => "etiabrsız sinvollar ehtiva edir",[m
[32m+[m[32m    'date'          => "tarix deyil",[m
[32m+[m[32m    'dateFormat'    => "tarix formatı bu cür olmalıdır: %s",[m
[32m+[m[32m    'dateBefore'    => "tarix %s -dən əvvəl olmamalıdır",[m
[32m+[m[32m    'dateAfter'     => "tarix %s -dən sonra olmamalıdır",[m
[32m+[m[32m    'contains'      => "%s ehtiva etməlidir",[m
[32m+[m[32m    'boolean'       => "boolen olmalıdır",[m
[32m+[m[32m    'lengthBetween' => "%d - %d sinvolları arası ehtiva etməlidir",[m
[32m+[m[32m    'creditCard'    => "kredir kart nömrəsi olmalıdır",[m
[32m+[m[32m    "lengthMin"     => "%d -dən çox sinvol olmalıdır",[m
[32m+[m[32m    "lengthMax"     => "%d -dən az sinvol olmalıdır",[m
[32m+[m	[32m"instanceOf"    => "'%s' əvəzinə olmalıdır"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/bg.php b/vendor/vlucas/valitron/lang/bg.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2166b11[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/bg.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "е задължително",[m
[32m+[m[32m    'equals'        => "трябва да бъде същото като '%s'",[m
[32m+[m[32m    'different'     => "трябва да бъде различно от '%s'",[m
[32m+[m[32m    'accepted'      => "трабва да бъде прието",[m
[32m+[m[32m    'numeric'       => "трябва да бъде число",[m
[32m+[m[32m    'integer'       => "трябва да бъде цифра (0-9)",[m
[32m+[m[32m    'length'        => "трябва да бъде %d символа дълго",[m
[32m+[m[32m    'min'           => "трябвя да бъде поне %s",[m
[32m+[m[32m    'max'           => "трябва да бъде не повече от %s",[m
[32m+[m[32m    'listContains'  => "съдържа невалидна стойност",[m
[32m+[m[32m    'in'            => "съдържа невалидна стойност",[m
[32m+[m[32m    'notIn'         => "съдържа невалидна стойност",[m
[32m+[m[32m    'ip'            => "е невалиден IP адрес",[m
[32m+[m[32m    'email'         => "е невалиден имейл адрес",[m
[32m+[m[32m    'url'           => "е невалиден URL адрес",[m
[32m+[m[32m    'urlActive'     => "трябва да бъде активен домейн",[m
[32m+[m[32m    'alpha'         => "трябва да съдържа само букви a-z",[m
[32m+[m[32m    'alphaNum'      => "трябва да съдържа само букви a-z и/или цифри 0-9",[m
[32m+[m[32m    'slug'          => "трябва да съдържа само букви a-z, цифри 0-9, тирета и долни черти",[m
[32m+[m[32m    'regex'         => "съдържа невалидни символи",[m
[32m+[m[32m    'date'          => "е невалидна дата",[m
[32m+[m[32m    'dateFormat'    => "трябва да бъде дата с формат '%s'",[m
[32m+[m[32m    'dateBefore'    => "трябва да бъде дата преди '%s'",[m
[32m+[m[32m    'dateAfter'     => "трябва да бъде дата след '%s'",[m
[32m+[m[32m    'contains'      => "трябв да съдържа %s",[m
[32m+[m[32m    'boolean'       => "трябва да бъде истина или лъжа",[m
[32m+[m[32m    'lengthBetween' => "трябва да бъде между %d и %d символа",[m
[32m+[m[32m    'creditCard'    => "трябва да бъде валиден номер на кредитна карта",[m
[32m+[m[32m    'lengthMin'     => "трябва да бъде поне %d символа дълго",[m
[32m+[m[32m    'lengthMax'     => "не трябва да надвишава %d символа",[m
[32m+[m[32m    'instanceOf'    => "трябва да бъде инстанция от '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/de.php b/vendor/vlucas/valitron/lang/de.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4e7ae07[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/de.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "ist erforderlich",[m
[32m+[m[32m    'equals'        => "muss identisch mit '%s' sein",[m
[32m+[m[32m    'different'     => "muss sich von '%s' unterscheiden",[m
[32m+[m[32m    'accepted'      => "muss markiert sein",[m
[32m+[m[32m    'numeric'       => "muss eine Zahl sein",[m
[32m+[m[32m    'integer'       => "muss eine ganze Zahl sein",[m
[32m+[m[32m    'length'        => "kann nicht länger als %d sein",[m
[32m+[m[32m    'min'           => "muss größer als %s sein",[m
[32m+[m[32m    'max'           => "muss kleiner als %s sein",[m
[32m+[m[32m    'listContains'  => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'in'            => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'notIn'         => "enthält einen ungültigen Wert",[m
[32m+[m[32m    'ip'            => "enthält keine gültige IP-Addresse",[m
[32m+[m[32m    'email'         => "enthält keine gültige E-Mail-Adresse",[m
[32m+[m[32m    'url'           => "enthält keine gültige URL",[m
[32m+[m[32m    'urlActive'     => "muss eine aktive Domain sein",[m
[32m+[m[32m    'alpha'         => "darf nur Buchstaben enthalten",[m
[32m+[m[32m    'alphaNum'      => "darf nur Buchstaben und Ganzzahlen enthalten",[m
[32m+[m[32m    'slug'          => "darf nur Buchstaben, Ganzzahlen, Schrägstriche und Grundstriche enthalten",[m
[32m+[m[32m    'regex'         => "enthält ungültige Zeichen",[m
[32m+[m[32m    'date'          => "enthält kein gültiges Datum",[m
[32m+[m[32m    'dateFormat'    => "benötigt ein Datum im Format '%s'",[m
[32m+[m[32m    'dateBefore'    => "benötigt ein Datum, das vor dem '%s' liegt",[m
[32m+[m[32m    'dateAfter'     => "benötigt ein Datum, das nach dem '%s' liegt",[m
[32m+[m[32m    'contains'      => "muss %s beinhalten",[m
[32m+[m[32m    'boolean'       => "muss ein Wahrheitswert sein",[m
[32m+[m[32m    'lengthBetween' => "benötigt zwischen %d und %d Zeichen",[m
[32m+[m[32m    'creditCard'    => "muss eine gültige Kreditkartennummer sein",[m
[32m+[m[32m    "lengthMin"     => "muss mindestens %d Zeichen enthalten",[m
[32m+[m[32m    "lengthMax"     => "kann nicht mehr als %d Zeichen enthalten"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/el.php b/vendor/vlucas/valitron/lang/el.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ae35aaf[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/el.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "είναι απαραίτητο",[m
[32m+[m[32m    'equals'        => "πρέπει να είναι ίδιο με '%s'",[m
[32m+[m[32m    'different'     => "πρέπει να διαφέρει από '%s'",[m
[32m+[m[32m    'accepted'      => "πρέπει να έχει αποδεχτεί",[m
[32m+[m[32m    'numeric'       => "πρέπει να είναι αριθμός",[m
[32m+[m[32m    'integer'       => "πρέπει να είναι ακέραιος αριθμός",[m
[32m+[m[32m    'length'        => "πρέπει να είναι μεγαλύτερο από %d",[m
[32m+[m[32m    'min'           => "πρέπει να είναι τουλάχιστον %s",[m
[32m+[m[32m    'max'           => "δεν πρέπει να είναι περισσότερο από %s",[m
[32m+[m[32m    'listContains'  => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'in'            => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'notIn'         => "περιέχει μη έγκυρη τιμή",[m
[32m+[m[32m    'ip'            => "δεν είναι έγκυρη διεύθυνση IP",[m
[32m+[m[32m    'email'         => "δεν είναι έγκυρη διεύθυνση email",[m
[32m+[m[32m    'url'           => "δεν είναι URL",[m
[32m+[m[32m    'urlActive'     => "πρέπει να είναι ενεργό domain",[m
[32m+[m[32m    'alpha'         => "πρέπει να περιέχει μόνο χαρακτήρες",[m
[32m+[m[32m    'alphaNum'      => "πρέπει να περιέχει μόνο χαρακτήρες και/ή αριθμούς",[m
[32m+[m[32m    'slug'          => "πρέπει να περιέχει μόνο χαρακτήρες, αριθμούς, παύλες και κάτω παύλες",[m
[32m+[m[32m    'regex'         => "περιέχει μη έγκυρους χαρακτήρες",[m
[32m+[m[32m    'date'          => "δεν είναι έγκυρη ημερομηνία",[m
[32m+[m[32m    'dateFormat'    => "πρέπει να είναι ημερομηνία της μορφής '%s'",[m
[32m+[m[32m    'dateBefore'    => "πρέπει να είναι ημερομηνία πριν από '%s'",[m
[32m+[m[32m    'dateAfter'     => "πρέπει να είναι ημερομηνία μετά από '%s'",[m
[32m+[m[32m    'contains'      => "πρέπει να περιέχει %s",[m
[32m+[m[32m    'boolean'       => "πρέπει να είναι boolean",[m
[32m+[m[32m    'lengthBetween' => "πρέπει να είναι μεταξύ %d και %d χαρακτήρων",[m
[32m+[m[32m    'creditCard'    => "πρέπει να είναι ένα έγκυρο νούμερο πιστωτικής κάρτας",[m
[32m+[m[32m    "lengthMin"     => "πρέπει να περιέχει περισσότερους από %d χαρακτήρες",[m
[32m+[m[32m    "lengthMax"     => "πρέπει να περιέχει λιγότερους από %d χαρακτήρες",[m
[32m+[m[32m    "instanceOf"    => "πρέπει να είναι αντικείμενο της '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/en.php b/vendor/vlucas/valitron/lang/en.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8e66cb5[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/en.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "is required",[m
[32m+[m[32m    'equals'         => "must be the same as '%s'",[m
[32m+[m[32m    'different'      => "must be different than '%s'",[m
[32m+[m[32m    'accepted'       => "must be accepted",[m
[32m+[m[32m    'numeric'        => "must be numeric",[m
[32m+[m[32m    'integer'        => "must be an integer",[m
[32m+[m[32m    'length'         => "must be %d characters long",[m
[32m+[m[32m    'min'            => "must be at least %s",[m
[32m+[m[32m    'max'            => "must be no more than %s",[m
[32m+[m[32m    'listContains'   => "contains invalid value",[m
[32m+[m[32m    'in'             => "contains invalid value",[m
[32m+[m[32m    'notIn'          => "contains invalid value",[m
[32m+[m[32m    'ip'             => "is not a valid IP address",[m
[32m+[m[32m    'ipv4'           => "is not a valid IPv4 address",[m
[32m+[m[32m    'ipv6'           => "is not a valid IPv6 address",[m
[32m+[m[32m    'email'          => "is not a valid email address",[m
[32m+[m[32m    'url'            => "is not a valid URL",[m
[32m+[m[32m    'urlActive'      => "must be an active domain",[m
[32m+[m[32m    'alpha'          => "must contain only letters a-z",[m
[32m+[m[32m    'alphaNum'       => "must contain only letters a-z and/or numbers 0-9",[m
[32m+[m[32m    'slug'           => "must contain only letters a-z, numbers 0-9, dashes and underscores",[m
[32m+[m[32m    'regex'          => "contains invalid characters",[m
[32m+[m[32m    'date'           => "is not a valid date",[m
[32m+[m[32m    'dateFormat'     => "must be date with format '%s'",[m
[32m+[m[32m    'dateBefore'     => "must be date before '%s'",[m
[32m+[m[32m    'dateAfter'      => "must be date after '%s'",[m
[32m+[m[32m    'contains'       => "must contain %s",[m
[32m+[m[32m    'boolean'        => "must be a boolean",[m
[32m+[m[32m    'lengthBetween'  => "must be between %d and %d characters",[m
[32m+[m[32m    'creditCard'     => "must be a valid credit card number",[m
[32m+[m[32m    'lengthMin'      => "must be at least %d characters long",[m
[32m+[m[32m    'lengthMax'      => "must not exceed %d characters",[m
[32m+[m[32m    'instanceOf'     => "must be an instance of '%s'",[m
[32m+[m[32m    'containsUnique' => "must contain unique elements only",[m
[32m+[m[32m    'requiredWith'   => "is required",[m
[32m+[m[32m    'requiredWithout'=> "is required",[m
[32m+[m[32m    'subset'         => "contains an item that is not in the list",[m
[32m+[m[32m    'arrayHasKeys'   => "does not contain all required keys",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/es.php b/vendor/vlucas/valitron/lang/es.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1f3bf8b[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/es.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "es obligatorio",[m
[32m+[m[32m    'equals'         => "debe ser igual a '%s'",[m
[32m+[m[32m    'different'      => "debe ser diferente a '%s'",[m
[32m+[m[32m    'accepted'       => "debe ser aceptado",[m
[32m+[m[32m    'numeric'        => "debe ser numérico",[m
[32m+[m[32m    'integer'        => "debe ser un entero",[m
[32m+[m[32m    'length'         => "debe ser mas largo de %d",[m
[32m+[m[32m    'min'            => "debe ser mayor de %s",[m
[32m+[m[32m    'max'            => "debe ser menor de %s",[m
[32m+[m[32m    'in'             => "contiene un valor inválido",[m
[32m+[m[32m    'notIn'          => "contiene un valor inválido",[m
[32m+[m[32m    'ip'             => "no es una dirección IP",[m
[32m+[m[32m    'email'          => "no es un correo electrónico válido",[m
[32m+[m[32m    'url'            => "no es una URL",[m
[32m+[m[32m    'urlActive'      => "debe ser un dominio activo",[m
[32m+[m[32m    'alpha'          => "debe contener solo letras a-z",[m
[32m+[m[32m    'alphaNum'       => "debe contener solo letras a-z o números 0-9",[m
[32m+[m[32m    'slug'           => "debe contener solo letras a-z, números 0-9, barras y guiones bajos",[m
[32m+[m[32m    'regex'          => "contiene caracteres inválidos",[m
[32m+[m[32m    'date'           => "no es una fecha válida",[m
[32m+[m[32m    'dateFormat'     => "debe ser una fecha con formato '%s'",[m
[32m+[m[32m    'dateBefore'     => "debe ser una fecha antes de '%s'",[m
[32m+[m[32m    'dateAfter'      => "debe ser una fecha después de '%s'",[m
[32m+[m[32m    'contains'       => "debe contener %s",[m
[32m+[m[32m    'boolean'        => "debe ser booleano",[m
[32m+[m[32m    'lengthBetween'  => "debe tener entre %d y %d caracteres",[m
[32m+[m[32m    'creditCard'     => "debe ser un numero de tarjeta de crédito válido",[m
[32m+[m[32m    "lengthMin"      => "debe tener al menos %d caracteres",[m
[32m+[m[32m    "lengthMax"      => "debe tener menos de %d caracteres",[m
[32m+[m[32m    "instanceOf"     => "debe ser una instancia de '%s'",[m
[32m+[m[32m    'containsUnique' => "debe contener solo valores únicos",[m
[32m+[m[32m    'subset'         => "contiene un elemento que no está en la lista",[m
[32m+[m[32m    'arrayHasKeys'   => "no contiene todas las claves requeridas"[m[41m    [m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/fi.php b/vendor/vlucas/valitron/lang/fi.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ea2d25b[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/fi.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "vaaditaan",[m
[32m+[m[32m    'equals'        => "ei ole sama kuin '%s'",[m
[32m+[m[32m    'different'     => "on sama kuin '%s'",[m
[32m+[m[32m    'accepted'      => "ei ole hyväksytty",[m
[32m+[m[32m    'numeric'       => "ei ole numeerinen",[m
[32m+[m[32m    'integer'       => "ei ole kokonaisluku",[m
[32m+[m[32m    'length'        => "on lyhyempi kuin %d",[m
[32m+[m[32m    'min'           => "ei ole vähintään %s",[m
[32m+[m[32m    'max'           => "ei ole enintään %s",[m
[32m+[m[32m    'listContains'  => "sisältää virheellisen arvon",[m
[32m+[m[32m    'in'            => "sisältää virheellisen arvon",[m
[32m+[m[32m    'notIn'         => "sisältää virheellisen arvon",[m
[32m+[m[32m    'ip'            => "ei ole oikeanmuotoinen IP-osoite",[m
[32m+[m[32m    'email'         => "ei ole oikeanmuotoinen sähköpostiosoite",[m
[32m+[m[32m    'url'           => "ei ole URL",[m
[32m+[m[32m    'urlActive'     => "ei ole aktiivinen verkkotunnus",[m
[32m+[m[32m    'alpha'         => "sisältää muita merkkejä kuin a-z",[m
[32m+[m[32m    'alphaNum'      => "sisältää muita merkkejä kuin a-z ja 0-9",[m
[32m+[m[32m    'slug'          => "sisältää muita merkkejä kuin a-z, 0-9, - ja _",[m
[32m+[m[32m    'regex'         => "sisältää virheellisiä merkkejä",[m
[32m+[m[32m    'date'          => "ei ole oikeanmuotoinen päivämäärä",[m
[32m+[m[32m    'dateFormat'    => "ei ole päivämäärä muotoa '%s'",[m
[32m+[m[32m    'dateBefore'    => "ei ole päivämäärä ennen '%s'",[m
[32m+[m[32m    'dateAfter'     => "ei ole päivämäärä '%s' jälkeen",[m
[32m+[m[32m    'contains'      => "ei sisällä merkkijonoa %s",[m
[32m+[m[32m    'boolean'       => "ei ole totuusarvo",[m
[32m+[m[32m    'lengthBetween' => "ei ole %d-%d merkkiä pitkä",[m
[32m+[m[32m    'creditCard'    => "ei ole pätevä luottokortin numero",[m
[32m+[m[32m    "lengthMin"     => "ei ole vähintään %d merkkiä pitkä",[m
[32m+[m[32m    "lengthMax"     => "ei ole enintään %d merkkiä pitkä",[m
[32m+[m[32m    "instanceOf"    => "ei ole luokan '%s' ilmentymä"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/fr.php b/vendor/vlucas/valitron/lang/fr.php[m
[1mnew file mode 100644[m
[1mindex 0000000..124cdac[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/fr.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m[41m   [m
[32m+[m[32m    'required'          => "est obligatoire",[m
[32m+[m[32m    'equals'            => "doit être identique à '%s'",[m
[32m+[m[32m    'different'         => "doit être différent de '%s'",[m
[32m+[m[32m    'accepted'          => "doit être accepté",[m
[32m+[m[32m    'numeric'           => "doit être numérique",[m
[32m+[m[32m    'integer'           => "doit être un entier",[m
[32m+[m[32m    'length'            => "doit être plus long que %d",[m
[32m+[m[32m    'min'               => "doit être plus grand que %s",[m
[32m+[m[32m    'max'               => "doit être plus petit que %s",[m
[32m+[m[32m    'listContains'      => "contient une valeur non valide",[m
[32m+[m[32m    'in'                => "contient une valeur non valide",[m
[32m+[m[32m    'notIn'             => "contient une valeur non valide",[m
[32m+[m[32m    'ip'                => "n'est pas une adresse IP valide",[m
[32m+[m[32m    'email'             => "n'est pas une adresse email valide",[m
[32m+[m[32m    'url'               => "n'est pas une URL",[m
[32m+[m[32m    'urlActive'         => "doit être un domaine actif",[m
[32m+[m[32m    'alpha'             => "doit contenir uniquement les lettres a-z",[m
[32m+[m[32m    'alphaNum'          => "doit contenir uniquement des lettres de a-z et/ou des chiffres 0-9",[m
[32m+[m[32m    'slug'              => "doit contenir uniquement des lettres de a-z, des chiffres 0-9, des tirets et des traits soulignés",[m
[32m+[m[32m    'regex'             => "contient des caractères invalides",[m
[32m+[m[32m    'date'              => "n'est pas une date valide",[m
[32m+[m[32m    'dateFormat'        => "doit être une date avec le format '%s'",[m
[32m+[m[32m    'dateBefore'        => "doit être une date avant '%s'",[m
[32m+[m[32m    'dateAfter'         => "doit être une date après '%s'",[m
[32m+[m[32m    'contains'          => "doit contenir %s",[m
[32m+[m[32m    'boolean'           => "doit être un booléen",[m
[32m+[m[32m    'lengthBetween'     => "doit être entre %d et %d caractères",[m
[32m+[m[32m    'creditCard'        => "doit être un numéro de carte de crédit valide",[m
[32m+[m[32m    'lengthMin'         => "doit avoir au moins %d caractères",[m
[32m+[m[32m    'lengthMax'         => "ne doit pas dépasser %d caractères",[m
[32m+[m[32m    'instanceOf'        => "doit être une instance de '%s'",[m
[32m+[m[32m    "containsUnique"    => "doit contenir des élements unique",[m
[32m+[m[32m    "requiredWith"      => "est requis",[m
[32m+[m[32m    "requiredWithout"   => "est requis",[m
[32m+[m[32m    "subset"            => "contient un élement qui n'est pas dans la liste",[m
[32m+[m[32m    "arrayHasKeys"      => "ne contient pas toutes les clés requises"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/id.php b/vendor/vlucas/valitron/lang/id.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2df9a61[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/id.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "harus diisi",[m
[32m+[m[32m    'equals'        => "harus sama dengan '%s'",[m
[32m+[m[32m    'different'     => "harus berbeda dengan '%s'",[m
[32m+[m[32m    'accepted'      => "harus diterima (accepted)",[m
[32m+[m[32m    'numeric'       => "harus berupa nomor/angka",[m
[32m+[m[32m    'integer'       => "harus berupa nilai integer",[m
[32m+[m[32m    'length'        => "harus lebih panjang dari %d",[m
[32m+[m[32m    'min'           => "harus lebih besar dari %s",[m
[32m+[m[32m    'max'           => "harus kurang dari %s",[m
[32m+[m[32m    'listContains'  => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'in'            => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'notIn'         => "berisi nilai/value yang tidak valid",[m
[32m+[m[32m    'ip'            => "format alamat IP tidak benar",[m
[32m+[m[32m    'email'         => "format alamat email tidak benar",[m
[32m+[m[32m    'url'           => "bukan format URL yang benar",[m
[32m+[m[32m    'urlActive'     => "harus berupa domain aktif",[m
[32m+[m[32m    'alpha'         => "hanya boleh menggunakan huruf a-z",[m
[32m+[m[32m    'alphaNum'      => "hanya boleh menggunakan huruf a-z dan atau nomor 0-9",[m
[32m+[m[32m    'slug'          => "hanya boleh menggunakan huruf a-z, nomor 0-9, tanda minus (-), dan uderscore atau strip bawah (_)",[m
[32m+[m[32m    'regex'         => "berisi karakter yang tidak valid",[m
[32m+[m[32m    'date'          => "format tanggal tidak valid",[m
[32m+[m[32m    'dateFormat'    => "harus berupa tanggal dengan format '%s'",[m
[32m+[m[32m    'dateBefore'    => "tanggal harus sebelum tanggal '%s'",[m
[32m+[m[32m    'dateAfter'     => "tanggal harus sesudah tanggal '%s'",[m
[32m+[m[32m    'contains'      => "harus berisi %s",[m
[32m+[m[32m    'boolean'       => "harus berupa nilai boolean",[m
[32m+[m[32m    'lengthBetween' => "harus diantara karakter %d dan %d",[m
[32m+[m[32m    'creditCard'    => "nomor kartu kredit harus valid",[m
[32m+[m[32m    "lengthMin"     => "minimal berisi %d karakter",[m
[32m+[m[32m    "lengthMax"     => "maksimal berisi %d karakter"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/it.php b/vendor/vlucas/valitron/lang/it.php[m
[1mnew file mode 100644[m
[1mindex 0000000..467746b[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/it.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "è obbligatorio",[m
[32m+[m[32m    'equals'        => "deve essere uguale a '%s'",[m
[32m+[m[32m    'different'     => "deve essere differente da '%s'",[m
[32m+[m[32m    'accepted'      => "deve essere accettato",[m
[32m+[m[32m    'numeric'       => "deve essere numerico",[m
[32m+[m[32m    'integer'       => "deve essere un intero",[m
[32m+[m[32m    'length'        => "deve avere una lunghezza di %d",[m
[32m+[m[32m    'min'           => "deve essere superiore a %s",[m
[32m+[m[32m    'max'           => "deve essere inferiore a %s",[m
[32m+[m[32m    'listContains'  => "contiene un valore non valido",[m
[32m+[m[32m    'in'            => "contiene un valore non valido",[m
[32m+[m[32m    'notIn'         => "contiene un valore non valido",[m
[32m+[m[32m    'ip'            => "non è un indirizzo IP valido",[m
[32m+[m[32m    'email'         => "non è un indirizzo email valido",[m
[32m+[m[32m    'url'           => "non è una URL",[m
[32m+[m[32m    'urlActive'     => "deve essere un dominio attivo",[m
[32m+[m[32m    'alpha'         => "deve contenere solamente lettere (a-z)",[m
[32m+[m[32m    'alphaNum'      => "deve contenere solamente lettere (a-z) e/o numeri (0-9)",[m
[32m+[m[32m    'slug'          => "deve contenere solamente lettere (a-z), numeri (0-9), trattini (-) e trattini bassi (_)",[m
[32m+[m[32m    'regex'         => "contiene caratteri non validi",[m
[32m+[m[32m    'date'          => "non è una data valida",[m
[32m+[m[32m    'dateFormat'    => "deve essere una data nel formato '%s'",[m
[32m+[m[32m    'dateBefore'    => "deve essere una data precedente al '%s'",[m
[32m+[m[32m    'dateAfter'     => "deve essere una data successiva al '%s'",[m
[32m+[m[32m    'contains'      => "deve contenere %s",[m
[32m+[m[32m    'boolean'       => "deve essere un booleano",[m
[32m+[m[32m    'lengthBetween' => "deve essere compreso tra %d e %d caratteri",[m
[32m+[m[32m    'creditCard'    => "deve essere un numero di carta di credito valido",[m
[32m+[m[32m    'lengthMin'     => "deve essere lungo almeno %d caratteri",[m
[32m+[m[32m    'lengthMax'     => "non deve superare %d caratteri",[m
[32m+[m[32m    'instanceOf'    => "deve essere un'istanza di '%s'",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/ja.php b/vendor/vlucas/valitron/lang/ja.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3eaf6d1[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/ja.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "を入力してください",[m
[32m+[m[32m    'equals'        => "は「%s」と同じ内容を入力してください",[m
[32m+[m[32m    'different'     => "は「%s」と異なる内容を入力してください",[m
[32m+[m[32m    'accepted'      => "に同意してください",[m
[32m+[m[32m    'numeric'       => "は数値を入力してください",[m
[32m+[m[32m    'integer'       => "は半角数字で入力してください",[m
[32m+[m[32m    'length'        => "は%d文字で入力してください",[m
[32m+[m[32m    'min'           => "には%sより大きな値を入力してください",[m
[32m+[m[32m    'max'           => "には%sより小さな値を入力してください",[m
[32m+[m[32m    'listContains'  => "には選択できない値が含まれています",[m
[32m+[m[32m    'in'            => "には選択できない値が含まれています",[m
[32m+[m[32m    'notIn'         => "には選択できない値が含まれています",[m
[32m+[m[32m    'ip'            => "はIPアドレスの書式として正しくありません",[m
[32m+[m[32m    'email'         => "はメールアドレスの書式として正しくありません",[m
[32m+[m[32m    'url'           => "はURLの書式として正しくありません",[m
[32m+[m[32m    'urlActive'     => "はアクティブなドメインではありません",[m
[32m+[m[32m    'alpha'         => "は半角英字で入力してください",[m
[32m+[m[32m    'alphaNum'      => "は半角英数字で入力してください",[m
[32m+[m[32m    'slug'          => "は半角英数字、もしくは「-」「_」の文字で入力してください",[m
[32m+[m[32m    'regex'         => "の書式が正しくありません",[m
[32m+[m[32m    'date'          => "は日付の書式として正しくありません",[m
[32m+[m[32m    'dateFormat'    => "は「%s」の書式で日付を入力してください",[m
[32m+[m[32m    'dateBefore'    => "は「%s」以前の日付を入力してください",[m
[32m+[m[32m    'dateAfter'     => "は「%s」以後の日付を入力してください",[m
[32m+[m[32m    'contains'      => "は「%s」を含んでいなければいけません",[m
[32m+[m[32m    'boolean'       => "は真偽値である必要があります",[m
[32m+[m[32m    'lengthBetween' => "は%d〜%d文字で入力してください",[m
[32m+[m[32m    'creditCard'    => "はクレジットカード番号の書式として正しくありません",[m
[32m+[m[32m    'lengthMin'     => "は%d文字以上入力してください",[m
[32m+[m[32m    'lengthMax'     => "は%d文字以内で入力してください",[m
[32m+[m[32m    'instanceOf'    => "は「%s」のインスタンスではありません",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/ko.php b/vendor/vlucas/valitron/lang/ko.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c4d42bf[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/ko.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "을(를) 입력해야 합니다.",[m
[32m+[m[32m    'equals'        => "은(는) '%s'와(과) 같아야 합니다.",[m
[32m+[m[32m    'different'     => "은(는) '%s'와(과) 달라야 합니다.",[m
[32m+[m[32m    'accepted'      => "을(를) 동의해야 합니다.",[m
[32m+[m[32m    'numeric'       => "은(는) 숫자여야 합니다.",[m
[32m+[m[32m    'integer'       => "은(는) 정수여야 합니다.",[m
[32m+[m[32m    'length'        => "의 길이는 %d 이어야 합니다.",[m
[32m+[m[32m    'min'           => "은(는) %s 이상이어야 합니다.",[m
[32m+[m[32m    'max'           => "은(는) %s 이하여야 합니다.",[m
[32m+[m[32m    'listContains'  => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'in'            => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'notIn'         => "은(는) 올바르지 않은 값을 포함하고 있습니다.",[m
[32m+[m[32m    'ip'            => "은(는) 올바르지 않은 IP입니다.",[m
[32m+[m[32m    'email'         => "은(는) 올바르지 않은 email입니다.",[m
[32m+[m[32m    'url'           => "은(는) 올바르지 않은 URL입니다.",[m
[32m+[m[32m    'urlActive'     => "은(는) 접속 가능한 도메인이어야 합니다.",[m
[32m+[m[32m    'alpha'         => "은(는) 영문자(a-z)로만 이루어져야 합니다.",[m
[32m+[m[32m    'alphaNum'      => "은(는) 영문자(a-z)와 숫자(0-9)로만 이루어져야 합니다.",[m
[32m+[m[32m    'slug'          => "은(는) 영문자(a-z)와 숫자(0-9), 특수문자 -와 _로만 이루어져야 합니다.",[m
[32m+[m[32m    'regex'         => "은(는) 올바르지 않은 문자를 포함하고 있습니다.",[m
[32m+[m[32m    'date'          => "은(는) 올바르지 않은 날짜입니다.",[m
[32m+[m[32m    'dateFormat'    => "은(는) '%s' 형태의 날짜여야 합니다.",[m
[32m+[m[32m    'dateBefore'    => "은(는) '%s' 보다 이전이어야 합니다.",[m
[32m+[m[32m    'dateAfter'     => "은(는) '%s' 보다 이후여야 합니다.",[m
[32m+[m[32m    'contains'      => "은(는) '%s'을(를) 포함해야 합니다.",[m
[32m+[m[32m    'boolean'       => "은(는) boolean이어야 합니다.",[m
[32m+[m[32m    'lengthBetween' => "의 길이는 %d에서 %d 사이여야 합니다.",[m
[32m+[m[32m    'creditCard'    => "은(는) 올바른 신용카드 번호가 아닙니다.",[m
[32m+[m[32m    'lengthMin'     => "의 길이는 %d 이상이어야 합니다.",[m
[32m+[m[32m    'lengthMax'     => "의 길이는 %d을(를) 넘을 수 없습니다.",[m
[32m+[m[32m    'instanceOf'    => "는 '%s'의 객체여야 합니다."[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/lt.php b/vendor/vlucas/valitron/lang/lt.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4404311[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/lt.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "yra privalomas",[m
[32m+[m[32m    'equals'        => "reikšmė turi būti tokia pati, kaip „%s“",[m
[32m+[m[32m    'different'     => "turi būti kitokia, nei „%s“",[m
[32m+[m[32m    'accepted'      => "turi būti priimta",[m
[32m+[m[32m    'numeric'       => "turi būti sveikasis skaičius",[m
[32m+[m[32m    'integer'       => "turi būti skaičius",[m
[32m+[m[32m    'length'        => "turi būti %d ženklų ilgio",[m
[32m+[m[32m    'min'           => "turi būti bent %s",[m
[32m+[m[32m    'max'           => "turi būti ne daugiau kaip %s",[m
[32m+[m[32m    'listContains'  => "turi neteisingą vertę",[m
[32m+[m[32m    'in'            => "turi neteisingą vertę",[m
[32m+[m[32m    'notIn'         => "turi neteisingą vertę",[m
[32m+[m[32m    'ip'            => "nėra teisingas IP adresas",[m
[32m+[m[32m    'ipv4'          => "nėra teisingas IPv4 adresas",[m
[32m+[m[32m    'ipv6'          => "nėra teisingas IPv6 adresas",[m
[32m+[m[32m    'email'         => "nėra teisingas el. pašto adresas",[m
[32m+[m[32m    'url'           => "nėra teisingas URL",[m
[32m+[m[32m    'urlActive'     => "turi būti aktyvus domenas",[m
[32m+[m[32m    'alpha'         => "turi turėti tik raides a-ž",[m
[32m+[m[32m    'alphaNum'      => "turi turėti tik raides a-ž ir/ar skaičius 0-9",[m
[32m+[m[32m    'slug'          => "turi turėti tik raides a-ž, skaičius 0-9, brukšnelius ir apatinius brukšnelius",[m
[32m+[m[32m    'regex'         => "yra neteisingų ženklų",[m
[32m+[m[32m    'date'          => "nėra teisinga data",[m
[32m+[m[32m    'dateFormat'    => "turi būti „%s“ formato data",[m
[32m+[m[32m    'dateBefore'    => "turi būti data, ankstesnė nei „%s“",[m
[32m+[m[32m    'dateAfter'     => "turi būti data, vėlesnė nei „%s“",[m
[32m+[m[32m    'contains'      => "turi turėti %s",[m
[32m+[m[32m    'boolean'       => "turi būti būlio (taip/ne) tipo",[m
[32m+[m[32m    'lengthBetween' => "turi būti nuo %d iki %d ilgio",[m
[32m+[m[32m    'creditCard'    => "turi būti teisingas kreditinės kortelės numeris",[m
[32m+[m[32m    'lengthMin'     => "turi būti bent %d ženklų ilgio",[m
[32m+[m[32m    'lengthMax'     => "turi būti ne ilgesnis nei %d ženklų",[m
[32m+[m[32m    'instanceOf'    => "turi būti „%s“ atvejis",[m
[32m+[m[32m    'containsUnique' => "turi turėti tik unikalius elementus",[m
[32m+[m[32m    'subset'         => "turi elementą, kurio nėra sąraše"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/lv.php b/vendor/vlucas/valitron/lang/lv.php[m
[1mnew file mode 100644[m
[1mindex 0000000..fef222a[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/lv.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "ir obligāts lauks",[m
[32m+[m[32m    'equals'        => "jāsakrīt ar '%s'",[m
[32m+[m[32m    'different'     => "nedrīkst sakrist ar '%s' lauku",[m
[32m+[m[32m    'accepted'      => "laukam jābūt apstiprinātam",[m
[32m+[m[32m    'numeric'       => "jābūt skaitliskai vērtībai",[m
[32m+[m[32m    'integer'       => "jābūt ciparam (0-9)",[m
[32m+[m[32m    'length'        => "nedrīkst būt garāks par %d simboliem",[m
[32m+[m[32m    'min'           => "jābūt garākam par %s simboliem",[m
[32m+[m[32m    'max'           => "jābūt īsākam par %s simboliem",[m
[32m+[m[32m    'listContains'  => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'in'            => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'notIn'         => "lauks satur nederīgu vērtību",[m
[32m+[m[32m    'ip'            => " lauks nav derīga IP adrese",[m
[32m+[m[32m    'email'         => "lauks nav norādīta derīga epasta adrese",[m
[32m+[m[32m    'url'           => "lauks nav tīmekļa saite",[m
[32m+[m[32m    'urlActive'     => "saite neatrodas esošajā domēna vārdā",[m
[32m+[m[32m    'alpha'         => "lauks var saturēt tikai alfabēta burtus a-z",[m
[32m+[m[32m    'alphaNum'      => "lauks var saturēt tikai alfabēta burtus un/vai ciparus 0-9",[m
[32m+[m[32m    'slug'          => "lauks var saturēt tikai alfabēta burtus un/vai ciparus 0-9, domuzīmes and zemsvītras",[m
[32m+[m[32m    'regex'         => "lauks satur nederīgus simbolus",[m
[32m+[m[32m    'date'          => "lauks ir nederīgā datuma formātā",[m
[32m+[m[32m    'dateFormat'    => "laukam jābūt datuma formātā '%s'",[m
[32m+[m[32m    'dateBefore'    => "lauka datumam jābūt pirms '%s'",[m
[32m+[m[32m    'dateAfter'     => "lauka datumam jābūt pēc '%s'",[m
[32m+[m[32m    'contains'      => "laukam jāsatur %s",[m
[32m+[m[32m    'boolean'       => "laukam jābūt ir/nav vērtībai",[m
[32m+[m[32m    'lengthBetween' => "lauka garumam jābūt no %d līdz %d simbolu garam",[m
[32m+[m[32m    'creditCard'    => "laukam jābūt derīgam kredītkartes numuram"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/nb.php b/vendor/vlucas/valitron/lang/nb.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d5d2d5e[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/nb.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php[m
[32m+[m[32m// Norwegian Bokmål (nb)[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "er påkrevd",[m
[32m+[m[32m    'equals'        => "må være lik '%s'",[m
[32m+[m[32m    'different'     => "må være annerledes enn '%s'",[m
[32m+[m[32m    'accepted'      => "må aksepteres",[m
[32m+[m[32m    'numeric'       => "må være numerisk",[m
[32m+[m[32m    'integer'       => "må være et heltall",[m
[32m+[m[32m    'length'        => "må være %d tegn langt",[m
[32m+[m[32m    'min'           => "må være minst %s",[m
[32m+[m[32m    'max'           => "må ikke være mer enn %s",[m
[32m+[m[32m    'listContains'  => "inneholder ugyldig verdi",[m
[32m+[m[32m    'in'            => "inneholder ugyldig verdi",[m
[32m+[m[32m    'notIn'         => "inneholder ugyldig verdi",[m
[32m+[m[32m    'ip'            => "er ikke en gyldig IP adresse",[m
[32m+[m[32m    'ipv4'          => "er ikke en gyldig IPv4 adresse",[m
[32m+[m[32m    'ipv6'          => "er ikke en gyldig IPv6 adresse",[m
[32m+[m[32m    'email'         => "er ikke en gyldig e-postadresse",[m
[32m+[m[32m    'url'           => "er ikke en gyldig URL",[m
[32m+[m[32m    'urlActive'     => "må være et aktivt domene",[m
[32m+[m[32m    'alpha'         => "må bare innholde bokstaver a-z",[m
[32m+[m[32m    'alphaNum'      => "må bare innholde bokstaver a-z og/eller tall 0-9",[m
[32m+[m[32m    'slug'          => "må bare innholde bokstaver a-z og/eller tall 0-9, bindestreker og understreker",[m
[32m+[m[32m    'regex'         => "inneholder ulovlige tegn",[m
[32m+[m[32m    'date'          => "er ikke en gyldig dato",[m
[32m+[m[32m    'dateFormat'    => "må være en dato med format '%s'",[m
[32m+[m[32m    'dateBefore'    => "må være en dato før '%s'",[m
[32m+[m[32m    'dateAfter'     => "må være en dato etter '%s'",[m
[32m+[m[32m    'contains'      => "må inneholde %s",[m
[32m+[m[32m    'boolean'       => "må være en boolsk verdi",[m
[32m+[m[32m    'lengthBetween' => "må være mellom %d og %d tegn",[m
[32m+[m[32m    'creditCard'    => "må være et gyldig kredittkortnummer",[m
[32m+[m[32m    'lengthMin'     => "må være minst %d tegn langt",[m
[32m+[m[32m    'lengthMax'     => "må ikke overstige %d tegn",[m
[32m+[m[32m    'instanceOf'    => "må være en instans av '%s'",[m
[32m+[m[32m    'containsUnique'=> "må inneholde kun unike elementer",[m
[32m+[m[32m    'subset'        => "inneholder et element som ikke er i listen"[m
[32m+[m[32m);[m
\ No newline at end of file[m
[1mdiff --git a/vendor/vlucas/valitron/lang/nl.php b/vendor/vlucas/valitron/lang/nl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7d7fa8f[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/nl.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "is verplicht",[m
[32m+[m[32m    'equals'        => "moet gelijk zijn aan '%s'",[m
[32m+[m[32m    'different'     => "moet verschillend zijn van '%s'",[m
[32m+[m[32m    'accepted'      => "moet aanvaard worden",[m
[32m+[m[32m    'numeric'       => "moet numeriek zijn",[m
[32m+[m[32m    'integer'       => "moet een cijfer zijn",[m
[32m+[m[32m    'length'        => "moet minstens %d karakters lang zijn",[m
[32m+[m[32m    'min'           => "moet minstens %s zijn",[m
[32m+[m[32m    'max'           => "mag niet meer zijn dan %s",[m
[32m+[m[32m    'listContains'  => "bevat een ongeldige waarde",[m
[32m+[m[32m    'in'            => "bevat een ongeldige waarde",[m
[32m+[m[32m    'notIn'         => "bevat een ongeldige waarde",[m
[32m+[m[32m    'ip'            => "is geen geldig IP-adres",[m
[32m+[m[32m    'email'         => "is geen geldig e-mailadres",[m
[32m+[m[32m    'url'           => "is geen geldige URL",[m
[32m+[m[32m    'urlActive'     => "moet een actief domein zijn",[m
[32m+[m[32m    'alpha'         => "mag enkel letters (a-z) bevatten",[m
[32m+[m[32m    'alphaNum'      => "mag enkel letters (a-z) en/of cijfers (0-9) bevatten",[m
[32m+[m[32m    'slug'          => "mag enkel letters (a-z), cijfers (0-9) en liggende streepjes (_,-) bevatten",[m
[32m+[m[32m    'regex'         => "bevat ongeldige karakters",[m
[32m+[m[32m    'date'          => "is geen geldige datum",[m
[32m+[m[32m    'dateFormat'    => "moet een datum zijn in het formaat '%s'",[m
[32m+[m[32m    'dateBefore'    => "moet een datum voor '%s' zijn",[m
[32m+[m[32m    'dateAfter'     => "moet een datum na '%s' zijn",[m
[32m+[m[32m    'contains'      => "moet '%s' bevatten",[m
[32m+[m[32m    'boolean'       => "moet een booleaanse waarde zijn",[m
[32m+[m[32m    'lengthBetween' => "moet tussen %d en %d karakters lang zijn",[m
[32m+[m[32m    'creditCard'    => "moet een geldig kredietkaartnummer zijn",[m
[32m+[m[32m    "lengthMin"     => "moet meer dan %d karakters lang zijn",[m
[32m+[m[32m    "lengthMax"     => "mag niet meer dan %d karakters lang zijn",[m
[32m+[m[32m    "instanceOf"    => "moet een instantie zijn van '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/nn.php b/vendor/vlucas/valitron/lang/nn.php[m
[1mnew file mode 100644[m
[1mindex 0000000..1fa3b6b[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/nn.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "er nødvendig",[m
[32m+[m[32m    'equals'        => "må være de samme som '%s'",[m
[32m+[m[32m    'different'     => "må være annerledes enn '%s'",[m
[32m+[m[32m    'accepted'      => "må aksepteres",[m
[32m+[m[32m    'numeric'       => "må være numerisk",[m
[32m+[m[32m    'integer'       => "må være et heltall",[m
[32m+[m[32m    'length'        => "må være %d tegn",[m
[32m+[m[32m    'min'           => "må være minst %s",[m
[32m+[m[32m    'max'           => "må ikke være mer enn %s",[m
[32m+[m[32m    'listContains'  => "inneholder ugyldig verdi",[m
[32m+[m[32m    'in'            => "inneholder ugyldig verdi",[m
[32m+[m[32m    'notIn'         => "inneholder ugyldig verdi",[m
[32m+[m[32m    'ip'            => "er ikkje ein gyldig IP Adresse",[m
[32m+[m[32m    'email'         => "er ikkje ein gyldig E-post adresse",[m
[32m+[m[32m    'url'           => "er ikkje ein gyldig URL",[m
[32m+[m[32m    'urlActive'     => "må være eit aktivt domene",[m
[32m+[m[32m    'alpha'         => "må bare innholde bokstaver a-z",[m
[32m+[m[32m    'alphaNum'      => "må bare innholde bokstaver a-z og/eller tall 0-9",[m
[32m+[m[32m    'slug'          => "må bare innholde bokstaver a-z og/eller tall 0-9, bindestreker og understreker",[m
[32m+[m[32m    'regex'         => "inneholder ulovlige tegn",[m
[32m+[m[32m    'date'          => "er ikkje ein gylid dato",[m
[32m+[m[32m    'dateFormat'    => "må være ein dato med formatet '%s'",[m
[32m+[m[32m    'dateBefore'    => "må være ein dato før '%s'",[m
[32m+[m[32m    'dateAfter'     => "må være ein dato etter '%s'",[m
[32m+[m[32m    'contains'      => "må inneholde %s",[m
[32m+[m[32m    'boolean'       => "må være ein boolsk verdi",[m
[32m+[m[32m    'lengthBetween' => "må være imellom %d og %d tegn",[m
[32m+[m[32m    'creditCard'    => "må være et gyldig kredittkortnummer",[m
[32m+[m[32m    'lengthMin'     => "må være minst %d tegn",[m
[32m+[m[32m    'lengthMax'     => "må ikkje overstige %d tegn",[m
[32m+[m[32m    'instanceOf'    => "må være ein instans av '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/no.php b/vendor/vlucas/valitron/lang/no.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6df91ba[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/no.php[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn include __DIR__ . '/nn.php';[m
[1mdiff --git a/vendor/vlucas/valitron/lang/pl.php b/vendor/vlucas/valitron/lang/pl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0f8f2e0[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/pl.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "jest wymagane",[m
[32m+[m[32m    'equals'        => "musi być takie same jak '%s'",[m
[32m+[m[32m    'different'     => "musi być różne od '%s'",[m
[32m+[m[32m    'accepted'      => "musi być zaakceptowane",[m
[32m+[m[32m    'numeric'       => "musi być liczbą",[m
[32m+[m[32m    'integer'       => "musi być liczbą całkowitą",[m
[32m+[m[32m    'length'        => "musi być dłuższe niż %d",[m
[32m+[m[32m    'min'           => "musi być przynajmniej %s",[m
[32m+[m[32m    'max'           => "nie może być większe niż %s",[m
[32m+[m[32m    'listContains'  => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'in'            => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'notIn'         => "zawiera nieprawidłową wartość",[m
[32m+[m[32m    'ip'            => "nie jest prawidłowym adresem IP",[m
[32m+[m[32m    'email'         => "nie jest prawidłowym adresem email",[m
[32m+[m[32m    'url'           => "nie jest URL",[m
[32m+[m[32m    'urlActive'     => "musi być aktywną domeną",[m
[32m+[m[32m    'alpha'         => "musi zawierać tylko litery a-z",[m
[32m+[m[32m    'alphaNum'      => "musi zawierać tylko litery a-z i/lub cyfry 0-9",[m
[32m+[m[32m    'slug'          => "musi zawierać tylko litery a-z i/lub cyfry 0-9, myślinik I podkreślnik",[m
[32m+[m[32m    'regex'         => "zawiera nieprawidłowe znaki",[m
[32m+[m[32m    'date'          => "nie jest prawidłową datą",[m
[32m+[m[32m    'dateFormat'    => "Data musi być w formacie '%s'",[m
[32m+[m[32m    'dateBefore'    => "Data musi występować przed '%s'",[m
[32m+[m[32m    'dateAfter'     => "Data musi następować po '%s'",[m
[32m+[m[32m    'contains'      => "Musi zawierać %s",[m
[32m+[m[32m    'boolean'       => "musi być wartością logiczną",[m
[32m+[m[32m    'lengthBetween' => "ilość znaków musi być między %d a %d",[m
[32m+[m[32m    'creditCard'    => "musi być prawidłowym numerem karty kredytowej",[m
[32m+[m[32m    "lengthMin"     => "musi zawierać więcej niż %d znaków",[m
[32m+[m[32m    "lengthMax"     => "musi zawierać mniej niż %d znaków",[m
[32m+[m[32m    "instanceOf"    => "musi być instancją '%s'",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/pt-br.php b/vendor/vlucas/valitron/lang/pt-br.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e32afca[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/pt-br.php[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "é obrigatório",[m
[32m+[m[32m    'equals'         => "deve ser o mesmo que '%s'",[m
[32m+[m[32m    'different'      => "deve ser diferente de '%s'",[m
[32m+[m[32m    'accepted'       => "deve ser aceito",[m
[32m+[m[32m    'numeric'        => "deve ser um número",[m
[32m+[m[32m    'integer'        => "deve ser um inteiro",[m
[32m+[m[32m    'length'         => "deve ter %d caracteres",[m
[32m+[m[32m    'min'            => "deve ser maior que %s",[m
[32m+[m[32m    'max'            => "deve ser menor que %s",[m
[32m+[m[32m    'in'             => "contém um valor inválido",[m
[32m+[m[32m    'notIn'          => "contém um valor inválido",[m
[32m+[m[32m    'ip'             => "não é um IP válido",[m
[32m+[m[32m    'email'          => "não é um email válido",[m
[32m+[m[32m    'url'            => "não é uma URL válida",[m
[32m+[m[32m    'urlActive'      => "deve ser um domínio ativo",[m
[32m+[m[32m    'alpha'          => "deve conter as letras a-z",[m
[32m+[m[32m    'alphaNum'       => "deve conter apenas letras a-z e/ou números 0-9",[m
[32m+[m[32m    'slug'           => "deve conter apenas letras a-z, números 0-9, ou os caracteres - ou _",[m
[32m+[m[32m    'regex'          => "contém caracteres inválidos",[m
[32m+[m[32m    'date'           => "não é uma data válida",[m
[32m+[m[32m    'dateFormat'     => "deve ser uma data no formato '%s'",[m
[32m+[m[32m    'dateBefore'     => "deve ser uma data anterior a '%s'",[m
[32m+[m[32m    'dateAfter'      => "deve ser uma data posterior a '%s'",[m
[32m+[m[32m    'contains'       => "deve conter %s",[m
[32m+[m[32m    'boolean'        => "deve ser um booleano",[m
[32m+[m[32m    'lengthBetween'  => "deve estar entre %d e %d caracteres",[m
[32m+[m[32m    'creditCard'     => "deve ser um numero de cartão de credito válido",[m
[32m+[m[32m    'lengthMin'      => "deve ter ao menos %d caracteres",[m
[32m+[m[32m    'lengthMax'      => "não deve exceder %d caracteres",[m
[32m+[m[32m    'instanceOf'     => "deve ser uma instância de '%s'",[m
[32m+[m[32m    'containsUnique' => "deve conter apenas valores únicos",[m
[32m+[m[32m    'subset'         => "contém um item que não está na lista",[m
[32m+[m[32m    'arrayHasKeys'   => "não contém todas as chaves requeridas"[m
[32m+[m[32m);[m
\ No newline at end of file[m
[1mdiff --git a/vendor/vlucas/valitron/lang/ro.php b/vendor/vlucas/valitron/lang/ro.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5efa2fa[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/ro.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "se cere",[m
[32m+[m[32m    'equals'        => "trebuie sa fie la fel ca '%s'",[m
[32m+[m[32m    'different'     => "trebuie sa fie diferit de '%s'",[m
[32m+[m[32m    'accepted'      => "trebuie sa fie acceptat",[m
[32m+[m[32m    'numeric'       => "trebuie sa fie numeric",[m
[32m+[m[32m    'integer'       => "trebuie sa fie intreg",[m
[32m+[m[32m    'length'        => "trebuie sa fie mai lung decat %d",[m
[32m+[m[32m    'min'           => "trebuie sa fie cel putin %s",[m
[32m+[m[32m    'max'           => "nu trebuie sa fie mai mult de %s",[m
[32m+[m[32m    'listContains'  => "contine caractere invalide",[m
[32m+[m[32m    'in'            => "contine caractere invalide",[m
[32m+[m[32m    'notIn'         => "contine o valoare invalida",[m
[32m+[m[32m    'ip'            => "nu este o adresa IP valida",[m
[32m+[m[32m    'email'         => "nu este o adresa de email valida",[m
[32m+[m[32m    'url'           => "nu este un URL",[m
[32m+[m[32m    'urlActive'     => "trebuie sa fie un domeniu activ",[m
[32m+[m[32m    'alpha'         => "trebuie sa contina doar litere de la a-z",[m
[32m+[m[32m    'alphaNum'      => "trebuie sa contina doar numere de la a-z si/sau numere 0-9",[m
[32m+[m[32m    'slug'          => "trebuie sa contina doar litere de la a-z, numere de la 0-9, cratime si underline '_'",[m
[32m+[m[32m    'regex'         => "contine caractere invalide",[m
[32m+[m[32m    'date'          => "nu este o data valida",[m
[32m+[m[32m    'dateFormat'    => "trebuie sa fie o data care sa aiba forma '%s'",[m
[32m+[m[32m    'dateBefore'    => "trebuie sa fie o data inainte de '%s'",[m
[32m+[m[32m    'dateAfter'     => "trebuie sa fie o data dupa '%s'",[m
[32m+[m[32m    'contains'      => "trebuie sa contina %s",[m
[32m+[m[32m    'boolean'       => "trebuie sa fie o constructie logica",[m
[32m+[m[32m    'lengthBetween' => "trebuie sa contina intre  %d si %d caractere",[m
[32m+[m[32m    'creditCard'    => "trebuie sa fie nu numar de card de credit valid",[m
[32m+[m[32m    "lengthMin"     => "trebuie sa contina caractere mai multe decat %d",[m
[32m+[m[32m    "lengthMax"     => "trebuie sa contina mai putin de  %d caractere",[m
[32m+[m[32m    "instanceOf"    => "trebuie sa fie un exemplu de '%s’",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/ru.php b/vendor/vlucas/valitron/lang/ru.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b934046[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/ru.php[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "обязательно для заполнения",[m
[32m+[m[32m    'equals'         => "должно совпадать со значением '%s'",[m
[32m+[m[32m    'different'      => "должно отличаться от '%s'",[m
[32m+[m[32m    'accepted'       => "должно быть указано",[m
[32m+[m[32m    'numeric'        => "должно содержать числовое значение",[m
[32m+[m[32m    'integer'        => "должно быть числом",[m
[32m+[m[32m    'length'         => "должно быть длиннее, чем %d",[m
[32m+[m[32m    'min'            => "должно быть не менее, чем %s",[m
[32m+[m[32m    'max'            => "должно быть не более, чем %s",[m
[32m+[m[32m    'listContains'   => "содержит неверное значение",[m
[32m+[m[32m    'in'             => "содержит неверное значение",[m
[32m+[m[32m    'notIn'          => "содержит неверное значение",[m
[32m+[m[32m    'ip'             => "не является валидным IP адресом",[m
[32m+[m[32m    'ipv4'           => "не является валидным IPv4 адресом",[m
[32m+[m[32m    'ipv6'           => "не является валидным IPv6 адресом",[m
[32m+[m[32m    'email'          => "не является валидным email адресом",[m
[32m+[m[32m    'url'            => "не является валидной ссылкой",[m
[32m+[m[32m    'urlActive'      => "содержит не активную ссылку",[m
[32m+[m[32m    'alpha'          => "должно содержать только латинские символы",[m
[32m+[m[32m    'alphaNum'       => "должно содержать только латинские символы и/или цифры",[m
[32m+[m[32m    'slug'           => "должно содержать только латинские символы, цифры, тире и подчёркивания",[m
[32m+[m[32m    'regex'          => "содержит недопустимые символы",[m
[32m+[m[32m    'date'           => "не является датой",[m
[32m+[m[32m    'dateFormat'     => "должно содержать дату следующего формата: %s",[m
[32m+[m[32m    'dateBefore'     => "должно содержать дату не позднее, чем %s",[m
[32m+[m[32m    'dateAfter'      => "должно содержать дату не ранее, чем %s",[m
[32m+[m[32m    'contains'       => "должно содержать %s",[m
[32m+[m[32m    'boolean'        => "должно содержать логическое значение",[m
[32m+[m[32m    'lengthBetween'  => "должно содержать от %d до %d символов",[m
[32m+[m[32m    'creditCard'     => "должно быть номером кредитной карты",[m
[32m+[m[32m    'lengthMin'      => "должно содержать более %d символов",[m
[32m+[m[32m    'lengthMax'      => "должно содержать менее %d символов",[m
[32m+[m[32m    'instanceOf'     => "должно быть объектом класса '%s'",[m
[32m+[m[32m    'containsUnique' => "должно содержать только уникальные элементы",[m
[32m+[m[32m    'subset'         => "содержит элемент, не указанный в списке",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/sk.php b/vendor/vlucas/valitron/lang/sk.php[m
[1mnew file mode 100644[m
[1mindex 0000000..859e53e[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/sk.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "je povinná položka",[m
[32m+[m[32m    'equals'        => "musí byť rovnaký ako '%s'",[m
[32m+[m[32m    'different'     => "musí byť rôzny od '%s'",[m
[32m+[m[32m    'accepted'      => "musí byť akceptovaný",[m
[32m+[m[32m    'numeric'       => "musí byť číslo",[m
[32m+[m[32m    'integer'       => "musí byť celé číslo",[m
[32m+[m[32m    'length'        => "musí byť dlhý aspoň %d",[m
[32m+[m[32m    'min'           => "musí byť dlhý minimálne %s",[m
[32m+[m[32m    'max'           => "musí byť maximálne %s",[m
[32m+[m[32m    'listContains'  => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'in'            => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'notIn'         => "obsahuje nepovolenú hodnotu",[m
[32m+[m[32m    'ip'            => "nie je korektná IP adresa",[m
[32m+[m[32m    'email'         => "nie je korektný e-mail",[m
[32m+[m[32m    'url'           => "nie je URL",[m
[32m+[m[32m    'urlActive'     => "musí byť aktívna URL",[m
[32m+[m[32m    'alpha'         => "musí obsahovať len písmená a-z",[m
[32m+[m[32m    'alphaNum'      => "musí obsahovať len písmená a-z a/alebo čísla 0-9",[m
[32m+[m[32m    'slug'          => "musí obsahovať len písmená a-z, čísla 0-9, pomlčky alebo podtržítka",[m
[32m+[m[32m    'regex'         => "obsahuje nepovolené znaky",[m
[32m+[m[32m    'date'          => "nie je korektný formáť",[m
[32m+[m[32m    'dateFormat'    => "musí byť dátum formátu '%s'",[m
[32m+[m[32m    'dateBefore'    => "musí byť dátum pred '%s'",[m
[32m+[m[32m    'dateAfter'     => "musí byť dátum po '%s'",[m
[32m+[m[32m    'contains'      => "musí obsahovať %s",[m
[32m+[m[32m    'boolean'       => "musí byť pravdivostná hodnota (boolean)",[m
[32m+[m[32m    'lengthBetween' => "musí byť %d až %d znakov dlhý",[m
[32m+[m[32m    'creditCard'    => "musí byť korektné číslo kreditnej karty",[m
[32m+[m[32m    "lengthMin"     => "musí byť aspoň %d znakov dlhý",[m
[32m+[m[32m    "lengthMax"     => "musí byť najviac %d znakov dlhý",[m
[32m+[m[32m    "instanceOf"    => "musí byť inštanciou '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/sl.php b/vendor/vlucas/valitron/lang/sl.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ecc46dc[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/sl.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'       => "potrebno",[m
[32m+[m[32m    'equals'         => "mora biti enak '% s'",[m
[32m+[m[32m    'different'      => "mora biti drugačen od '% s'",[m
[32m+[m[32m    'accepted'       => "mora biti označeno",[m
[32m+[m[32m    'numeric'        => "mora biti številka",[m
[32m+[m[32m    'integer'        => "mora biti celo število",[m
[32m+[m[32m    'length'         => "ne sme biti daljši od% d",[m
[32m+[m[32m    'min'            => "mora biti večji od% s",[m
[32m+[m[32m    'max'            => "mora biti manjši od% s",[m
[32m+[m[32m    'listContains'   => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'in'             => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'notIn'          => "vsebuje neveljavno vrednost",[m
[32m+[m[32m    'ip'             => "ni veljaven naslov IP",[m
[32m+[m[32m    'ipv4'           => "ni veljaven naslov IPv4",[m
[32m+[m[32m    'ipv6'           => "ni veljaven naslov IPv6",[m
[32m+[m[32m    'email'          => "ni veljaven e-poštni naslov",[m
[32m+[m[32m    'url'            => "ni veljaven URL",[m
[32m+[m[32m    'urlActive'      => "mora biti aktivna domena",[m
[32m+[m[32m    'alpha'          => "mora vsebovati samo črke a-z",[m
[32m+[m[32m    'alphaNum'       => "mora vsebovati samo črke a-z in / ali številke 0-9",[m
[32m+[m[32m    'slug'           => "mora vsebovati samo črke a-z, številke 0-9, črtice in podčrtaje",[m
[32m+[m[32m    'regex'          => "vsebuje neveljavne znake",[m
[32m+[m[32m    'date'           => "ni veljaven datum",[m
[32m+[m[32m    'dateFormat'     => "mora biti datum s formatom '% s'",[m
[32m+[m[32m    'dateBefore'     => "mora biti datum pred '% s'",[m
[32m+[m[32m    'dateAfter'      => "mora biti datum za '% s'",[m
[32m+[m[32m    'contains'       => "mora vsebovati% s",[m
[32m+[m[32m    'boolean'        => "mora biti boolean",[m
[32m+[m[32m    'lengthBetween'  => "mora biti med% d in% d znaki",[m
[32m+[m[32m    'creditCard'     => "mora biti veljavna številka kreditne kartice",[m
[32m+[m[32m    'lengthMin'      => "mora biti dolg vsaj% d znakov",[m
[32m+[m[32m    'lengthMax'      => "ne sme presegati% d znakov",[m
[32m+[m[32m    'instanceOf'     => "mora biti primerek '% s'",[m
[32m+[m[32m    'containsUnique' => "mora vsebovati samo edinstvene elemente",[m
[32m+[m[32m    'requiredWith'   => "je potrebno",[m
[32m+[m[32m    'requiredWithout'=> "je potrebno",[m
[32m+[m[32m    'subset'         => "vsebuje element, ki ga ni na seznamu",[m
[32m+[m[32m    'arrayHasKeys'   => "ne vsebuje vseh potrebnih tipk",[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/sv.php b/vendor/vlucas/valitron/lang/sv.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5e29669[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/sv.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m	[32m'required'      => "är obligatorisk",[m
[32m+[m	[32m'equals'        => "måste vara samma som '%s'",[m
[32m+[m	[32m'different'     => "får inte vara samma som '%s'",[m
[32m+[m	[32m'accepted'      => "måste accepteras",[m
[32m+[m	[32m'numeric'       => "måste vara numerisk",[m
[32m+[m	[32m'integer'       => "måste vara ett heltal",[m
[32m+[m	[32m'length'        => "måste vara %d tecken långt",[m
[32m+[m	[32m'min'           => "måste vara minst %s",[m
[32m+[m	[32m'max'           => "får inte vara mer än %s",[m
[32m+[m	[32m'listContains'  => "innehåller ogiltigt värde",[m
[32m+[m	[32m'in'            => "innehåller ogiltigt värde",[m
[32m+[m	[32m'notIn'         => "innehåller ogiltigt värde",[m
[32m+[m	[32m'ip'            => "är inte en giltlig IP-adress",[m
[32m+[m	[32m'email'         => "är inte en giltlig e-postadress",[m
[32m+[m	[32m'url'           => "är inte en giltlig URL",[m
[32m+[m	[32m'urlActive'     => "måste vara ett aktivt domännamn",[m
[32m+[m	[32m'alpha'         => "får bara inehålla bokstäver a-z",[m
[32m+[m	[32m'alphaNum'      => "får bara inehålla bokstäver a-z och/eller siffror 0-9",[m
[32m+[m	[32m'slug'          => "får bara inehålla bokstäver a-z och/eller siffror 0-9, bindesträck og understräck",[m
[32m+[m	[32m'regex'         => "inehåller ogiltliga tecken",[m
[32m+[m	[32m'date'          => "är inte ett giltligt datum",[m
[32m+[m	[32m'dateFormat'    => "måste vara ett datum med formatet '%s'",[m
[32m+[m	[32m'dateBefore'    => "måste vara ett datum före '%s'",[m
[32m+[m	[32m'dateAfter'     => "måste vara ett datum efter '%s'",[m
[32m+[m	[32m'contains'      => "måste innehålla %s",[m
[32m+[m	[32m'boolean'       => "måste vara ett booleskt värde",[m
[32m+[m	[32m'lengthBetween' => "måste vara mellan %d och %d tecken långt",[m
[32m+[m	[32m'creditCard'    => "måste vara et gyldig kredittkortnummer",[m
[32m+[m	[32m'lengthMin'     => "måste vara minst %d tecken långt",[m
[32m+[m	[32m'lengthMax'     => "får itne överstiga %d tecken",[m
[32m+[m	[32m'instanceOf'    => "måste vara en instans av '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/th.php b/vendor/vlucas/valitron/lang/th.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6f4af40[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/th.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "นั้นจำเป็นต้องมี",[m
[32m+[m[32m    'equals'        => "ต้องเหมือนกับ '%s'",[m
[32m+[m[32m    'different'     => "ต้องแตกต่างจาก '%s'",[m
[32m+[m[32m    'accepted'      => "ต้องถูกยอมรับ",[m
[32m+[m[32m    'numeric'       => "ต้องเป็นตัวเลข",[m
[32m+[m[32m    'integer'       => "ต้องเป็นตัวเลข integer",[m
[32m+[m[32m    'length'        => "ต้องมีความยาวมากกว่า %d",[m
[32m+[m[32m    'min'           => "ต้องมีอย่างน้อย %s",[m
[32m+[m[32m    'max'           => "ต้องไม่มากเกิน %s",[m
[32m+[m[32m    'listContains'  => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'in'            => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'notIn'         => "ประกอบด้วยค่าที่ไม่ถูกต้อง",[m
[32m+[m[32m    'ip'            => "ไม่ใช่ IP ที่ถูกต้อง",[m
[32m+[m[32m    'email'         => "ไม่ใช่อีเมลที่ถูกต้อง",[m
[32m+[m[32m    'url'           => "ไม่ใช่ลิงก์",[m
[32m+[m[32m    'urlActive'     => "ต้องไม่ใช่โดเมนที่ใช้งานอยู่",[m
[32m+[m[32m    'alpha'         => "ต้องมีแค่ตัวอักษร a-z",[m
[32m+[m[32m    'alphaNum'      => "ต้องมีแค่ตัวอักษร a-z และ/หรือ ตัวเลข 0-9",[m
[32m+[m[32m    'slug'          => "ต้องมีแค่ตัวอักษร a-z ตัวเลข 0-9 / และ _",[m
[32m+[m[32m    'regex'         => "มีตัวอักษรที่ไม่ถูกต้อง",[m
[32m+[m[32m    'date'          => "ไม่ใช่วันที่ที่ถูกต้อง",[m
[32m+[m[32m    'dateFormat'    => "ต้องเป็นวันที่ในรูปแบบ '%s'",[m
[32m+[m[32m    'dateBefore'    => "ต้องเป็นวันที่ก่อน '%s'",[m
[32m+[m[32m    'dateAfter'     => "ต้องเป็นวันที่หลัง '%s'",[m
[32m+[m[32m    'contains'      => "ต้องมี %s",[m
[32m+[m[32m    'boolean'       => "ต้องเป็น boolean",[m
[32m+[m[32m    'lengthBetween' => "ต้องอยู่ระหว่าง %d ถึง %d ตัวอักษร",[m
[32m+[m[32m    'creditCard'    => "ต้องเป็นหมายเลขบัตรเครดิตที่ถูกต้อง",[m
[32m+[m[32m    "lengthMin"     => "ต้องมีมากกว่า %d ตัวอักษร",[m
[32m+[m[32m    "lengthMax"     => "ต้องมีน้อยกว่า %d ตัวอักษร",[m
[32m+[m[32m    "instanceOf"    => "ต้องเป็นส่วนหนึ่งของ '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/tr.php b/vendor/vlucas/valitron/lang/tr.php[m
[1mnew file mode 100644[m
[1mindex 0000000..11fa708[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/tr.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "gerekli ",[m
[32m+[m[32m    'equals'        => "bununla aynı olmalı '%s'",[m
[32m+[m[32m    'different'     => "bundan değişik olmalı '%s'",[m
[32m+[m[32m    'accepted'      => "kabul edilebilir olmalı",[m
[32m+[m[32m    'numeric'       => "numerik olmalı",[m
[32m+[m[32m    'integer'       => "sayı olmalı",[m
[32m+[m[32m    'length'        => "en az %d adet uzunluğunda olmalı",[m
[32m+[m[32m    'min'           => "en az böyle olmalı %s",[m
[32m+[m[32m    'max'           => "bundan daha fazla olmalı %s",[m
[32m+[m[32m    'listContains'  => "geçersiz değer içeriyor",[m
[32m+[m[32m    'in'            => "geçersiz değer içeriyor",[m
[32m+[m[32m    'notIn'         => "geçersiz değer içeriyor",[m
[32m+[m[32m    'ip'            => "geçerli bir IP adresi değil",[m
[32m+[m[32m    'email'         => "geçerli bir eposta adresi değil",[m
[32m+[m[32m    'url'           => "bir URL değil",[m
[32m+[m[32m    'urlActive'     => "aktif bir alan adı olmalı",[m
[32m+[m[32m    'alpha'         => "sadece harf içermeli a-z",[m
[32m+[m[32m    'alphaNum'      => "sadece harf (a-z) ve/veya sayılar (0-9) içermeli",[m
[32m+[m[32m    'slug'          => "sadece harf (a-z), numbers sayılar (0-9), tire ve alt tire içermeli",[m
[32m+[m[32m    'regex'         => "geçersiz karakterler içeriyor",[m
[32m+[m[32m    'date'          => "geçerli bir karakter değil",[m
[32m+[m[32m    'dateFormat'    => "bu biçimde bir tarih olmalı '%s'",[m
[32m+[m[32m    'dateBefore'    => "bu tarihden önce olmalı '%s'",[m
[32m+[m[32m    'dateAfter'     => "bu tarihden sonra olmalı '%s'",[m
[32m+[m[32m    'contains'      => "bunu içermeli %s",[m
[32m+[m[32m    'boolean'       => "boolean olmalı",[m
[32m+[m[32m    'lengthBetween' => "%d ve %d karakter arasında olmalı",[m
[32m+[m[32m    'creditCard'    => "geçerli bir kredi kartı numarası olmalı",[m
[32m+[m[32m    "lengthMin"     => "%d katakterden fazla içermeli",[m
[32m+[m[32m    "lengthMax"     => "%d karakterden az içermeli",[m
[32m+[m[32m    "instanceOf"    => "bunun bir örneği olmalı '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/uk.php b/vendor/vlucas/valitron/lang/uk.php[m
[1mnew file mode 100644[m
[1mindex 0000000..65df219[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/uk.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "обов'язкове для заповнення",[m
[32m+[m[32m    'equals'        => "має містити '%s'",[m
[32m+[m[32m    'different'     => "має відрізнятися від '%s'",[m
[32m+[m[32m    'accepted'      => "має бути вказаним",[m
[32m+[m[32m    'numeric'       => "має містити числове значення",[m
[32m+[m[32m    'integer'       => "має бути числом",[m
[32m+[m[32m    'length'        => "має бути довшим, ніж %d",[m
[32m+[m[32m    'min'           => "має бути більше, ніж %s",[m
[32m+[m[32m    'max'           => "повинно бути менше, ніж %s",[m
[32m+[m[32m    'listContains'  => "містить невірне значення",[m
[32m+[m[32m    'in'            => "містить невірне значення",[m
[32m+[m[32m    'notIn'         => "містить невірне значення",[m
[32m+[m[32m    'ip'            => "не є валідною IP адресою",[m
[32m+[m[32m    'email'         => "не є валідною email адресою",[m
[32m+[m[32m    'url'           => "не є посиланням",[m
[32m+[m[32m    'urlActive'     => "містить не активне посилання",[m
[32m+[m[32m    'alpha'         => "повинно містити тільки латинські символи",[m
[32m+[m[32m    'alphaNum'      => "повинно містити тільки латинські символи та/або цифри",[m
[32m+[m[32m    'slug'          => "повинно містити тільки латинські символи, цифри, тире і підкреслення",[m
[32m+[m[32m    'regex'         => "містить неприпустимі символи",[m
[32m+[m[32m    'date'          => "не є датою",[m
[32m+[m[32m    'dateFormat'    => "має містити дату наступного формату:%s",[m
[32m+[m[32m    'dateBefore'    => "має містити дату не пізнішу, ніж %s",[m
[32m+[m[32m    'dateAfter'     => "має містити дату не ранішу, ніж %s",[m
[32m+[m[32m    'contains'      => "має містити %s",[m
[32m+[m[32m    'boolean'       => "має містити логічне значення",[m
[32m+[m[32m    'lengthBetween' => "має містити від %d в до %d символів",[m
[32m+[m[32m    'creditCard'    => "має бути номером кредитної картки",[m
[32m+[m[32m    "lengthMin"     => "має містити більше %d символів",[m
[32m+[m[32m    "lengthMax"     => "має містити менше %d символів"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/vi.php b/vendor/vlucas/valitron/lang/vi.php[m
[1mnew file mode 100644[m
[1mindex 0000000..de7d91d[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/vi.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "là bắt buộc",[m
[32m+[m[32m    'equals'        => "phải giống '%s'",[m
[32m+[m[32m    'different'     => "phải khác '%s'",[m
[32m+[m[32m    'accepted'      => "được chấp nhận",[m
[32m+[m[32m    'numeric'       => "phải là số",[m
[32m+[m[32m    'integer'       => "phải là số nguyên",[m
[32m+[m[32m    'length'        => "phải dài hơn %d",[m
[32m+[m[32m    'min'           => "ít nhất %s",[m
[32m+[m[32m    'max'           => "tối đa %s",[m
[32m+[m[32m    'listContains'  => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'in'            => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'notIn'         => "chứa giá trị không hợp lệ",[m
[32m+[m[32m    'ip'            => "địa chỉ IP không hợp lệ",[m
[32m+[m[32m    'email'         => "địa chỉ email không hợp lệ",[m
[32m+[m[32m    'url'           => "không phải là URL",[m
[32m+[m[32m    'urlActive'     => "Domain chưa được kích hoạt",[m
[32m+[m[32m    'alpha'         => "chỉ chứa các kí tự a-z",[m
[32m+[m[32m    'alphaNum'      => "chỉ chứa các kí tự a-z hoặc số 0-9",[m
[32m+[m[32m    'slug'          => "chỉ chứa các kí tự a-z, số 0-9, gạch nối và gạch dưới",[m
[32m+[m[32m    'regex'         => "chứa kí tự không hợp lệ",[m
[32m+[m[32m    'date'          => "thời gian hợp lệ",[m
[32m+[m[32m    'dateFormat'    => "thời gian nên được định dạng '%s'",[m
[32m+[m[32m    'dateBefore'    => "thời gian nên trước '%s'",[m
[32m+[m[32m    'dateAfter'     => "thời gian nên sau '%s'",[m
[32m+[m[32m    'contains'      => "phải chứa %s",[m
[32m+[m[32m    'boolean'       => "phải là boolean",[m
[32m+[m[32m    'lengthBetween' => "phải từ %d đến %d kí tự",[m
[32m+[m[32m    'creditCard'    => "credit card không hợp lệ",[m
[32m+[m[32m    "lengthMin"     => "ít nhất %d kí tự",[m
[32m+[m[32m    "lengthMax"     => "tối đa %d kí tự",[m
[32m+[m[32m    "instanceOf"    => "phải là instance của '%s'"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/zh-cn.php b/vendor/vlucas/valitron/lang/zh-cn.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d0c8015[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/zh-cn.php[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "不能为空",[m
[32m+[m[32m    'equals'        => "必须和 '%s' 一致",[m
[32m+[m[32m    'different'     => "必须和 '%s' 不一致",[m
[32m+[m[32m    'accepted'      => "必须接受",[m
[32m+[m[32m    'numeric'       => "只能是数字",[m
[32m+[m[32m    'integer'       => "只能是整数",[m
[32m+[m[32m    'length'        => "长度必须等于 %d",[m
[32m+[m[32m    'min'           => "必须大于 %s",[m
[32m+[m[32m    'max'           => "必须小于 %s",[m
[32m+[m[32m    'listContains'  => "无效的值",[m
[32m+[m[32m    'in'            => "无效的值",[m
[32m+[m[32m    'notIn'         => "无效的值",[m
[32m+[m[32m    'ip'            => "无效IP地址",[m
[32m+[m[32m    'email'         => "无效邮箱地址",[m
[32m+[m[32m    'url'           => "无效的URL",[m
[32m+[m[32m    'urlActive'     => "必须是可用的域名",[m
[32m+[m[32m    'alpha'         => "只能包括英文字母(a-z)",[m
[32m+[m[32m    'alphaNum'      => "只能包括英文字母(a-z)和数字(0-9)",[m
[32m+[m[32m    'slug'          => "只能包括英文字母(a-z)、数字(0-9)、破折号和下划线",[m
[32m+[m[32m    'regex'         => "无效格式",[m
[32m+[m[32m    'date'          => "无效的日期",[m
[32m+[m[32m    'dateFormat'    => "日期的格式应该为 '%s'",[m
[32m+[m[32m    'dateBefore'    => "日期必须在 '%s' 之前",[m
[32m+[m[32m    'dateAfter'     => "日期必须在 '%s' 之后",[m
[32m+[m[32m    'contains'      => "必须包含 %s",[m
[32m+[m[32m    'boolean'       => "必须是真或假",[m
[32m+[m[32m    'lengthBetween' => "长度只能介于 %d 和 %d 之间",[m
[32m+[m[32m    'creditCard'    => "信用卡号码不正确",[m
[32m+[m[32m    'lengthMin'     => "长度必须大于 %d",[m
[32m+[m[32m    'lengthMax'     => "长度必须小于 %d"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/lang/zh-tw.php b/vendor/vlucas/valitron/lang/zh-tw.php[m
[1mnew file mode 100644[m
[1mindex 0000000..70fb664[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/lang/zh-tw.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn array([m
[32m+[m[32m    'required'      => "不能為空",[m
[32m+[m[32m    'equals'        => "必須和 '%s' 一致",[m
[32m+[m[32m    'different'     => "必須和 '%s' 不一致",[m
[32m+[m[32m    'accepted'      => "必須接受",[m
[32m+[m[32m    'numeric'       => "只能是數字",[m
[32m+[m[32m    'integer'       => "只能是整數",[m
[32m+[m[32m    'length'        => "長度必須大於 %d",[m
[32m+[m[32m    'min'           => "必須大於 %s",[m
[32m+[m[32m    'max'           => "必須小於 %s",[m
[32m+[m[32m    'listContains'  => "無效的值",[m
[32m+[m[32m    'in'            => "無效的值",[m
[32m+[m[32m    'notIn'         => "無效的值",[m
[32m+[m[32m    'ip'            => "無效IP地址",[m
[32m+[m[32m    'email'         => "無效郵箱地址",[m
[32m+[m[32m    'url'           => "無效的URL",[m
[32m+[m[32m    'urlActive'     => "必須是可用的域名",[m
[32m+[m[32m    'alpha'         => "只能包括英文字母(a-z)",[m
[32m+[m[32m    'alphaNum'      => "只能包括英文字母(a-z)和數字(0-9)",[m
[32m+[m[32m    'slug'          => "只能包括英文字母(a-z)、數字(0-9)、破折號和下劃線",[m
[32m+[m[32m    'regex'         => "無效格式",[m
[32m+[m[32m    'date'          => "無效的日期",[m
[32m+[m[32m    'dateFormat'    => "日期的格式應該為 '%s'",[m
[32m+[m[32m    'dateBefore'    => "日期必須在 '%s' 之前",[m
[32m+[m[32m    'dateAfter'     => "日期必須在 '%s' 之後",[m
[32m+[m[32m    'contains'  => "必須包含 %s"[m
[32m+[m[32m);[m
[1mdiff --git a/vendor/vlucas/valitron/src/Valitron/Validator.php b/vendor/vlucas/valitron/src/Valitron/Validator.php[m
[1mnew file mode 100644[m
[1mindex 0000000..60b1603[m
[1m--- /dev/null[m
[1m+++ b/vendor/vlucas/valitron/src/Valitron/Validator.php[m
[36m@@ -0,0 +1,1582 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Valitron;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Validation Class[m
[32m+[m[32m *[m
[32m+[m[32m * Validates input against certain criteria[m
[32m+[m[32m *[m
[32m+[m[32m * @package Valitron[m
[32m+[m[32m * @author  Vance Lucas <vance@vancelucas.com>[m
[32m+[m[32m * @link    http://www.vancelucas.com/[m
[32m+[m[32m */[m
[32m+[m[32mclass Validator[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    const ERROR_DEFAULT = 'Invalid';[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_fields = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_errors = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_validations = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_labels = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Contains all rules that are available to the current valitron instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_instanceRules = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Contains all rule messages that are available to the current valitron[m
[32m+[m[32m     * instance[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $_instanceRuleMessage = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected static $_lang;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected static $_langDir;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected static $_rules = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected static $_ruleMessages = array();[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $validUrlPrefixes = array('http://', 'https://', 'ftp://');[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $stop_on_first_fail = false;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @var bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $prepend_labels = true;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Setup validation[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array $data[m
[32m+[m[32m     * @param  array $fields[m
[32m+[m[32m     * @param  string $lang[m
[32m+[m[32m     * @param  string $langDir[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct($data = array(), $fields = array(), $lang = null, $langDir = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Allows filtering of used input fields against optional second array of field names allowed[m
[32m+[m[32m        // This is useful for limiting raw $_POST or $_GET data to only known fields[m
[32m+[m[32m        $this->_fields = !empty($fields) ? array_intersect_key($data, array_flip($fields)) : $data;[m
[32m+[m
[32m+[m[32m        // set lang in the follow order: constructor param, static::$_lang, default to en[m
[32m+[m[32m        $lang = $lang ?: static::lang();[m
[32m+[m
[32m+[m[32m        // set langDir in the follow order: constructor param, static::$_langDir, default to package lang dir[m
[32m+[m[32m        $langDir = $langDir ?: static::langDir();[m
[32m+[m
[32m+[m[32m        // Load language file in directory[m
[32m+[m[32m        $langFile = rtrim($langDir, '/') . '/' . $lang . '.php';[m
[32m+[m[32m        if (stream_resolve_include_path($langFile)) {[m
[32m+[m[32m            $langMessages = include $langFile;[m
[32m+[m[32m            static::$_ruleMessages = array_merge(static::$_ruleMessages, $langMessages);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            throw new \InvalidArgumentException("Fail to load language file '" . $langFile . "'");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get/set language to use for validation messages[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $lang[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function lang($lang = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($lang !== null) {[m
[32m+[m[32m            static::$_lang = $lang;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return static::$_lang ?: 'en';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get/set language file path[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $dir[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function langDir($dir = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($dir !== null) {[m
[32m+[m[32m            static::$_langDir = $dir;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return static::$_langDir ?: dirname(dirname(__DIR__)) . '/lang';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param bool $prepend_labels[m
[32m+[m[32m     */[m
[32m+[m[32m    public function setPrependLabels($prepend_labels = true)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->prepend_labels = $prepend_labels;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Required field validator[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @param  array $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateRequired($field, $value, $params = array())[m
[32m+[m[32m    {[m
[32m+[m[32m        if (isset($params[0]) && (bool)$params[0]) {[m
[32m+[m[32m            $find = $this->getPart($this->_fields, explode('.', $field), true);[m
[32m+[m[32m            return $find[1];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (is_null($value) || (is_string($value) && trim($value) === '')) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that two values match[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateEquals($field, $value, array $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        // extract the second field value, this accounts for nested array values[m
[32m+[m[32m        list($field2Value, $multiple) = $this->getPart($this->_fields, explode('.', $params[0]));[m
[32m+[m[32m        return isset($field2Value) && $value == $field2Value;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is different from another field[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateDifferent($field, $value, array $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        // extract the second field value, this accounts for nested array values[m
[32m+[m[32m        list($field2Value, $multiple) = $this->getPart($this->_fields, explode('.', $params[0]));[m
[32m+[m[32m        return isset($field2Value) && $value != $field2Value;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field was "accepted" (based on PHP's string evaluation rules)[m
[32m+[m[32m     *[m
[32m+[m[32m     * This validation rule implies the field is "required"[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateAccepted($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        $acceptable = array('yes', 'on', 1, '1', true);[m
[32m+[m
[32m+[m[32m        return $this->validateRequired($field, $value) && in_array($value, $acceptable, true);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is an array[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateArray($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return is_array($value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is numeric[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateNumeric($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return is_numeric($value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is an integer[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @param  array $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateInteger($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (isset($params[0]) && (bool)$params[0]) {[m
[32m+[m[32m            //strict mode[m
[32m+[m[32m            return preg_match('/^([0-9]|-[1-9]|-?[1-9][0-9]*)$/i', $value);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return filter_var($value, \FILTER_VALIDATE_INT) !== false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the length of a string[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateLength($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $length = $this->stringLength($value);[m
[32m+[m[32m        // Length between[m
[32m+[m[32m        if (isset($params[1])) {[m
[32m+[m[32m            return $length >= $params[0] && $length <= $params[1];[m
[32m+[m[32m        }[m
[32m+[m[32m        // Length same[m
[32m+[m[32m        return ($length !== false) && $length == $params[0];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the length of a string (between)[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string  $field[m
[32m+[m[32m     * @param  mixed   $value[m
[32m+[m[32m     * @param  array   $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateLengthBetween($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $length = $this->stringLength($value);[m
[32m+[m
[32m+[m[32m        return ($length !== false) && $length >= $params[0] && $length <= $params[1];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the length of a string (min)[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field[m
[32m+[m[32m     * @param mixed $value[m
[32m+[m[32m     * @param array $params[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateLengthMin($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $length = $this->stringLength($value);[m
[32m+[m
[32m+[m[32m        return ($length !== false) && $length >= $params[0];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the length of a string (max)[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field[m
[32m+[m[32m     * @param mixed $value[m
[32m+[m[32m     * @param array $params[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateLengthMax($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $length = $this->stringLength($value);[m
[32m+[m
[32m+[m[32m        return ($length !== false) && $length <= $params[0];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the length of a string[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $value[m
[32m+[m[32m     * @return int|false[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function stringLength($value)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_string($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } elseif (function_exists('mb_strlen')) {[m
[32m+[m[32m            return mb_strlen($value);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return strlen($value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the size of a field is greater than a minimum value.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateMin($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_numeric($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } elseif (function_exists('bccomp')) {[m
[32m+[m[32m            return !(bccomp($params[0], $value, 14) === 1);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return $params[0] <= $value;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the size of a field is less than a maximum value[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateMax($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_numeric($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        } elseif (function_exists('bccomp')) {[m
[32m+[m[32m            return !(bccomp($value, $params[0], 14) === 1);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return $params[0] >= $value;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the size of a field is between min and max values[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @param  array $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateBetween($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_numeric($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!isset($params[0]) || !is_array($params[0]) || count($params[0]) !== 2) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        list($min, $max) = $params[0];[m
[32m+[m
[32m+[m[32m        return $this->validateMin($field, $value, array($min)) && $this->validateMax($field, $value, array($max));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate a field is contained within a list of values[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateIn($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $forceAsAssociative = false;[m
[32m+[m[32m        if (isset($params[2])) {[m
[32m+[m[32m            $forceAsAssociative = (bool) $params[2];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ($forceAsAssociative || $this->isAssociativeArray($params[0])) {[m
[32m+[m[32m           $params[0] = array_keys($params[0]);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $strict = false;[m
[32m+[m[32m        if (isset($params[1])) {[m
[32m+[m[32m            $strict = $params[1];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return in_array($value, $params[0], $strict);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate a field is contained within a list of values[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateListContains($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $forceAsAssociative = false;[m
[32m+[m[32m        if (isset($params[2])) {[m
[32m+[m[32m            $forceAsAssociative = (bool) $params[2];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ($forceAsAssociative || $this->isAssociativeArray($value)) {[m
[32m+[m[32m            $value = array_keys($value);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $strict = false;[m
[32m+[m[32m        if (isset($params[1])) {[m
[32m+[m[32m            $strict = $params[1];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return in_array($params[0], $value, $strict);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate a field is not contained within a list of values[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateNotIn($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        return !$this->validateIn($field, $value, $params);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate a field contains a given string[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  string $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateContains($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!isset($params[0])) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!is_string($params[0]) || !is_string($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $strict = true;[m
[32m+[m[32m        if (isset($params[1])) {[m
[32m+[m[32m            $strict = (bool)$params[1];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if ($strict) {[m
[32m+[m[32m            if (function_exists('mb_strpos')) {[m
[32m+[m[32m                $isContains = mb_strpos($value, $params[0]) !== false;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $isContains = strpos($value, $params[0]) !== false;[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            if (function_exists('mb_stripos')) {[m
[32m+[m[32m                $isContains = mb_stripos($value, $params[0]) !== false;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $isContains = stripos($value, $params[0]) !== false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return $isContains;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that all field values contains a given array[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  array  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateSubset($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!isset($params[0])) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!is_array($params[0])) {[m
[32m+[m[32m            $params[0] = array($params[0]);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (is_scalar($value) || is_null($value)) {[m
[32m+[m[32m            return $this->validateIn($field, $value, $params);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $intersect = array_intersect($value, $params[0]);[m
[32m+[m[32m        return array_diff($value, $intersect) === array_diff($intersect, $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that field array has only unique values[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  array  $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateContainsUnique($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_array($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $value === array_unique($value, SORT_REGULAR);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid IP address[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateIp($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return filter_var($value, \FILTER_VALIDATE_IP) !== false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid IP v4 address[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateIpv4($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return filter_var($value, \FILTER_VALIDATE_IP, \FILTER_FLAG_IPV4) !== false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid IP v6 address[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateIpv6($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return filter_var($value, \FILTER_VALIDATE_IP, \FILTER_FLAG_IPV6) !== false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid e-mail address[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateEmail($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return filter_var($value, \FILTER_VALIDATE_EMAIL) !== false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains only ASCII characters[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param $field[m
[32m+[m[32m     * @param $value[m
[32m+[m[32m     * @return bool|false|string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateAscii($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        // multibyte extension needed[m
[32m+[m[32m        if (function_exists('mb_detect_encoding')) {[m
[32m+[m[32m            return mb_detect_encoding($value, 'ASCII', true);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // fallback with regex[m
[32m+[m[32m        return 0 === preg_match('/[^\x00-\x7F]/', $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid e-mail address and the domain name is active[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateEmailDNS($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($this->validateEmail($field, $value)) {[m
[32m+[m[32m            $domain = ltrim(stristr($value, '@'), '@') . '.';[m
[32m+[m[32m            if (function_exists('idn_to_ascii') && defined('INTL_IDNA_VARIANT_UTS46')) {[m
[32m+[m[32m                $domain = idn_to_ascii($domain, 0, INTL_IDNA_VARIANT_UTS46);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return checkdnsrr($domain, 'MX');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid URL by syntax[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateUrl($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        foreach ($this->validUrlPrefixes as $prefix) {[m
[32m+[m[32m            if (strpos($value, $prefix) !== false) {[m
[32m+[m[32m                return filter_var($value, \FILTER_VALIDATE_URL) !== false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is an active URL by verifying DNS record[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateUrlActive($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        foreach ($this->validUrlPrefixes as $prefix) {[m
[32m+[m[32m            if (strpos($value, $prefix) !== false) {[m
[32m+[m[32m                $host = parse_url(strtolower($value), PHP_URL_HOST);[m
[32m+[m
[32m+[m[32m                return checkdnsrr($host, 'A') || checkdnsrr($host, 'AAAA') || checkdnsrr($host, 'CNAME');[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains only alphabetic characters[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateAlpha($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return preg_match('/^([a-z])+$/i', $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains only alpha-numeric characters[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateAlphaNum($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return preg_match('/^([a-z0-9])+$/i', $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains only alpha-numeric characters, dashes, and underscores[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateSlug($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (is_array($value)) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return preg_match('/^([-a-z0-9_-])+$/i', $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field passes a regular expression check[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @param  array $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateRegex($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        return preg_match($params[0], $value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field is a valid date[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateDate($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        $isDate = false;[m
[32m+[m[32m        if ($value instanceof \DateTime) {[m
[32m+[m[32m            $isDate = true;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $isDate = strtotime($value) !== false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $isDate;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field matches a date format[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateDateFormat($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $parsed = date_parse_from_format($params[0], $value);[m
[32m+[m
[32m+[m[32m        return $parsed['error_count'] === 0 && $parsed['warning_count'] === 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the date is before a given date[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateDateBefore($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $vtime = ($value instanceof \DateTime) ? $value->getTimestamp() : strtotime($value);[m
[32m+[m[32m        $ptime = ($params[0] instanceof \DateTime) ? $params[0]->getTimestamp() : strtotime($params[0]);[m
[32m+[m
[32m+[m[32m        return $vtime < $ptime;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate the date is after a given date[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed  $value[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateDateAfter($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $vtime = ($value instanceof \DateTime) ? $value->getTimestamp() : strtotime($value);[m
[32m+[m[32m        $ptime = ($params[0] instanceof \DateTime) ? $params[0]->getTimestamp() : strtotime($params[0]);[m
[32m+[m
[32m+[m[32m        return $vtime > $ptime;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains a boolean.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateBoolean($field, $value)[m
[32m+[m[32m    {[m
[32m+[m[32m        return is_bool($value);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate that a field contains a valid credit card[m
[32m+[m[32m     * optionally filtered by an array[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  mixed $value[m
[32m+[m[32m     * @param  array $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateCreditCard($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * I there has been an array of valid cards supplied, or the name of the users card[m
[32m+[m[32m         * or the name and an array of valid cards[m
[32m+[m[32m         */[m
[32m+[m[32m        if (!empty($params)) {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * array of valid cards[m
[32m+[m[32m             */[m
[32m+[m[32m            if (is_array($params[0])) {[m
[32m+[m[32m                $cards = $params[0];[m
[32m+[m[32m            } elseif (is_string($params[0])) {[m
[32m+[m[32m                $cardType = $params[0];[m
[32m+[m[32m                if (isset($params[1]) && is_array($params[1])) {[m
[32m+[m[32m                    $cards = $params[1];[m
[32m+[m[32m                    if (!in_array($cardType, $cards)) {[m
[32m+[m[32m                        return false;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Luhn algorithm[m
[32m+[m[32m         *[m
[32m+[m[32m         * @return bool[m
[32m+[m[32m         */[m
[32m+[m[32m        $numberIsValid = function () use ($value) {[m
[32m+[m[32m            $number = preg_replace('/[^0-9]+/', '', $value);[m
[32m+[m[32m            $sum = 0;[m
[32m+[m
[32m+[m[32m            $strlen = strlen($number);[m
[32m+[m[32m            if ($strlen < 13) {[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m[32m            for ($i = 0; $i < $strlen; $i++) {[m
[32m+[m[32m                $digit = (int)substr($number, $strlen - $i - 1, 1);[m
[32m+[m[32m                if ($i % 2 == 1) {[m
[32m+[m[32m                    $sub_total = $digit * 2;[m
[32m+[m[32m                    if ($sub_total > 9) {[m
[32m+[m[32m                        $sub_total = ($sub_total - 10) + 1;[m
[32m+[m[32m                    }[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $sub_total = $digit;[m
[32m+[m[32m                }[m
[32m+[m[32m                $sum += $sub_total;[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($sum > 0 && $sum % 10 == 0) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            return false;[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        if ($numberIsValid()) {[m
[32m+[m[32m            if (!isset($cards)) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $cardRegex = array([m
[32m+[m[32m                    'visa' => '#^4[0-9]{12}(?:[0-9]{3})?$#',[m
[32m+[m[32m                    'mastercard' => '#^(5[1-5]|2[2-7])[0-9]{14}$#',[m
[32m+[m[32m                    'amex' => '#^3[47][0-9]{13}$#',[m
[32m+[m[32m                    'dinersclub' => '#^3(?:0[0-5]|[68][0-9])[0-9]{11}$#',[m
[32m+[m[32m                    'discover' => '#^6(?:011|5[0-9]{2})[0-9]{12}$#',[m
[32m+[m[32m                );[m
[32m+[m
[32m+[m[32m                if (isset($cardType)) {[m
[32m+[m[32m                    // if we don't have any valid cards specified and the card we've been given isn't in our regex array[m
[32m+[m[32m                    if (!isset($cards) && !in_array($cardType, array_keys($cardRegex))) {[m
[32m+[m[32m                        return false;[m
[32m+[m[32m                    }[m
[32m+[m
[32m+[m[32m                    // we only need to test against one card type[m
[32m+[m[32m                    return (preg_match($cardRegex[$cardType], $value) === 1);[m
[32m+[m
[32m+[m[32m                } elseif (isset($cards)) {[m
[32m+[m[32m                    // if we have cards, check our users card against only the ones we have[m
[32m+[m[32m                    foreach ($cards as $card) {[m
[32m+[m[32m                        if (in_array($card, array_keys($cardRegex)) && preg_match($cardRegex[$card], $value) === 1) {[m
[32m+[m[32m                            // if the card is valid, we want to stop looping[m
[32m+[m[32m                            return true;[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    // loop through every card[m
[32m+[m[32m                    foreach ($cardRegex as $regex) {[m
[32m+[m[32m                        // until we find a valid one[m
[32m+[m[32m                        if (preg_match($regex, $value) === 1) {[m
[32m+[m[32m                            return true;[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // if we've got this far, the card has passed no validation so it's invalid![m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function validateInstanceOf($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        $isInstanceOf = false;[m
[32m+[m[32m        if (is_object($value)) {[m
[32m+[m[32m            if (is_object($params[0]) && $value instanceof $params[0]) {[m
[32m+[m[32m                $isInstanceOf = true;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (get_class($value) === $params[0]) {[m
[32m+[m[32m                $isInstanceOf = true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        if (is_string($value)) {[m
[32m+[m[32m            if (is_string($params[0]) && get_class($value) === $params[0]) {[m
[32m+[m[32m                $isInstanceOf = true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $isInstanceOf;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validates whether or not a field is required based on whether or not other fields are present.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field name of the field in the data array[m
[32m+[m[32m     * @param mixed $value value of this field[m
[32m+[m[32m     * @param array $params parameters for this rule[m
[32m+[m[32m     * @param array $fields full list of data to be validated[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateRequiredWith($field, $value, $params, $fields)[m
[32m+[m[32m    {[m
[32m+[m[32m        $conditionallyReq = false;[m
[32m+[m[32m        // if we actually have conditionally required with fields to check against[m
[32m+[m[32m        if (isset($params[0])) {[m
[32m+[m[32m            // convert single value to array if it isn't already[m
[32m+[m[32m            $reqParams = is_array($params[0]) ? $params[0] : array($params[0]);[m
[32m+[m[32m            // check for the flag indicating if all fields are required[m
[32m+[m[32m            $allRequired = isset($params[1]) && (bool)$params[1];[m
[32m+[m[32m            $emptyFields = 0;[m
[32m+[m[32m            foreach ($reqParams as $requiredField) {[m
[32m+[m[32m                // check the field is set, not null, and not the empty string[m
[32m+[m[32m                if (isset($fields[$requiredField]) && !is_null($fields[$requiredField])[m
[32m+[m[32m                    && (is_string($fields[$requiredField]) ? trim($fields[$requiredField]) !== '' : true)) {[m
[32m+[m[32m                    if (!$allRequired) {[m
[32m+[m[32m                        $conditionallyReq = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        $emptyFields++;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            // if all required fields are present in strict mode, we're requiring it[m
[32m+[m[32m            if ($allRequired && $emptyFields === count($reqParams)) {[m
[32m+[m[32m                $conditionallyReq = true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        // if we have conditionally required fields[m
[32m+[m[32m        if ($conditionallyReq && (is_null($value) ||[m
[32m+[m[32m                is_string($value) && trim($value) === '')) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validates whether or not a field is required based on whether or not other fields are present.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field name of the field in the data array[m
[32m+[m[32m     * @param mixed $value value of this field[m
[32m+[m[32m     * @param array $params parameters for this rule[m
[32m+[m[32m     * @param array $fields full list of data to be validated[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateRequiredWithout($field, $value, $params, $fields)[m
[32m+[m[32m    {[m
[32m+[m[32m        $conditionallyReq = false;[m
[32m+[m[32m        // if we actually have conditionally required with fields to check against[m
[32m+[m[32m        if (isset($params[0])) {[m
[32m+[m[32m            // convert single value to array if it isn't already[m
[32m+[m[32m            $reqParams = is_array($params[0]) ? $params[0] : array($params[0]);[m
[32m+[m[32m            // check for the flag indicating if all fields are required[m
[32m+[m[32m            $allEmpty = isset($params[1]) && (bool)$params[1];[m
[32m+[m[32m            $filledFields = 0;[m
[32m+[m[32m            foreach ($reqParams as $requiredField) {[m
[32m+[m[32m                // check the field is NOT set, null, or the empty string, in which case we are requiring this value be present[m
[32m+[m[32m                if (!isset($fields[$requiredField]) || (is_null($fields[$requiredField])[m
[32m+[m[32m                    || (is_string($fields[$requiredField]) && trim($fields[$requiredField]) === ''))) {[m
[32m+[m[32m                    if (!$allEmpty) {[m
[32m+[m[32m                        $conditionallyReq = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        $filledFields++;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            // if all fields were empty, then we're requiring this in strict mode[m
[32m+[m[32m            if ($allEmpty && $filledFields === count($reqParams)) {[m
[32m+[m[32m                $conditionallyReq = true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        // if we have conditionally required fields[m
[32m+[m[32m        if ($conditionallyReq && (is_null($value) ||[m
[32m+[m[32m                is_string($value) && trim($value) === '')) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate optional field[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param $field[m
[32m+[m[32m     * @param $value[m
[32m+[m[32m     * @param $params[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validateOptional($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        //Always return true[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function validateArrayHasKeys($field, $value, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_array($value) || !isset($params[0])) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        $requiredFields = $params[0];[m
[32m+[m[32m        if (count($requiredFields) === 0) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m        foreach ($requiredFields as $fieldName) {[m
[32m+[m[32m            if (!array_key_exists($fieldName, $value)) {[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get array of fields and data[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    public function data()[m
[32m+[m[32m    {[m
[32m+[m[32m        return $this->_fields;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get array of error messages[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  null|string $field[m
[32m+[m[32m     * @return array|bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public function errors($field = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($field !== null) {[m
[32m+[m[32m            return isset($this->_errors[$field]) ? $this->_errors[$field] : false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $this->_errors;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Add an error to error messages array[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field[m
[32m+[m[32m     * @param string $message[m
[32m+[m[32m     * @param array  $params[m
[32m+[m[32m     */[m
[32m+[m[32m    public function error($field, $message, array $params = array())[m
[32m+[m[32m    {[m
[32m+[m[32m        $message = $this->checkAndSetLabel($field, $message, $params);[m
[32m+[m
[32m+[m[32m        $values = array();[m
[32m+[m[32m        // Printed values need to be in string format[m
[32m+[m[32m        foreach ($params as $param) {[m
[32m+[m[32m            if (is_array($param)) {[m
[32m+[m[32m                $param = "['" . implode("', '", $param) . "']";[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($param instanceof \DateTime) {[m
[32m+[m[32m                $param = $param->format('Y-m-d');[m
[32m+[m[32m            } else {[m
[32m+[m[32m                if (is_object($param)) {[m
[32m+[m[32m                    $param = get_class($param);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            // Use custom label instead of field name if set[m
[32m+[m[32m            if (is_string($params[0]) && isset($this->_labels[$param])) {[m
[32m+[m[32m                $param = $this->_labels[$param];[m
[32m+[m[32m            }[m
[32m+[m[32m            $values[] = $param;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $this->_errors[$field][] = vsprintf($message, $values);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Specify validation message to use for error for the last validation rule[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $message[m
[32m+[m[32m     * @return Validator[m
[32m+[m[32m     */[m
[32m+[m[32m    public function message($message)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->_validations[count($this->_validations) - 1]['message'] = $message;[m
[32m+[m
[32m+[m[32m        return $this;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reset object properties[m
[32m+[m[32m     */[m
[32m+[m[32m    public function reset()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->_fields = array();[m
[32m+[m[32m        $this->_errors = array();[m
[32m+[m[32m        $this->_validations = array();[m
[32m+[m[32m        $this->_labels = array();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected function getPart($data, $identifiers, $allow_empty = false)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Catches the case where the field is an array of discrete values[m
[32m+[m[32m        if (is_array($identifiers) && count($identifiers) === 0) {[m
[32m+[m[32m            return array($data, false);[m
[32m+[m[32m        }[m
[32m+[m[32m        // Catches the case where the data isn't an array or object[m
[32m+[m[32m        if (is_scalar($data)) {[m
[32m+[m[32m            return array(null, false);[m
[32m+[m[32m        }[m
[32m+[m[32m        $identifier = array_shift($identifiers);[m
[32m+[m[32m        // Glob match[m
[32m+[m[32m        if ($identifier === '*') {[m
[32m+[m[32m            $values = array();[m
[32m+[m[32m            foreach ($data as $row) {[m
[32m+[m[32m                list($value, $multiple) = $this->getPart($row, $identifiers, $allow_empty);[m
[32m+[m[32m                if ($multiple) {[m
[32m+[m[32m                    $values = array_merge($values, $value);[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $values[] = $value;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            return array($values, true);[m
[32m+[m[32m        } // Dead end, abort[m
[32m+[m[32m        elseif ($identifier === null || ! isset($data[$identifier])) {[m
[32m+[m[32m            if ($allow_empty){[m
[32m+[m[32m                //when empty values are allowed, we only care if the key exists[m
[32m+[m[32m                return array(null, array_key_exists($identifier, $data));[m
[32m+[m[32m            }[m
[32m+[m[32m            return array(null, false);[m
[32m+[m[32m        } // Match array element[m
[32m+[m[32m        elseif (count($identifiers) === 0) {[m
[32m+[m[32m            if ($allow_empty) {[m
[32m+[m[32m                //when empty values are allowed, we only care if the key exists[m
[32m+[m[32m                return array(null, array_key_exists($identifier, $data));[m
[32m+[m[32m            }[m
[32m+[m[32m            return array($data[$identifier], $allow_empty);[m
[32m+[m[32m        } // We need to go deeper[m
[32m+[m[32m        else {[m
[32m+[m[32m            return $this->getPart($data[$identifier], $identifiers, $allow_empty);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private function validationMustBeExcecuted($validation, $field, $values, $multiple){[m
[32m+[m[32m        //always excecute requiredWith(out) rules[m
[32m+[m[32m        if (in_array($validation['rule'], array('requiredWith', 'requiredWithout'))){[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //do not execute if the field is optional and not set[m
[32m+[m[32m        if($this->hasRule('optional', $field) && ! isset($values)){[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //ignore empty input, except for required and accepted rule[m
[32m+[m[32m        if (! $this->hasRule('required', $field) && ! in_array($validation['rule'], array('required', 'accepted'))){[m
[32m+[m[32m            if($multiple){[m
[32m+[m[32m                return count($values) != 0;[m
[32m+[m[32m            }[m
[32m+[m[32m            return (isset($values) && $values !== '');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Run validations and return boolean result[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public function validate()[m
[32m+[m[32m    {[m
[32m+[m[32m        $set_to_break = false;[m
[32m+[m[32m        foreach ($this->_validations as $v) {[m
[32m+[m[32m            foreach ($v['fields'] as $field) {[m
[32m+[m[32m                list($values, $multiple) = $this->getPart($this->_fields, explode('.', $field), false);[m
[32m+[m
[32m+[m[32m                if (! $this->validationMustBeExcecuted($v, $field, $values, $multiple)){[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                // Callback is user-specified or assumed method on class[m
[32m+[m[32m                $errors = $this->getRules();[m
[32m+[m[32m                if (isset($errors[$v['rule']])) {[m
[32m+[m[32m                    $callback = $errors[$v['rule']];[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $callback = array($this, 'validate' . ucfirst($v['rule']));[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                if (!$multiple) {[m
[32m+[m[32m                    $values = array($values);[m
[32m+[m[32m                } else if (! $this->hasRule('required', $field)){[m
[32m+[m[32m                    $values = array_filter($values);[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                $result = true;[m
[32m+[m[32m                foreach ($values as $value) {[m
[32m+[m[32m                    $result = $result && call_user_func($callback, $field, $value, $v['params'], $this->_fields);[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                if (!$result) {[m
[32m+[m[32m                    $this->error($field, $v['message'], $v['params']);[m
[32m+[m[32m                    if ($this->stop_on_first_fail) {[m
[32m+[m[32m                        $set_to_break = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            if ($set_to_break) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return count($this->errors()) === 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Should the validation stop a rule is failed[m
[32m+[m[32m     * @param bool $stop[m
[32m+[m[32m     */[m
[32m+[m[32m    public function stopOnFirstFail($stop = true)[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->stop_on_first_fail = (bool)$stop;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns all rule callbacks, the static and instance ones.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function getRules()[m
[32m+[m[32m    {[m
[32m+[m[32m        return array_merge($this->_instanceRules, static::$_rules);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns all rule message, the static and instance ones.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function getRuleMessages()[m
[32m+[m[32m    {[m
[32m+[m[32m        return array_merge($this->_instanceRuleMessage, static::$_ruleMessages);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Determine whether a field is being validated by the given rule.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string  $name  The name of the rule[m
[32m+[m[32m     * @param  string  $field The name of the field[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function hasRule($name, $field)[m
[32m+[m[32m    {[m
[32m+[m[32m        foreach ($this->_validations as $validation) {[m
[32m+[m[32m            if ($validation['rule'] == $name && in_array($field, $validation['fields'])) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    protected static function assertRuleCallback($callback)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (!is_callable($callback)) {[m
[32m+[m[32m            throw new \InvalidArgumentException([m
[32m+[m[32m                'Second argument must be a valid callback. Given argument was not callable.'[m
[32m+[m[32m            );[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Adds a new validation rule callback that is tied to the current[m
[32m+[m[32m     * instance only.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $name[m
[32m+[m[32m     * @param callable $callback[m
[32m+[m[32m     * @param string $message[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public function addInstanceRule($name, $callback, $message = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        static::assertRuleCallback($callback);[m
[32m+[m
[32m+[m[32m        $this->_instanceRules[$name] = $callback;[m
[32m+[m[32m        $this->_instanceRuleMessage[$name] = $message;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register new validation rule callback[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $name[m
[32m+[m[32m     * @param callable $callback[m
[32m+[m[32m     * @param string $message[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public static function addRule($name, $callback, $message = null)[m
[32m+[m[32m    {[m
[32m+[m[32m        if ($message === null) {[m
[32m+[m[32m            $message = static::ERROR_DEFAULT;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        static::assertRuleCallback($callback);[m
[32m+[m
[32m+[m[32m        static::$_rules[$name] = $callback;[m
[32m+[m[32m        static::$_ruleMessages[$name] = $message;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param  mixed $fields[m
[32m+[m[32m     * @return string[m
[32m+[m[32m     */[m
[32m+[m[32m    public function getUniqueRuleName($fields)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (is_array($fields)) {[m
[32m+[m[32m            $fields = implode("_", $fields);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $orgName = "{$fields}_rule";[m
[32m+[m[32m        $name = $orgName;[m
[32m+[m[32m        $rules = $this->getRules();[m
[32m+[m[32m        while (isset($rules[$name])) {[m
[32m+[m[32m            $name = $orgName . "_" . rand(0, 10000);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns true if either a validator with the given name has been[m
[32m+[m[32m     * registered or there is a default validator by that name.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $name[m
[32m+[m[32m     * @return bool[m
[32m+[m[32m     */[m
[32m+[m[32m    public function hasValidator($name)[m
[32m+[m[32m    {[m
[32m+[m[32m        $rules = $this->getRules();[m
[32m+[m[32m        return method_exists($this, "validate" . ucfirst($name))[m
[32m+[m[32m            || isset($rules[$name]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Convenience method to add a single validation rule[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string|callable $rule[m
[32m+[m[32m     * @param array|string $fields[m
[32m+[m[32m     * @return Validator[m
[32m+[m[32m     * @throws \InvalidArgumentException[m
[32m+[m[32m     */[m
[32m+[m[32m    public function rule($rule, $fields)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Get any other arguments passed to function[m
[32m+[m[32m        $params = array_slice(func_get_args(), 2);[m
[32m+[m
[32m+[m[32m        if (is_callable($rule)[m
[32m+[m[32m            && !(is_string($rule) && $this->hasValidator($rule))) {[m
[32m+[m[32m            $name = $this->getUniqueRuleName($fields);[m
[32m+[m[32m            $message = isset($params[0]) ? $params[0] : null;[m
[32m+[m[32m            $this->addInstanceRule($name, $rule, $message);[m
[32m+[m[32m            $rule = $name;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $errors = $this->getRules();[m
[32m+[m[32m        if (!isset($errors[$rule])) {[m
[32m+[m[32m            $ruleMethod = 'validate' . ucfirst($rule);[m
[32m+[m[32m            if (!method_exists($this, $ruleMethod)) {[m
[32m+[m[32m                throw new \InvalidArgumentException([m
[32m+[m[32m                    "Rule '" . $rule . "' has not been registered with " . get_called_class() . "::addRule()."[m
[32m+[m[32m                );[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Ensure rule has an accompanying message[m
[32m+[m[32m        $messages = $this->getRuleMessages();[m
[32m+[m[32m        $message = isset($messages[$rule]) ? $messages[$rule] : self::ERROR_DEFAULT;[m
[32m+[m
[32m+[m[32m        // Ensure message contains field label[m
[32m+[m[32m        if (function_exists('mb_strpos')) {[m
[32m+[m[32m            $notContains = mb_strpos($message, '{field}') === false;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $notContains = strpos($message, '{field}') === false;[m
[32m+[m[32m        }[m
[32m+[m[32m        if ($notContains) {[m
[32m+[m[32m            $message = '{field} ' . $message;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        $this->_validations[] = array([m
[32m+[m[32m            'rule' => $rule,[m
[32m+[m[32m            'fields' => (array)$fields,[m
[32m+[m[32m            'params' => (array)$params,[m
[32m+[m[32m            'message' => $message[m
[32m+[m[32m        );[m
[32m+[m
[32m+[m[32m        return $this;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Add label to rule[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  string $value[m
[32m+[m[32m     * @return Validator[m
[32m+[m[32m     */[m
[32m+[m[32m    public function label($value)[m
[32m+[m[32m    {[m
[32m+[m[32m        $lastRules = $this->_validations[count($this->_validations) - 1]['fields'];[m
[32m+[m[32m        $this->labels(array($lastRules[0] => $value));[m
[32m+[m
[32m+[m[32m        return $this;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Add labels to rules[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array  $labels[m
[32m+[m[32m     * @return Validator[m
[32m+[m[32m     */[m
[32m+[m[32m    public function labels($labels = array())[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->_labels = array_merge($this->_labels, $labels);[m
[32m+[m
[32m+[m[32m        return $this;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param  string $field[m
[32m+[m[32m     * @param  string $message[m
[32m+[m[32m     * @param  array  $params[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function checkAndSetLabel($field, $message, $params)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (isset($this->_labels[$field])) {[m
[32m+[m[32m            $message = str_replace('{field}', $this->_labels[$field], $message);[m
[32m+[m
[32m+[m[32m            if (is_array($params)) {[m
[32m+[m[32m                $i = 1;[m
[32m+[m[32m                foreach ($params as $k => $v) {[m
[32m+[m[32m                    $tag = '{field' . $i . '}';[m
[32m+[m[32m                    $label = isset($params[$k]) && (is_numeric($params[$k]) || is_string($params[$k])) && isset($this->_labels[$params[$k]]) ? $this->_labels[$params[$k]] : $tag;[m
[32m+[m[32m                    $message = str_replace($tag, $label, $message);[m
[32m+[m[32m                    $i++;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $message = $this->prepend_labels[m
[32m+[m[32m                ? str_replace('{field}', ucwords(str_replace('_', ' ', $field)), $message)[m
[32m+[m[32m                : str_replace('{field} ', '', $message);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $message;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Convenience method to add multiple validation rules with an array[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param array $rules[m
[32m+[m[32m     */[m
[32m+[m[32m    public function rules($rules)[m
[32m+[m[32m    {[m
[32m+[m[32m        foreach ($rules as $ruleType => $params) {[m
[32m+[m[32m            if (is_array($params)) {[m
[32m+[m[32m                foreach ($params as $innerParams) {[m
[32m+[m[32m                    if (!is_array($innerParams)) {[m
[32m+[m[32m                        $innerParams = (array)$innerParams;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    array_unshift($innerParams, $ruleType);[m
[32m+[m[32m                    call_user_func_array(array($this, 'rule'), $innerParams);[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $this->rule($ruleType, $params);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Replace data on cloned instance[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array $data[m
[32m+[m[32m     * @param  array $fields[m
[32m+[m[32m     * @return Validator[m
[32m+[m[32m     */[m
[32m+[m[32m    public function withData($data, $fields = array())[m
[32m+[m[32m    {[m
[32m+[m[32m        $clone = clone $this;[m
[32m+[m[32m        $clone->_fields = !empty($fields) ? array_intersect_key($data, array_flip($fields)) : $data;[m
[32m+[m[32m        $clone->_errors = array();[m
[32m+[m[32m        return $clone;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Convenience method to add validation rule(s) by field[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param string $field[m
[32m+[m[32m     * @param array  $rules[m
[32m+[m[32m     */[m
[32m+[m[32m    public function mapFieldRules($field, $rules)[m
[32m+[m[32m    {[m
[32m+[m[32m        $me = $this;[m
[32m+[m
[32m+[m[32m        array_map(function ($rule) use ($field, $me) {[m
[32m+[m
[32m+[m[32m            //rule must be an array[m
[32m+[m[32m            $rule = (array)$rule;[m
[32m+[m
[32m+[m[32m            //First element is the name of the rule[m
[32m+[m[32m            $ruleName = array_shift($rule);[m
[32m+[m
[32m+[m[32m            //find a custom message, if any[m
[32m+[m[32m            $message = null;[m
[32m+[m[32m            if (isset($rule['message'])) {[m
[32m+[m[32m                $message = $rule['message'];[m
[32m+[m[32m                unset($rule['message']);[m
[32m+[m[32m            }[m
[32m+[m[32m            //Add the field and additional parameters to the rule[m
[32m+[m[32m            $added = call_user_func_array(array($me, 'rule'), array_merge(array($ruleName, $field), $rule));[m
[32m+[m[32m            if (!empty($message)) {[m
[32m+[m[32m                $added->message($message);[m
[32m+[m[32m            }[m
[32m+[m[32m        }, (array)$rules);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Convenience method to add validation rule(s) for multiple fields[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param array $rules[m
[32m+[m[32m     */[m
[32m+[m[32m    public function mapFieldsRules($rules)[m
[32m+[m[32m    {[m
[32m+[m[32m        $me = $this;[m
[32m+[m[32m        array_map(function ($field) use ($rules, $me) {[m
[32m+[m[32m            $me->mapFieldRules($field, $rules[$field]);[m
[32m+[m[32m        }, array_keys($rules));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private function isAssociativeArray($input){[m
[32m+[m[32m        //array contains at least one key that's not an can not be cast to an integer[m
[32m+[m[32m        return count(array_filter(array_keys($input), 'is_string')) > 0;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
